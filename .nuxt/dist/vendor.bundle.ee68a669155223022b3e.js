webpackJsonp([18],[
/* 0 */
/***/ (function(module, exports) {

/* globals __VUE_SSR_CONTEXT__ */

// this module is a runtime utility for cleaner component module output and will
// be included in the final webpack user bundle

module.exports = function normalizeComponent (
  rawScriptExports,
  compiledTemplate,
  injectStyles,
  scopeId,
  moduleIdentifier /* server only */
) {
  var esModule
  var scriptExports = rawScriptExports = rawScriptExports || {}

  // ES6 modules interop
  var type = typeof rawScriptExports.default
  if (type === 'object' || type === 'function') {
    esModule = rawScriptExports
    scriptExports = rawScriptExports.default
  }

  // Vue.extend constructor export interop
  var options = typeof scriptExports === 'function'
    ? scriptExports.options
    : scriptExports

  // render functions
  if (compiledTemplate) {
    options.render = compiledTemplate.render
    options.staticRenderFns = compiledTemplate.staticRenderFns
  }

  // scopedId
  if (scopeId) {
    options._scopeId = scopeId
  }

  var hook
  if (moduleIdentifier) { // server build
    hook = function (context) {
      // 2.3 injection
      context =
        context || // cached call
        (this.$vnode && this.$vnode.ssrContext) || // stateful
        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional
      // 2.2 with runInNewContext: true
      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {
        context = __VUE_SSR_CONTEXT__
      }
      // inject component styles
      if (injectStyles) {
        injectStyles.call(this, context)
      }
      // register component module identifier for async chunk inferrence
      if (context && context._registeredComponents) {
        context._registeredComponents.add(moduleIdentifier)
      }
    }
    // used by ssr in case component is cached and beforeCreate
    // never gets called
    options._ssrRegister = hook
  } else if (injectStyles) {
    hook = injectStyles
  }

  if (hook) {
    var functional = options.functional
    var existing = functional
      ? options.render
      : options.beforeCreate
    if (!functional) {
      // inject component registration as beforeCreate hook
      options.beforeCreate = existing
        ? [].concat(existing, hook)
        : [hook]
    } else {
      // register for functioal component in vue file
      options.render = function renderWithStyleInjection (h, context) {
        hook.call(context)
        return existing(h, context)
      }
    }
  }

  return {
    esModule: esModule,
    exports: scriptExports,
    options: options
  }
}


/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

var Mem;

module.exports = Mem = __webpack_require__(12);

Mem.Rule = __webpack_require__(130);

Mem.Base = {
  Query: __webpack_require__(40),
  Set: __webpack_require__(73),
  Map: __webpack_require__(71),
  Model: __webpack_require__(72),
  Finder: __webpack_require__(70)
};

/***/ }),
/* 2 */
/***/ (function(module, exports) {

/*
	MIT License http://www.opensource.org/licenses/mit-license.php
	Author Tobias Koppers @sokra
*/
// css base code, injected by the css-loader
module.exports = function(useSourceMap) {
	var list = [];

	// return the list of modules as css string
	list.toString = function toString() {
		return this.map(function (item) {
			var content = cssWithMappingToString(item, useSourceMap);
			if(item[2]) {
				return "@media " + item[2] + "{" + content + "}";
			} else {
				return content;
			}
		}).join("");
	};

	// import a list of modules into the list
	list.i = function(modules, mediaQuery) {
		if(typeof modules === "string")
			modules = [[null, modules, ""]];
		var alreadyImportedModules = {};
		for(var i = 0; i < this.length; i++) {
			var id = this[i][0];
			if(typeof id === "number")
				alreadyImportedModules[id] = true;
		}
		for(i = 0; i < modules.length; i++) {
			var item = modules[i];
			// skip already imported module
			// this implementation is not 100% perfect for weird media query combinations
			//  when a module is imported multiple times with different media queries.
			//  I hope this will never occur (Hey this way we have smaller bundles)
			if(typeof item[0] !== "number" || !alreadyImportedModules[item[0]]) {
				if(mediaQuery && !item[2]) {
					item[2] = mediaQuery;
				} else if(mediaQuery) {
					item[2] = "(" + item[2] + ") and (" + mediaQuery + ")";
				}
				list.push(item);
			}
		}
	};
	return list;
};

function cssWithMappingToString(item, useSourceMap) {
	var content = item[1] || '';
	var cssMapping = item[3];
	if (!cssMapping) {
		return content;
	}

	if (useSourceMap && typeof btoa === 'function') {
		var sourceMapping = toComment(cssMapping);
		var sourceURLs = cssMapping.sources.map(function (source) {
			return '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'
		});

		return [content].concat(sourceURLs).concat([sourceMapping]).join('\n');
	}

	return [content].join('\n');
}

// Adapted from convert-source-map (MIT)
function toComment(sourceMap) {
	// eslint-disable-next-line no-undef
	var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));
	var data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;

	return '/*# ' + data + ' */';
}


/***/ }),
/* 3 */
/***/ (function(module, exports, __webpack_require__) {

/*
  MIT License http://www.opensource.org/licenses/mit-license.php
  Author Tobias Koppers @sokra
  Modified by Evan You @yyx990803
*/

var hasDocument = typeof document !== 'undefined'

if (typeof DEBUG !== 'undefined' && DEBUG) {
  if (!hasDocument) {
    throw new Error(
    'vue-style-loader cannot be used in a non-browser environment. ' +
    "Use { target: 'node' } in your Webpack config to indicate a server-rendering environment."
  ) }
}

var listToStyles = __webpack_require__(373)

/*
type StyleObject = {
  id: number;
  parts: Array<StyleObjectPart>
}

type StyleObjectPart = {
  css: string;
  media: string;
  sourceMap: ?string
}
*/

var stylesInDom = {/*
  [id: number]: {
    id: number,
    refs: number,
    parts: Array<(obj?: StyleObjectPart) => void>
  }
*/}

var head = hasDocument && (document.head || document.getElementsByTagName('head')[0])
var singletonElement = null
var singletonCounter = 0
var isProduction = false
var noop = function () {}

// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>
// tags it will allow on a page
var isOldIE = typeof navigator !== 'undefined' && /msie [6-9]\b/.test(navigator.userAgent.toLowerCase())

module.exports = function (parentId, list, _isProduction) {
  isProduction = _isProduction

  var styles = listToStyles(parentId, list)
  addStylesToDom(styles)

  return function update (newList) {
    var mayRemove = []
    for (var i = 0; i < styles.length; i++) {
      var item = styles[i]
      var domStyle = stylesInDom[item.id]
      domStyle.refs--
      mayRemove.push(domStyle)
    }
    if (newList) {
      styles = listToStyles(parentId, newList)
      addStylesToDom(styles)
    } else {
      styles = []
    }
    for (var i = 0; i < mayRemove.length; i++) {
      var domStyle = mayRemove[i]
      if (domStyle.refs === 0) {
        for (var j = 0; j < domStyle.parts.length; j++) {
          domStyle.parts[j]()
        }
        delete stylesInDom[domStyle.id]
      }
    }
  }
}

function addStylesToDom (styles /* Array<StyleObject> */) {
  for (var i = 0; i < styles.length; i++) {
    var item = styles[i]
    var domStyle = stylesInDom[item.id]
    if (domStyle) {
      domStyle.refs++
      for (var j = 0; j < domStyle.parts.length; j++) {
        domStyle.parts[j](item.parts[j])
      }
      for (; j < item.parts.length; j++) {
        domStyle.parts.push(addStyle(item.parts[j]))
      }
      if (domStyle.parts.length > item.parts.length) {
        domStyle.parts.length = item.parts.length
      }
    } else {
      var parts = []
      for (var j = 0; j < item.parts.length; j++) {
        parts.push(addStyle(item.parts[j]))
      }
      stylesInDom[item.id] = { id: item.id, refs: 1, parts: parts }
    }
  }
}

function createStyleElement () {
  var styleElement = document.createElement('style')
  styleElement.type = 'text/css'
  head.appendChild(styleElement)
  return styleElement
}

function addStyle (obj /* StyleObjectPart */) {
  var update, remove
  var styleElement = document.querySelector('style[data-vue-ssr-id~="' + obj.id + '"]')

  if (styleElement) {
    if (isProduction) {
      // has SSR styles and in production mode.
      // simply do nothing.
      return noop
    } else {
      // has SSR styles but in dev mode.
      // for some reason Chrome can't handle source map in server-rendered
      // style tags - source maps in <style> only works if the style tag is
      // created and inserted dynamically. So we remove the server rendered
      // styles and inject new ones.
      styleElement.parentNode.removeChild(styleElement)
    }
  }

  if (isOldIE) {
    // use singleton mode for IE9.
    var styleIndex = singletonCounter++
    styleElement = singletonElement || (singletonElement = createStyleElement())
    update = applyToSingletonTag.bind(null, styleElement, styleIndex, false)
    remove = applyToSingletonTag.bind(null, styleElement, styleIndex, true)
  } else {
    // use multi-style-tag mode in all other cases
    styleElement = createStyleElement()
    update = applyToTag.bind(null, styleElement)
    remove = function () {
      styleElement.parentNode.removeChild(styleElement)
    }
  }

  update(obj)

  return function updateStyle (newObj /* StyleObjectPart */) {
    if (newObj) {
      if (newObj.css === obj.css &&
          newObj.media === obj.media &&
          newObj.sourceMap === obj.sourceMap) {
        return
      }
      update(obj = newObj)
    } else {
      remove()
    }
  }
}

var replaceText = (function () {
  var textStore = []

  return function (index, replacement) {
    textStore[index] = replacement
    return textStore.filter(Boolean).join('\n')
  }
})()

function applyToSingletonTag (styleElement, index, remove, obj) {
  var css = remove ? '' : obj.css

  if (styleElement.styleSheet) {
    styleElement.styleSheet.cssText = replaceText(index, css)
  } else {
    var cssNode = document.createTextNode(css)
    var childNodes = styleElement.childNodes
    if (childNodes[index]) styleElement.removeChild(childNodes[index])
    if (childNodes.length) {
      styleElement.insertBefore(cssNode, childNodes[index])
    } else {
      styleElement.appendChild(cssNode)
    }
  }
}

function applyToTag (styleElement, obj) {
  var css = obj.css
  var media = obj.media
  var sourceMap = obj.sourceMap

  if (media) {
    styleElement.setAttribute('media', media)
  }

  if (sourceMap) {
    // https://developer.chrome.com/devtools/docs/javascript-debugging
    // this makes source maps inside style tags work properly in Chrome
    css += '\n/*# sourceURL=' + sourceMap.sources[0] + ' */'
    // http://stackoverflow.com/a/26603875
    css += '\n/*# sourceMappingURL=data:application/json;base64,' + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + ' */'
  }

  if (styleElement.styleSheet) {
    styleElement.styleSheet.cssText = css
  } else {
    while (styleElement.firstChild) {
      styleElement.removeChild(styleElement.firstChild)
    }
    styleElement.appendChild(document.createTextNode(css))
  }
}


/***/ }),
/* 4 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* WEBPACK VAR INJECTION */(function(global) {/*!
 * Vue.js v2.4.2
 * (c) 2014-2017 Evan You
 * Released under the MIT License.
 */
/*  */

// these helpers produces better vm code in JS engines due to their
// explicitness and function inlining
function isUndef (v) {
  return v === undefined || v === null
}

function isDef (v) {
  return v !== undefined && v !== null
}

function isTrue (v) {
  return v === true
}

function isFalse (v) {
  return v === false
}

/**
 * Check if value is primitive
 */
function isPrimitive (value) {
  return (
    typeof value === 'string' ||
    typeof value === 'number' ||
    typeof value === 'boolean'
  )
}

/**
 * Quick object check - this is primarily used to tell
 * Objects from primitive values when we know the value
 * is a JSON-compliant type.
 */
function isObject (obj) {
  return obj !== null && typeof obj === 'object'
}

var _toString = Object.prototype.toString;

/**
 * Strict object type check. Only returns true
 * for plain JavaScript objects.
 */
function isPlainObject (obj) {
  return _toString.call(obj) === '[object Object]'
}

function isRegExp (v) {
  return _toString.call(v) === '[object RegExp]'
}

/**
 * Check if val is a valid array index.
 */
function isValidArrayIndex (val) {
  var n = parseFloat(val);
  return n >= 0 && Math.floor(n) === n && isFinite(val)
}

/**
 * Convert a value to a string that is actually rendered.
 */
function toString (val) {
  return val == null
    ? ''
    : typeof val === 'object'
      ? JSON.stringify(val, null, 2)
      : String(val)
}

/**
 * Convert a input value to a number for persistence.
 * If the conversion fails, return original string.
 */
function toNumber (val) {
  var n = parseFloat(val);
  return isNaN(n) ? val : n
}

/**
 * Make a map and return a function for checking if a key
 * is in that map.
 */
function makeMap (
  str,
  expectsLowerCase
) {
  var map = Object.create(null);
  var list = str.split(',');
  for (var i = 0; i < list.length; i++) {
    map[list[i]] = true;
  }
  return expectsLowerCase
    ? function (val) { return map[val.toLowerCase()]; }
    : function (val) { return map[val]; }
}

/**
 * Check if a tag is a built-in tag.
 */
var isBuiltInTag = makeMap('slot,component', true);

/**
 * Check if a attribute is a reserved attribute.
 */
var isReservedAttribute = makeMap('key,ref,slot,is');

/**
 * Remove an item from an array
 */
function remove (arr, item) {
  if (arr.length) {
    var index = arr.indexOf(item);
    if (index > -1) {
      return arr.splice(index, 1)
    }
  }
}

/**
 * Check whether the object has the property.
 */
var hasOwnProperty = Object.prototype.hasOwnProperty;
function hasOwn (obj, key) {
  return hasOwnProperty.call(obj, key)
}

/**
 * Create a cached version of a pure function.
 */
function cached (fn) {
  var cache = Object.create(null);
  return (function cachedFn (str) {
    var hit = cache[str];
    return hit || (cache[str] = fn(str))
  })
}

/**
 * Camelize a hyphen-delimited string.
 */
var camelizeRE = /-(\w)/g;
var camelize = cached(function (str) {
  return str.replace(camelizeRE, function (_, c) { return c ? c.toUpperCase() : ''; })
});

/**
 * Capitalize a string.
 */
var capitalize = cached(function (str) {
  return str.charAt(0).toUpperCase() + str.slice(1)
});

/**
 * Hyphenate a camelCase string.
 */
var hyphenateRE = /([^-])([A-Z])/g;
var hyphenate = cached(function (str) {
  return str
    .replace(hyphenateRE, '$1-$2')
    .replace(hyphenateRE, '$1-$2')
    .toLowerCase()
});

/**
 * Simple bind, faster than native
 */
function bind (fn, ctx) {
  function boundFn (a) {
    var l = arguments.length;
    return l
      ? l > 1
        ? fn.apply(ctx, arguments)
        : fn.call(ctx, a)
      : fn.call(ctx)
  }
  // record original fn length
  boundFn._length = fn.length;
  return boundFn
}

/**
 * Convert an Array-like object to a real Array.
 */
function toArray (list, start) {
  start = start || 0;
  var i = list.length - start;
  var ret = new Array(i);
  while (i--) {
    ret[i] = list[i + start];
  }
  return ret
}

/**
 * Mix properties into target object.
 */
function extend (to, _from) {
  for (var key in _from) {
    to[key] = _from[key];
  }
  return to
}

/**
 * Merge an Array of Objects into a single Object.
 */
function toObject (arr) {
  var res = {};
  for (var i = 0; i < arr.length; i++) {
    if (arr[i]) {
      extend(res, arr[i]);
    }
  }
  return res
}

/**
 * Perform no operation.
 * Stubbing args to make Flow happy without leaving useless transpiled code
 * with ...rest (https://flow.org/blog/2017/05/07/Strict-Function-Call-Arity/)
 */
function noop (a, b, c) {}

/**
 * Always return false.
 */
var no = function (a, b, c) { return false; };

/**
 * Return same value
 */
var identity = function (_) { return _; };

/**
 * Generate a static keys string from compiler modules.
 */


/**
 * Check if two values are loosely equal - that is,
 * if they are plain objects, do they have the same shape?
 */
function looseEqual (a, b) {
  if (a === b) { return true }
  var isObjectA = isObject(a);
  var isObjectB = isObject(b);
  if (isObjectA && isObjectB) {
    try {
      var isArrayA = Array.isArray(a);
      var isArrayB = Array.isArray(b);
      if (isArrayA && isArrayB) {
        return a.length === b.length && a.every(function (e, i) {
          return looseEqual(e, b[i])
        })
      } else if (!isArrayA && !isArrayB) {
        var keysA = Object.keys(a);
        var keysB = Object.keys(b);
        return keysA.length === keysB.length && keysA.every(function (key) {
          return looseEqual(a[key], b[key])
        })
      } else {
        /* istanbul ignore next */
        return false
      }
    } catch (e) {
      /* istanbul ignore next */
      return false
    }
  } else if (!isObjectA && !isObjectB) {
    return String(a) === String(b)
  } else {
    return false
  }
}

function looseIndexOf (arr, val) {
  for (var i = 0; i < arr.length; i++) {
    if (looseEqual(arr[i], val)) { return i }
  }
  return -1
}

/**
 * Ensure a function is called only once.
 */
function once (fn) {
  var called = false;
  return function () {
    if (!called) {
      called = true;
      fn.apply(this, arguments);
    }
  }
}

var SSR_ATTR = 'data-server-rendered';

var ASSET_TYPES = [
  'component',
  'directive',
  'filter'
];

var LIFECYCLE_HOOKS = [
  'beforeCreate',
  'created',
  'beforeMount',
  'mounted',
  'beforeUpdate',
  'updated',
  'beforeDestroy',
  'destroyed',
  'activated',
  'deactivated'
];

/*  */

var config = ({
  /**
   * Option merge strategies (used in core/util/options)
   */
  optionMergeStrategies: Object.create(null),

  /**
   * Whether to suppress warnings.
   */
  silent: false,

  /**
   * Show production mode tip message on boot?
   */
  productionTip: "production" !== 'production',

  /**
   * Whether to enable devtools
   */
  devtools: "production" !== 'production',

  /**
   * Whether to record perf
   */
  performance: false,

  /**
   * Error handler for watcher errors
   */
  errorHandler: null,

  /**
   * Warn handler for watcher warns
   */
  warnHandler: null,

  /**
   * Ignore certain custom elements
   */
  ignoredElements: [],

  /**
   * Custom user key aliases for v-on
   */
  keyCodes: Object.create(null),

  /**
   * Check if a tag is reserved so that it cannot be registered as a
   * component. This is platform-dependent and may be overwritten.
   */
  isReservedTag: no,

  /**
   * Check if an attribute is reserved so that it cannot be used as a component
   * prop. This is platform-dependent and may be overwritten.
   */
  isReservedAttr: no,

  /**
   * Check if a tag is an unknown element.
   * Platform-dependent.
   */
  isUnknownElement: no,

  /**
   * Get the namespace of an element
   */
  getTagNamespace: noop,

  /**
   * Parse the real tag name for the specific platform.
   */
  parsePlatformTagName: identity,

  /**
   * Check if an attribute must be bound using property, e.g. value
   * Platform-dependent.
   */
  mustUseProp: no,

  /**
   * Exposed for legacy reasons
   */
  _lifecycleHooks: LIFECYCLE_HOOKS
});

/*  */

var emptyObject = Object.freeze({});

/**
 * Check if a string starts with $ or _
 */
function isReserved (str) {
  var c = (str + '').charCodeAt(0);
  return c === 0x24 || c === 0x5F
}

/**
 * Define a property.
 */
function def (obj, key, val, enumerable) {
  Object.defineProperty(obj, key, {
    value: val,
    enumerable: !!enumerable,
    writable: true,
    configurable: true
  });
}

/**
 * Parse simple path.
 */
var bailRE = /[^\w.$]/;
function parsePath (path) {
  if (bailRE.test(path)) {
    return
  }
  var segments = path.split('.');
  return function (obj) {
    for (var i = 0; i < segments.length; i++) {
      if (!obj) { return }
      obj = obj[segments[i]];
    }
    return obj
  }
}

/*  */

var warn = noop;
var tip = noop;
var formatComponentName = (null); // work around flow check

if (false) {
  var hasConsole = typeof console !== 'undefined';
  var classifyRE = /(?:^|[-_])(\w)/g;
  var classify = function (str) { return str
    .replace(classifyRE, function (c) { return c.toUpperCase(); })
    .replace(/[-_]/g, ''); };

  warn = function (msg, vm) {
    var trace = vm ? generateComponentTrace(vm) : '';

    if (config.warnHandler) {
      config.warnHandler.call(null, msg, vm, trace);
    } else if (hasConsole && (!config.silent)) {
      console.error(("[Vue warn]: " + msg + trace));
    }
  };

  tip = function (msg, vm) {
    if (hasConsole && (!config.silent)) {
      console.warn("[Vue tip]: " + msg + (
        vm ? generateComponentTrace(vm) : ''
      ));
    }
  };

  formatComponentName = function (vm, includeFile) {
    if (vm.$root === vm) {
      return '<Root>'
    }
    var name = typeof vm === 'string'
      ? vm
      : typeof vm === 'function' && vm.options
        ? vm.options.name
        : vm._isVue
          ? vm.$options.name || vm.$options._componentTag
          : vm.name;

    var file = vm._isVue && vm.$options.__file;
    if (!name && file) {
      var match = file.match(/([^/\\]+)\.vue$/);
      name = match && match[1];
    }

    return (
      (name ? ("<" + (classify(name)) + ">") : "<Anonymous>") +
      (file && includeFile !== false ? (" at " + file) : '')
    )
  };

  var repeat = function (str, n) {
    var res = '';
    while (n) {
      if (n % 2 === 1) { res += str; }
      if (n > 1) { str += str; }
      n >>= 1;
    }
    return res
  };

  var generateComponentTrace = function (vm) {
    if (vm._isVue && vm.$parent) {
      var tree = [];
      var currentRecursiveSequence = 0;
      while (vm) {
        if (tree.length > 0) {
          var last = tree[tree.length - 1];
          if (last.constructor === vm.constructor) {
            currentRecursiveSequence++;
            vm = vm.$parent;
            continue
          } else if (currentRecursiveSequence > 0) {
            tree[tree.length - 1] = [last, currentRecursiveSequence];
            currentRecursiveSequence = 0;
          }
        }
        tree.push(vm);
        vm = vm.$parent;
      }
      return '\n\nfound in\n\n' + tree
        .map(function (vm, i) { return ("" + (i === 0 ? '---> ' : repeat(' ', 5 + i * 2)) + (Array.isArray(vm)
            ? ((formatComponentName(vm[0])) + "... (" + (vm[1]) + " recursive calls)")
            : formatComponentName(vm))); })
        .join('\n')
    } else {
      return ("\n\n(found in " + (formatComponentName(vm)) + ")")
    }
  };
}

/*  */

function handleError (err, vm, info) {
  if (config.errorHandler) {
    config.errorHandler.call(null, err, vm, info);
  } else {
    if (false) {
      warn(("Error in " + info + ": \"" + (err.toString()) + "\""), vm);
    }
    /* istanbul ignore else */
    if (inBrowser && typeof console !== 'undefined') {
      console.error(err);
    } else {
      throw err
    }
  }
}

/*  */
/* globals MutationObserver */

// can we use __proto__?
var hasProto = '__proto__' in {};

// Browser environment sniffing
var inBrowser = typeof window !== 'undefined';
var UA = inBrowser && window.navigator.userAgent.toLowerCase();
var isIE = UA && /msie|trident/.test(UA);
var isIE9 = UA && UA.indexOf('msie 9.0') > 0;
var isEdge = UA && UA.indexOf('edge/') > 0;
var isAndroid = UA && UA.indexOf('android') > 0;
var isIOS = UA && /iphone|ipad|ipod|ios/.test(UA);
var isChrome = UA && /chrome\/\d+/.test(UA) && !isEdge;

// Firefix has a "watch" function on Object.prototype...
var nativeWatch = ({}).watch;

var supportsPassive = false;
if (inBrowser) {
  try {
    var opts = {};
    Object.defineProperty(opts, 'passive', ({
      get: function get () {
        /* istanbul ignore next */
        supportsPassive = true;
      }
    })); // https://github.com/facebook/flow/issues/285
    window.addEventListener('test-passive', null, opts);
  } catch (e) {}
}

// this needs to be lazy-evaled because vue may be required before
// vue-server-renderer can set VUE_ENV
var _isServer;
var isServerRendering = function () {
  if (_isServer === undefined) {
    /* istanbul ignore if */
    if (!inBrowser && typeof global !== 'undefined') {
      // detect presence of vue-server-renderer and avoid
      // Webpack shimming the process
      _isServer = global['process'].env.VUE_ENV === 'server';
    } else {
      _isServer = false;
    }
  }
  return _isServer
};

// detect devtools
var devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;

/* istanbul ignore next */
function isNative (Ctor) {
  return typeof Ctor === 'function' && /native code/.test(Ctor.toString())
}

var hasSymbol =
  typeof Symbol !== 'undefined' && isNative(Symbol) &&
  typeof Reflect !== 'undefined' && isNative(Reflect.ownKeys);

/**
 * Defer a task to execute it asynchronously.
 */
var nextTick = (function () {
  var callbacks = [];
  var pending = false;
  var timerFunc;

  function nextTickHandler () {
    pending = false;
    var copies = callbacks.slice(0);
    callbacks.length = 0;
    for (var i = 0; i < copies.length; i++) {
      copies[i]();
    }
  }

  // the nextTick behavior leverages the microtask queue, which can be accessed
  // via either native Promise.then or MutationObserver.
  // MutationObserver has wider support, however it is seriously bugged in
  // UIWebView in iOS >= 9.3.3 when triggered in touch event handlers. It
  // completely stops working after triggering a few times... so, if native
  // Promise is available, we will use it:
  /* istanbul ignore if */
  if (typeof Promise !== 'undefined' && isNative(Promise)) {
    var p = Promise.resolve();
    var logError = function (err) { console.error(err); };
    timerFunc = function () {
      p.then(nextTickHandler).catch(logError);
      // in problematic UIWebViews, Promise.then doesn't completely break, but
      // it can get stuck in a weird state where callbacks are pushed into the
      // microtask queue but the queue isn't being flushed, until the browser
      // needs to do some other work, e.g. handle a timer. Therefore we can
      // "force" the microtask queue to be flushed by adding an empty timer.
      if (isIOS) { setTimeout(noop); }
    };
  } else if (typeof MutationObserver !== 'undefined' && (
    isNative(MutationObserver) ||
    // PhantomJS and iOS 7.x
    MutationObserver.toString() === '[object MutationObserverConstructor]'
  )) {
    // use MutationObserver where native Promise is not available,
    // e.g. PhantomJS IE11, iOS7, Android 4.4
    var counter = 1;
    var observer = new MutationObserver(nextTickHandler);
    var textNode = document.createTextNode(String(counter));
    observer.observe(textNode, {
      characterData: true
    });
    timerFunc = function () {
      counter = (counter + 1) % 2;
      textNode.data = String(counter);
    };
  } else {
    // fallback to setTimeout
    /* istanbul ignore next */
    timerFunc = function () {
      setTimeout(nextTickHandler, 0);
    };
  }

  return function queueNextTick (cb, ctx) {
    var _resolve;
    callbacks.push(function () {
      if (cb) {
        try {
          cb.call(ctx);
        } catch (e) {
          handleError(e, ctx, 'nextTick');
        }
      } else if (_resolve) {
        _resolve(ctx);
      }
    });
    if (!pending) {
      pending = true;
      timerFunc();
    }
    if (!cb && typeof Promise !== 'undefined') {
      return new Promise(function (resolve, reject) {
        _resolve = resolve;
      })
    }
  }
})();

var _Set;
/* istanbul ignore if */
if (typeof Set !== 'undefined' && isNative(Set)) {
  // use native Set when available.
  _Set = Set;
} else {
  // a non-standard Set polyfill that only works with primitive keys.
  _Set = (function () {
    function Set () {
      this.set = Object.create(null);
    }
    Set.prototype.has = function has (key) {
      return this.set[key] === true
    };
    Set.prototype.add = function add (key) {
      this.set[key] = true;
    };
    Set.prototype.clear = function clear () {
      this.set = Object.create(null);
    };

    return Set;
  }());
}

/*  */


var uid$1 = 0;

/**
 * A dep is an observable that can have multiple
 * directives subscribing to it.
 */
var Dep = function Dep () {
  this.id = uid$1++;
  this.subs = [];
};

Dep.prototype.addSub = function addSub (sub) {
  this.subs.push(sub);
};

Dep.prototype.removeSub = function removeSub (sub) {
  remove(this.subs, sub);
};

Dep.prototype.depend = function depend () {
  if (Dep.target) {
    Dep.target.addDep(this);
  }
};

Dep.prototype.notify = function notify () {
  // stabilize the subscriber list first
  var subs = this.subs.slice();
  for (var i = 0, l = subs.length; i < l; i++) {
    subs[i].update();
  }
};

// the current target watcher being evaluated.
// this is globally unique because there could be only one
// watcher being evaluated at any time.
Dep.target = null;
var targetStack = [];

function pushTarget (_target) {
  if (Dep.target) { targetStack.push(Dep.target); }
  Dep.target = _target;
}

function popTarget () {
  Dep.target = targetStack.pop();
}

/*
 * not type checking this file because flow doesn't play well with
 * dynamically accessing methods on Array prototype
 */

var arrayProto = Array.prototype;
var arrayMethods = Object.create(arrayProto);[
  'push',
  'pop',
  'shift',
  'unshift',
  'splice',
  'sort',
  'reverse'
]
.forEach(function (method) {
  // cache original method
  var original = arrayProto[method];
  def(arrayMethods, method, function mutator () {
    var args = [], len = arguments.length;
    while ( len-- ) args[ len ] = arguments[ len ];

    var result = original.apply(this, args);
    var ob = this.__ob__;
    var inserted;
    switch (method) {
      case 'push':
      case 'unshift':
        inserted = args;
        break
      case 'splice':
        inserted = args.slice(2);
        break
    }
    if (inserted) { ob.observeArray(inserted); }
    // notify change
    ob.dep.notify();
    return result
  });
});

/*  */

var arrayKeys = Object.getOwnPropertyNames(arrayMethods);

/**
 * By default, when a reactive property is set, the new value is
 * also converted to become reactive. However when passing down props,
 * we don't want to force conversion because the value may be a nested value
 * under a frozen data structure. Converting it would defeat the optimization.
 */
var observerState = {
  shouldConvert: true
};

/**
 * Observer class that are attached to each observed
 * object. Once attached, the observer converts target
 * object's property keys into getter/setters that
 * collect dependencies and dispatches updates.
 */
var Observer = function Observer (value) {
  this.value = value;
  this.dep = new Dep();
  this.vmCount = 0;
  def(value, '__ob__', this);
  if (Array.isArray(value)) {
    var augment = hasProto
      ? protoAugment
      : copyAugment;
    augment(value, arrayMethods, arrayKeys);
    this.observeArray(value);
  } else {
    this.walk(value);
  }
};

/**
 * Walk through each property and convert them into
 * getter/setters. This method should only be called when
 * value type is Object.
 */
Observer.prototype.walk = function walk (obj) {
  var keys = Object.keys(obj);
  for (var i = 0; i < keys.length; i++) {
    defineReactive$$1(obj, keys[i], obj[keys[i]]);
  }
};

/**
 * Observe a list of Array items.
 */
Observer.prototype.observeArray = function observeArray (items) {
  for (var i = 0, l = items.length; i < l; i++) {
    observe(items[i]);
  }
};

// helpers

/**
 * Augment an target Object or Array by intercepting
 * the prototype chain using __proto__
 */
function protoAugment (target, src, keys) {
  /* eslint-disable no-proto */
  target.__proto__ = src;
  /* eslint-enable no-proto */
}

/**
 * Augment an target Object or Array by defining
 * hidden properties.
 */
/* istanbul ignore next */
function copyAugment (target, src, keys) {
  for (var i = 0, l = keys.length; i < l; i++) {
    var key = keys[i];
    def(target, key, src[key]);
  }
}

/**
 * Attempt to create an observer instance for a value,
 * returns the new observer if successfully observed,
 * or the existing observer if the value already has one.
 */
function observe (value, asRootData) {
  if (!isObject(value)) {
    return
  }
  var ob;
  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {
    ob = value.__ob__;
  } else if (
    observerState.shouldConvert &&
    !isServerRendering() &&
    (Array.isArray(value) || isPlainObject(value)) &&
    Object.isExtensible(value) &&
    !value._isVue
  ) {
    ob = new Observer(value);
  }
  if (asRootData && ob) {
    ob.vmCount++;
  }
  return ob
}

/**
 * Define a reactive property on an Object.
 */
function defineReactive$$1 (
  obj,
  key,
  val,
  customSetter,
  shallow
) {
  var dep = new Dep();

  var property = Object.getOwnPropertyDescriptor(obj, key);
  if (property && property.configurable === false) {
    return
  }

  // cater for pre-defined getter/setters
  var getter = property && property.get;
  var setter = property && property.set;

  var childOb = !shallow && observe(val);
  Object.defineProperty(obj, key, {
    enumerable: true,
    configurable: true,
    get: function reactiveGetter () {
      var value = getter ? getter.call(obj) : val;
      if (Dep.target) {
        dep.depend();
        if (childOb) {
          childOb.dep.depend();
        }
        if (Array.isArray(value)) {
          dependArray(value);
        }
      }
      return value
    },
    set: function reactiveSetter (newVal) {
      var value = getter ? getter.call(obj) : val;
      /* eslint-disable no-self-compare */
      if (newVal === value || (newVal !== newVal && value !== value)) {
        return
      }
      /* eslint-enable no-self-compare */
      if (false) {
        customSetter();
      }
      if (setter) {
        setter.call(obj, newVal);
      } else {
        val = newVal;
      }
      childOb = !shallow && observe(newVal);
      dep.notify();
    }
  });
}

/**
 * Set a property on an object. Adds the new property and
 * triggers change notification if the property doesn't
 * already exist.
 */
function set (target, key, val) {
  if (Array.isArray(target) && isValidArrayIndex(key)) {
    target.length = Math.max(target.length, key);
    target.splice(key, 1, val);
    return val
  }
  if (hasOwn(target, key)) {
    target[key] = val;
    return val
  }
  var ob = (target).__ob__;
  if (target._isVue || (ob && ob.vmCount)) {
    "production" !== 'production' && warn(
      'Avoid adding reactive properties to a Vue instance or its root $data ' +
      'at runtime - declare it upfront in the data option.'
    );
    return val
  }
  if (!ob) {
    target[key] = val;
    return val
  }
  defineReactive$$1(ob.value, key, val);
  ob.dep.notify();
  return val
}

/**
 * Delete a property and trigger change if necessary.
 */
function del (target, key) {
  if (Array.isArray(target) && isValidArrayIndex(key)) {
    target.splice(key, 1);
    return
  }
  var ob = (target).__ob__;
  if (target._isVue || (ob && ob.vmCount)) {
    "production" !== 'production' && warn(
      'Avoid deleting properties on a Vue instance or its root $data ' +
      '- just set it to null.'
    );
    return
  }
  if (!hasOwn(target, key)) {
    return
  }
  delete target[key];
  if (!ob) {
    return
  }
  ob.dep.notify();
}

/**
 * Collect dependencies on array elements when the array is touched, since
 * we cannot intercept array element access like property getters.
 */
function dependArray (value) {
  for (var e = (void 0), i = 0, l = value.length; i < l; i++) {
    e = value[i];
    e && e.__ob__ && e.__ob__.dep.depend();
    if (Array.isArray(e)) {
      dependArray(e);
    }
  }
}

/*  */

/**
 * Option overwriting strategies are functions that handle
 * how to merge a parent option value and a child option
 * value into the final value.
 */
var strats = config.optionMergeStrategies;

/**
 * Options with restrictions
 */
if (false) {
  strats.el = strats.propsData = function (parent, child, vm, key) {
    if (!vm) {
      warn(
        "option \"" + key + "\" can only be used during instance " +
        'creation with the `new` keyword.'
      );
    }
    return defaultStrat(parent, child)
  };
}

/**
 * Helper that recursively merges two data objects together.
 */
function mergeData (to, from) {
  if (!from) { return to }
  var key, toVal, fromVal;
  var keys = Object.keys(from);
  for (var i = 0; i < keys.length; i++) {
    key = keys[i];
    toVal = to[key];
    fromVal = from[key];
    if (!hasOwn(to, key)) {
      set(to, key, fromVal);
    } else if (isPlainObject(toVal) && isPlainObject(fromVal)) {
      mergeData(toVal, fromVal);
    }
  }
  return to
}

/**
 * Data
 */
function mergeDataOrFn (
  parentVal,
  childVal,
  vm
) {
  if (!vm) {
    // in a Vue.extend merge, both should be functions
    if (!childVal) {
      return parentVal
    }
    if (!parentVal) {
      return childVal
    }
    // when parentVal & childVal are both present,
    // we need to return a function that returns the
    // merged result of both functions... no need to
    // check if parentVal is a function here because
    // it has to be a function to pass previous merges.
    return function mergedDataFn () {
      return mergeData(
        typeof childVal === 'function' ? childVal.call(this) : childVal,
        typeof parentVal === 'function' ? parentVal.call(this) : parentVal
      )
    }
  } else if (parentVal || childVal) {
    return function mergedInstanceDataFn () {
      // instance merge
      var instanceData = typeof childVal === 'function'
        ? childVal.call(vm)
        : childVal;
      var defaultData = typeof parentVal === 'function'
        ? parentVal.call(vm)
        : undefined;
      if (instanceData) {
        return mergeData(instanceData, defaultData)
      } else {
        return defaultData
      }
    }
  }
}

strats.data = function (
  parentVal,
  childVal,
  vm
) {
  if (!vm) {
    if (childVal && typeof childVal !== 'function') {
      "production" !== 'production' && warn(
        'The "data" option should be a function ' +
        'that returns a per-instance value in component ' +
        'definitions.',
        vm
      );

      return parentVal
    }
    return mergeDataOrFn.call(this, parentVal, childVal)
  }

  return mergeDataOrFn(parentVal, childVal, vm)
};

/**
 * Hooks and props are merged as arrays.
 */
function mergeHook (
  parentVal,
  childVal
) {
  return childVal
    ? parentVal
      ? parentVal.concat(childVal)
      : Array.isArray(childVal)
        ? childVal
        : [childVal]
    : parentVal
}

LIFECYCLE_HOOKS.forEach(function (hook) {
  strats[hook] = mergeHook;
});

/**
 * Assets
 *
 * When a vm is present (instance creation), we need to do
 * a three-way merge between constructor options, instance
 * options and parent options.
 */
function mergeAssets (parentVal, childVal) {
  var res = Object.create(parentVal || null);
  return childVal
    ? extend(res, childVal)
    : res
}

ASSET_TYPES.forEach(function (type) {
  strats[type + 's'] = mergeAssets;
});

/**
 * Watchers.
 *
 * Watchers hashes should not overwrite one
 * another, so we merge them as arrays.
 */
strats.watch = function (parentVal, childVal) {
  // work around Firefox's Object.prototype.watch...
  if (parentVal === nativeWatch) { parentVal = undefined; }
  if (childVal === nativeWatch) { childVal = undefined; }
  /* istanbul ignore if */
  if (!childVal) { return Object.create(parentVal || null) }
  if (!parentVal) { return childVal }
  var ret = {};
  extend(ret, parentVal);
  for (var key in childVal) {
    var parent = ret[key];
    var child = childVal[key];
    if (parent && !Array.isArray(parent)) {
      parent = [parent];
    }
    ret[key] = parent
      ? parent.concat(child)
      : Array.isArray(child) ? child : [child];
  }
  return ret
};

/**
 * Other object hashes.
 */
strats.props =
strats.methods =
strats.inject =
strats.computed = function (parentVal, childVal) {
  if (!parentVal) { return childVal }
  var ret = Object.create(null);
  extend(ret, parentVal);
  if (childVal) { extend(ret, childVal); }
  return ret
};
strats.provide = mergeDataOrFn;

/**
 * Default strategy.
 */
var defaultStrat = function (parentVal, childVal) {
  return childVal === undefined
    ? parentVal
    : childVal
};

/**
 * Validate component names
 */
function checkComponents (options) {
  for (var key in options.components) {
    var lower = key.toLowerCase();
    if (isBuiltInTag(lower) || config.isReservedTag(lower)) {
      warn(
        'Do not use built-in or reserved HTML elements as component ' +
        'id: ' + key
      );
    }
  }
}

/**
 * Ensure all props option syntax are normalized into the
 * Object-based format.
 */
function normalizeProps (options) {
  var props = options.props;
  if (!props) { return }
  var res = {};
  var i, val, name;
  if (Array.isArray(props)) {
    i = props.length;
    while (i--) {
      val = props[i];
      if (typeof val === 'string') {
        name = camelize(val);
        res[name] = { type: null };
      } else if (false) {
        warn('props must be strings when using array syntax.');
      }
    }
  } else if (isPlainObject(props)) {
    for (var key in props) {
      val = props[key];
      name = camelize(key);
      res[name] = isPlainObject(val)
        ? val
        : { type: val };
    }
  }
  options.props = res;
}

/**
 * Normalize all injections into Object-based format
 */
function normalizeInject (options) {
  var inject = options.inject;
  if (Array.isArray(inject)) {
    var normalized = options.inject = {};
    for (var i = 0; i < inject.length; i++) {
      normalized[inject[i]] = inject[i];
    }
  }
}

/**
 * Normalize raw function directives into object format.
 */
function normalizeDirectives (options) {
  var dirs = options.directives;
  if (dirs) {
    for (var key in dirs) {
      var def = dirs[key];
      if (typeof def === 'function') {
        dirs[key] = { bind: def, update: def };
      }
    }
  }
}

/**
 * Merge two option objects into a new one.
 * Core utility used in both instantiation and inheritance.
 */
function mergeOptions (
  parent,
  child,
  vm
) {
  if (false) {
    checkComponents(child);
  }

  if (typeof child === 'function') {
    child = child.options;
  }

  normalizeProps(child);
  normalizeInject(child);
  normalizeDirectives(child);
  var extendsFrom = child.extends;
  if (extendsFrom) {
    parent = mergeOptions(parent, extendsFrom, vm);
  }
  if (child.mixins) {
    for (var i = 0, l = child.mixins.length; i < l; i++) {
      parent = mergeOptions(parent, child.mixins[i], vm);
    }
  }
  var options = {};
  var key;
  for (key in parent) {
    mergeField(key);
  }
  for (key in child) {
    if (!hasOwn(parent, key)) {
      mergeField(key);
    }
  }
  function mergeField (key) {
    var strat = strats[key] || defaultStrat;
    options[key] = strat(parent[key], child[key], vm, key);
  }
  return options
}

/**
 * Resolve an asset.
 * This function is used because child instances need access
 * to assets defined in its ancestor chain.
 */
function resolveAsset (
  options,
  type,
  id,
  warnMissing
) {
  /* istanbul ignore if */
  if (typeof id !== 'string') {
    return
  }
  var assets = options[type];
  // check local registration variations first
  if (hasOwn(assets, id)) { return assets[id] }
  var camelizedId = camelize(id);
  if (hasOwn(assets, camelizedId)) { return assets[camelizedId] }
  var PascalCaseId = capitalize(camelizedId);
  if (hasOwn(assets, PascalCaseId)) { return assets[PascalCaseId] }
  // fallback to prototype chain
  var res = assets[id] || assets[camelizedId] || assets[PascalCaseId];
  if (false) {
    warn(
      'Failed to resolve ' + type.slice(0, -1) + ': ' + id,
      options
    );
  }
  return res
}

/*  */

function validateProp (
  key,
  propOptions,
  propsData,
  vm
) {
  var prop = propOptions[key];
  var absent = !hasOwn(propsData, key);
  var value = propsData[key];
  // handle boolean props
  if (isType(Boolean, prop.type)) {
    if (absent && !hasOwn(prop, 'default')) {
      value = false;
    } else if (!isType(String, prop.type) && (value === '' || value === hyphenate(key))) {
      value = true;
    }
  }
  // check default value
  if (value === undefined) {
    value = getPropDefaultValue(vm, prop, key);
    // since the default value is a fresh copy,
    // make sure to observe it.
    var prevShouldConvert = observerState.shouldConvert;
    observerState.shouldConvert = true;
    observe(value);
    observerState.shouldConvert = prevShouldConvert;
  }
  if (false) {
    assertProp(prop, key, value, vm, absent);
  }
  return value
}

/**
 * Get the default value of a prop.
 */
function getPropDefaultValue (vm, prop, key) {
  // no default, return undefined
  if (!hasOwn(prop, 'default')) {
    return undefined
  }
  var def = prop.default;
  // warn against non-factory defaults for Object & Array
  if (false) {
    warn(
      'Invalid default value for prop "' + key + '": ' +
      'Props with type Object/Array must use a factory function ' +
      'to return the default value.',
      vm
    );
  }
  // the raw prop value was also undefined from previous render,
  // return previous default value to avoid unnecessary watcher trigger
  if (vm && vm.$options.propsData &&
    vm.$options.propsData[key] === undefined &&
    vm._props[key] !== undefined
  ) {
    return vm._props[key]
  }
  // call factory function for non-Function types
  // a value is Function if its prototype is function even across different execution context
  return typeof def === 'function' && getType(prop.type) !== 'Function'
    ? def.call(vm)
    : def
}

/**
 * Assert whether a prop is valid.
 */
function assertProp (
  prop,
  name,
  value,
  vm,
  absent
) {
  if (prop.required && absent) {
    warn(
      'Missing required prop: "' + name + '"',
      vm
    );
    return
  }
  if (value == null && !prop.required) {
    return
  }
  var type = prop.type;
  var valid = !type || type === true;
  var expectedTypes = [];
  if (type) {
    if (!Array.isArray(type)) {
      type = [type];
    }
    for (var i = 0; i < type.length && !valid; i++) {
      var assertedType = assertType(value, type[i]);
      expectedTypes.push(assertedType.expectedType || '');
      valid = assertedType.valid;
    }
  }
  if (!valid) {
    warn(
      'Invalid prop: type check failed for prop "' + name + '".' +
      ' Expected ' + expectedTypes.map(capitalize).join(', ') +
      ', got ' + Object.prototype.toString.call(value).slice(8, -1) + '.',
      vm
    );
    return
  }
  var validator = prop.validator;
  if (validator) {
    if (!validator(value)) {
      warn(
        'Invalid prop: custom validator check failed for prop "' + name + '".',
        vm
      );
    }
  }
}

var simpleCheckRE = /^(String|Number|Boolean|Function|Symbol)$/;

function assertType (value, type) {
  var valid;
  var expectedType = getType(type);
  if (simpleCheckRE.test(expectedType)) {
    valid = typeof value === expectedType.toLowerCase();
  } else if (expectedType === 'Object') {
    valid = isPlainObject(value);
  } else if (expectedType === 'Array') {
    valid = Array.isArray(value);
  } else {
    valid = value instanceof type;
  }
  return {
    valid: valid,
    expectedType: expectedType
  }
}

/**
 * Use function string name to check built-in types,
 * because a simple equality check will fail when running
 * across different vms / iframes.
 */
function getType (fn) {
  var match = fn && fn.toString().match(/^\s*function (\w+)/);
  return match ? match[1] : ''
}

function isType (type, fn) {
  if (!Array.isArray(fn)) {
    return getType(fn) === getType(type)
  }
  for (var i = 0, len = fn.length; i < len; i++) {
    if (getType(fn[i]) === getType(type)) {
      return true
    }
  }
  /* istanbul ignore next */
  return false
}

/*  */

/* not type checking this file because flow doesn't play well with Proxy */

var initProxy;

if (false) {
  var allowedGlobals = makeMap(
    'Infinity,undefined,NaN,isFinite,isNaN,' +
    'parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,' +
    'Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,' +
    'require' // for Webpack/Browserify
  );

  var warnNonPresent = function (target, key) {
    warn(
      "Property or method \"" + key + "\" is not defined on the instance but " +
      "referenced during render. Make sure to declare reactive data " +
      "properties in the data option.",
      target
    );
  };

  var hasProxy =
    typeof Proxy !== 'undefined' &&
    Proxy.toString().match(/native code/);

  if (hasProxy) {
    var isBuiltInModifier = makeMap('stop,prevent,self,ctrl,shift,alt,meta');
    config.keyCodes = new Proxy(config.keyCodes, {
      set: function set (target, key, value) {
        if (isBuiltInModifier(key)) {
          warn(("Avoid overwriting built-in modifier in config.keyCodes: ." + key));
          return false
        } else {
          target[key] = value;
          return true
        }
      }
    });
  }

  var hasHandler = {
    has: function has (target, key) {
      var has = key in target;
      var isAllowed = allowedGlobals(key) || key.charAt(0) === '_';
      if (!has && !isAllowed) {
        warnNonPresent(target, key);
      }
      return has || !isAllowed
    }
  };

  var getHandler = {
    get: function get (target, key) {
      if (typeof key === 'string' && !(key in target)) {
        warnNonPresent(target, key);
      }
      return target[key]
    }
  };

  initProxy = function initProxy (vm) {
    if (hasProxy) {
      // determine which proxy handler to use
      var options = vm.$options;
      var handlers = options.render && options.render._withStripped
        ? getHandler
        : hasHandler;
      vm._renderProxy = new Proxy(vm, handlers);
    } else {
      vm._renderProxy = vm;
    }
  };
}

var mark;
var measure;

if (false) {
  var perf = inBrowser && window.performance;
  /* istanbul ignore if */
  if (
    perf &&
    perf.mark &&
    perf.measure &&
    perf.clearMarks &&
    perf.clearMeasures
  ) {
    mark = function (tag) { return perf.mark(tag); };
    measure = function (name, startTag, endTag) {
      perf.measure(name, startTag, endTag);
      perf.clearMarks(startTag);
      perf.clearMarks(endTag);
      perf.clearMeasures(name);
    };
  }
}

/*  */

var VNode = function VNode (
  tag,
  data,
  children,
  text,
  elm,
  context,
  componentOptions,
  asyncFactory
) {
  this.tag = tag;
  this.data = data;
  this.children = children;
  this.text = text;
  this.elm = elm;
  this.ns = undefined;
  this.context = context;
  this.functionalContext = undefined;
  this.key = data && data.key;
  this.componentOptions = componentOptions;
  this.componentInstance = undefined;
  this.parent = undefined;
  this.raw = false;
  this.isStatic = false;
  this.isRootInsert = true;
  this.isComment = false;
  this.isCloned = false;
  this.isOnce = false;
  this.asyncFactory = asyncFactory;
  this.asyncMeta = undefined;
  this.isAsyncPlaceholder = false;
};

var prototypeAccessors = { child: {} };

// DEPRECATED: alias for componentInstance for backwards compat.
/* istanbul ignore next */
prototypeAccessors.child.get = function () {
  return this.componentInstance
};

Object.defineProperties( VNode.prototype, prototypeAccessors );

var createEmptyVNode = function (text) {
  if ( text === void 0 ) text = '';

  var node = new VNode();
  node.text = text;
  node.isComment = true;
  return node
};

function createTextVNode (val) {
  return new VNode(undefined, undefined, undefined, String(val))
}

// optimized shallow clone
// used for static nodes and slot nodes because they may be reused across
// multiple renders, cloning them avoids errors when DOM manipulations rely
// on their elm reference.
function cloneVNode (vnode) {
  var cloned = new VNode(
    vnode.tag,
    vnode.data,
    vnode.children,
    vnode.text,
    vnode.elm,
    vnode.context,
    vnode.componentOptions,
    vnode.asyncFactory
  );
  cloned.ns = vnode.ns;
  cloned.isStatic = vnode.isStatic;
  cloned.key = vnode.key;
  cloned.isComment = vnode.isComment;
  cloned.isCloned = true;
  return cloned
}

function cloneVNodes (vnodes) {
  var len = vnodes.length;
  var res = new Array(len);
  for (var i = 0; i < len; i++) {
    res[i] = cloneVNode(vnodes[i]);
  }
  return res
}

/*  */

var normalizeEvent = cached(function (name) {
  var passive = name.charAt(0) === '&';
  name = passive ? name.slice(1) : name;
  var once$$1 = name.charAt(0) === '~'; // Prefixed last, checked first
  name = once$$1 ? name.slice(1) : name;
  var capture = name.charAt(0) === '!';
  name = capture ? name.slice(1) : name;
  return {
    name: name,
    once: once$$1,
    capture: capture,
    passive: passive
  }
});

function createFnInvoker (fns) {
  function invoker () {
    var arguments$1 = arguments;

    var fns = invoker.fns;
    if (Array.isArray(fns)) {
      var cloned = fns.slice();
      for (var i = 0; i < cloned.length; i++) {
        cloned[i].apply(null, arguments$1);
      }
    } else {
      // return handler return value for single handlers
      return fns.apply(null, arguments)
    }
  }
  invoker.fns = fns;
  return invoker
}

function updateListeners (
  on,
  oldOn,
  add,
  remove$$1,
  vm
) {
  var name, cur, old, event;
  for (name in on) {
    cur = on[name];
    old = oldOn[name];
    event = normalizeEvent(name);
    if (isUndef(cur)) {
      "production" !== 'production' && warn(
        "Invalid handler for event \"" + (event.name) + "\": got " + String(cur),
        vm
      );
    } else if (isUndef(old)) {
      if (isUndef(cur.fns)) {
        cur = on[name] = createFnInvoker(cur);
      }
      add(event.name, cur, event.once, event.capture, event.passive);
    } else if (cur !== old) {
      old.fns = cur;
      on[name] = old;
    }
  }
  for (name in oldOn) {
    if (isUndef(on[name])) {
      event = normalizeEvent(name);
      remove$$1(event.name, oldOn[name], event.capture);
    }
  }
}

/*  */

function mergeVNodeHook (def, hookKey, hook) {
  var invoker;
  var oldHook = def[hookKey];

  function wrappedHook () {
    hook.apply(this, arguments);
    // important: remove merged hook to ensure it's called only once
    // and prevent memory leak
    remove(invoker.fns, wrappedHook);
  }

  if (isUndef(oldHook)) {
    // no existing hook
    invoker = createFnInvoker([wrappedHook]);
  } else {
    /* istanbul ignore if */
    if (isDef(oldHook.fns) && isTrue(oldHook.merged)) {
      // already a merged invoker
      invoker = oldHook;
      invoker.fns.push(wrappedHook);
    } else {
      // existing plain hook
      invoker = createFnInvoker([oldHook, wrappedHook]);
    }
  }

  invoker.merged = true;
  def[hookKey] = invoker;
}

/*  */

function extractPropsFromVNodeData (
  data,
  Ctor,
  tag
) {
  // we are only extracting raw values here.
  // validation and default values are handled in the child
  // component itself.
  var propOptions = Ctor.options.props;
  if (isUndef(propOptions)) {
    return
  }
  var res = {};
  var attrs = data.attrs;
  var props = data.props;
  if (isDef(attrs) || isDef(props)) {
    for (var key in propOptions) {
      var altKey = hyphenate(key);
      if (false) {
        var keyInLowerCase = key.toLowerCase();
        if (
          key !== keyInLowerCase &&
          attrs && hasOwn(attrs, keyInLowerCase)
        ) {
          tip(
            "Prop \"" + keyInLowerCase + "\" is passed to component " +
            (formatComponentName(tag || Ctor)) + ", but the declared prop name is" +
            " \"" + key + "\". " +
            "Note that HTML attributes are case-insensitive and camelCased " +
            "props need to use their kebab-case equivalents when using in-DOM " +
            "templates. You should probably use \"" + altKey + "\" instead of \"" + key + "\"."
          );
        }
      }
      checkProp(res, props, key, altKey, true) ||
      checkProp(res, attrs, key, altKey, false);
    }
  }
  return res
}

function checkProp (
  res,
  hash,
  key,
  altKey,
  preserve
) {
  if (isDef(hash)) {
    if (hasOwn(hash, key)) {
      res[key] = hash[key];
      if (!preserve) {
        delete hash[key];
      }
      return true
    } else if (hasOwn(hash, altKey)) {
      res[key] = hash[altKey];
      if (!preserve) {
        delete hash[altKey];
      }
      return true
    }
  }
  return false
}

/*  */

// The template compiler attempts to minimize the need for normalization by
// statically analyzing the template at compile time.
//
// For plain HTML markup, normalization can be completely skipped because the
// generated render function is guaranteed to return Array<VNode>. There are
// two cases where extra normalization is needed:

// 1. When the children contains components - because a functional component
// may return an Array instead of a single root. In this case, just a simple
// normalization is needed - if any child is an Array, we flatten the whole
// thing with Array.prototype.concat. It is guaranteed to be only 1-level deep
// because functional components already normalize their own children.
function simpleNormalizeChildren (children) {
  for (var i = 0; i < children.length; i++) {
    if (Array.isArray(children[i])) {
      return Array.prototype.concat.apply([], children)
    }
  }
  return children
}

// 2. When the children contains constructs that always generated nested Arrays,
// e.g. <template>, <slot>, v-for, or when the children is provided by user
// with hand-written render functions / JSX. In such cases a full normalization
// is needed to cater to all possible types of children values.
function normalizeChildren (children) {
  return isPrimitive(children)
    ? [createTextVNode(children)]
    : Array.isArray(children)
      ? normalizeArrayChildren(children)
      : undefined
}

function isTextNode (node) {
  return isDef(node) && isDef(node.text) && isFalse(node.isComment)
}

function normalizeArrayChildren (children, nestedIndex) {
  var res = [];
  var i, c, last;
  for (i = 0; i < children.length; i++) {
    c = children[i];
    if (isUndef(c) || typeof c === 'boolean') { continue }
    last = res[res.length - 1];
    //  nested
    if (Array.isArray(c)) {
      res.push.apply(res, normalizeArrayChildren(c, ((nestedIndex || '') + "_" + i)));
    } else if (isPrimitive(c)) {
      if (isTextNode(last)) {
        // merge adjacent text nodes
        // this is necessary for SSR hydration because text nodes are
        // essentially merged when rendered to HTML strings
        (last).text += String(c);
      } else if (c !== '') {
        // convert primitive to vnode
        res.push(createTextVNode(c));
      }
    } else {
      if (isTextNode(c) && isTextNode(last)) {
        // merge adjacent text nodes
        res[res.length - 1] = createTextVNode(last.text + c.text);
      } else {
        // default key for nested array children (likely generated by v-for)
        if (isTrue(children._isVList) &&
          isDef(c.tag) &&
          isUndef(c.key) &&
          isDef(nestedIndex)) {
          c.key = "__vlist" + nestedIndex + "_" + i + "__";
        }
        res.push(c);
      }
    }
  }
  return res
}

/*  */

function ensureCtor (comp, base) {
  if (comp.__esModule && comp.default) {
    comp = comp.default;
  }
  return isObject(comp)
    ? base.extend(comp)
    : comp
}

function createAsyncPlaceholder (
  factory,
  data,
  context,
  children,
  tag
) {
  var node = createEmptyVNode();
  node.asyncFactory = factory;
  node.asyncMeta = { data: data, context: context, children: children, tag: tag };
  return node
}

function resolveAsyncComponent (
  factory,
  baseCtor,
  context
) {
  if (isTrue(factory.error) && isDef(factory.errorComp)) {
    return factory.errorComp
  }

  if (isDef(factory.resolved)) {
    return factory.resolved
  }

  if (isTrue(factory.loading) && isDef(factory.loadingComp)) {
    return factory.loadingComp
  }

  if (isDef(factory.contexts)) {
    // already pending
    factory.contexts.push(context);
  } else {
    var contexts = factory.contexts = [context];
    var sync = true;

    var forceRender = function () {
      for (var i = 0, l = contexts.length; i < l; i++) {
        contexts[i].$forceUpdate();
      }
    };

    var resolve = once(function (res) {
      // cache resolved
      factory.resolved = ensureCtor(res, baseCtor);
      // invoke callbacks only if this is not a synchronous resolve
      // (async resolves are shimmed as synchronous during SSR)
      if (!sync) {
        forceRender();
      }
    });

    var reject = once(function (reason) {
      "production" !== 'production' && warn(
        "Failed to resolve async component: " + (String(factory)) +
        (reason ? ("\nReason: " + reason) : '')
      );
      if (isDef(factory.errorComp)) {
        factory.error = true;
        forceRender();
      }
    });

    var res = factory(resolve, reject);

    if (isObject(res)) {
      if (typeof res.then === 'function') {
        // () => Promise
        if (isUndef(factory.resolved)) {
          res.then(resolve, reject);
        }
      } else if (isDef(res.component) && typeof res.component.then === 'function') {
        res.component.then(resolve, reject);

        if (isDef(res.error)) {
          factory.errorComp = ensureCtor(res.error, baseCtor);
        }

        if (isDef(res.loading)) {
          factory.loadingComp = ensureCtor(res.loading, baseCtor);
          if (res.delay === 0) {
            factory.loading = true;
          } else {
            setTimeout(function () {
              if (isUndef(factory.resolved) && isUndef(factory.error)) {
                factory.loading = true;
                forceRender();
              }
            }, res.delay || 200);
          }
        }

        if (isDef(res.timeout)) {
          setTimeout(function () {
            if (isUndef(factory.resolved)) {
              reject(
                 false
                  ? ("timeout (" + (res.timeout) + "ms)")
                  : null
              );
            }
          }, res.timeout);
        }
      }
    }

    sync = false;
    // return in case resolved synchronously
    return factory.loading
      ? factory.loadingComp
      : factory.resolved
  }
}

/*  */

function getFirstComponentChild (children) {
  if (Array.isArray(children)) {
    for (var i = 0; i < children.length; i++) {
      var c = children[i];
      if (isDef(c) && isDef(c.componentOptions)) {
        return c
      }
    }
  }
}

/*  */

/*  */

function initEvents (vm) {
  vm._events = Object.create(null);
  vm._hasHookEvent = false;
  // init parent attached events
  var listeners = vm.$options._parentListeners;
  if (listeners) {
    updateComponentListeners(vm, listeners);
  }
}

var target;

function add (event, fn, once$$1) {
  if (once$$1) {
    target.$once(event, fn);
  } else {
    target.$on(event, fn);
  }
}

function remove$1 (event, fn) {
  target.$off(event, fn);
}

function updateComponentListeners (
  vm,
  listeners,
  oldListeners
) {
  target = vm;
  updateListeners(listeners, oldListeners || {}, add, remove$1, vm);
}

function eventsMixin (Vue) {
  var hookRE = /^hook:/;
  Vue.prototype.$on = function (event, fn) {
    var this$1 = this;

    var vm = this;
    if (Array.isArray(event)) {
      for (var i = 0, l = event.length; i < l; i++) {
        this$1.$on(event[i], fn);
      }
    } else {
      (vm._events[event] || (vm._events[event] = [])).push(fn);
      // optimize hook:event cost by using a boolean flag marked at registration
      // instead of a hash lookup
      if (hookRE.test(event)) {
        vm._hasHookEvent = true;
      }
    }
    return vm
  };

  Vue.prototype.$once = function (event, fn) {
    var vm = this;
    function on () {
      vm.$off(event, on);
      fn.apply(vm, arguments);
    }
    on.fn = fn;
    vm.$on(event, on);
    return vm
  };

  Vue.prototype.$off = function (event, fn) {
    var this$1 = this;

    var vm = this;
    // all
    if (!arguments.length) {
      vm._events = Object.create(null);
      return vm
    }
    // array of events
    if (Array.isArray(event)) {
      for (var i$1 = 0, l = event.length; i$1 < l; i$1++) {
        this$1.$off(event[i$1], fn);
      }
      return vm
    }
    // specific event
    var cbs = vm._events[event];
    if (!cbs) {
      return vm
    }
    if (arguments.length === 1) {
      vm._events[event] = null;
      return vm
    }
    // specific handler
    var cb;
    var i = cbs.length;
    while (i--) {
      cb = cbs[i];
      if (cb === fn || cb.fn === fn) {
        cbs.splice(i, 1);
        break
      }
    }
    return vm
  };

  Vue.prototype.$emit = function (event) {
    var vm = this;
    if (false) {
      var lowerCaseEvent = event.toLowerCase();
      if (lowerCaseEvent !== event && vm._events[lowerCaseEvent]) {
        tip(
          "Event \"" + lowerCaseEvent + "\" is emitted in component " +
          (formatComponentName(vm)) + " but the handler is registered for \"" + event + "\". " +
          "Note that HTML attributes are case-insensitive and you cannot use " +
          "v-on to listen to camelCase events when using in-DOM templates. " +
          "You should probably use \"" + (hyphenate(event)) + "\" instead of \"" + event + "\"."
        );
      }
    }
    var cbs = vm._events[event];
    if (cbs) {
      cbs = cbs.length > 1 ? toArray(cbs) : cbs;
      var args = toArray(arguments, 1);
      for (var i = 0, l = cbs.length; i < l; i++) {
        try {
          cbs[i].apply(vm, args);
        } catch (e) {
          handleError(e, vm, ("event handler for \"" + event + "\""));
        }
      }
    }
    return vm
  };
}

/*  */

/**
 * Runtime helper for resolving raw children VNodes into a slot object.
 */
function resolveSlots (
  children,
  context
) {
  var slots = {};
  if (!children) {
    return slots
  }
  var defaultSlot = [];
  for (var i = 0, l = children.length; i < l; i++) {
    var child = children[i];
    // named slots should only be respected if the vnode was rendered in the
    // same context.
    if ((child.context === context || child.functionalContext === context) &&
      child.data && child.data.slot != null
    ) {
      var name = child.data.slot;
      var slot = (slots[name] || (slots[name] = []));
      if (child.tag === 'template') {
        slot.push.apply(slot, child.children);
      } else {
        slot.push(child);
      }
    } else {
      defaultSlot.push(child);
    }
  }
  // ignore whitespace
  if (!defaultSlot.every(isWhitespace)) {
    slots.default = defaultSlot;
  }
  return slots
}

function isWhitespace (node) {
  return node.isComment || node.text === ' '
}

function resolveScopedSlots (
  fns, // see flow/vnode
  res
) {
  res = res || {};
  for (var i = 0; i < fns.length; i++) {
    if (Array.isArray(fns[i])) {
      resolveScopedSlots(fns[i], res);
    } else {
      res[fns[i].key] = fns[i].fn;
    }
  }
  return res
}

/*  */

var activeInstance = null;
var isUpdatingChildComponent = false;

function initLifecycle (vm) {
  var options = vm.$options;

  // locate first non-abstract parent
  var parent = options.parent;
  if (parent && !options.abstract) {
    while (parent.$options.abstract && parent.$parent) {
      parent = parent.$parent;
    }
    parent.$children.push(vm);
  }

  vm.$parent = parent;
  vm.$root = parent ? parent.$root : vm;

  vm.$children = [];
  vm.$refs = {};

  vm._watcher = null;
  vm._inactive = null;
  vm._directInactive = false;
  vm._isMounted = false;
  vm._isDestroyed = false;
  vm._isBeingDestroyed = false;
}

function lifecycleMixin (Vue) {
  Vue.prototype._update = function (vnode, hydrating) {
    var vm = this;
    if (vm._isMounted) {
      callHook(vm, 'beforeUpdate');
    }
    var prevEl = vm.$el;
    var prevVnode = vm._vnode;
    var prevActiveInstance = activeInstance;
    activeInstance = vm;
    vm._vnode = vnode;
    // Vue.prototype.__patch__ is injected in entry points
    // based on the rendering backend used.
    if (!prevVnode) {
      // initial render
      vm.$el = vm.__patch__(
        vm.$el, vnode, hydrating, false /* removeOnly */,
        vm.$options._parentElm,
        vm.$options._refElm
      );
      // no need for the ref nodes after initial patch
      // this prevents keeping a detached DOM tree in memory (#5851)
      vm.$options._parentElm = vm.$options._refElm = null;
    } else {
      // updates
      vm.$el = vm.__patch__(prevVnode, vnode);
    }
    activeInstance = prevActiveInstance;
    // update __vue__ reference
    if (prevEl) {
      prevEl.__vue__ = null;
    }
    if (vm.$el) {
      vm.$el.__vue__ = vm;
    }
    // if parent is an HOC, update its $el as well
    if (vm.$vnode && vm.$parent && vm.$vnode === vm.$parent._vnode) {
      vm.$parent.$el = vm.$el;
    }
    // updated hook is called by the scheduler to ensure that children are
    // updated in a parent's updated hook.
  };

  Vue.prototype.$forceUpdate = function () {
    var vm = this;
    if (vm._watcher) {
      vm._watcher.update();
    }
  };

  Vue.prototype.$destroy = function () {
    var vm = this;
    if (vm._isBeingDestroyed) {
      return
    }
    callHook(vm, 'beforeDestroy');
    vm._isBeingDestroyed = true;
    // remove self from parent
    var parent = vm.$parent;
    if (parent && !parent._isBeingDestroyed && !vm.$options.abstract) {
      remove(parent.$children, vm);
    }
    // teardown watchers
    if (vm._watcher) {
      vm._watcher.teardown();
    }
    var i = vm._watchers.length;
    while (i--) {
      vm._watchers[i].teardown();
    }
    // remove reference from data ob
    // frozen object may not have observer.
    if (vm._data.__ob__) {
      vm._data.__ob__.vmCount--;
    }
    // call the last hook...
    vm._isDestroyed = true;
    // invoke destroy hooks on current rendered tree
    vm.__patch__(vm._vnode, null);
    // fire destroyed hook
    callHook(vm, 'destroyed');
    // turn off all instance listeners.
    vm.$off();
    // remove __vue__ reference
    if (vm.$el) {
      vm.$el.__vue__ = null;
    }
  };
}

function mountComponent (
  vm,
  el,
  hydrating
) {
  vm.$el = el;
  if (!vm.$options.render) {
    vm.$options.render = createEmptyVNode;
    if (false) {
      /* istanbul ignore if */
      if ((vm.$options.template && vm.$options.template.charAt(0) !== '#') ||
        vm.$options.el || el) {
        warn(
          'You are using the runtime-only build of Vue where the template ' +
          'compiler is not available. Either pre-compile the templates into ' +
          'render functions, or use the compiler-included build.',
          vm
        );
      } else {
        warn(
          'Failed to mount component: template or render function not defined.',
          vm
        );
      }
    }
  }
  callHook(vm, 'beforeMount');

  var updateComponent;
  /* istanbul ignore if */
  if (false) {
    updateComponent = function () {
      var name = vm._name;
      var id = vm._uid;
      var startTag = "vue-perf-start:" + id;
      var endTag = "vue-perf-end:" + id;

      mark(startTag);
      var vnode = vm._render();
      mark(endTag);
      measure((name + " render"), startTag, endTag);

      mark(startTag);
      vm._update(vnode, hydrating);
      mark(endTag);
      measure((name + " patch"), startTag, endTag);
    };
  } else {
    updateComponent = function () {
      vm._update(vm._render(), hydrating);
    };
  }

  vm._watcher = new Watcher(vm, updateComponent, noop);
  hydrating = false;

  // manually mounted instance, call mounted on self
  // mounted is called for render-created child components in its inserted hook
  if (vm.$vnode == null) {
    vm._isMounted = true;
    callHook(vm, 'mounted');
  }
  return vm
}

function updateChildComponent (
  vm,
  propsData,
  listeners,
  parentVnode,
  renderChildren
) {
  if (false) {
    isUpdatingChildComponent = true;
  }

  // determine whether component has slot children
  // we need to do this before overwriting $options._renderChildren
  var hasChildren = !!(
    renderChildren ||               // has new static slots
    vm.$options._renderChildren ||  // has old static slots
    parentVnode.data.scopedSlots || // has new scoped slots
    vm.$scopedSlots !== emptyObject // has old scoped slots
  );

  vm.$options._parentVnode = parentVnode;
  vm.$vnode = parentVnode; // update vm's placeholder node without re-render

  if (vm._vnode) { // update child tree's parent
    vm._vnode.parent = parentVnode;
  }
  vm.$options._renderChildren = renderChildren;

  // update $attrs and $listensers hash
  // these are also reactive so they may trigger child update if the child
  // used them during render
  vm.$attrs = parentVnode.data && parentVnode.data.attrs;
  vm.$listeners = listeners;

  // update props
  if (propsData && vm.$options.props) {
    observerState.shouldConvert = false;
    var props = vm._props;
    var propKeys = vm.$options._propKeys || [];
    for (var i = 0; i < propKeys.length; i++) {
      var key = propKeys[i];
      props[key] = validateProp(key, vm.$options.props, propsData, vm);
    }
    observerState.shouldConvert = true;
    // keep a copy of raw propsData
    vm.$options.propsData = propsData;
  }

  // update listeners
  if (listeners) {
    var oldListeners = vm.$options._parentListeners;
    vm.$options._parentListeners = listeners;
    updateComponentListeners(vm, listeners, oldListeners);
  }
  // resolve slots + force update if has children
  if (hasChildren) {
    vm.$slots = resolveSlots(renderChildren, parentVnode.context);
    vm.$forceUpdate();
  }

  if (false) {
    isUpdatingChildComponent = false;
  }
}

function isInInactiveTree (vm) {
  while (vm && (vm = vm.$parent)) {
    if (vm._inactive) { return true }
  }
  return false
}

function activateChildComponent (vm, direct) {
  if (direct) {
    vm._directInactive = false;
    if (isInInactiveTree(vm)) {
      return
    }
  } else if (vm._directInactive) {
    return
  }
  if (vm._inactive || vm._inactive === null) {
    vm._inactive = false;
    for (var i = 0; i < vm.$children.length; i++) {
      activateChildComponent(vm.$children[i]);
    }
    callHook(vm, 'activated');
  }
}

function deactivateChildComponent (vm, direct) {
  if (direct) {
    vm._directInactive = true;
    if (isInInactiveTree(vm)) {
      return
    }
  }
  if (!vm._inactive) {
    vm._inactive = true;
    for (var i = 0; i < vm.$children.length; i++) {
      deactivateChildComponent(vm.$children[i]);
    }
    callHook(vm, 'deactivated');
  }
}

function callHook (vm, hook) {
  var handlers = vm.$options[hook];
  if (handlers) {
    for (var i = 0, j = handlers.length; i < j; i++) {
      try {
        handlers[i].call(vm);
      } catch (e) {
        handleError(e, vm, (hook + " hook"));
      }
    }
  }
  if (vm._hasHookEvent) {
    vm.$emit('hook:' + hook);
  }
}

/*  */


var MAX_UPDATE_COUNT = 100;

var queue = [];
var activatedChildren = [];
var has = {};
var circular = {};
var waiting = false;
var flushing = false;
var index = 0;

/**
 * Reset the scheduler's state.
 */
function resetSchedulerState () {
  index = queue.length = activatedChildren.length = 0;
  has = {};
  if (false) {
    circular = {};
  }
  waiting = flushing = false;
}

/**
 * Flush both queues and run the watchers.
 */
function flushSchedulerQueue () {
  flushing = true;
  var watcher, id;

  // Sort queue before flush.
  // This ensures that:
  // 1. Components are updated from parent to child. (because parent is always
  //    created before the child)
  // 2. A component's user watchers are run before its render watcher (because
  //    user watchers are created before the render watcher)
  // 3. If a component is destroyed during a parent component's watcher run,
  //    its watchers can be skipped.
  queue.sort(function (a, b) { return a.id - b.id; });

  // do not cache length because more watchers might be pushed
  // as we run existing watchers
  for (index = 0; index < queue.length; index++) {
    watcher = queue[index];
    id = watcher.id;
    has[id] = null;
    watcher.run();
    // in dev build, check and stop circular updates.
    if (false) {
      circular[id] = (circular[id] || 0) + 1;
      if (circular[id] > MAX_UPDATE_COUNT) {
        warn(
          'You may have an infinite update loop ' + (
            watcher.user
              ? ("in watcher with expression \"" + (watcher.expression) + "\"")
              : "in a component render function."
          ),
          watcher.vm
        );
        break
      }
    }
  }

  // keep copies of post queues before resetting state
  var activatedQueue = activatedChildren.slice();
  var updatedQueue = queue.slice();

  resetSchedulerState();

  // call component updated and activated hooks
  callActivatedHooks(activatedQueue);
  callUpdatedHooks(updatedQueue);

  // devtool hook
  /* istanbul ignore if */
  if (devtools && config.devtools) {
    devtools.emit('flush');
  }
}

function callUpdatedHooks (queue) {
  var i = queue.length;
  while (i--) {
    var watcher = queue[i];
    var vm = watcher.vm;
    if (vm._watcher === watcher && vm._isMounted) {
      callHook(vm, 'updated');
    }
  }
}

/**
 * Queue a kept-alive component that was activated during patch.
 * The queue will be processed after the entire tree has been patched.
 */
function queueActivatedComponent (vm) {
  // setting _inactive to false here so that a render function can
  // rely on checking whether it's in an inactive tree (e.g. router-view)
  vm._inactive = false;
  activatedChildren.push(vm);
}

function callActivatedHooks (queue) {
  for (var i = 0; i < queue.length; i++) {
    queue[i]._inactive = true;
    activateChildComponent(queue[i], true /* true */);
  }
}

/**
 * Push a watcher into the watcher queue.
 * Jobs with duplicate IDs will be skipped unless it's
 * pushed when the queue is being flushed.
 */
function queueWatcher (watcher) {
  var id = watcher.id;
  if (has[id] == null) {
    has[id] = true;
    if (!flushing) {
      queue.push(watcher);
    } else {
      // if already flushing, splice the watcher based on its id
      // if already past its id, it will be run next immediately.
      var i = queue.length - 1;
      while (i > index && queue[i].id > watcher.id) {
        i--;
      }
      queue.splice(i + 1, 0, watcher);
    }
    // queue the flush
    if (!waiting) {
      waiting = true;
      nextTick(flushSchedulerQueue);
    }
  }
}

/*  */

var uid$2 = 0;

/**
 * A watcher parses an expression, collects dependencies,
 * and fires callback when the expression value changes.
 * This is used for both the $watch() api and directives.
 */
var Watcher = function Watcher (
  vm,
  expOrFn,
  cb,
  options
) {
  this.vm = vm;
  vm._watchers.push(this);
  // options
  if (options) {
    this.deep = !!options.deep;
    this.user = !!options.user;
    this.lazy = !!options.lazy;
    this.sync = !!options.sync;
  } else {
    this.deep = this.user = this.lazy = this.sync = false;
  }
  this.cb = cb;
  this.id = ++uid$2; // uid for batching
  this.active = true;
  this.dirty = this.lazy; // for lazy watchers
  this.deps = [];
  this.newDeps = [];
  this.depIds = new _Set();
  this.newDepIds = new _Set();
  this.expression =  false
    ? expOrFn.toString()
    : '';
  // parse expression for getter
  if (typeof expOrFn === 'function') {
    this.getter = expOrFn;
  } else {
    this.getter = parsePath(expOrFn);
    if (!this.getter) {
      this.getter = function () {};
      "production" !== 'production' && warn(
        "Failed watching path: \"" + expOrFn + "\" " +
        'Watcher only accepts simple dot-delimited paths. ' +
        'For full control, use a function instead.',
        vm
      );
    }
  }
  this.value = this.lazy
    ? undefined
    : this.get();
};

/**
 * Evaluate the getter, and re-collect dependencies.
 */
Watcher.prototype.get = function get () {
  pushTarget(this);
  var value;
  var vm = this.vm;
  try {
    value = this.getter.call(vm, vm);
  } catch (e) {
    if (this.user) {
      handleError(e, vm, ("getter for watcher \"" + (this.expression) + "\""));
    } else {
      throw e
    }
  } finally {
    // "touch" every property so they are all tracked as
    // dependencies for deep watching
    if (this.deep) {
      traverse(value);
    }
    popTarget();
    this.cleanupDeps();
  }
  return value
};

/**
 * Add a dependency to this directive.
 */
Watcher.prototype.addDep = function addDep (dep) {
  var id = dep.id;
  if (!this.newDepIds.has(id)) {
    this.newDepIds.add(id);
    this.newDeps.push(dep);
    if (!this.depIds.has(id)) {
      dep.addSub(this);
    }
  }
};

/**
 * Clean up for dependency collection.
 */
Watcher.prototype.cleanupDeps = function cleanupDeps () {
    var this$1 = this;

  var i = this.deps.length;
  while (i--) {
    var dep = this$1.deps[i];
    if (!this$1.newDepIds.has(dep.id)) {
      dep.removeSub(this$1);
    }
  }
  var tmp = this.depIds;
  this.depIds = this.newDepIds;
  this.newDepIds = tmp;
  this.newDepIds.clear();
  tmp = this.deps;
  this.deps = this.newDeps;
  this.newDeps = tmp;
  this.newDeps.length = 0;
};

/**
 * Subscriber interface.
 * Will be called when a dependency changes.
 */
Watcher.prototype.update = function update () {
  /* istanbul ignore else */
  if (this.lazy) {
    this.dirty = true;
  } else if (this.sync) {
    this.run();
  } else {
    queueWatcher(this);
  }
};

/**
 * Scheduler job interface.
 * Will be called by the scheduler.
 */
Watcher.prototype.run = function run () {
  if (this.active) {
    var value = this.get();
    if (
      value !== this.value ||
      // Deep watchers and watchers on Object/Arrays should fire even
      // when the value is the same, because the value may
      // have mutated.
      isObject(value) ||
      this.deep
    ) {
      // set new value
      var oldValue = this.value;
      this.value = value;
      if (this.user) {
        try {
          this.cb.call(this.vm, value, oldValue);
        } catch (e) {
          handleError(e, this.vm, ("callback for watcher \"" + (this.expression) + "\""));
        }
      } else {
        this.cb.call(this.vm, value, oldValue);
      }
    }
  }
};

/**
 * Evaluate the value of the watcher.
 * This only gets called for lazy watchers.
 */
Watcher.prototype.evaluate = function evaluate () {
  this.value = this.get();
  this.dirty = false;
};

/**
 * Depend on all deps collected by this watcher.
 */
Watcher.prototype.depend = function depend () {
    var this$1 = this;

  var i = this.deps.length;
  while (i--) {
    this$1.deps[i].depend();
  }
};

/**
 * Remove self from all dependencies' subscriber list.
 */
Watcher.prototype.teardown = function teardown () {
    var this$1 = this;

  if (this.active) {
    // remove self from vm's watcher list
    // this is a somewhat expensive operation so we skip it
    // if the vm is being destroyed.
    if (!this.vm._isBeingDestroyed) {
      remove(this.vm._watchers, this);
    }
    var i = this.deps.length;
    while (i--) {
      this$1.deps[i].removeSub(this$1);
    }
    this.active = false;
  }
};

/**
 * Recursively traverse an object to evoke all converted
 * getters, so that every nested property inside the object
 * is collected as a "deep" dependency.
 */
var seenObjects = new _Set();
function traverse (val) {
  seenObjects.clear();
  _traverse(val, seenObjects);
}

function _traverse (val, seen) {
  var i, keys;
  var isA = Array.isArray(val);
  if ((!isA && !isObject(val)) || !Object.isExtensible(val)) {
    return
  }
  if (val.__ob__) {
    var depId = val.__ob__.dep.id;
    if (seen.has(depId)) {
      return
    }
    seen.add(depId);
  }
  if (isA) {
    i = val.length;
    while (i--) { _traverse(val[i], seen); }
  } else {
    keys = Object.keys(val);
    i = keys.length;
    while (i--) { _traverse(val[keys[i]], seen); }
  }
}

/*  */

var sharedPropertyDefinition = {
  enumerable: true,
  configurable: true,
  get: noop,
  set: noop
};

function proxy (target, sourceKey, key) {
  sharedPropertyDefinition.get = function proxyGetter () {
    return this[sourceKey][key]
  };
  sharedPropertyDefinition.set = function proxySetter (val) {
    this[sourceKey][key] = val;
  };
  Object.defineProperty(target, key, sharedPropertyDefinition);
}

function initState (vm) {
  vm._watchers = [];
  var opts = vm.$options;
  if (opts.props) { initProps(vm, opts.props); }
  if (opts.methods) { initMethods(vm, opts.methods); }
  if (opts.data) {
    initData(vm);
  } else {
    observe(vm._data = {}, true /* asRootData */);
  }
  if (opts.computed) { initComputed(vm, opts.computed); }
  if (opts.watch && opts.watch !== nativeWatch) {
    initWatch(vm, opts.watch);
  }
}

function checkOptionType (vm, name) {
  var option = vm.$options[name];
  if (!isPlainObject(option)) {
    warn(
      ("component option \"" + name + "\" should be an object."),
      vm
    );
  }
}

function initProps (vm, propsOptions) {
  var propsData = vm.$options.propsData || {};
  var props = vm._props = {};
  // cache prop keys so that future props updates can iterate using Array
  // instead of dynamic object key enumeration.
  var keys = vm.$options._propKeys = [];
  var isRoot = !vm.$parent;
  // root instance props should be converted
  observerState.shouldConvert = isRoot;
  var loop = function ( key ) {
    keys.push(key);
    var value = validateProp(key, propsOptions, propsData, vm);
    /* istanbul ignore else */
    if (false) {
      if (isReservedAttribute(key) || config.isReservedAttr(key)) {
        warn(
          ("\"" + key + "\" is a reserved attribute and cannot be used as component prop."),
          vm
        );
      }
      defineReactive$$1(props, key, value, function () {
        if (vm.$parent && !isUpdatingChildComponent) {
          warn(
            "Avoid mutating a prop directly since the value will be " +
            "overwritten whenever the parent component re-renders. " +
            "Instead, use a data or computed property based on the prop's " +
            "value. Prop being mutated: \"" + key + "\"",
            vm
          );
        }
      });
    } else {
      defineReactive$$1(props, key, value);
    }
    // static props are already proxied on the component's prototype
    // during Vue.extend(). We only need to proxy props defined at
    // instantiation here.
    if (!(key in vm)) {
      proxy(vm, "_props", key);
    }
  };

  for (var key in propsOptions) loop( key );
  observerState.shouldConvert = true;
}

function initData (vm) {
  var data = vm.$options.data;
  data = vm._data = typeof data === 'function'
    ? getData(data, vm)
    : data || {};
  if (!isPlainObject(data)) {
    data = {};
    "production" !== 'production' && warn(
      'data functions should return an object:\n' +
      'https://vuejs.org/v2/guide/components.html#data-Must-Be-a-Function',
      vm
    );
  }
  // proxy data on instance
  var keys = Object.keys(data);
  var props = vm.$options.props;
  var methods = vm.$options.methods;
  var i = keys.length;
  while (i--) {
    var key = keys[i];
    if (false) {
      if (methods && hasOwn(methods, key)) {
        warn(
          ("method \"" + key + "\" has already been defined as a data property."),
          vm
        );
      }
    }
    if (props && hasOwn(props, key)) {
      "production" !== 'production' && warn(
        "The data property \"" + key + "\" is already declared as a prop. " +
        "Use prop default value instead.",
        vm
      );
    } else if (!isReserved(key)) {
      proxy(vm, "_data", key);
    }
  }
  // observe data
  observe(data, true /* asRootData */);
}

function getData (data, vm) {
  try {
    return data.call(vm)
  } catch (e) {
    handleError(e, vm, "data()");
    return {}
  }
}

var computedWatcherOptions = { lazy: true };

function initComputed (vm, computed) {
  "production" !== 'production' && checkOptionType(vm, 'computed');
  var watchers = vm._computedWatchers = Object.create(null);

  for (var key in computed) {
    var userDef = computed[key];
    var getter = typeof userDef === 'function' ? userDef : userDef.get;
    if (false) {
      warn(
        ("Getter is missing for computed property \"" + key + "\"."),
        vm
      );
    }
    // create internal watcher for the computed property.
    watchers[key] = new Watcher(vm, getter || noop, noop, computedWatcherOptions);

    // component-defined computed properties are already defined on the
    // component prototype. We only need to define computed properties defined
    // at instantiation here.
    if (!(key in vm)) {
      defineComputed(vm, key, userDef);
    } else if (false) {
      if (key in vm.$data) {
        warn(("The computed property \"" + key + "\" is already defined in data."), vm);
      } else if (vm.$options.props && key in vm.$options.props) {
        warn(("The computed property \"" + key + "\" is already defined as a prop."), vm);
      }
    }
  }
}

function defineComputed (target, key, userDef) {
  if (typeof userDef === 'function') {
    sharedPropertyDefinition.get = createComputedGetter(key);
    sharedPropertyDefinition.set = noop;
  } else {
    sharedPropertyDefinition.get = userDef.get
      ? userDef.cache !== false
        ? createComputedGetter(key)
        : userDef.get
      : noop;
    sharedPropertyDefinition.set = userDef.set
      ? userDef.set
      : noop;
  }
  if (false) {
    sharedPropertyDefinition.set = function () {
      warn(
        ("Computed property \"" + key + "\" was assigned to but it has no setter."),
        this
      );
    };
  }
  Object.defineProperty(target, key, sharedPropertyDefinition);
}

function createComputedGetter (key) {
  return function computedGetter () {
    var watcher = this._computedWatchers && this._computedWatchers[key];
    if (watcher) {
      if (watcher.dirty) {
        watcher.evaluate();
      }
      if (Dep.target) {
        watcher.depend();
      }
      return watcher.value
    }
  }
}

function initMethods (vm, methods) {
  "production" !== 'production' && checkOptionType(vm, 'methods');
  var props = vm.$options.props;
  for (var key in methods) {
    vm[key] = methods[key] == null ? noop : bind(methods[key], vm);
    if (false) {
      if (methods[key] == null) {
        warn(
          "method \"" + key + "\" has an undefined value in the component definition. " +
          "Did you reference the function correctly?",
          vm
        );
      }
      if (props && hasOwn(props, key)) {
        warn(
          ("method \"" + key + "\" has already been defined as a prop."),
          vm
        );
      }
    }
  }
}

function initWatch (vm, watch) {
  "production" !== 'production' && checkOptionType(vm, 'watch');
  for (var key in watch) {
    var handler = watch[key];
    if (Array.isArray(handler)) {
      for (var i = 0; i < handler.length; i++) {
        createWatcher(vm, key, handler[i]);
      }
    } else {
      createWatcher(vm, key, handler);
    }
  }
}

function createWatcher (
  vm,
  keyOrFn,
  handler,
  options
) {
  if (isPlainObject(handler)) {
    options = handler;
    handler = handler.handler;
  }
  if (typeof handler === 'string') {
    handler = vm[handler];
  }
  return vm.$watch(keyOrFn, handler, options)
}

function stateMixin (Vue) {
  // flow somehow has problems with directly declared definition object
  // when using Object.defineProperty, so we have to procedurally build up
  // the object here.
  var dataDef = {};
  dataDef.get = function () { return this._data };
  var propsDef = {};
  propsDef.get = function () { return this._props };
  if (false) {
    dataDef.set = function (newData) {
      warn(
        'Avoid replacing instance root $data. ' +
        'Use nested data properties instead.',
        this
      );
    };
    propsDef.set = function () {
      warn("$props is readonly.", this);
    };
  }
  Object.defineProperty(Vue.prototype, '$data', dataDef);
  Object.defineProperty(Vue.prototype, '$props', propsDef);

  Vue.prototype.$set = set;
  Vue.prototype.$delete = del;

  Vue.prototype.$watch = function (
    expOrFn,
    cb,
    options
  ) {
    var vm = this;
    if (isPlainObject(cb)) {
      return createWatcher(vm, expOrFn, cb, options)
    }
    options = options || {};
    options.user = true;
    var watcher = new Watcher(vm, expOrFn, cb, options);
    if (options.immediate) {
      cb.call(vm, watcher.value);
    }
    return function unwatchFn () {
      watcher.teardown();
    }
  };
}

/*  */

function initProvide (vm) {
  var provide = vm.$options.provide;
  if (provide) {
    vm._provided = typeof provide === 'function'
      ? provide.call(vm)
      : provide;
  }
}

function initInjections (vm) {
  var result = resolveInject(vm.$options.inject, vm);
  if (result) {
    observerState.shouldConvert = false;
    Object.keys(result).forEach(function (key) {
      /* istanbul ignore else */
      if (false) {
        defineReactive$$1(vm, key, result[key], function () {
          warn(
            "Avoid mutating an injected value directly since the changes will be " +
            "overwritten whenever the provided component re-renders. " +
            "injection being mutated: \"" + key + "\"",
            vm
          );
        });
      } else {
        defineReactive$$1(vm, key, result[key]);
      }
    });
    observerState.shouldConvert = true;
  }
}

function resolveInject (inject, vm) {
  if (inject) {
    // inject is :any because flow is not smart enough to figure out cached
    var result = Object.create(null);
    var keys = hasSymbol
        ? Reflect.ownKeys(inject)
        : Object.keys(inject);

    for (var i = 0; i < keys.length; i++) {
      var key = keys[i];
      var provideKey = inject[key];
      var source = vm;
      while (source) {
        if (source._provided && provideKey in source._provided) {
          result[key] = source._provided[provideKey];
          break
        }
        source = source.$parent;
      }
      if (false) {
        warn(("Injection \"" + key + "\" not found"), vm);
      }
    }
    return result
  }
}

/*  */

function createFunctionalComponent (
  Ctor,
  propsData,
  data,
  context,
  children
) {
  var props = {};
  var propOptions = Ctor.options.props;
  if (isDef(propOptions)) {
    for (var key in propOptions) {
      props[key] = validateProp(key, propOptions, propsData || {});
    }
  } else {
    if (isDef(data.attrs)) { mergeProps(props, data.attrs); }
    if (isDef(data.props)) { mergeProps(props, data.props); }
  }
  // ensure the createElement function in functional components
  // gets a unique context - this is necessary for correct named slot check
  var _context = Object.create(context);
  var h = function (a, b, c, d) { return createElement(_context, a, b, c, d, true); };
  var vnode = Ctor.options.render.call(null, h, {
    data: data,
    props: props,
    children: children,
    parent: context,
    listeners: data.on || {},
    injections: resolveInject(Ctor.options.inject, context),
    slots: function () { return resolveSlots(children, context); }
  });
  if (vnode instanceof VNode) {
    vnode.functionalContext = context;
    vnode.functionalOptions = Ctor.options;
    if (data.slot) {
      (vnode.data || (vnode.data = {})).slot = data.slot;
    }
  }
  return vnode
}

function mergeProps (to, from) {
  for (var key in from) {
    to[camelize(key)] = from[key];
  }
}

/*  */

// hooks to be invoked on component VNodes during patch
var componentVNodeHooks = {
  init: function init (
    vnode,
    hydrating,
    parentElm,
    refElm
  ) {
    if (!vnode.componentInstance || vnode.componentInstance._isDestroyed) {
      var child = vnode.componentInstance = createComponentInstanceForVnode(
        vnode,
        activeInstance,
        parentElm,
        refElm
      );
      child.$mount(hydrating ? vnode.elm : undefined, hydrating);
    } else if (vnode.data.keepAlive) {
      // kept-alive components, treat as a patch
      var mountedNode = vnode; // work around flow
      componentVNodeHooks.prepatch(mountedNode, mountedNode);
    }
  },

  prepatch: function prepatch (oldVnode, vnode) {
    var options = vnode.componentOptions;
    var child = vnode.componentInstance = oldVnode.componentInstance;
    updateChildComponent(
      child,
      options.propsData, // updated props
      options.listeners, // updated listeners
      vnode, // new parent vnode
      options.children // new children
    );
  },

  insert: function insert (vnode) {
    var context = vnode.context;
    var componentInstance = vnode.componentInstance;
    if (!componentInstance._isMounted) {
      componentInstance._isMounted = true;
      callHook(componentInstance, 'mounted');
    }
    if (vnode.data.keepAlive) {
      if (context._isMounted) {
        // vue-router#1212
        // During updates, a kept-alive component's child components may
        // change, so directly walking the tree here may call activated hooks
        // on incorrect children. Instead we push them into a queue which will
        // be processed after the whole patch process ended.
        queueActivatedComponent(componentInstance);
      } else {
        activateChildComponent(componentInstance, true /* direct */);
      }
    }
  },

  destroy: function destroy (vnode) {
    var componentInstance = vnode.componentInstance;
    if (!componentInstance._isDestroyed) {
      if (!vnode.data.keepAlive) {
        componentInstance.$destroy();
      } else {
        deactivateChildComponent(componentInstance, true /* direct */);
      }
    }
  }
};

var hooksToMerge = Object.keys(componentVNodeHooks);

function createComponent (
  Ctor,
  data,
  context,
  children,
  tag
) {
  if (isUndef(Ctor)) {
    return
  }

  var baseCtor = context.$options._base;

  // plain options object: turn it into a constructor
  if (isObject(Ctor)) {
    Ctor = baseCtor.extend(Ctor);
  }

  // if at this stage it's not a constructor or an async component factory,
  // reject.
  if (typeof Ctor !== 'function') {
    if (false) {
      warn(("Invalid Component definition: " + (String(Ctor))), context);
    }
    return
  }

  // async component
  var asyncFactory;
  if (isUndef(Ctor.cid)) {
    asyncFactory = Ctor;
    Ctor = resolveAsyncComponent(asyncFactory, baseCtor, context);
    if (Ctor === undefined) {
      // return a placeholder node for async component, which is rendered
      // as a comment node but preserves all the raw information for the node.
      // the information will be used for async server-rendering and hydration.
      return createAsyncPlaceholder(
        asyncFactory,
        data,
        context,
        children,
        tag
      )
    }
  }

  data = data || {};

  // resolve constructor options in case global mixins are applied after
  // component constructor creation
  resolveConstructorOptions(Ctor);

  // transform component v-model data into props & events
  if (isDef(data.model)) {
    transformModel(Ctor.options, data);
  }

  // extract props
  var propsData = extractPropsFromVNodeData(data, Ctor, tag);

  // functional component
  if (isTrue(Ctor.options.functional)) {
    return createFunctionalComponent(Ctor, propsData, data, context, children)
  }

  // extract listeners, since these needs to be treated as
  // child component listeners instead of DOM listeners
  var listeners = data.on;
  // replace with listeners with .native modifier
  // so it gets processed during parent component patch.
  data.on = data.nativeOn;

  if (isTrue(Ctor.options.abstract)) {
    // abstract components do not keep anything
    // other than props & listeners & slot

    // work around flow
    var slot = data.slot;
    data = {};
    if (slot) {
      data.slot = slot;
    }
  }

  // merge component management hooks onto the placeholder node
  mergeHooks(data);

  // return a placeholder vnode
  var name = Ctor.options.name || tag;
  var vnode = new VNode(
    ("vue-component-" + (Ctor.cid) + (name ? ("-" + name) : '')),
    data, undefined, undefined, undefined, context,
    { Ctor: Ctor, propsData: propsData, listeners: listeners, tag: tag, children: children },
    asyncFactory
  );
  return vnode
}

function createComponentInstanceForVnode (
  vnode, // we know it's MountedComponentVNode but flow doesn't
  parent, // activeInstance in lifecycle state
  parentElm,
  refElm
) {
  var vnodeComponentOptions = vnode.componentOptions;
  var options = {
    _isComponent: true,
    parent: parent,
    propsData: vnodeComponentOptions.propsData,
    _componentTag: vnodeComponentOptions.tag,
    _parentVnode: vnode,
    _parentListeners: vnodeComponentOptions.listeners,
    _renderChildren: vnodeComponentOptions.children,
    _parentElm: parentElm || null,
    _refElm: refElm || null
  };
  // check inline-template render functions
  var inlineTemplate = vnode.data.inlineTemplate;
  if (isDef(inlineTemplate)) {
    options.render = inlineTemplate.render;
    options.staticRenderFns = inlineTemplate.staticRenderFns;
  }
  return new vnodeComponentOptions.Ctor(options)
}

function mergeHooks (data) {
  if (!data.hook) {
    data.hook = {};
  }
  for (var i = 0; i < hooksToMerge.length; i++) {
    var key = hooksToMerge[i];
    var fromParent = data.hook[key];
    var ours = componentVNodeHooks[key];
    data.hook[key] = fromParent ? mergeHook$1(ours, fromParent) : ours;
  }
}

function mergeHook$1 (one, two) {
  return function (a, b, c, d) {
    one(a, b, c, d);
    two(a, b, c, d);
  }
}

// transform component v-model info (value and callback) into
// prop and event handler respectively.
function transformModel (options, data) {
  var prop = (options.model && options.model.prop) || 'value';
  var event = (options.model && options.model.event) || 'input';(data.props || (data.props = {}))[prop] = data.model.value;
  var on = data.on || (data.on = {});
  if (isDef(on[event])) {
    on[event] = [data.model.callback].concat(on[event]);
  } else {
    on[event] = data.model.callback;
  }
}

/*  */

var SIMPLE_NORMALIZE = 1;
var ALWAYS_NORMALIZE = 2;

// wrapper function for providing a more flexible interface
// without getting yelled at by flow
function createElement (
  context,
  tag,
  data,
  children,
  normalizationType,
  alwaysNormalize
) {
  if (Array.isArray(data) || isPrimitive(data)) {
    normalizationType = children;
    children = data;
    data = undefined;
  }
  if (isTrue(alwaysNormalize)) {
    normalizationType = ALWAYS_NORMALIZE;
  }
  return _createElement(context, tag, data, children, normalizationType)
}

function _createElement (
  context,
  tag,
  data,
  children,
  normalizationType
) {
  if (isDef(data) && isDef((data).__ob__)) {
    "production" !== 'production' && warn(
      "Avoid using observed data object as vnode data: " + (JSON.stringify(data)) + "\n" +
      'Always create fresh vnode data objects in each render!',
      context
    );
    return createEmptyVNode()
  }
  // object syntax in v-bind
  if (isDef(data) && isDef(data.is)) {
    tag = data.is;
  }
  if (!tag) {
    // in case of component :is set to falsy value
    return createEmptyVNode()
  }
  // warn against non-primitive key
  if (false
  ) {
    warn(
      'Avoid using non-primitive value as key, ' +
      'use string/number value instead.',
      context
    );
  }
  // support single function children as default scoped slot
  if (Array.isArray(children) &&
    typeof children[0] === 'function'
  ) {
    data = data || {};
    data.scopedSlots = { default: children[0] };
    children.length = 0;
  }
  if (normalizationType === ALWAYS_NORMALIZE) {
    children = normalizeChildren(children);
  } else if (normalizationType === SIMPLE_NORMALIZE) {
    children = simpleNormalizeChildren(children);
  }
  var vnode, ns;
  if (typeof tag === 'string') {
    var Ctor;
    ns = config.getTagNamespace(tag);
    if (config.isReservedTag(tag)) {
      // platform built-in elements
      vnode = new VNode(
        config.parsePlatformTagName(tag), data, children,
        undefined, undefined, context
      );
    } else if (isDef(Ctor = resolveAsset(context.$options, 'components', tag))) {
      // component
      vnode = createComponent(Ctor, data, context, children, tag);
    } else {
      // unknown or unlisted namespaced elements
      // check at runtime because it may get assigned a namespace when its
      // parent normalizes children
      vnode = new VNode(
        tag, data, children,
        undefined, undefined, context
      );
    }
  } else {
    // direct component options / constructor
    vnode = createComponent(tag, data, context, children);
  }
  if (isDef(vnode)) {
    if (ns) { applyNS(vnode, ns); }
    return vnode
  } else {
    return createEmptyVNode()
  }
}

function applyNS (vnode, ns) {
  vnode.ns = ns;
  if (vnode.tag === 'foreignObject') {
    // use default namespace inside foreignObject
    return
  }
  if (isDef(vnode.children)) {
    for (var i = 0, l = vnode.children.length; i < l; i++) {
      var child = vnode.children[i];
      if (isDef(child.tag) && isUndef(child.ns)) {
        applyNS(child, ns);
      }
    }
  }
}

/*  */

/**
 * Runtime helper for rendering v-for lists.
 */
function renderList (
  val,
  render
) {
  var ret, i, l, keys, key;
  if (Array.isArray(val) || typeof val === 'string') {
    ret = new Array(val.length);
    for (i = 0, l = val.length; i < l; i++) {
      ret[i] = render(val[i], i);
    }
  } else if (typeof val === 'number') {
    ret = new Array(val);
    for (i = 0; i < val; i++) {
      ret[i] = render(i + 1, i);
    }
  } else if (isObject(val)) {
    keys = Object.keys(val);
    ret = new Array(keys.length);
    for (i = 0, l = keys.length; i < l; i++) {
      key = keys[i];
      ret[i] = render(val[key], key, i);
    }
  }
  if (isDef(ret)) {
    (ret)._isVList = true;
  }
  return ret
}

/*  */

/**
 * Runtime helper for rendering <slot>
 */
function renderSlot (
  name,
  fallback,
  props,
  bindObject
) {
  var scopedSlotFn = this.$scopedSlots[name];
  if (scopedSlotFn) { // scoped slot
    props = props || {};
    if (bindObject) {
      props = extend(extend({}, bindObject), props);
    }
    return scopedSlotFn(props) || fallback
  } else {
    var slotNodes = this.$slots[name];
    // warn duplicate slot usage
    if (slotNodes && "production" !== 'production') {
      slotNodes._rendered && warn(
        "Duplicate presence of slot \"" + name + "\" found in the same render tree " +
        "- this will likely cause render errors.",
        this
      );
      slotNodes._rendered = true;
    }
    return slotNodes || fallback
  }
}

/*  */

/**
 * Runtime helper for resolving filters
 */
function resolveFilter (id) {
  return resolveAsset(this.$options, 'filters', id, true) || identity
}

/*  */

/**
 * Runtime helper for checking keyCodes from config.
 */
function checkKeyCodes (
  eventKeyCode,
  key,
  builtInAlias
) {
  var keyCodes = config.keyCodes[key] || builtInAlias;
  if (Array.isArray(keyCodes)) {
    return keyCodes.indexOf(eventKeyCode) === -1
  } else {
    return keyCodes !== eventKeyCode
  }
}

/*  */

/**
 * Runtime helper for merging v-bind="object" into a VNode's data.
 */
function bindObjectProps (
  data,
  tag,
  value,
  asProp,
  isSync
) {
  if (value) {
    if (!isObject(value)) {
      "production" !== 'production' && warn(
        'v-bind without argument expects an Object or Array value',
        this
      );
    } else {
      if (Array.isArray(value)) {
        value = toObject(value);
      }
      var hash;
      var loop = function ( key ) {
        if (
          key === 'class' ||
          key === 'style' ||
          isReservedAttribute(key)
        ) {
          hash = data;
        } else {
          var type = data.attrs && data.attrs.type;
          hash = asProp || config.mustUseProp(tag, type, key)
            ? data.domProps || (data.domProps = {})
            : data.attrs || (data.attrs = {});
        }
        if (!(key in hash)) {
          hash[key] = value[key];

          if (isSync) {
            var on = data.on || (data.on = {});
            on[("update:" + key)] = function ($event) {
              value[key] = $event;
            };
          }
        }
      };

      for (var key in value) loop( key );
    }
  }
  return data
}

/*  */

/**
 * Runtime helper for rendering static trees.
 */
function renderStatic (
  index,
  isInFor
) {
  var tree = this._staticTrees[index];
  // if has already-rendered static tree and not inside v-for,
  // we can reuse the same tree by doing a shallow clone.
  if (tree && !isInFor) {
    return Array.isArray(tree)
      ? cloneVNodes(tree)
      : cloneVNode(tree)
  }
  // otherwise, render a fresh tree.
  tree = this._staticTrees[index] =
    this.$options.staticRenderFns[index].call(this._renderProxy);
  markStatic(tree, ("__static__" + index), false);
  return tree
}

/**
 * Runtime helper for v-once.
 * Effectively it means marking the node as static with a unique key.
 */
function markOnce (
  tree,
  index,
  key
) {
  markStatic(tree, ("__once__" + index + (key ? ("_" + key) : "")), true);
  return tree
}

function markStatic (
  tree,
  key,
  isOnce
) {
  if (Array.isArray(tree)) {
    for (var i = 0; i < tree.length; i++) {
      if (tree[i] && typeof tree[i] !== 'string') {
        markStaticNode(tree[i], (key + "_" + i), isOnce);
      }
    }
  } else {
    markStaticNode(tree, key, isOnce);
  }
}

function markStaticNode (node, key, isOnce) {
  node.isStatic = true;
  node.key = key;
  node.isOnce = isOnce;
}

/*  */

function bindObjectListeners (data, value) {
  if (value) {
    if (!isPlainObject(value)) {
      "production" !== 'production' && warn(
        'v-on without argument expects an Object value',
        this
      );
    } else {
      var on = data.on = data.on ? extend({}, data.on) : {};
      for (var key in value) {
        var existing = on[key];
        var ours = value[key];
        on[key] = existing ? [].concat(ours, existing) : ours;
      }
    }
  }
  return data
}

/*  */

function initRender (vm) {
  vm._vnode = null; // the root of the child tree
  vm._staticTrees = null;
  var parentVnode = vm.$vnode = vm.$options._parentVnode; // the placeholder node in parent tree
  var renderContext = parentVnode && parentVnode.context;
  vm.$slots = resolveSlots(vm.$options._renderChildren, renderContext);
  vm.$scopedSlots = emptyObject;
  // bind the createElement fn to this instance
  // so that we get proper render context inside it.
  // args order: tag, data, children, normalizationType, alwaysNormalize
  // internal version is used by render functions compiled from templates
  vm._c = function (a, b, c, d) { return createElement(vm, a, b, c, d, false); };
  // normalization is always applied for the public version, used in
  // user-written render functions.
  vm.$createElement = function (a, b, c, d) { return createElement(vm, a, b, c, d, true); };

  // $attrs & $listeners are exposed for easier HOC creation.
  // they need to be reactive so that HOCs using them are always updated
  var parentData = parentVnode && parentVnode.data;
  /* istanbul ignore else */
  if (false) {
    defineReactive$$1(vm, '$attrs', parentData && parentData.attrs, function () {
      !isUpdatingChildComponent && warn("$attrs is readonly.", vm);
    }, true);
    defineReactive$$1(vm, '$listeners', vm.$options._parentListeners, function () {
      !isUpdatingChildComponent && warn("$listeners is readonly.", vm);
    }, true);
  } else {
    defineReactive$$1(vm, '$attrs', parentData && parentData.attrs, null, true);
    defineReactive$$1(vm, '$listeners', vm.$options._parentListeners, null, true);
  }
}

function renderMixin (Vue) {
  Vue.prototype.$nextTick = function (fn) {
    return nextTick(fn, this)
  };

  Vue.prototype._render = function () {
    var vm = this;
    var ref = vm.$options;
    var render = ref.render;
    var staticRenderFns = ref.staticRenderFns;
    var _parentVnode = ref._parentVnode;

    if (vm._isMounted) {
      // clone slot nodes on re-renders
      for (var key in vm.$slots) {
        vm.$slots[key] = cloneVNodes(vm.$slots[key]);
      }
    }

    vm.$scopedSlots = (_parentVnode && _parentVnode.data.scopedSlots) || emptyObject;

    if (staticRenderFns && !vm._staticTrees) {
      vm._staticTrees = [];
    }
    // set parent vnode. this allows render functions to have access
    // to the data on the placeholder node.
    vm.$vnode = _parentVnode;
    // render self
    var vnode;
    try {
      vnode = render.call(vm._renderProxy, vm.$createElement);
    } catch (e) {
      handleError(e, vm, "render function");
      // return error render result,
      // or previous vnode to prevent render error causing blank component
      /* istanbul ignore else */
      if (false) {
        vnode = vm.$options.renderError
          ? vm.$options.renderError.call(vm._renderProxy, vm.$createElement, e)
          : vm._vnode;
      } else {
        vnode = vm._vnode;
      }
    }
    // return empty vnode in case the render function errored out
    if (!(vnode instanceof VNode)) {
      if (false) {
        warn(
          'Multiple root nodes returned from render function. Render function ' +
          'should return a single root node.',
          vm
        );
      }
      vnode = createEmptyVNode();
    }
    // set parent
    vnode.parent = _parentVnode;
    return vnode
  };

  // internal render helpers.
  // these are exposed on the instance prototype to reduce generated render
  // code size.
  Vue.prototype._o = markOnce;
  Vue.prototype._n = toNumber;
  Vue.prototype._s = toString;
  Vue.prototype._l = renderList;
  Vue.prototype._t = renderSlot;
  Vue.prototype._q = looseEqual;
  Vue.prototype._i = looseIndexOf;
  Vue.prototype._m = renderStatic;
  Vue.prototype._f = resolveFilter;
  Vue.prototype._k = checkKeyCodes;
  Vue.prototype._b = bindObjectProps;
  Vue.prototype._v = createTextVNode;
  Vue.prototype._e = createEmptyVNode;
  Vue.prototype._u = resolveScopedSlots;
  Vue.prototype._g = bindObjectListeners;
}

/*  */

var uid = 0;

function initMixin (Vue) {
  Vue.prototype._init = function (options) {
    var vm = this;
    // a uid
    vm._uid = uid++;

    var startTag, endTag;
    /* istanbul ignore if */
    if (false) {
      startTag = "vue-perf-init:" + (vm._uid);
      endTag = "vue-perf-end:" + (vm._uid);
      mark(startTag);
    }

    // a flag to avoid this being observed
    vm._isVue = true;
    // merge options
    if (options && options._isComponent) {
      // optimize internal component instantiation
      // since dynamic options merging is pretty slow, and none of the
      // internal component options needs special treatment.
      initInternalComponent(vm, options);
    } else {
      vm.$options = mergeOptions(
        resolveConstructorOptions(vm.constructor),
        options || {},
        vm
      );
    }
    /* istanbul ignore else */
    if (false) {
      initProxy(vm);
    } else {
      vm._renderProxy = vm;
    }
    // expose real self
    vm._self = vm;
    initLifecycle(vm);
    initEvents(vm);
    initRender(vm);
    callHook(vm, 'beforeCreate');
    initInjections(vm); // resolve injections before data/props
    initState(vm);
    initProvide(vm); // resolve provide after data/props
    callHook(vm, 'created');

    /* istanbul ignore if */
    if (false) {
      vm._name = formatComponentName(vm, false);
      mark(endTag);
      measure(((vm._name) + " init"), startTag, endTag);
    }

    if (vm.$options.el) {
      vm.$mount(vm.$options.el);
    }
  };
}

function initInternalComponent (vm, options) {
  var opts = vm.$options = Object.create(vm.constructor.options);
  // doing this because it's faster than dynamic enumeration.
  opts.parent = options.parent;
  opts.propsData = options.propsData;
  opts._parentVnode = options._parentVnode;
  opts._parentListeners = options._parentListeners;
  opts._renderChildren = options._renderChildren;
  opts._componentTag = options._componentTag;
  opts._parentElm = options._parentElm;
  opts._refElm = options._refElm;
  if (options.render) {
    opts.render = options.render;
    opts.staticRenderFns = options.staticRenderFns;
  }
}

function resolveConstructorOptions (Ctor) {
  var options = Ctor.options;
  if (Ctor.super) {
    var superOptions = resolveConstructorOptions(Ctor.super);
    var cachedSuperOptions = Ctor.superOptions;
    if (superOptions !== cachedSuperOptions) {
      // super option changed,
      // need to resolve new options.
      Ctor.superOptions = superOptions;
      // check if there are any late-modified/attached options (#4976)
      var modifiedOptions = resolveModifiedOptions(Ctor);
      // update base extend options
      if (modifiedOptions) {
        extend(Ctor.extendOptions, modifiedOptions);
      }
      options = Ctor.options = mergeOptions(superOptions, Ctor.extendOptions);
      if (options.name) {
        options.components[options.name] = Ctor;
      }
    }
  }
  return options
}

function resolveModifiedOptions (Ctor) {
  var modified;
  var latest = Ctor.options;
  var extended = Ctor.extendOptions;
  var sealed = Ctor.sealedOptions;
  for (var key in latest) {
    if (latest[key] !== sealed[key]) {
      if (!modified) { modified = {}; }
      modified[key] = dedupe(latest[key], extended[key], sealed[key]);
    }
  }
  return modified
}

function dedupe (latest, extended, sealed) {
  // compare latest and sealed to ensure lifecycle hooks won't be duplicated
  // between merges
  if (Array.isArray(latest)) {
    var res = [];
    sealed = Array.isArray(sealed) ? sealed : [sealed];
    extended = Array.isArray(extended) ? extended : [extended];
    for (var i = 0; i < latest.length; i++) {
      // push original options and not sealed options to exclude duplicated options
      if (extended.indexOf(latest[i]) >= 0 || sealed.indexOf(latest[i]) < 0) {
        res.push(latest[i]);
      }
    }
    return res
  } else {
    return latest
  }
}

function Vue$3 (options) {
  if (false
  ) {
    warn('Vue is a constructor and should be called with the `new` keyword');
  }
  this._init(options);
}

initMixin(Vue$3);
stateMixin(Vue$3);
eventsMixin(Vue$3);
lifecycleMixin(Vue$3);
renderMixin(Vue$3);

/*  */

function initUse (Vue) {
  Vue.use = function (plugin) {
    var installedPlugins = (this._installedPlugins || (this._installedPlugins = []));
    if (installedPlugins.indexOf(plugin) > -1) {
      return this
    }

    // additional parameters
    var args = toArray(arguments, 1);
    args.unshift(this);
    if (typeof plugin.install === 'function') {
      plugin.install.apply(plugin, args);
    } else if (typeof plugin === 'function') {
      plugin.apply(null, args);
    }
    installedPlugins.push(plugin);
    return this
  };
}

/*  */

function initMixin$1 (Vue) {
  Vue.mixin = function (mixin) {
    this.options = mergeOptions(this.options, mixin);
    return this
  };
}

/*  */

function initExtend (Vue) {
  /**
   * Each instance constructor, including Vue, has a unique
   * cid. This enables us to create wrapped "child
   * constructors" for prototypal inheritance and cache them.
   */
  Vue.cid = 0;
  var cid = 1;

  /**
   * Class inheritance
   */
  Vue.extend = function (extendOptions) {
    extendOptions = extendOptions || {};
    var Super = this;
    var SuperId = Super.cid;
    var cachedCtors = extendOptions._Ctor || (extendOptions._Ctor = {});
    if (cachedCtors[SuperId]) {
      return cachedCtors[SuperId]
    }

    var name = extendOptions.name || Super.options.name;
    if (false) {
      if (!/^[a-zA-Z][\w-]*$/.test(name)) {
        warn(
          'Invalid component name: "' + name + '". Component names ' +
          'can only contain alphanumeric characters and the hyphen, ' +
          'and must start with a letter.'
        );
      }
    }

    var Sub = function VueComponent (options) {
      this._init(options);
    };
    Sub.prototype = Object.create(Super.prototype);
    Sub.prototype.constructor = Sub;
    Sub.cid = cid++;
    Sub.options = mergeOptions(
      Super.options,
      extendOptions
    );
    Sub['super'] = Super;

    // For props and computed properties, we define the proxy getters on
    // the Vue instances at extension time, on the extended prototype. This
    // avoids Object.defineProperty calls for each instance created.
    if (Sub.options.props) {
      initProps$1(Sub);
    }
    if (Sub.options.computed) {
      initComputed$1(Sub);
    }

    // allow further extension/mixin/plugin usage
    Sub.extend = Super.extend;
    Sub.mixin = Super.mixin;
    Sub.use = Super.use;

    // create asset registers, so extended classes
    // can have their private assets too.
    ASSET_TYPES.forEach(function (type) {
      Sub[type] = Super[type];
    });
    // enable recursive self-lookup
    if (name) {
      Sub.options.components[name] = Sub;
    }

    // keep a reference to the super options at extension time.
    // later at instantiation we can check if Super's options have
    // been updated.
    Sub.superOptions = Super.options;
    Sub.extendOptions = extendOptions;
    Sub.sealedOptions = extend({}, Sub.options);

    // cache constructor
    cachedCtors[SuperId] = Sub;
    return Sub
  };
}

function initProps$1 (Comp) {
  var props = Comp.options.props;
  for (var key in props) {
    proxy(Comp.prototype, "_props", key);
  }
}

function initComputed$1 (Comp) {
  var computed = Comp.options.computed;
  for (var key in computed) {
    defineComputed(Comp.prototype, key, computed[key]);
  }
}

/*  */

function initAssetRegisters (Vue) {
  /**
   * Create asset registration methods.
   */
  ASSET_TYPES.forEach(function (type) {
    Vue[type] = function (
      id,
      definition
    ) {
      if (!definition) {
        return this.options[type + 's'][id]
      } else {
        /* istanbul ignore if */
        if (false) {
          if (type === 'component' && config.isReservedTag(id)) {
            warn(
              'Do not use built-in or reserved HTML elements as component ' +
              'id: ' + id
            );
          }
        }
        if (type === 'component' && isPlainObject(definition)) {
          definition.name = definition.name || id;
          definition = this.options._base.extend(definition);
        }
        if (type === 'directive' && typeof definition === 'function') {
          definition = { bind: definition, update: definition };
        }
        this.options[type + 's'][id] = definition;
        return definition
      }
    };
  });
}

/*  */

var patternTypes = [String, RegExp, Array];

function getComponentName (opts) {
  return opts && (opts.Ctor.options.name || opts.tag)
}

function matches (pattern, name) {
  if (Array.isArray(pattern)) {
    return pattern.indexOf(name) > -1
  } else if (typeof pattern === 'string') {
    return pattern.split(',').indexOf(name) > -1
  } else if (isRegExp(pattern)) {
    return pattern.test(name)
  }
  /* istanbul ignore next */
  return false
}

function pruneCache (cache, current, filter) {
  for (var key in cache) {
    var cachedNode = cache[key];
    if (cachedNode) {
      var name = getComponentName(cachedNode.componentOptions);
      if (name && !filter(name)) {
        if (cachedNode !== current) {
          pruneCacheEntry(cachedNode);
        }
        cache[key] = null;
      }
    }
  }
}

function pruneCacheEntry (vnode) {
  if (vnode) {
    vnode.componentInstance.$destroy();
  }
}

var KeepAlive = {
  name: 'keep-alive',
  abstract: true,

  props: {
    include: patternTypes,
    exclude: patternTypes
  },

  created: function created () {
    this.cache = Object.create(null);
  },

  destroyed: function destroyed () {
    var this$1 = this;

    for (var key in this$1.cache) {
      pruneCacheEntry(this$1.cache[key]);
    }
  },

  watch: {
    include: function include (val) {
      pruneCache(this.cache, this._vnode, function (name) { return matches(val, name); });
    },
    exclude: function exclude (val) {
      pruneCache(this.cache, this._vnode, function (name) { return !matches(val, name); });
    }
  },

  render: function render () {
    var vnode = getFirstComponentChild(this.$slots.default);
    var componentOptions = vnode && vnode.componentOptions;
    if (componentOptions) {
      // check pattern
      var name = getComponentName(componentOptions);
      if (name && (
        (this.include && !matches(this.include, name)) ||
        (this.exclude && matches(this.exclude, name))
      )) {
        return vnode
      }
      var key = vnode.key == null
        // same constructor may get registered as different local components
        // so cid alone is not enough (#3269)
        ? componentOptions.Ctor.cid + (componentOptions.tag ? ("::" + (componentOptions.tag)) : '')
        : vnode.key;
      if (this.cache[key]) {
        vnode.componentInstance = this.cache[key].componentInstance;
      } else {
        this.cache[key] = vnode;
      }
      vnode.data.keepAlive = true;
    }
    return vnode
  }
};

var builtInComponents = {
  KeepAlive: KeepAlive
};

/*  */

function initGlobalAPI (Vue) {
  // config
  var configDef = {};
  configDef.get = function () { return config; };
  if (false) {
    configDef.set = function () {
      warn(
        'Do not replace the Vue.config object, set individual fields instead.'
      );
    };
  }
  Object.defineProperty(Vue, 'config', configDef);

  // exposed util methods.
  // NOTE: these are not considered part of the public API - avoid relying on
  // them unless you are aware of the risk.
  Vue.util = {
    warn: warn,
    extend: extend,
    mergeOptions: mergeOptions,
    defineReactive: defineReactive$$1
  };

  Vue.set = set;
  Vue.delete = del;
  Vue.nextTick = nextTick;

  Vue.options = Object.create(null);
  ASSET_TYPES.forEach(function (type) {
    Vue.options[type + 's'] = Object.create(null);
  });

  // this is used to identify the "base" constructor to extend all plain-object
  // components with in Weex's multi-instance scenarios.
  Vue.options._base = Vue;

  extend(Vue.options.components, builtInComponents);

  initUse(Vue);
  initMixin$1(Vue);
  initExtend(Vue);
  initAssetRegisters(Vue);
}

initGlobalAPI(Vue$3);

Object.defineProperty(Vue$3.prototype, '$isServer', {
  get: isServerRendering
});

Object.defineProperty(Vue$3.prototype, '$ssrContext', {
  get: function get () {
    /* istanbul ignore next */
    return this.$vnode && this.$vnode.ssrContext
  }
});

Vue$3.version = '2.4.2';

/*  */

// these are reserved for web because they are directly compiled away
// during template compilation
var isReservedAttr = makeMap('style,class');

// attributes that should be using props for binding
var acceptValue = makeMap('input,textarea,option,select');
var mustUseProp = function (tag, type, attr) {
  return (
    (attr === 'value' && acceptValue(tag)) && type !== 'button' ||
    (attr === 'selected' && tag === 'option') ||
    (attr === 'checked' && tag === 'input') ||
    (attr === 'muted' && tag === 'video')
  )
};

var isEnumeratedAttr = makeMap('contenteditable,draggable,spellcheck');

var isBooleanAttr = makeMap(
  'allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,' +
  'default,defaultchecked,defaultmuted,defaultselected,defer,disabled,' +
  'enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,' +
  'muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,' +
  'required,reversed,scoped,seamless,selected,sortable,translate,' +
  'truespeed,typemustmatch,visible'
);

var xlinkNS = 'http://www.w3.org/1999/xlink';

var isXlink = function (name) {
  return name.charAt(5) === ':' && name.slice(0, 5) === 'xlink'
};

var getXlinkProp = function (name) {
  return isXlink(name) ? name.slice(6, name.length) : ''
};

var isFalsyAttrValue = function (val) {
  return val == null || val === false
};

/*  */

function genClassForVnode (vnode) {
  var data = vnode.data;
  var parentNode = vnode;
  var childNode = vnode;
  while (isDef(childNode.componentInstance)) {
    childNode = childNode.componentInstance._vnode;
    if (childNode.data) {
      data = mergeClassData(childNode.data, data);
    }
  }
  while (isDef(parentNode = parentNode.parent)) {
    if (parentNode.data) {
      data = mergeClassData(data, parentNode.data);
    }
  }
  return renderClass(data.staticClass, data.class)
}

function mergeClassData (child, parent) {
  return {
    staticClass: concat(child.staticClass, parent.staticClass),
    class: isDef(child.class)
      ? [child.class, parent.class]
      : parent.class
  }
}

function renderClass (
  staticClass,
  dynamicClass
) {
  if (isDef(staticClass) || isDef(dynamicClass)) {
    return concat(staticClass, stringifyClass(dynamicClass))
  }
  /* istanbul ignore next */
  return ''
}

function concat (a, b) {
  return a ? b ? (a + ' ' + b) : a : (b || '')
}

function stringifyClass (value) {
  if (Array.isArray(value)) {
    return stringifyArray(value)
  }
  if (isObject(value)) {
    return stringifyObject(value)
  }
  if (typeof value === 'string') {
    return value
  }
  /* istanbul ignore next */
  return ''
}

function stringifyArray (value) {
  var res = '';
  var stringified;
  for (var i = 0, l = value.length; i < l; i++) {
    if (isDef(stringified = stringifyClass(value[i])) && stringified !== '') {
      if (res) { res += ' '; }
      res += stringified;
    }
  }
  return res
}

function stringifyObject (value) {
  var res = '';
  for (var key in value) {
    if (value[key]) {
      if (res) { res += ' '; }
      res += key;
    }
  }
  return res
}

/*  */

var namespaceMap = {
  svg: 'http://www.w3.org/2000/svg',
  math: 'http://www.w3.org/1998/Math/MathML'
};

var isHTMLTag = makeMap(
  'html,body,base,head,link,meta,style,title,' +
  'address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,' +
  'div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,' +
  'a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,' +
  's,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,' +
  'embed,object,param,source,canvas,script,noscript,del,ins,' +
  'caption,col,colgroup,table,thead,tbody,td,th,tr,' +
  'button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,' +
  'output,progress,select,textarea,' +
  'details,dialog,menu,menuitem,summary,' +
  'content,element,shadow,template,blockquote,iframe,tfoot'
);

// this map is intentionally selective, only covering SVG elements that may
// contain child elements.
var isSVG = makeMap(
  'svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,' +
  'foreignObject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,' +
  'polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view',
  true
);



var isReservedTag = function (tag) {
  return isHTMLTag(tag) || isSVG(tag)
};

function getTagNamespace (tag) {
  if (isSVG(tag)) {
    return 'svg'
  }
  // basic support for MathML
  // note it doesn't support other MathML elements being component roots
  if (tag === 'math') {
    return 'math'
  }
}

var unknownElementCache = Object.create(null);
function isUnknownElement (tag) {
  /* istanbul ignore if */
  if (!inBrowser) {
    return true
  }
  if (isReservedTag(tag)) {
    return false
  }
  tag = tag.toLowerCase();
  /* istanbul ignore if */
  if (unknownElementCache[tag] != null) {
    return unknownElementCache[tag]
  }
  var el = document.createElement(tag);
  if (tag.indexOf('-') > -1) {
    // http://stackoverflow.com/a/28210364/1070244
    return (unknownElementCache[tag] = (
      el.constructor === window.HTMLUnknownElement ||
      el.constructor === window.HTMLElement
    ))
  } else {
    return (unknownElementCache[tag] = /HTMLUnknownElement/.test(el.toString()))
  }
}

/*  */

/**
 * Query an element selector if it's not an element already.
 */
function query (el) {
  if (typeof el === 'string') {
    var selected = document.querySelector(el);
    if (!selected) {
      "production" !== 'production' && warn(
        'Cannot find element: ' + el
      );
      return document.createElement('div')
    }
    return selected
  } else {
    return el
  }
}

/*  */

function createElement$1 (tagName, vnode) {
  var elm = document.createElement(tagName);
  if (tagName !== 'select') {
    return elm
  }
  // false or null will remove the attribute but undefined will not
  if (vnode.data && vnode.data.attrs && vnode.data.attrs.multiple !== undefined) {
    elm.setAttribute('multiple', 'multiple');
  }
  return elm
}

function createElementNS (namespace, tagName) {
  return document.createElementNS(namespaceMap[namespace], tagName)
}

function createTextNode (text) {
  return document.createTextNode(text)
}

function createComment (text) {
  return document.createComment(text)
}

function insertBefore (parentNode, newNode, referenceNode) {
  parentNode.insertBefore(newNode, referenceNode);
}

function removeChild (node, child) {
  node.removeChild(child);
}

function appendChild (node, child) {
  node.appendChild(child);
}

function parentNode (node) {
  return node.parentNode
}

function nextSibling (node) {
  return node.nextSibling
}

function tagName (node) {
  return node.tagName
}

function setTextContent (node, text) {
  node.textContent = text;
}

function setAttribute (node, key, val) {
  node.setAttribute(key, val);
}


var nodeOps = Object.freeze({
	createElement: createElement$1,
	createElementNS: createElementNS,
	createTextNode: createTextNode,
	createComment: createComment,
	insertBefore: insertBefore,
	removeChild: removeChild,
	appendChild: appendChild,
	parentNode: parentNode,
	nextSibling: nextSibling,
	tagName: tagName,
	setTextContent: setTextContent,
	setAttribute: setAttribute
});

/*  */

var ref = {
  create: function create (_, vnode) {
    registerRef(vnode);
  },
  update: function update (oldVnode, vnode) {
    if (oldVnode.data.ref !== vnode.data.ref) {
      registerRef(oldVnode, true);
      registerRef(vnode);
    }
  },
  destroy: function destroy (vnode) {
    registerRef(vnode, true);
  }
};

function registerRef (vnode, isRemoval) {
  var key = vnode.data.ref;
  if (!key) { return }

  var vm = vnode.context;
  var ref = vnode.componentInstance || vnode.elm;
  var refs = vm.$refs;
  if (isRemoval) {
    if (Array.isArray(refs[key])) {
      remove(refs[key], ref);
    } else if (refs[key] === ref) {
      refs[key] = undefined;
    }
  } else {
    if (vnode.data.refInFor) {
      if (!Array.isArray(refs[key])) {
        refs[key] = [ref];
      } else if (refs[key].indexOf(ref) < 0) {
        // $flow-disable-line
        refs[key].push(ref);
      }
    } else {
      refs[key] = ref;
    }
  }
}

/**
 * Virtual DOM patching algorithm based on Snabbdom by
 * Simon Friis Vindum (@paldepind)
 * Licensed under the MIT License
 * https://github.com/paldepind/snabbdom/blob/master/LICENSE
 *
 * modified by Evan You (@yyx990803)
 *

/*
 * Not type-checking this because this file is perf-critical and the cost
 * of making flow understand it is not worth it.
 */

var emptyNode = new VNode('', {}, []);

var hooks = ['create', 'activate', 'update', 'remove', 'destroy'];

function sameVnode (a, b) {
  return (
    a.key === b.key && (
      (
        a.tag === b.tag &&
        a.isComment === b.isComment &&
        isDef(a.data) === isDef(b.data) &&
        sameInputType(a, b)
      ) || (
        isTrue(a.isAsyncPlaceholder) &&
        a.asyncFactory === b.asyncFactory &&
        isUndef(b.asyncFactory.error)
      )
    )
  )
}

// Some browsers do not support dynamically changing type for <input>
// so they need to be treated as different nodes
function sameInputType (a, b) {
  if (a.tag !== 'input') { return true }
  var i;
  var typeA = isDef(i = a.data) && isDef(i = i.attrs) && i.type;
  var typeB = isDef(i = b.data) && isDef(i = i.attrs) && i.type;
  return typeA === typeB
}

function createKeyToOldIdx (children, beginIdx, endIdx) {
  var i, key;
  var map = {};
  for (i = beginIdx; i <= endIdx; ++i) {
    key = children[i].key;
    if (isDef(key)) { map[key] = i; }
  }
  return map
}

function createPatchFunction (backend) {
  var i, j;
  var cbs = {};

  var modules = backend.modules;
  var nodeOps = backend.nodeOps;

  for (i = 0; i < hooks.length; ++i) {
    cbs[hooks[i]] = [];
    for (j = 0; j < modules.length; ++j) {
      if (isDef(modules[j][hooks[i]])) {
        cbs[hooks[i]].push(modules[j][hooks[i]]);
      }
    }
  }

  function emptyNodeAt (elm) {
    return new VNode(nodeOps.tagName(elm).toLowerCase(), {}, [], undefined, elm)
  }

  function createRmCb (childElm, listeners) {
    function remove$$1 () {
      if (--remove$$1.listeners === 0) {
        removeNode(childElm);
      }
    }
    remove$$1.listeners = listeners;
    return remove$$1
  }

  function removeNode (el) {
    var parent = nodeOps.parentNode(el);
    // element may have already been removed due to v-html / v-text
    if (isDef(parent)) {
      nodeOps.removeChild(parent, el);
    }
  }

  var inPre = 0;
  function createElm (vnode, insertedVnodeQueue, parentElm, refElm, nested) {
    vnode.isRootInsert = !nested; // for transition enter check
    if (createComponent(vnode, insertedVnodeQueue, parentElm, refElm)) {
      return
    }

    var data = vnode.data;
    var children = vnode.children;
    var tag = vnode.tag;
    if (isDef(tag)) {
      if (false) {
        if (data && data.pre) {
          inPre++;
        }
        if (
          !inPre &&
          !vnode.ns &&
          !(config.ignoredElements.length && config.ignoredElements.indexOf(tag) > -1) &&
          config.isUnknownElement(tag)
        ) {
          warn(
            'Unknown custom element: <' + tag + '> - did you ' +
            'register the component correctly? For recursive components, ' +
            'make sure to provide the "name" option.',
            vnode.context
          );
        }
      }
      vnode.elm = vnode.ns
        ? nodeOps.createElementNS(vnode.ns, tag)
        : nodeOps.createElement(tag, vnode);
      setScope(vnode);

      /* istanbul ignore if */
      {
        createChildren(vnode, children, insertedVnodeQueue);
        if (isDef(data)) {
          invokeCreateHooks(vnode, insertedVnodeQueue);
        }
        insert(parentElm, vnode.elm, refElm);
      }

      if (false) {
        inPre--;
      }
    } else if (isTrue(vnode.isComment)) {
      vnode.elm = nodeOps.createComment(vnode.text);
      insert(parentElm, vnode.elm, refElm);
    } else {
      vnode.elm = nodeOps.createTextNode(vnode.text);
      insert(parentElm, vnode.elm, refElm);
    }
  }

  function createComponent (vnode, insertedVnodeQueue, parentElm, refElm) {
    var i = vnode.data;
    if (isDef(i)) {
      var isReactivated = isDef(vnode.componentInstance) && i.keepAlive;
      if (isDef(i = i.hook) && isDef(i = i.init)) {
        i(vnode, false /* hydrating */, parentElm, refElm);
      }
      // after calling the init hook, if the vnode is a child component
      // it should've created a child instance and mounted it. the child
      // component also has set the placeholder vnode's elm.
      // in that case we can just return the element and be done.
      if (isDef(vnode.componentInstance)) {
        initComponent(vnode, insertedVnodeQueue);
        if (isTrue(isReactivated)) {
          reactivateComponent(vnode, insertedVnodeQueue, parentElm, refElm);
        }
        return true
      }
    }
  }

  function initComponent (vnode, insertedVnodeQueue) {
    if (isDef(vnode.data.pendingInsert)) {
      insertedVnodeQueue.push.apply(insertedVnodeQueue, vnode.data.pendingInsert);
      vnode.data.pendingInsert = null;
    }
    vnode.elm = vnode.componentInstance.$el;
    if (isPatchable(vnode)) {
      invokeCreateHooks(vnode, insertedVnodeQueue);
      setScope(vnode);
    } else {
      // empty component root.
      // skip all element-related modules except for ref (#3455)
      registerRef(vnode);
      // make sure to invoke the insert hook
      insertedVnodeQueue.push(vnode);
    }
  }

  function reactivateComponent (vnode, insertedVnodeQueue, parentElm, refElm) {
    var i;
    // hack for #4339: a reactivated component with inner transition
    // does not trigger because the inner node's created hooks are not called
    // again. It's not ideal to involve module-specific logic in here but
    // there doesn't seem to be a better way to do it.
    var innerNode = vnode;
    while (innerNode.componentInstance) {
      innerNode = innerNode.componentInstance._vnode;
      if (isDef(i = innerNode.data) && isDef(i = i.transition)) {
        for (i = 0; i < cbs.activate.length; ++i) {
          cbs.activate[i](emptyNode, innerNode);
        }
        insertedVnodeQueue.push(innerNode);
        break
      }
    }
    // unlike a newly created component,
    // a reactivated keep-alive component doesn't insert itself
    insert(parentElm, vnode.elm, refElm);
  }

  function insert (parent, elm, ref$$1) {
    if (isDef(parent)) {
      if (isDef(ref$$1)) {
        if (ref$$1.parentNode === parent) {
          nodeOps.insertBefore(parent, elm, ref$$1);
        }
      } else {
        nodeOps.appendChild(parent, elm);
      }
    }
  }

  function createChildren (vnode, children, insertedVnodeQueue) {
    if (Array.isArray(children)) {
      for (var i = 0; i < children.length; ++i) {
        createElm(children[i], insertedVnodeQueue, vnode.elm, null, true);
      }
    } else if (isPrimitive(vnode.text)) {
      nodeOps.appendChild(vnode.elm, nodeOps.createTextNode(vnode.text));
    }
  }

  function isPatchable (vnode) {
    while (vnode.componentInstance) {
      vnode = vnode.componentInstance._vnode;
    }
    return isDef(vnode.tag)
  }

  function invokeCreateHooks (vnode, insertedVnodeQueue) {
    for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {
      cbs.create[i$1](emptyNode, vnode);
    }
    i = vnode.data.hook; // Reuse variable
    if (isDef(i)) {
      if (isDef(i.create)) { i.create(emptyNode, vnode); }
      if (isDef(i.insert)) { insertedVnodeQueue.push(vnode); }
    }
  }

  // set scope id attribute for scoped CSS.
  // this is implemented as a special case to avoid the overhead
  // of going through the normal attribute patching process.
  function setScope (vnode) {
    var i;
    var ancestor = vnode;
    while (ancestor) {
      if (isDef(i = ancestor.context) && isDef(i = i.$options._scopeId)) {
        nodeOps.setAttribute(vnode.elm, i, '');
      }
      ancestor = ancestor.parent;
    }
    // for slot content they should also get the scopeId from the host instance.
    if (isDef(i = activeInstance) &&
      i !== vnode.context &&
      isDef(i = i.$options._scopeId)
    ) {
      nodeOps.setAttribute(vnode.elm, i, '');
    }
  }

  function addVnodes (parentElm, refElm, vnodes, startIdx, endIdx, insertedVnodeQueue) {
    for (; startIdx <= endIdx; ++startIdx) {
      createElm(vnodes[startIdx], insertedVnodeQueue, parentElm, refElm);
    }
  }

  function invokeDestroyHook (vnode) {
    var i, j;
    var data = vnode.data;
    if (isDef(data)) {
      if (isDef(i = data.hook) && isDef(i = i.destroy)) { i(vnode); }
      for (i = 0; i < cbs.destroy.length; ++i) { cbs.destroy[i](vnode); }
    }
    if (isDef(i = vnode.children)) {
      for (j = 0; j < vnode.children.length; ++j) {
        invokeDestroyHook(vnode.children[j]);
      }
    }
  }

  function removeVnodes (parentElm, vnodes, startIdx, endIdx) {
    for (; startIdx <= endIdx; ++startIdx) {
      var ch = vnodes[startIdx];
      if (isDef(ch)) {
        if (isDef(ch.tag)) {
          removeAndInvokeRemoveHook(ch);
          invokeDestroyHook(ch);
        } else { // Text node
          removeNode(ch.elm);
        }
      }
    }
  }

  function removeAndInvokeRemoveHook (vnode, rm) {
    if (isDef(rm) || isDef(vnode.data)) {
      var i;
      var listeners = cbs.remove.length + 1;
      if (isDef(rm)) {
        // we have a recursively passed down rm callback
        // increase the listeners count
        rm.listeners += listeners;
      } else {
        // directly removing
        rm = createRmCb(vnode.elm, listeners);
      }
      // recursively invoke hooks on child component root node
      if (isDef(i = vnode.componentInstance) && isDef(i = i._vnode) && isDef(i.data)) {
        removeAndInvokeRemoveHook(i, rm);
      }
      for (i = 0; i < cbs.remove.length; ++i) {
        cbs.remove[i](vnode, rm);
      }
      if (isDef(i = vnode.data.hook) && isDef(i = i.remove)) {
        i(vnode, rm);
      } else {
        rm();
      }
    } else {
      removeNode(vnode.elm);
    }
  }

  function updateChildren (parentElm, oldCh, newCh, insertedVnodeQueue, removeOnly) {
    var oldStartIdx = 0;
    var newStartIdx = 0;
    var oldEndIdx = oldCh.length - 1;
    var oldStartVnode = oldCh[0];
    var oldEndVnode = oldCh[oldEndIdx];
    var newEndIdx = newCh.length - 1;
    var newStartVnode = newCh[0];
    var newEndVnode = newCh[newEndIdx];
    var oldKeyToIdx, idxInOld, elmToMove, refElm;

    // removeOnly is a special flag used only by <transition-group>
    // to ensure removed elements stay in correct relative positions
    // during leaving transitions
    var canMove = !removeOnly;

    while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {
      if (isUndef(oldStartVnode)) {
        oldStartVnode = oldCh[++oldStartIdx]; // Vnode has been moved left
      } else if (isUndef(oldEndVnode)) {
        oldEndVnode = oldCh[--oldEndIdx];
      } else if (sameVnode(oldStartVnode, newStartVnode)) {
        patchVnode(oldStartVnode, newStartVnode, insertedVnodeQueue);
        oldStartVnode = oldCh[++oldStartIdx];
        newStartVnode = newCh[++newStartIdx];
      } else if (sameVnode(oldEndVnode, newEndVnode)) {
        patchVnode(oldEndVnode, newEndVnode, insertedVnodeQueue);
        oldEndVnode = oldCh[--oldEndIdx];
        newEndVnode = newCh[--newEndIdx];
      } else if (sameVnode(oldStartVnode, newEndVnode)) { // Vnode moved right
        patchVnode(oldStartVnode, newEndVnode, insertedVnodeQueue);
        canMove && nodeOps.insertBefore(parentElm, oldStartVnode.elm, nodeOps.nextSibling(oldEndVnode.elm));
        oldStartVnode = oldCh[++oldStartIdx];
        newEndVnode = newCh[--newEndIdx];
      } else if (sameVnode(oldEndVnode, newStartVnode)) { // Vnode moved left
        patchVnode(oldEndVnode, newStartVnode, insertedVnodeQueue);
        canMove && nodeOps.insertBefore(parentElm, oldEndVnode.elm, oldStartVnode.elm);
        oldEndVnode = oldCh[--oldEndIdx];
        newStartVnode = newCh[++newStartIdx];
      } else {
        if (isUndef(oldKeyToIdx)) { oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx); }
        idxInOld = isDef(newStartVnode.key) ? oldKeyToIdx[newStartVnode.key] : null;
        if (isUndef(idxInOld)) { // New element
          createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm);
          newStartVnode = newCh[++newStartIdx];
        } else {
          elmToMove = oldCh[idxInOld];
          /* istanbul ignore if */
          if (false) {
            warn(
              'It seems there are duplicate keys that is causing an update error. ' +
              'Make sure each v-for item has a unique key.'
            );
          }
          if (sameVnode(elmToMove, newStartVnode)) {
            patchVnode(elmToMove, newStartVnode, insertedVnodeQueue);
            oldCh[idxInOld] = undefined;
            canMove && nodeOps.insertBefore(parentElm, elmToMove.elm, oldStartVnode.elm);
            newStartVnode = newCh[++newStartIdx];
          } else {
            // same key but different element. treat as new element
            createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm);
            newStartVnode = newCh[++newStartIdx];
          }
        }
      }
    }
    if (oldStartIdx > oldEndIdx) {
      refElm = isUndef(newCh[newEndIdx + 1]) ? null : newCh[newEndIdx + 1].elm;
      addVnodes(parentElm, refElm, newCh, newStartIdx, newEndIdx, insertedVnodeQueue);
    } else if (newStartIdx > newEndIdx) {
      removeVnodes(parentElm, oldCh, oldStartIdx, oldEndIdx);
    }
  }

  function patchVnode (oldVnode, vnode, insertedVnodeQueue, removeOnly) {
    if (oldVnode === vnode) {
      return
    }

    var elm = vnode.elm = oldVnode.elm;

    if (isTrue(oldVnode.isAsyncPlaceholder)) {
      if (isDef(vnode.asyncFactory.resolved)) {
        hydrate(oldVnode.elm, vnode, insertedVnodeQueue);
      } else {
        vnode.isAsyncPlaceholder = true;
      }
      return
    }

    // reuse element for static trees.
    // note we only do this if the vnode is cloned -
    // if the new node is not cloned it means the render functions have been
    // reset by the hot-reload-api and we need to do a proper re-render.
    if (isTrue(vnode.isStatic) &&
      isTrue(oldVnode.isStatic) &&
      vnode.key === oldVnode.key &&
      (isTrue(vnode.isCloned) || isTrue(vnode.isOnce))
    ) {
      vnode.componentInstance = oldVnode.componentInstance;
      return
    }

    var i;
    var data = vnode.data;
    if (isDef(data) && isDef(i = data.hook) && isDef(i = i.prepatch)) {
      i(oldVnode, vnode);
    }

    var oldCh = oldVnode.children;
    var ch = vnode.children;
    if (isDef(data) && isPatchable(vnode)) {
      for (i = 0; i < cbs.update.length; ++i) { cbs.update[i](oldVnode, vnode); }
      if (isDef(i = data.hook) && isDef(i = i.update)) { i(oldVnode, vnode); }
    }
    if (isUndef(vnode.text)) {
      if (isDef(oldCh) && isDef(ch)) {
        if (oldCh !== ch) { updateChildren(elm, oldCh, ch, insertedVnodeQueue, removeOnly); }
      } else if (isDef(ch)) {
        if (isDef(oldVnode.text)) { nodeOps.setTextContent(elm, ''); }
        addVnodes(elm, null, ch, 0, ch.length - 1, insertedVnodeQueue);
      } else if (isDef(oldCh)) {
        removeVnodes(elm, oldCh, 0, oldCh.length - 1);
      } else if (isDef(oldVnode.text)) {
        nodeOps.setTextContent(elm, '');
      }
    } else if (oldVnode.text !== vnode.text) {
      nodeOps.setTextContent(elm, vnode.text);
    }
    if (isDef(data)) {
      if (isDef(i = data.hook) && isDef(i = i.postpatch)) { i(oldVnode, vnode); }
    }
  }

  function invokeInsertHook (vnode, queue, initial) {
    // delay insert hooks for component root nodes, invoke them after the
    // element is really inserted
    if (isTrue(initial) && isDef(vnode.parent)) {
      vnode.parent.data.pendingInsert = queue;
    } else {
      for (var i = 0; i < queue.length; ++i) {
        queue[i].data.hook.insert(queue[i]);
      }
    }
  }

  var bailed = false;
  // list of modules that can skip create hook during hydration because they
  // are already rendered on the client or has no need for initialization
  var isRenderedModule = makeMap('attrs,style,class,staticClass,staticStyle,key');

  // Note: this is a browser-only function so we can assume elms are DOM nodes.
  function hydrate (elm, vnode, insertedVnodeQueue) {
    if (isTrue(vnode.isComment) && isDef(vnode.asyncFactory)) {
      vnode.elm = elm;
      vnode.isAsyncPlaceholder = true;
      return true
    }
    if (false) {
      if (!assertNodeMatch(elm, vnode)) {
        return false
      }
    }
    vnode.elm = elm;
    var tag = vnode.tag;
    var data = vnode.data;
    var children = vnode.children;
    if (isDef(data)) {
      if (isDef(i = data.hook) && isDef(i = i.init)) { i(vnode, true /* hydrating */); }
      if (isDef(i = vnode.componentInstance)) {
        // child component. it should have hydrated its own tree.
        initComponent(vnode, insertedVnodeQueue);
        return true
      }
    }
    if (isDef(tag)) {
      if (isDef(children)) {
        // empty element, allow client to pick up and populate children
        if (!elm.hasChildNodes()) {
          createChildren(vnode, children, insertedVnodeQueue);
        } else {
          var childrenMatch = true;
          var childNode = elm.firstChild;
          for (var i$1 = 0; i$1 < children.length; i$1++) {
            if (!childNode || !hydrate(childNode, children[i$1], insertedVnodeQueue)) {
              childrenMatch = false;
              break
            }
            childNode = childNode.nextSibling;
          }
          // if childNode is not null, it means the actual childNodes list is
          // longer than the virtual children list.
          if (!childrenMatch || childNode) {
            if (false
            ) {
              bailed = true;
              console.warn('Parent: ', elm);
              console.warn('Mismatching childNodes vs. VNodes: ', elm.childNodes, children);
            }
            return false
          }
        }
      }
      if (isDef(data)) {
        for (var key in data) {
          if (!isRenderedModule(key)) {
            invokeCreateHooks(vnode, insertedVnodeQueue);
            break
          }
        }
      }
    } else if (elm.data !== vnode.text) {
      elm.data = vnode.text;
    }
    return true
  }

  function assertNodeMatch (node, vnode) {
    if (isDef(vnode.tag)) {
      return (
        vnode.tag.indexOf('vue-component') === 0 ||
        vnode.tag.toLowerCase() === (node.tagName && node.tagName.toLowerCase())
      )
    } else {
      return node.nodeType === (vnode.isComment ? 8 : 3)
    }
  }

  return function patch (oldVnode, vnode, hydrating, removeOnly, parentElm, refElm) {
    if (isUndef(vnode)) {
      if (isDef(oldVnode)) { invokeDestroyHook(oldVnode); }
      return
    }

    var isInitialPatch = false;
    var insertedVnodeQueue = [];

    if (isUndef(oldVnode)) {
      // empty mount (likely as component), create new root element
      isInitialPatch = true;
      createElm(vnode, insertedVnodeQueue, parentElm, refElm);
    } else {
      var isRealElement = isDef(oldVnode.nodeType);
      if (!isRealElement && sameVnode(oldVnode, vnode)) {
        // patch existing root node
        patchVnode(oldVnode, vnode, insertedVnodeQueue, removeOnly);
      } else {
        if (isRealElement) {
          // mounting to a real element
          // check if this is server-rendered content and if we can perform
          // a successful hydration.
          if (oldVnode.nodeType === 1 && oldVnode.hasAttribute(SSR_ATTR)) {
            oldVnode.removeAttribute(SSR_ATTR);
            hydrating = true;
          }
          if (isTrue(hydrating)) {
            if (hydrate(oldVnode, vnode, insertedVnodeQueue)) {
              invokeInsertHook(vnode, insertedVnodeQueue, true);
              return oldVnode
            } else if (false) {
              warn(
                'The client-side rendered virtual DOM tree is not matching ' +
                'server-rendered content. This is likely caused by incorrect ' +
                'HTML markup, for example nesting block-level elements inside ' +
                '<p>, or missing <tbody>. Bailing hydration and performing ' +
                'full client-side render.'
              );
            }
          }
          // either not server-rendered, or hydration failed.
          // create an empty node and replace it
          oldVnode = emptyNodeAt(oldVnode);
        }
        // replacing existing element
        var oldElm = oldVnode.elm;
        var parentElm$1 = nodeOps.parentNode(oldElm);
        createElm(
          vnode,
          insertedVnodeQueue,
          // extremely rare edge case: do not insert if old element is in a
          // leaving transition. Only happens when combining transition +
          // keep-alive + HOCs. (#4590)
          oldElm._leaveCb ? null : parentElm$1,
          nodeOps.nextSibling(oldElm)
        );

        if (isDef(vnode.parent)) {
          // component root element replaced.
          // update parent placeholder node element, recursively
          var ancestor = vnode.parent;
          while (ancestor) {
            ancestor.elm = vnode.elm;
            ancestor = ancestor.parent;
          }
          if (isPatchable(vnode)) {
            for (var i = 0; i < cbs.create.length; ++i) {
              cbs.create[i](emptyNode, vnode.parent);
            }
          }
        }

        if (isDef(parentElm$1)) {
          removeVnodes(parentElm$1, [oldVnode], 0, 0);
        } else if (isDef(oldVnode.tag)) {
          invokeDestroyHook(oldVnode);
        }
      }
    }

    invokeInsertHook(vnode, insertedVnodeQueue, isInitialPatch);
    return vnode.elm
  }
}

/*  */

var directives = {
  create: updateDirectives,
  update: updateDirectives,
  destroy: function unbindDirectives (vnode) {
    updateDirectives(vnode, emptyNode);
  }
};

function updateDirectives (oldVnode, vnode) {
  if (oldVnode.data.directives || vnode.data.directives) {
    _update(oldVnode, vnode);
  }
}

function _update (oldVnode, vnode) {
  var isCreate = oldVnode === emptyNode;
  var isDestroy = vnode === emptyNode;
  var oldDirs = normalizeDirectives$1(oldVnode.data.directives, oldVnode.context);
  var newDirs = normalizeDirectives$1(vnode.data.directives, vnode.context);

  var dirsWithInsert = [];
  var dirsWithPostpatch = [];

  var key, oldDir, dir;
  for (key in newDirs) {
    oldDir = oldDirs[key];
    dir = newDirs[key];
    if (!oldDir) {
      // new directive, bind
      callHook$1(dir, 'bind', vnode, oldVnode);
      if (dir.def && dir.def.inserted) {
        dirsWithInsert.push(dir);
      }
    } else {
      // existing directive, update
      dir.oldValue = oldDir.value;
      callHook$1(dir, 'update', vnode, oldVnode);
      if (dir.def && dir.def.componentUpdated) {
        dirsWithPostpatch.push(dir);
      }
    }
  }

  if (dirsWithInsert.length) {
    var callInsert = function () {
      for (var i = 0; i < dirsWithInsert.length; i++) {
        callHook$1(dirsWithInsert[i], 'inserted', vnode, oldVnode);
      }
    };
    if (isCreate) {
      mergeVNodeHook(vnode.data.hook || (vnode.data.hook = {}), 'insert', callInsert);
    } else {
      callInsert();
    }
  }

  if (dirsWithPostpatch.length) {
    mergeVNodeHook(vnode.data.hook || (vnode.data.hook = {}), 'postpatch', function () {
      for (var i = 0; i < dirsWithPostpatch.length; i++) {
        callHook$1(dirsWithPostpatch[i], 'componentUpdated', vnode, oldVnode);
      }
    });
  }

  if (!isCreate) {
    for (key in oldDirs) {
      if (!newDirs[key]) {
        // no longer present, unbind
        callHook$1(oldDirs[key], 'unbind', oldVnode, oldVnode, isDestroy);
      }
    }
  }
}

var emptyModifiers = Object.create(null);

function normalizeDirectives$1 (
  dirs,
  vm
) {
  var res = Object.create(null);
  if (!dirs) {
    return res
  }
  var i, dir;
  for (i = 0; i < dirs.length; i++) {
    dir = dirs[i];
    if (!dir.modifiers) {
      dir.modifiers = emptyModifiers;
    }
    res[getRawDirName(dir)] = dir;
    dir.def = resolveAsset(vm.$options, 'directives', dir.name, true);
  }
  return res
}

function getRawDirName (dir) {
  return dir.rawName || ((dir.name) + "." + (Object.keys(dir.modifiers || {}).join('.')))
}

function callHook$1 (dir, hook, vnode, oldVnode, isDestroy) {
  var fn = dir.def && dir.def[hook];
  if (fn) {
    try {
      fn(vnode.elm, dir, vnode, oldVnode, isDestroy);
    } catch (e) {
      handleError(e, vnode.context, ("directive " + (dir.name) + " " + hook + " hook"));
    }
  }
}

var baseModules = [
  ref,
  directives
];

/*  */

function updateAttrs (oldVnode, vnode) {
  var opts = vnode.componentOptions;
  if (isDef(opts) && opts.Ctor.options.inheritAttrs === false) {
    return
  }
  if (isUndef(oldVnode.data.attrs) && isUndef(vnode.data.attrs)) {
    return
  }
  var key, cur, old;
  var elm = vnode.elm;
  var oldAttrs = oldVnode.data.attrs || {};
  var attrs = vnode.data.attrs || {};
  // clone observed objects, as the user probably wants to mutate it
  if (isDef(attrs.__ob__)) {
    attrs = vnode.data.attrs = extend({}, attrs);
  }

  for (key in attrs) {
    cur = attrs[key];
    old = oldAttrs[key];
    if (old !== cur) {
      setAttr(elm, key, cur);
    }
  }
  // #4391: in IE9, setting type can reset value for input[type=radio]
  /* istanbul ignore if */
  if (isIE9 && attrs.value !== oldAttrs.value) {
    setAttr(elm, 'value', attrs.value);
  }
  for (key in oldAttrs) {
    if (isUndef(attrs[key])) {
      if (isXlink(key)) {
        elm.removeAttributeNS(xlinkNS, getXlinkProp(key));
      } else if (!isEnumeratedAttr(key)) {
        elm.removeAttribute(key);
      }
    }
  }
}

function setAttr (el, key, value) {
  if (isBooleanAttr(key)) {
    // set attribute for blank value
    // e.g. <option disabled>Select one</option>
    if (isFalsyAttrValue(value)) {
      el.removeAttribute(key);
    } else {
      el.setAttribute(key, key);
    }
  } else if (isEnumeratedAttr(key)) {
    el.setAttribute(key, isFalsyAttrValue(value) || value === 'false' ? 'false' : 'true');
  } else if (isXlink(key)) {
    if (isFalsyAttrValue(value)) {
      el.removeAttributeNS(xlinkNS, getXlinkProp(key));
    } else {
      el.setAttributeNS(xlinkNS, key, value);
    }
  } else {
    if (isFalsyAttrValue(value)) {
      el.removeAttribute(key);
    } else {
      el.setAttribute(key, value);
    }
  }
}

var attrs = {
  create: updateAttrs,
  update: updateAttrs
};

/*  */

function updateClass (oldVnode, vnode) {
  var el = vnode.elm;
  var data = vnode.data;
  var oldData = oldVnode.data;
  if (
    isUndef(data.staticClass) &&
    isUndef(data.class) && (
      isUndef(oldData) || (
        isUndef(oldData.staticClass) &&
        isUndef(oldData.class)
      )
    )
  ) {
    return
  }

  var cls = genClassForVnode(vnode);

  // handle transition classes
  var transitionClass = el._transitionClasses;
  if (isDef(transitionClass)) {
    cls = concat(cls, stringifyClass(transitionClass));
  }

  // set the class
  if (cls !== el._prevClass) {
    el.setAttribute('class', cls);
    el._prevClass = cls;
  }
}

var klass = {
  create: updateClass,
  update: updateClass
};

/*  */

var validDivisionCharRE = /[\w).+\-_$\]]/;



function wrapFilter (exp, filter) {
  var i = filter.indexOf('(');
  if (i < 0) {
    // _f: resolveFilter
    return ("_f(\"" + filter + "\")(" + exp + ")")
  } else {
    var name = filter.slice(0, i);
    var args = filter.slice(i + 1);
    return ("_f(\"" + name + "\")(" + exp + "," + args)
  }
}

/*  */

/*  */

/**
 * Cross-platform code generation for component v-model
 */


/**
 * Cross-platform codegen helper for generating v-model value assignment code.
 */


/**
 * parse directive model to do the array update transform. a[idx] = val => $$a.splice($$idx, 1, val)
 *
 * for loop possible cases:
 *
 * - test
 * - test[idx]
 * - test[test1[idx]]
 * - test["a"][idx]
 * - xxx.test[a[a].test1[idx]]
 * - test.xxx.a["asa"][test1[idx]]
 *
 */

var str;
var index$1;

/*  */

// in some cases, the event used has to be determined at runtime
// so we used some reserved tokens during compile.
var RANGE_TOKEN = '__r';
var CHECKBOX_RADIO_TOKEN = '__c';

/*  */

// normalize v-model event tokens that can only be determined at runtime.
// it's important to place the event as the first in the array because
// the whole point is ensuring the v-model callback gets called before
// user-attached handlers.
function normalizeEvents (on) {
  var event;
  /* istanbul ignore if */
  if (isDef(on[RANGE_TOKEN])) {
    // IE input[type=range] only supports `change` event
    event = isIE ? 'change' : 'input';
    on[event] = [].concat(on[RANGE_TOKEN], on[event] || []);
    delete on[RANGE_TOKEN];
  }
  if (isDef(on[CHECKBOX_RADIO_TOKEN])) {
    // Chrome fires microtasks in between click/change, leads to #4521
    event = isChrome ? 'click' : 'change';
    on[event] = [].concat(on[CHECKBOX_RADIO_TOKEN], on[event] || []);
    delete on[CHECKBOX_RADIO_TOKEN];
  }
}

var target$1;

function add$1 (
  event,
  handler,
  once$$1,
  capture,
  passive
) {
  if (once$$1) {
    var oldHandler = handler;
    var _target = target$1; // save current target element in closure
    handler = function (ev) {
      var res = arguments.length === 1
        ? oldHandler(ev)
        : oldHandler.apply(null, arguments);
      if (res !== null) {
        remove$2(event, handler, capture, _target);
      }
    };
  }
  target$1.addEventListener(
    event,
    handler,
    supportsPassive
      ? { capture: capture, passive: passive }
      : capture
  );
}

function remove$2 (
  event,
  handler,
  capture,
  _target
) {
  (_target || target$1).removeEventListener(event, handler, capture);
}

function updateDOMListeners (oldVnode, vnode) {
  if (isUndef(oldVnode.data.on) && isUndef(vnode.data.on)) {
    return
  }
  var on = vnode.data.on || {};
  var oldOn = oldVnode.data.on || {};
  target$1 = vnode.elm;
  normalizeEvents(on);
  updateListeners(on, oldOn, add$1, remove$2, vnode.context);
}

var events = {
  create: updateDOMListeners,
  update: updateDOMListeners
};

/*  */

function updateDOMProps (oldVnode, vnode) {
  if (isUndef(oldVnode.data.domProps) && isUndef(vnode.data.domProps)) {
    return
  }
  var key, cur;
  var elm = vnode.elm;
  var oldProps = oldVnode.data.domProps || {};
  var props = vnode.data.domProps || {};
  // clone observed objects, as the user probably wants to mutate it
  if (isDef(props.__ob__)) {
    props = vnode.data.domProps = extend({}, props);
  }

  for (key in oldProps) {
    if (isUndef(props[key])) {
      elm[key] = '';
    }
  }
  for (key in props) {
    cur = props[key];
    // ignore children if the node has textContent or innerHTML,
    // as these will throw away existing DOM nodes and cause removal errors
    // on subsequent patches (#3360)
    if (key === 'textContent' || key === 'innerHTML') {
      if (vnode.children) { vnode.children.length = 0; }
      if (cur === oldProps[key]) { continue }
    }

    if (key === 'value') {
      // store value as _value as well since
      // non-string values will be stringified
      elm._value = cur;
      // avoid resetting cursor position when value is the same
      var strCur = isUndef(cur) ? '' : String(cur);
      if (shouldUpdateValue(elm, vnode, strCur)) {
        elm.value = strCur;
      }
    } else {
      elm[key] = cur;
    }
  }
}

// check platforms/web/util/attrs.js acceptValue


function shouldUpdateValue (
  elm,
  vnode,
  checkVal
) {
  return (!elm.composing && (
    vnode.tag === 'option' ||
    isDirty(elm, checkVal) ||
    isInputChanged(elm, checkVal)
  ))
}

function isDirty (elm, checkVal) {
  // return true when textbox (.number and .trim) loses focus and its value is
  // not equal to the updated value
  var notInFocus = true;
  // #6157
  // work around IE bug when accessing document.activeElement in an iframe
  try { notInFocus = document.activeElement !== elm; } catch (e) {}
  return notInFocus && elm.value !== checkVal
}

function isInputChanged (elm, newVal) {
  var value = elm.value;
  var modifiers = elm._vModifiers; // injected by v-model runtime
  if (isDef(modifiers) && modifiers.number) {
    return toNumber(value) !== toNumber(newVal)
  }
  if (isDef(modifiers) && modifiers.trim) {
    return value.trim() !== newVal.trim()
  }
  return value !== newVal
}

var domProps = {
  create: updateDOMProps,
  update: updateDOMProps
};

/*  */

var parseStyleText = cached(function (cssText) {
  var res = {};
  var listDelimiter = /;(?![^(]*\))/g;
  var propertyDelimiter = /:(.+)/;
  cssText.split(listDelimiter).forEach(function (item) {
    if (item) {
      var tmp = item.split(propertyDelimiter);
      tmp.length > 1 && (res[tmp[0].trim()] = tmp[1].trim());
    }
  });
  return res
});

// merge static and dynamic style data on the same vnode
function normalizeStyleData (data) {
  var style = normalizeStyleBinding(data.style);
  // static style is pre-processed into an object during compilation
  // and is always a fresh object, so it's safe to merge into it
  return data.staticStyle
    ? extend(data.staticStyle, style)
    : style
}

// normalize possible array / string values into Object
function normalizeStyleBinding (bindingStyle) {
  if (Array.isArray(bindingStyle)) {
    return toObject(bindingStyle)
  }
  if (typeof bindingStyle === 'string') {
    return parseStyleText(bindingStyle)
  }
  return bindingStyle
}

/**
 * parent component style should be after child's
 * so that parent component's style could override it
 */
function getStyle (vnode, checkChild) {
  var res = {};
  var styleData;

  if (checkChild) {
    var childNode = vnode;
    while (childNode.componentInstance) {
      childNode = childNode.componentInstance._vnode;
      if (childNode.data && (styleData = normalizeStyleData(childNode.data))) {
        extend(res, styleData);
      }
    }
  }

  if ((styleData = normalizeStyleData(vnode.data))) {
    extend(res, styleData);
  }

  var parentNode = vnode;
  while ((parentNode = parentNode.parent)) {
    if (parentNode.data && (styleData = normalizeStyleData(parentNode.data))) {
      extend(res, styleData);
    }
  }
  return res
}

/*  */

var cssVarRE = /^--/;
var importantRE = /\s*!important$/;
var setProp = function (el, name, val) {
  /* istanbul ignore if */
  if (cssVarRE.test(name)) {
    el.style.setProperty(name, val);
  } else if (importantRE.test(val)) {
    el.style.setProperty(name, val.replace(importantRE, ''), 'important');
  } else {
    var normalizedName = normalize(name);
    if (Array.isArray(val)) {
      // Support values array created by autoprefixer, e.g.
      // {display: ["-webkit-box", "-ms-flexbox", "flex"]}
      // Set them one by one, and the browser will only set those it can recognize
      for (var i = 0, len = val.length; i < len; i++) {
        el.style[normalizedName] = val[i];
      }
    } else {
      el.style[normalizedName] = val;
    }
  }
};

var vendorNames = ['Webkit', 'Moz', 'ms'];

var emptyStyle;
var normalize = cached(function (prop) {
  emptyStyle = emptyStyle || document.createElement('div').style;
  prop = camelize(prop);
  if (prop !== 'filter' && (prop in emptyStyle)) {
    return prop
  }
  var capName = prop.charAt(0).toUpperCase() + prop.slice(1);
  for (var i = 0; i < vendorNames.length; i++) {
    var name = vendorNames[i] + capName;
    if (name in emptyStyle) {
      return name
    }
  }
});

function updateStyle (oldVnode, vnode) {
  var data = vnode.data;
  var oldData = oldVnode.data;

  if (isUndef(data.staticStyle) && isUndef(data.style) &&
    isUndef(oldData.staticStyle) && isUndef(oldData.style)
  ) {
    return
  }

  var cur, name;
  var el = vnode.elm;
  var oldStaticStyle = oldData.staticStyle;
  var oldStyleBinding = oldData.normalizedStyle || oldData.style || {};

  // if static style exists, stylebinding already merged into it when doing normalizeStyleData
  var oldStyle = oldStaticStyle || oldStyleBinding;

  var style = normalizeStyleBinding(vnode.data.style) || {};

  // store normalized style under a different key for next diff
  // make sure to clone it if it's reactive, since the user likley wants
  // to mutate it.
  vnode.data.normalizedStyle = isDef(style.__ob__)
    ? extend({}, style)
    : style;

  var newStyle = getStyle(vnode, true);

  for (name in oldStyle) {
    if (isUndef(newStyle[name])) {
      setProp(el, name, '');
    }
  }
  for (name in newStyle) {
    cur = newStyle[name];
    if (cur !== oldStyle[name]) {
      // ie9 setting to null has no effect, must use empty string
      setProp(el, name, cur == null ? '' : cur);
    }
  }
}

var style = {
  create: updateStyle,
  update: updateStyle
};

/*  */

/**
 * Add class with compatibility for SVG since classList is not supported on
 * SVG elements in IE
 */
function addClass (el, cls) {
  /* istanbul ignore if */
  if (!cls || !(cls = cls.trim())) {
    return
  }

  /* istanbul ignore else */
  if (el.classList) {
    if (cls.indexOf(' ') > -1) {
      cls.split(/\s+/).forEach(function (c) { return el.classList.add(c); });
    } else {
      el.classList.add(cls);
    }
  } else {
    var cur = " " + (el.getAttribute('class') || '') + " ";
    if (cur.indexOf(' ' + cls + ' ') < 0) {
      el.setAttribute('class', (cur + cls).trim());
    }
  }
}

/**
 * Remove class with compatibility for SVG since classList is not supported on
 * SVG elements in IE
 */
function removeClass (el, cls) {
  /* istanbul ignore if */
  if (!cls || !(cls = cls.trim())) {
    return
  }

  /* istanbul ignore else */
  if (el.classList) {
    if (cls.indexOf(' ') > -1) {
      cls.split(/\s+/).forEach(function (c) { return el.classList.remove(c); });
    } else {
      el.classList.remove(cls);
    }
    if (!el.classList.length) {
      el.removeAttribute('class');
    }
  } else {
    var cur = " " + (el.getAttribute('class') || '') + " ";
    var tar = ' ' + cls + ' ';
    while (cur.indexOf(tar) >= 0) {
      cur = cur.replace(tar, ' ');
    }
    cur = cur.trim();
    if (cur) {
      el.setAttribute('class', cur);
    } else {
      el.removeAttribute('class');
    }
  }
}

/*  */

function resolveTransition (def$$1) {
  if (!def$$1) {
    return
  }
  /* istanbul ignore else */
  if (typeof def$$1 === 'object') {
    var res = {};
    if (def$$1.css !== false) {
      extend(res, autoCssTransition(def$$1.name || 'v'));
    }
    extend(res, def$$1);
    return res
  } else if (typeof def$$1 === 'string') {
    return autoCssTransition(def$$1)
  }
}

var autoCssTransition = cached(function (name) {
  return {
    enterClass: (name + "-enter"),
    enterToClass: (name + "-enter-to"),
    enterActiveClass: (name + "-enter-active"),
    leaveClass: (name + "-leave"),
    leaveToClass: (name + "-leave-to"),
    leaveActiveClass: (name + "-leave-active")
  }
});

var hasTransition = inBrowser && !isIE9;
var TRANSITION = 'transition';
var ANIMATION = 'animation';

// Transition property/event sniffing
var transitionProp = 'transition';
var transitionEndEvent = 'transitionend';
var animationProp = 'animation';
var animationEndEvent = 'animationend';
if (hasTransition) {
  /* istanbul ignore if */
  if (window.ontransitionend === undefined &&
    window.onwebkittransitionend !== undefined
  ) {
    transitionProp = 'WebkitTransition';
    transitionEndEvent = 'webkitTransitionEnd';
  }
  if (window.onanimationend === undefined &&
    window.onwebkitanimationend !== undefined
  ) {
    animationProp = 'WebkitAnimation';
    animationEndEvent = 'webkitAnimationEnd';
  }
}

// binding to window is necessary to make hot reload work in IE in strict mode
var raf = inBrowser && window.requestAnimationFrame
  ? window.requestAnimationFrame.bind(window)
  : setTimeout;

function nextFrame (fn) {
  raf(function () {
    raf(fn);
  });
}

function addTransitionClass (el, cls) {
  var transitionClasses = el._transitionClasses || (el._transitionClasses = []);
  if (transitionClasses.indexOf(cls) < 0) {
    transitionClasses.push(cls);
    addClass(el, cls);
  }
}

function removeTransitionClass (el, cls) {
  if (el._transitionClasses) {
    remove(el._transitionClasses, cls);
  }
  removeClass(el, cls);
}

function whenTransitionEnds (
  el,
  expectedType,
  cb
) {
  var ref = getTransitionInfo(el, expectedType);
  var type = ref.type;
  var timeout = ref.timeout;
  var propCount = ref.propCount;
  if (!type) { return cb() }
  var event = type === TRANSITION ? transitionEndEvent : animationEndEvent;
  var ended = 0;
  var end = function () {
    el.removeEventListener(event, onEnd);
    cb();
  };
  var onEnd = function (e) {
    if (e.target === el) {
      if (++ended >= propCount) {
        end();
      }
    }
  };
  setTimeout(function () {
    if (ended < propCount) {
      end();
    }
  }, timeout + 1);
  el.addEventListener(event, onEnd);
}

var transformRE = /\b(transform|all)(,|$)/;

function getTransitionInfo (el, expectedType) {
  var styles = window.getComputedStyle(el);
  var transitionDelays = styles[transitionProp + 'Delay'].split(', ');
  var transitionDurations = styles[transitionProp + 'Duration'].split(', ');
  var transitionTimeout = getTimeout(transitionDelays, transitionDurations);
  var animationDelays = styles[animationProp + 'Delay'].split(', ');
  var animationDurations = styles[animationProp + 'Duration'].split(', ');
  var animationTimeout = getTimeout(animationDelays, animationDurations);

  var type;
  var timeout = 0;
  var propCount = 0;
  /* istanbul ignore if */
  if (expectedType === TRANSITION) {
    if (transitionTimeout > 0) {
      type = TRANSITION;
      timeout = transitionTimeout;
      propCount = transitionDurations.length;
    }
  } else if (expectedType === ANIMATION) {
    if (animationTimeout > 0) {
      type = ANIMATION;
      timeout = animationTimeout;
      propCount = animationDurations.length;
    }
  } else {
    timeout = Math.max(transitionTimeout, animationTimeout);
    type = timeout > 0
      ? transitionTimeout > animationTimeout
        ? TRANSITION
        : ANIMATION
      : null;
    propCount = type
      ? type === TRANSITION
        ? transitionDurations.length
        : animationDurations.length
      : 0;
  }
  var hasTransform =
    type === TRANSITION &&
    transformRE.test(styles[transitionProp + 'Property']);
  return {
    type: type,
    timeout: timeout,
    propCount: propCount,
    hasTransform: hasTransform
  }
}

function getTimeout (delays, durations) {
  /* istanbul ignore next */
  while (delays.length < durations.length) {
    delays = delays.concat(delays);
  }

  return Math.max.apply(null, durations.map(function (d, i) {
    return toMs(d) + toMs(delays[i])
  }))
}

function toMs (s) {
  return Number(s.slice(0, -1)) * 1000
}

/*  */

function enter (vnode, toggleDisplay) {
  var el = vnode.elm;

  // call leave callback now
  if (isDef(el._leaveCb)) {
    el._leaveCb.cancelled = true;
    el._leaveCb();
  }

  var data = resolveTransition(vnode.data.transition);
  if (isUndef(data)) {
    return
  }

  /* istanbul ignore if */
  if (isDef(el._enterCb) || el.nodeType !== 1) {
    return
  }

  var css = data.css;
  var type = data.type;
  var enterClass = data.enterClass;
  var enterToClass = data.enterToClass;
  var enterActiveClass = data.enterActiveClass;
  var appearClass = data.appearClass;
  var appearToClass = data.appearToClass;
  var appearActiveClass = data.appearActiveClass;
  var beforeEnter = data.beforeEnter;
  var enter = data.enter;
  var afterEnter = data.afterEnter;
  var enterCancelled = data.enterCancelled;
  var beforeAppear = data.beforeAppear;
  var appear = data.appear;
  var afterAppear = data.afterAppear;
  var appearCancelled = data.appearCancelled;
  var duration = data.duration;

  // activeInstance will always be the <transition> component managing this
  // transition. One edge case to check is when the <transition> is placed
  // as the root node of a child component. In that case we need to check
  // <transition>'s parent for appear check.
  var context = activeInstance;
  var transitionNode = activeInstance.$vnode;
  while (transitionNode && transitionNode.parent) {
    transitionNode = transitionNode.parent;
    context = transitionNode.context;
  }

  var isAppear = !context._isMounted || !vnode.isRootInsert;

  if (isAppear && !appear && appear !== '') {
    return
  }

  var startClass = isAppear && appearClass
    ? appearClass
    : enterClass;
  var activeClass = isAppear && appearActiveClass
    ? appearActiveClass
    : enterActiveClass;
  var toClass = isAppear && appearToClass
    ? appearToClass
    : enterToClass;

  var beforeEnterHook = isAppear
    ? (beforeAppear || beforeEnter)
    : beforeEnter;
  var enterHook = isAppear
    ? (typeof appear === 'function' ? appear : enter)
    : enter;
  var afterEnterHook = isAppear
    ? (afterAppear || afterEnter)
    : afterEnter;
  var enterCancelledHook = isAppear
    ? (appearCancelled || enterCancelled)
    : enterCancelled;

  var explicitEnterDuration = toNumber(
    isObject(duration)
      ? duration.enter
      : duration
  );

  if (false) {
    checkDuration(explicitEnterDuration, 'enter', vnode);
  }

  var expectsCSS = css !== false && !isIE9;
  var userWantsControl = getHookArgumentsLength(enterHook);

  var cb = el._enterCb = once(function () {
    if (expectsCSS) {
      removeTransitionClass(el, toClass);
      removeTransitionClass(el, activeClass);
    }
    if (cb.cancelled) {
      if (expectsCSS) {
        removeTransitionClass(el, startClass);
      }
      enterCancelledHook && enterCancelledHook(el);
    } else {
      afterEnterHook && afterEnterHook(el);
    }
    el._enterCb = null;
  });

  if (!vnode.data.show) {
    // remove pending leave element on enter by injecting an insert hook
    mergeVNodeHook(vnode.data.hook || (vnode.data.hook = {}), 'insert', function () {
      var parent = el.parentNode;
      var pendingNode = parent && parent._pending && parent._pending[vnode.key];
      if (pendingNode &&
        pendingNode.tag === vnode.tag &&
        pendingNode.elm._leaveCb
      ) {
        pendingNode.elm._leaveCb();
      }
      enterHook && enterHook(el, cb);
    });
  }

  // start enter transition
  beforeEnterHook && beforeEnterHook(el);
  if (expectsCSS) {
    addTransitionClass(el, startClass);
    addTransitionClass(el, activeClass);
    nextFrame(function () {
      addTransitionClass(el, toClass);
      removeTransitionClass(el, startClass);
      if (!cb.cancelled && !userWantsControl) {
        if (isValidDuration(explicitEnterDuration)) {
          setTimeout(cb, explicitEnterDuration);
        } else {
          whenTransitionEnds(el, type, cb);
        }
      }
    });
  }

  if (vnode.data.show) {
    toggleDisplay && toggleDisplay();
    enterHook && enterHook(el, cb);
  }

  if (!expectsCSS && !userWantsControl) {
    cb();
  }
}

function leave (vnode, rm) {
  var el = vnode.elm;

  // call enter callback now
  if (isDef(el._enterCb)) {
    el._enterCb.cancelled = true;
    el._enterCb();
  }

  var data = resolveTransition(vnode.data.transition);
  if (isUndef(data)) {
    return rm()
  }

  /* istanbul ignore if */
  if (isDef(el._leaveCb) || el.nodeType !== 1) {
    return
  }

  var css = data.css;
  var type = data.type;
  var leaveClass = data.leaveClass;
  var leaveToClass = data.leaveToClass;
  var leaveActiveClass = data.leaveActiveClass;
  var beforeLeave = data.beforeLeave;
  var leave = data.leave;
  var afterLeave = data.afterLeave;
  var leaveCancelled = data.leaveCancelled;
  var delayLeave = data.delayLeave;
  var duration = data.duration;

  var expectsCSS = css !== false && !isIE9;
  var userWantsControl = getHookArgumentsLength(leave);

  var explicitLeaveDuration = toNumber(
    isObject(duration)
      ? duration.leave
      : duration
  );

  if (false) {
    checkDuration(explicitLeaveDuration, 'leave', vnode);
  }

  var cb = el._leaveCb = once(function () {
    if (el.parentNode && el.parentNode._pending) {
      el.parentNode._pending[vnode.key] = null;
    }
    if (expectsCSS) {
      removeTransitionClass(el, leaveToClass);
      removeTransitionClass(el, leaveActiveClass);
    }
    if (cb.cancelled) {
      if (expectsCSS) {
        removeTransitionClass(el, leaveClass);
      }
      leaveCancelled && leaveCancelled(el);
    } else {
      rm();
      afterLeave && afterLeave(el);
    }
    el._leaveCb = null;
  });

  if (delayLeave) {
    delayLeave(performLeave);
  } else {
    performLeave();
  }

  function performLeave () {
    // the delayed leave may have already been cancelled
    if (cb.cancelled) {
      return
    }
    // record leaving element
    if (!vnode.data.show) {
      (el.parentNode._pending || (el.parentNode._pending = {}))[(vnode.key)] = vnode;
    }
    beforeLeave && beforeLeave(el);
    if (expectsCSS) {
      addTransitionClass(el, leaveClass);
      addTransitionClass(el, leaveActiveClass);
      nextFrame(function () {
        addTransitionClass(el, leaveToClass);
        removeTransitionClass(el, leaveClass);
        if (!cb.cancelled && !userWantsControl) {
          if (isValidDuration(explicitLeaveDuration)) {
            setTimeout(cb, explicitLeaveDuration);
          } else {
            whenTransitionEnds(el, type, cb);
          }
        }
      });
    }
    leave && leave(el, cb);
    if (!expectsCSS && !userWantsControl) {
      cb();
    }
  }
}

// only used in dev mode
function checkDuration (val, name, vnode) {
  if (typeof val !== 'number') {
    warn(
      "<transition> explicit " + name + " duration is not a valid number - " +
      "got " + (JSON.stringify(val)) + ".",
      vnode.context
    );
  } else if (isNaN(val)) {
    warn(
      "<transition> explicit " + name + " duration is NaN - " +
      'the duration expression might be incorrect.',
      vnode.context
    );
  }
}

function isValidDuration (val) {
  return typeof val === 'number' && !isNaN(val)
}

/**
 * Normalize a transition hook's argument length. The hook may be:
 * - a merged hook (invoker) with the original in .fns
 * - a wrapped component method (check ._length)
 * - a plain function (.length)
 */
function getHookArgumentsLength (fn) {
  if (isUndef(fn)) {
    return false
  }
  var invokerFns = fn.fns;
  if (isDef(invokerFns)) {
    // invoker
    return getHookArgumentsLength(
      Array.isArray(invokerFns)
        ? invokerFns[0]
        : invokerFns
    )
  } else {
    return (fn._length || fn.length) > 1
  }
}

function _enter (_, vnode) {
  if (vnode.data.show !== true) {
    enter(vnode);
  }
}

var transition = inBrowser ? {
  create: _enter,
  activate: _enter,
  remove: function remove$$1 (vnode, rm) {
    /* istanbul ignore else */
    if (vnode.data.show !== true) {
      leave(vnode, rm);
    } else {
      rm();
    }
  }
} : {};

var platformModules = [
  attrs,
  klass,
  events,
  domProps,
  style,
  transition
];

/*  */

// the directive module should be applied last, after all
// built-in modules have been applied.
var modules = platformModules.concat(baseModules);

var patch = createPatchFunction({ nodeOps: nodeOps, modules: modules });

/**
 * Not type checking this file because flow doesn't like attaching
 * properties to Elements.
 */

var isTextInputType = makeMap('text,number,password,search,email,tel,url');

/* istanbul ignore if */
if (isIE9) {
  // http://www.matts411.com/post/internet-explorer-9-oninput/
  document.addEventListener('selectionchange', function () {
    var el = document.activeElement;
    if (el && el.vmodel) {
      trigger(el, 'input');
    }
  });
}

var model$1 = {
  inserted: function inserted (el, binding, vnode) {
    if (vnode.tag === 'select') {
      var cb = function () {
        setSelected(el, binding, vnode.context);
      };
      cb();
      /* istanbul ignore if */
      if (isIE || isEdge) {
        setTimeout(cb, 0);
      }
      el._vOptions = [].map.call(el.options, getValue);
    } else if (vnode.tag === 'textarea' || isTextInputType(el.type)) {
      el._vModifiers = binding.modifiers;
      if (!binding.modifiers.lazy) {
        // Safari < 10.2 & UIWebView doesn't fire compositionend when
        // switching focus before confirming composition choice
        // this also fixes the issue where some browsers e.g. iOS Chrome
        // fires "change" instead of "input" on autocomplete.
        el.addEventListener('change', onCompositionEnd);
        if (!isAndroid) {
          el.addEventListener('compositionstart', onCompositionStart);
          el.addEventListener('compositionend', onCompositionEnd);
        }
        /* istanbul ignore if */
        if (isIE9) {
          el.vmodel = true;
        }
      }
    }
  },
  componentUpdated: function componentUpdated (el, binding, vnode) {
    if (vnode.tag === 'select') {
      setSelected(el, binding, vnode.context);
      // in case the options rendered by v-for have changed,
      // it's possible that the value is out-of-sync with the rendered options.
      // detect such cases and filter out values that no longer has a matching
      // option in the DOM.
      var prevOptions = el._vOptions;
      var curOptions = el._vOptions = [].map.call(el.options, getValue);
      if (curOptions.some(function (o, i) { return !looseEqual(o, prevOptions[i]); })) {
        trigger(el, 'change');
      }
    }
  }
};

function setSelected (el, binding, vm) {
  var value = binding.value;
  var isMultiple = el.multiple;
  if (isMultiple && !Array.isArray(value)) {
    "production" !== 'production' && warn(
      "<select multiple v-model=\"" + (binding.expression) + "\"> " +
      "expects an Array value for its binding, but got " + (Object.prototype.toString.call(value).slice(8, -1)),
      vm
    );
    return
  }
  var selected, option;
  for (var i = 0, l = el.options.length; i < l; i++) {
    option = el.options[i];
    if (isMultiple) {
      selected = looseIndexOf(value, getValue(option)) > -1;
      if (option.selected !== selected) {
        option.selected = selected;
      }
    } else {
      if (looseEqual(getValue(option), value)) {
        if (el.selectedIndex !== i) {
          el.selectedIndex = i;
        }
        return
      }
    }
  }
  if (!isMultiple) {
    el.selectedIndex = -1;
  }
}

function getValue (option) {
  return '_value' in option
    ? option._value
    : option.value
}

function onCompositionStart (e) {
  e.target.composing = true;
}

function onCompositionEnd (e) {
  // prevent triggering an input event for no reason
  if (!e.target.composing) { return }
  e.target.composing = false;
  trigger(e.target, 'input');
}

function trigger (el, type) {
  var e = document.createEvent('HTMLEvents');
  e.initEvent(type, true, true);
  el.dispatchEvent(e);
}

/*  */

// recursively search for possible transition defined inside the component root
function locateNode (vnode) {
  return vnode.componentInstance && (!vnode.data || !vnode.data.transition)
    ? locateNode(vnode.componentInstance._vnode)
    : vnode
}

var show = {
  bind: function bind (el, ref, vnode) {
    var value = ref.value;

    vnode = locateNode(vnode);
    var transition$$1 = vnode.data && vnode.data.transition;
    var originalDisplay = el.__vOriginalDisplay =
      el.style.display === 'none' ? '' : el.style.display;
    if (value && transition$$1) {
      vnode.data.show = true;
      enter(vnode, function () {
        el.style.display = originalDisplay;
      });
    } else {
      el.style.display = value ? originalDisplay : 'none';
    }
  },

  update: function update (el, ref, vnode) {
    var value = ref.value;
    var oldValue = ref.oldValue;

    /* istanbul ignore if */
    if (value === oldValue) { return }
    vnode = locateNode(vnode);
    var transition$$1 = vnode.data && vnode.data.transition;
    if (transition$$1) {
      vnode.data.show = true;
      if (value) {
        enter(vnode, function () {
          el.style.display = el.__vOriginalDisplay;
        });
      } else {
        leave(vnode, function () {
          el.style.display = 'none';
        });
      }
    } else {
      el.style.display = value ? el.__vOriginalDisplay : 'none';
    }
  },

  unbind: function unbind (
    el,
    binding,
    vnode,
    oldVnode,
    isDestroy
  ) {
    if (!isDestroy) {
      el.style.display = el.__vOriginalDisplay;
    }
  }
};

var platformDirectives = {
  model: model$1,
  show: show
};

/*  */

// Provides transition support for a single element/component.
// supports transition mode (out-in / in-out)

var transitionProps = {
  name: String,
  appear: Boolean,
  css: Boolean,
  mode: String,
  type: String,
  enterClass: String,
  leaveClass: String,
  enterToClass: String,
  leaveToClass: String,
  enterActiveClass: String,
  leaveActiveClass: String,
  appearClass: String,
  appearActiveClass: String,
  appearToClass: String,
  duration: [Number, String, Object]
};

// in case the child is also an abstract component, e.g. <keep-alive>
// we want to recursively retrieve the real component to be rendered
function getRealChild (vnode) {
  var compOptions = vnode && vnode.componentOptions;
  if (compOptions && compOptions.Ctor.options.abstract) {
    return getRealChild(getFirstComponentChild(compOptions.children))
  } else {
    return vnode
  }
}

function extractTransitionData (comp) {
  var data = {};
  var options = comp.$options;
  // props
  for (var key in options.propsData) {
    data[key] = comp[key];
  }
  // events.
  // extract listeners and pass them directly to the transition methods
  var listeners = options._parentListeners;
  for (var key$1 in listeners) {
    data[camelize(key$1)] = listeners[key$1];
  }
  return data
}

function placeholder (h, rawChild) {
  if (/\d-keep-alive$/.test(rawChild.tag)) {
    return h('keep-alive', {
      props: rawChild.componentOptions.propsData
    })
  }
}

function hasParentTransition (vnode) {
  while ((vnode = vnode.parent)) {
    if (vnode.data.transition) {
      return true
    }
  }
}

function isSameChild (child, oldChild) {
  return oldChild.key === child.key && oldChild.tag === child.tag
}

function isAsyncPlaceholder (node) {
  return node.isComment && node.asyncFactory
}

var Transition = {
  name: 'transition',
  props: transitionProps,
  abstract: true,

  render: function render (h) {
    var this$1 = this;

    var children = this.$options._renderChildren;
    if (!children) {
      return
    }

    // filter out text nodes (possible whitespaces)
    children = children.filter(function (c) { return c.tag || isAsyncPlaceholder(c); });
    /* istanbul ignore if */
    if (!children.length) {
      return
    }

    // warn multiple elements
    if (false) {
      warn(
        '<transition> can only be used on a single element. Use ' +
        '<transition-group> for lists.',
        this.$parent
      );
    }

    var mode = this.mode;

    // warn invalid mode
    if (false
    ) {
      warn(
        'invalid <transition> mode: ' + mode,
        this.$parent
      );
    }

    var rawChild = children[0];

    // if this is a component root node and the component's
    // parent container node also has transition, skip.
    if (hasParentTransition(this.$vnode)) {
      return rawChild
    }

    // apply transition data to child
    // use getRealChild() to ignore abstract components e.g. keep-alive
    var child = getRealChild(rawChild);
    /* istanbul ignore if */
    if (!child) {
      return rawChild
    }

    if (this._leaving) {
      return placeholder(h, rawChild)
    }

    // ensure a key that is unique to the vnode type and to this transition
    // component instance. This key will be used to remove pending leaving nodes
    // during entering.
    var id = "__transition-" + (this._uid) + "-";
    child.key = child.key == null
      ? child.isComment
        ? id + 'comment'
        : id + child.tag
      : isPrimitive(child.key)
        ? (String(child.key).indexOf(id) === 0 ? child.key : id + child.key)
        : child.key;

    var data = (child.data || (child.data = {})).transition = extractTransitionData(this);
    var oldRawChild = this._vnode;
    var oldChild = getRealChild(oldRawChild);

    // mark v-show
    // so that the transition module can hand over the control to the directive
    if (child.data.directives && child.data.directives.some(function (d) { return d.name === 'show'; })) {
      child.data.show = true;
    }

    if (
      oldChild &&
      oldChild.data &&
      !isSameChild(child, oldChild) &&
      !isAsyncPlaceholder(oldChild)
    ) {
      // replace old child transition data with fresh one
      // important for dynamic transitions!
      var oldData = oldChild && (oldChild.data.transition = extend({}, data));
      // handle transition mode
      if (mode === 'out-in') {
        // return placeholder node and queue update when leave finishes
        this._leaving = true;
        mergeVNodeHook(oldData, 'afterLeave', function () {
          this$1._leaving = false;
          this$1.$forceUpdate();
        });
        return placeholder(h, rawChild)
      } else if (mode === 'in-out') {
        if (isAsyncPlaceholder(child)) {
          return oldRawChild
        }
        var delayedLeave;
        var performLeave = function () { delayedLeave(); };
        mergeVNodeHook(data, 'afterEnter', performLeave);
        mergeVNodeHook(data, 'enterCancelled', performLeave);
        mergeVNodeHook(oldData, 'delayLeave', function (leave) { delayedLeave = leave; });
      }
    }

    return rawChild
  }
};

/*  */

// Provides transition support for list items.
// supports move transitions using the FLIP technique.

// Because the vdom's children update algorithm is "unstable" - i.e.
// it doesn't guarantee the relative positioning of removed elements,
// we force transition-group to update its children into two passes:
// in the first pass, we remove all nodes that need to be removed,
// triggering their leaving transition; in the second pass, we insert/move
// into the final desired state. This way in the second pass removed
// nodes will remain where they should be.

var props = extend({
  tag: String,
  moveClass: String
}, transitionProps);

delete props.mode;

var TransitionGroup = {
  props: props,

  render: function render (h) {
    var tag = this.tag || this.$vnode.data.tag || 'span';
    var map = Object.create(null);
    var prevChildren = this.prevChildren = this.children;
    var rawChildren = this.$slots.default || [];
    var children = this.children = [];
    var transitionData = extractTransitionData(this);

    for (var i = 0; i < rawChildren.length; i++) {
      var c = rawChildren[i];
      if (c.tag) {
        if (c.key != null && String(c.key).indexOf('__vlist') !== 0) {
          children.push(c);
          map[c.key] = c
          ;(c.data || (c.data = {})).transition = transitionData;
        } else if (false) {
          var opts = c.componentOptions;
          var name = opts ? (opts.Ctor.options.name || opts.tag || '') : c.tag;
          warn(("<transition-group> children must be keyed: <" + name + ">"));
        }
      }
    }

    if (prevChildren) {
      var kept = [];
      var removed = [];
      for (var i$1 = 0; i$1 < prevChildren.length; i$1++) {
        var c$1 = prevChildren[i$1];
        c$1.data.transition = transitionData;
        c$1.data.pos = c$1.elm.getBoundingClientRect();
        if (map[c$1.key]) {
          kept.push(c$1);
        } else {
          removed.push(c$1);
        }
      }
      this.kept = h(tag, null, kept);
      this.removed = removed;
    }

    return h(tag, null, children)
  },

  beforeUpdate: function beforeUpdate () {
    // force removing pass
    this.__patch__(
      this._vnode,
      this.kept,
      false, // hydrating
      true // removeOnly (!important, avoids unnecessary moves)
    );
    this._vnode = this.kept;
  },

  updated: function updated () {
    var children = this.prevChildren;
    var moveClass = this.moveClass || ((this.name || 'v') + '-move');
    if (!children.length || !this.hasMove(children[0].elm, moveClass)) {
      return
    }

    // we divide the work into three loops to avoid mixing DOM reads and writes
    // in each iteration - which helps prevent layout thrashing.
    children.forEach(callPendingCbs);
    children.forEach(recordPosition);
    children.forEach(applyTranslation);

    // force reflow to put everything in position
    var body = document.body;
    var f = body.offsetHeight; // eslint-disable-line

    children.forEach(function (c) {
      if (c.data.moved) {
        var el = c.elm;
        var s = el.style;
        addTransitionClass(el, moveClass);
        s.transform = s.WebkitTransform = s.transitionDuration = '';
        el.addEventListener(transitionEndEvent, el._moveCb = function cb (e) {
          if (!e || /transform$/.test(e.propertyName)) {
            el.removeEventListener(transitionEndEvent, cb);
            el._moveCb = null;
            removeTransitionClass(el, moveClass);
          }
        });
      }
    });
  },

  methods: {
    hasMove: function hasMove (el, moveClass) {
      /* istanbul ignore if */
      if (!hasTransition) {
        return false
      }
      /* istanbul ignore if */
      if (this._hasMove) {
        return this._hasMove
      }
      // Detect whether an element with the move class applied has
      // CSS transitions. Since the element may be inside an entering
      // transition at this very moment, we make a clone of it and remove
      // all other transition classes applied to ensure only the move class
      // is applied.
      var clone = el.cloneNode();
      if (el._transitionClasses) {
        el._transitionClasses.forEach(function (cls) { removeClass(clone, cls); });
      }
      addClass(clone, moveClass);
      clone.style.display = 'none';
      this.$el.appendChild(clone);
      var info = getTransitionInfo(clone);
      this.$el.removeChild(clone);
      return (this._hasMove = info.hasTransform)
    }
  }
};

function callPendingCbs (c) {
  /* istanbul ignore if */
  if (c.elm._moveCb) {
    c.elm._moveCb();
  }
  /* istanbul ignore if */
  if (c.elm._enterCb) {
    c.elm._enterCb();
  }
}

function recordPosition (c) {
  c.data.newPos = c.elm.getBoundingClientRect();
}

function applyTranslation (c) {
  var oldPos = c.data.pos;
  var newPos = c.data.newPos;
  var dx = oldPos.left - newPos.left;
  var dy = oldPos.top - newPos.top;
  if (dx || dy) {
    c.data.moved = true;
    var s = c.elm.style;
    s.transform = s.WebkitTransform = "translate(" + dx + "px," + dy + "px)";
    s.transitionDuration = '0s';
  }
}

var platformComponents = {
  Transition: Transition,
  TransitionGroup: TransitionGroup
};

/*  */

// install platform specific utils
Vue$3.config.mustUseProp = mustUseProp;
Vue$3.config.isReservedTag = isReservedTag;
Vue$3.config.isReservedAttr = isReservedAttr;
Vue$3.config.getTagNamespace = getTagNamespace;
Vue$3.config.isUnknownElement = isUnknownElement;

// install platform runtime directives & components
extend(Vue$3.options.directives, platformDirectives);
extend(Vue$3.options.components, platformComponents);

// install platform patch function
Vue$3.prototype.__patch__ = inBrowser ? patch : noop;

// public mount method
Vue$3.prototype.$mount = function (
  el,
  hydrating
) {
  el = el && inBrowser ? query(el) : undefined;
  return mountComponent(this, el, hydrating)
};

// devtools global hook
/* istanbul ignore next */
setTimeout(function () {
  if (config.devtools) {
    if (devtools) {
      devtools.emit('init', Vue$3);
    } else if (false) {
      console[console.info ? 'info' : 'log'](
        'Download the Vue Devtools extension for a better development experience:\n' +
        'https://github.com/vuejs/vue-devtools'
      );
    }
  }
  if (false
  ) {
    console[console.info ? 'info' : 'log'](
      "You are running Vue in development mode.\n" +
      "Make sure to turn on production mode when deploying for production.\n" +
      "See more tips at https://vuejs.org/guide/deployment.html"
    );
  }
}, 0);

/*  */

/* harmony default export */ __webpack_exports__["default"] = (Vue$3);

/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(27)))

/***/ }),
/* 5 */
/***/ (function(module, exports) {

var core = module.exports = { version: '2.5.0' };
if (typeof __e == 'number') __e = core; // eslint-disable-line no-undef


/***/ }),
/* 6 */
/***/ (function(module, exports, __webpack_require__) {

var store = __webpack_require__(50)('wks');
var uid = __webpack_require__(34);
var Symbol = __webpack_require__(8).Symbol;
var USE_SYMBOL = typeof Symbol == 'function';

var $exports = module.exports = function (name) {
  return store[name] || (store[name] =
    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));
};

$exports.store = store;


/***/ }),
/* 7 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global, module) {var __WEBPACK_AMD_DEFINE_RESULT__;/**
 * @license
 * Lodash <https://lodash.com/>
 * Copyright JS Foundation and other contributors <https://js.foundation/>
 * Released under MIT license <https://lodash.com/license>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 */
;(function() {

  /** Used as a safe reference for `undefined` in pre-ES5 environments. */
  var undefined;

  /** Used as the semantic version number. */
  var VERSION = '4.17.4';

  /** Used as the size to enable large array optimizations. */
  var LARGE_ARRAY_SIZE = 200;

  /** Error message constants. */
  var CORE_ERROR_TEXT = 'Unsupported core-js use. Try https://npms.io/search?q=ponyfill.',
      FUNC_ERROR_TEXT = 'Expected a function';

  /** Used to stand-in for `undefined` hash values. */
  var HASH_UNDEFINED = '__lodash_hash_undefined__';

  /** Used as the maximum memoize cache size. */
  var MAX_MEMOIZE_SIZE = 500;

  /** Used as the internal argument placeholder. */
  var PLACEHOLDER = '__lodash_placeholder__';

  /** Used to compose bitmasks for cloning. */
  var CLONE_DEEP_FLAG = 1,
      CLONE_FLAT_FLAG = 2,
      CLONE_SYMBOLS_FLAG = 4;

  /** Used to compose bitmasks for value comparisons. */
  var COMPARE_PARTIAL_FLAG = 1,
      COMPARE_UNORDERED_FLAG = 2;

  /** Used to compose bitmasks for function metadata. */
  var WRAP_BIND_FLAG = 1,
      WRAP_BIND_KEY_FLAG = 2,
      WRAP_CURRY_BOUND_FLAG = 4,
      WRAP_CURRY_FLAG = 8,
      WRAP_CURRY_RIGHT_FLAG = 16,
      WRAP_PARTIAL_FLAG = 32,
      WRAP_PARTIAL_RIGHT_FLAG = 64,
      WRAP_ARY_FLAG = 128,
      WRAP_REARG_FLAG = 256,
      WRAP_FLIP_FLAG = 512;

  /** Used as default options for `_.truncate`. */
  var DEFAULT_TRUNC_LENGTH = 30,
      DEFAULT_TRUNC_OMISSION = '...';

  /** Used to detect hot functions by number of calls within a span of milliseconds. */
  var HOT_COUNT = 800,
      HOT_SPAN = 16;

  /** Used to indicate the type of lazy iteratees. */
  var LAZY_FILTER_FLAG = 1,
      LAZY_MAP_FLAG = 2,
      LAZY_WHILE_FLAG = 3;

  /** Used as references for various `Number` constants. */
  var INFINITY = 1 / 0,
      MAX_SAFE_INTEGER = 9007199254740991,
      MAX_INTEGER = 1.7976931348623157e+308,
      NAN = 0 / 0;

  /** Used as references for the maximum length and index of an array. */
  var MAX_ARRAY_LENGTH = 4294967295,
      MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,
      HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;

  /** Used to associate wrap methods with their bit flags. */
  var wrapFlags = [
    ['ary', WRAP_ARY_FLAG],
    ['bind', WRAP_BIND_FLAG],
    ['bindKey', WRAP_BIND_KEY_FLAG],
    ['curry', WRAP_CURRY_FLAG],
    ['curryRight', WRAP_CURRY_RIGHT_FLAG],
    ['flip', WRAP_FLIP_FLAG],
    ['partial', WRAP_PARTIAL_FLAG],
    ['partialRight', WRAP_PARTIAL_RIGHT_FLAG],
    ['rearg', WRAP_REARG_FLAG]
  ];

  /** `Object#toString` result references. */
  var argsTag = '[object Arguments]',
      arrayTag = '[object Array]',
      asyncTag = '[object AsyncFunction]',
      boolTag = '[object Boolean]',
      dateTag = '[object Date]',
      domExcTag = '[object DOMException]',
      errorTag = '[object Error]',
      funcTag = '[object Function]',
      genTag = '[object GeneratorFunction]',
      mapTag = '[object Map]',
      numberTag = '[object Number]',
      nullTag = '[object Null]',
      objectTag = '[object Object]',
      promiseTag = '[object Promise]',
      proxyTag = '[object Proxy]',
      regexpTag = '[object RegExp]',
      setTag = '[object Set]',
      stringTag = '[object String]',
      symbolTag = '[object Symbol]',
      undefinedTag = '[object Undefined]',
      weakMapTag = '[object WeakMap]',
      weakSetTag = '[object WeakSet]';

  var arrayBufferTag = '[object ArrayBuffer]',
      dataViewTag = '[object DataView]',
      float32Tag = '[object Float32Array]',
      float64Tag = '[object Float64Array]',
      int8Tag = '[object Int8Array]',
      int16Tag = '[object Int16Array]',
      int32Tag = '[object Int32Array]',
      uint8Tag = '[object Uint8Array]',
      uint8ClampedTag = '[object Uint8ClampedArray]',
      uint16Tag = '[object Uint16Array]',
      uint32Tag = '[object Uint32Array]';

  /** Used to match empty string literals in compiled template source. */
  var reEmptyStringLeading = /\b__p \+= '';/g,
      reEmptyStringMiddle = /\b(__p \+=) '' \+/g,
      reEmptyStringTrailing = /(__e\(.*?\)|\b__t\)) \+\n'';/g;

  /** Used to match HTML entities and HTML characters. */
  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g,
      reUnescapedHtml = /[&<>"']/g,
      reHasEscapedHtml = RegExp(reEscapedHtml.source),
      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);

  /** Used to match template delimiters. */
  var reEscape = /<%-([\s\S]+?)%>/g,
      reEvaluate = /<%([\s\S]+?)%>/g,
      reInterpolate = /<%=([\s\S]+?)%>/g;

  /** Used to match property names within property paths. */
  var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
      reIsPlainProp = /^\w*$/,
      reLeadingDot = /^\./,
      rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;

  /**
   * Used to match `RegExp`
   * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
   */
  var reRegExpChar = /[\\^$.*+?()[\]{}|]/g,
      reHasRegExpChar = RegExp(reRegExpChar.source);

  /** Used to match leading and trailing whitespace. */
  var reTrim = /^\s+|\s+$/g,
      reTrimStart = /^\s+/,
      reTrimEnd = /\s+$/;

  /** Used to match wrap detail comments. */
  var reWrapComment = /\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/,
      reWrapDetails = /\{\n\/\* \[wrapped with (.+)\] \*/,
      reSplitDetails = /,? & /;

  /** Used to match words composed of alphanumeric characters. */
  var reAsciiWord = /[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g;

  /** Used to match backslashes in property paths. */
  var reEscapeChar = /\\(\\)?/g;

  /**
   * Used to match
   * [ES template delimiters](http://ecma-international.org/ecma-262/7.0/#sec-template-literal-lexical-components).
   */
  var reEsTemplate = /\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g;

  /** Used to match `RegExp` flags from their coerced string values. */
  var reFlags = /\w*$/;

  /** Used to detect bad signed hexadecimal string values. */
  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;

  /** Used to detect binary string values. */
  var reIsBinary = /^0b[01]+$/i;

  /** Used to detect host constructors (Safari). */
  var reIsHostCtor = /^\[object .+?Constructor\]$/;

  /** Used to detect octal string values. */
  var reIsOctal = /^0o[0-7]+$/i;

  /** Used to detect unsigned integer values. */
  var reIsUint = /^(?:0|[1-9]\d*)$/;

  /** Used to match Latin Unicode letters (excluding mathematical operators). */
  var reLatin = /[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g;

  /** Used to ensure capturing order of template delimiters. */
  var reNoMatch = /($^)/;

  /** Used to match unescaped characters in compiled string literals. */
  var reUnescapedString = /['\n\r\u2028\u2029\\]/g;

  /** Used to compose unicode character classes. */
  var rsAstralRange = '\\ud800-\\udfff',
      rsComboMarksRange = '\\u0300-\\u036f',
      reComboHalfMarksRange = '\\ufe20-\\ufe2f',
      rsComboSymbolsRange = '\\u20d0-\\u20ff',
      rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,
      rsDingbatRange = '\\u2700-\\u27bf',
      rsLowerRange = 'a-z\\xdf-\\xf6\\xf8-\\xff',
      rsMathOpRange = '\\xac\\xb1\\xd7\\xf7',
      rsNonCharRange = '\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf',
      rsPunctuationRange = '\\u2000-\\u206f',
      rsSpaceRange = ' \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000',
      rsUpperRange = 'A-Z\\xc0-\\xd6\\xd8-\\xde',
      rsVarRange = '\\ufe0e\\ufe0f',
      rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;

  /** Used to compose unicode capture groups. */
  var rsApos = "['\u2019]",
      rsAstral = '[' + rsAstralRange + ']',
      rsBreak = '[' + rsBreakRange + ']',
      rsCombo = '[' + rsComboRange + ']',
      rsDigits = '\\d+',
      rsDingbat = '[' + rsDingbatRange + ']',
      rsLower = '[' + rsLowerRange + ']',
      rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',
      rsFitz = '\\ud83c[\\udffb-\\udfff]',
      rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',
      rsNonAstral = '[^' + rsAstralRange + ']',
      rsRegional = '(?:\\ud83c[\\udde6-\\uddff]){2}',
      rsSurrPair = '[\\ud800-\\udbff][\\udc00-\\udfff]',
      rsUpper = '[' + rsUpperRange + ']',
      rsZWJ = '\\u200d';

  /** Used to compose unicode regexes. */
  var rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',
      rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',
      rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',
      rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',
      reOptMod = rsModifier + '?',
      rsOptVar = '[' + rsVarRange + ']?',
      rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',
      rsOrdLower = '\\d*(?:(?:1st|2nd|3rd|(?![123])\\dth)\\b)',
      rsOrdUpper = '\\d*(?:(?:1ST|2ND|3RD|(?![123])\\dTH)\\b)',
      rsSeq = rsOptVar + reOptMod + rsOptJoin,
      rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,
      rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';

  /** Used to match apostrophes. */
  var reApos = RegExp(rsApos, 'g');

  /**
   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and
   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).
   */
  var reComboMark = RegExp(rsCombo, 'g');

  /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */
  var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');

  /** Used to match complex or compound words. */
  var reUnicodeWord = RegExp([
    rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',
    rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')',
    rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,
    rsUpper + '+' + rsOptContrUpper,
    rsOrdUpper,
    rsOrdLower,
    rsDigits,
    rsEmoji
  ].join('|'), 'g');

  /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */
  var reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');

  /** Used to detect strings that need a more robust regexp to match words. */
  var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2,}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;

  /** Used to assign default `context` object properties. */
  var contextProps = [
    'Array', 'Buffer', 'DataView', 'Date', 'Error', 'Float32Array', 'Float64Array',
    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object',
    'Promise', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError', 'Uint8Array',
    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap',
    '_', 'clearTimeout', 'isFinite', 'parseInt', 'setTimeout'
  ];

  /** Used to make template sourceURLs easier to identify. */
  var templateCounter = -1;

  /** Used to identify `toStringTag` values of typed arrays. */
  var typedArrayTags = {};
  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =
  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =
  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =
  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =
  typedArrayTags[uint32Tag] = true;
  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =
  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =
  typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =
  typedArrayTags[errorTag] = typedArrayTags[funcTag] =
  typedArrayTags[mapTag] = typedArrayTags[numberTag] =
  typedArrayTags[objectTag] = typedArrayTags[regexpTag] =
  typedArrayTags[setTag] = typedArrayTags[stringTag] =
  typedArrayTags[weakMapTag] = false;

  /** Used to identify `toStringTag` values supported by `_.clone`. */
  var cloneableTags = {};
  cloneableTags[argsTag] = cloneableTags[arrayTag] =
  cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =
  cloneableTags[boolTag] = cloneableTags[dateTag] =
  cloneableTags[float32Tag] = cloneableTags[float64Tag] =
  cloneableTags[int8Tag] = cloneableTags[int16Tag] =
  cloneableTags[int32Tag] = cloneableTags[mapTag] =
  cloneableTags[numberTag] = cloneableTags[objectTag] =
  cloneableTags[regexpTag] = cloneableTags[setTag] =
  cloneableTags[stringTag] = cloneableTags[symbolTag] =
  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =
  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;
  cloneableTags[errorTag] = cloneableTags[funcTag] =
  cloneableTags[weakMapTag] = false;

  /** Used to map Latin Unicode letters to basic Latin letters. */
  var deburredLetters = {
    // Latin-1 Supplement block.
    '\xc0': 'A',  '\xc1': 'A', '\xc2': 'A', '\xc3': 'A', '\xc4': 'A', '\xc5': 'A',
    '\xe0': 'a',  '\xe1': 'a', '\xe2': 'a', '\xe3': 'a', '\xe4': 'a', '\xe5': 'a',
    '\xc7': 'C',  '\xe7': 'c',
    '\xd0': 'D',  '\xf0': 'd',
    '\xc8': 'E',  '\xc9': 'E', '\xca': 'E', '\xcb': 'E',
    '\xe8': 'e',  '\xe9': 'e', '\xea': 'e', '\xeb': 'e',
    '\xcc': 'I',  '\xcd': 'I', '\xce': 'I', '\xcf': 'I',
    '\xec': 'i',  '\xed': 'i', '\xee': 'i', '\xef': 'i',
    '\xd1': 'N',  '\xf1': 'n',
    '\xd2': 'O',  '\xd3': 'O', '\xd4': 'O', '\xd5': 'O', '\xd6': 'O', '\xd8': 'O',
    '\xf2': 'o',  '\xf3': 'o', '\xf4': 'o', '\xf5': 'o', '\xf6': 'o', '\xf8': 'o',
    '\xd9': 'U',  '\xda': 'U', '\xdb': 'U', '\xdc': 'U',
    '\xf9': 'u',  '\xfa': 'u', '\xfb': 'u', '\xfc': 'u',
    '\xdd': 'Y',  '\xfd': 'y', '\xff': 'y',
    '\xc6': 'Ae', '\xe6': 'ae',
    '\xde': 'Th', '\xfe': 'th',
    '\xdf': 'ss',
    // Latin Extended-A block.
    '\u0100': 'A',  '\u0102': 'A', '\u0104': 'A',
    '\u0101': 'a',  '\u0103': 'a', '\u0105': 'a',
    '\u0106': 'C',  '\u0108': 'C', '\u010a': 'C', '\u010c': 'C',
    '\u0107': 'c',  '\u0109': 'c', '\u010b': 'c', '\u010d': 'c',
    '\u010e': 'D',  '\u0110': 'D', '\u010f': 'd', '\u0111': 'd',
    '\u0112': 'E',  '\u0114': 'E', '\u0116': 'E', '\u0118': 'E', '\u011a': 'E',
    '\u0113': 'e',  '\u0115': 'e', '\u0117': 'e', '\u0119': 'e', '\u011b': 'e',
    '\u011c': 'G',  '\u011e': 'G', '\u0120': 'G', '\u0122': 'G',
    '\u011d': 'g',  '\u011f': 'g', '\u0121': 'g', '\u0123': 'g',
    '\u0124': 'H',  '\u0126': 'H', '\u0125': 'h', '\u0127': 'h',
    '\u0128': 'I',  '\u012a': 'I', '\u012c': 'I', '\u012e': 'I', '\u0130': 'I',
    '\u0129': 'i',  '\u012b': 'i', '\u012d': 'i', '\u012f': 'i', '\u0131': 'i',
    '\u0134': 'J',  '\u0135': 'j',
    '\u0136': 'K',  '\u0137': 'k', '\u0138': 'k',
    '\u0139': 'L',  '\u013b': 'L', '\u013d': 'L', '\u013f': 'L', '\u0141': 'L',
    '\u013a': 'l',  '\u013c': 'l', '\u013e': 'l', '\u0140': 'l', '\u0142': 'l',
    '\u0143': 'N',  '\u0145': 'N', '\u0147': 'N', '\u014a': 'N',
    '\u0144': 'n',  '\u0146': 'n', '\u0148': 'n', '\u014b': 'n',
    '\u014c': 'O',  '\u014e': 'O', '\u0150': 'O',
    '\u014d': 'o',  '\u014f': 'o', '\u0151': 'o',
    '\u0154': 'R',  '\u0156': 'R', '\u0158': 'R',
    '\u0155': 'r',  '\u0157': 'r', '\u0159': 'r',
    '\u015a': 'S',  '\u015c': 'S', '\u015e': 'S', '\u0160': 'S',
    '\u015b': 's',  '\u015d': 's', '\u015f': 's', '\u0161': 's',
    '\u0162': 'T',  '\u0164': 'T', '\u0166': 'T',
    '\u0163': 't',  '\u0165': 't', '\u0167': 't',
    '\u0168': 'U',  '\u016a': 'U', '\u016c': 'U', '\u016e': 'U', '\u0170': 'U', '\u0172': 'U',
    '\u0169': 'u',  '\u016b': 'u', '\u016d': 'u', '\u016f': 'u', '\u0171': 'u', '\u0173': 'u',
    '\u0174': 'W',  '\u0175': 'w',
    '\u0176': 'Y',  '\u0177': 'y', '\u0178': 'Y',
    '\u0179': 'Z',  '\u017b': 'Z', '\u017d': 'Z',
    '\u017a': 'z',  '\u017c': 'z', '\u017e': 'z',
    '\u0132': 'IJ', '\u0133': 'ij',
    '\u0152': 'Oe', '\u0153': 'oe',
    '\u0149': "'n", '\u017f': 's'
  };

  /** Used to map characters to HTML entities. */
  var htmlEscapes = {
    '&': '&amp;',
    '<': '&lt;',
    '>': '&gt;',
    '"': '&quot;',
    "'": '&#39;'
  };

  /** Used to map HTML entities to characters. */
  var htmlUnescapes = {
    '&amp;': '&',
    '&lt;': '<',
    '&gt;': '>',
    '&quot;': '"',
    '&#39;': "'"
  };

  /** Used to escape characters for inclusion in compiled string literals. */
  var stringEscapes = {
    '\\': '\\',
    "'": "'",
    '\n': 'n',
    '\r': 'r',
    '\u2028': 'u2028',
    '\u2029': 'u2029'
  };

  /** Built-in method references without a dependency on `root`. */
  var freeParseFloat = parseFloat,
      freeParseInt = parseInt;

  /** Detect free variable `global` from Node.js. */
  var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;

  /** Detect free variable `self`. */
  var freeSelf = typeof self == 'object' && self && self.Object === Object && self;

  /** Used as a reference to the global object. */
  var root = freeGlobal || freeSelf || Function('return this')();

  /** Detect free variable `exports`. */
  var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;

  /** Detect free variable `module`. */
  var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;

  /** Detect the popular CommonJS extension `module.exports`. */
  var moduleExports = freeModule && freeModule.exports === freeExports;

  /** Detect free variable `process` from Node.js. */
  var freeProcess = moduleExports && freeGlobal.process;

  /** Used to access faster Node.js helpers. */
  var nodeUtil = (function() {
    try {
      return freeProcess && freeProcess.binding && freeProcess.binding('util');
    } catch (e) {}
  }());

  /* Node.js helper references. */
  var nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer,
      nodeIsDate = nodeUtil && nodeUtil.isDate,
      nodeIsMap = nodeUtil && nodeUtil.isMap,
      nodeIsRegExp = nodeUtil && nodeUtil.isRegExp,
      nodeIsSet = nodeUtil && nodeUtil.isSet,
      nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;

  /*--------------------------------------------------------------------------*/

  /**
   * Adds the key-value `pair` to `map`.
   *
   * @private
   * @param {Object} map The map to modify.
   * @param {Array} pair The key-value pair to add.
   * @returns {Object} Returns `map`.
   */
  function addMapEntry(map, pair) {
    // Don't return `map.set` because it's not chainable in IE 11.
    map.set(pair[0], pair[1]);
    return map;
  }

  /**
   * Adds `value` to `set`.
   *
   * @private
   * @param {Object} set The set to modify.
   * @param {*} value The value to add.
   * @returns {Object} Returns `set`.
   */
  function addSetEntry(set, value) {
    // Don't return `set.add` because it's not chainable in IE 11.
    set.add(value);
    return set;
  }

  /**
   * A faster alternative to `Function#apply`, this function invokes `func`
   * with the `this` binding of `thisArg` and the arguments of `args`.
   *
   * @private
   * @param {Function} func The function to invoke.
   * @param {*} thisArg The `this` binding of `func`.
   * @param {Array} args The arguments to invoke `func` with.
   * @returns {*} Returns the result of `func`.
   */
  function apply(func, thisArg, args) {
    switch (args.length) {
      case 0: return func.call(thisArg);
      case 1: return func.call(thisArg, args[0]);
      case 2: return func.call(thisArg, args[0], args[1]);
      case 3: return func.call(thisArg, args[0], args[1], args[2]);
    }
    return func.apply(thisArg, args);
  }

  /**
   * A specialized version of `baseAggregator` for arrays.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} setter The function to set `accumulator` values.
   * @param {Function} iteratee The iteratee to transform keys.
   * @param {Object} accumulator The initial aggregated object.
   * @returns {Function} Returns `accumulator`.
   */
  function arrayAggregator(array, setter, iteratee, accumulator) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      var value = array[index];
      setter(accumulator, value, iteratee(value), array);
    }
    return accumulator;
  }

  /**
   * A specialized version of `_.forEach` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns `array`.
   */
  function arrayEach(array, iteratee) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      if (iteratee(array[index], index, array) === false) {
        break;
      }
    }
    return array;
  }

  /**
   * A specialized version of `_.forEachRight` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns `array`.
   */
  function arrayEachRight(array, iteratee) {
    var length = array == null ? 0 : array.length;

    while (length--) {
      if (iteratee(array[length], length, array) === false) {
        break;
      }
    }
    return array;
  }

  /**
   * A specialized version of `_.every` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} predicate The function invoked per iteration.
   * @returns {boolean} Returns `true` if all elements pass the predicate check,
   *  else `false`.
   */
  function arrayEvery(array, predicate) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      if (!predicate(array[index], index, array)) {
        return false;
      }
    }
    return true;
  }

  /**
   * A specialized version of `_.filter` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} predicate The function invoked per iteration.
   * @returns {Array} Returns the new filtered array.
   */
  function arrayFilter(array, predicate) {
    var index = -1,
        length = array == null ? 0 : array.length,
        resIndex = 0,
        result = [];

    while (++index < length) {
      var value = array[index];
      if (predicate(value, index, array)) {
        result[resIndex++] = value;
      }
    }
    return result;
  }

  /**
   * A specialized version of `_.includes` for arrays without support for
   * specifying an index to search from.
   *
   * @private
   * @param {Array} [array] The array to inspect.
   * @param {*} target The value to search for.
   * @returns {boolean} Returns `true` if `target` is found, else `false`.
   */
  function arrayIncludes(array, value) {
    var length = array == null ? 0 : array.length;
    return !!length && baseIndexOf(array, value, 0) > -1;
  }

  /**
   * This function is like `arrayIncludes` except that it accepts a comparator.
   *
   * @private
   * @param {Array} [array] The array to inspect.
   * @param {*} target The value to search for.
   * @param {Function} comparator The comparator invoked per element.
   * @returns {boolean} Returns `true` if `target` is found, else `false`.
   */
  function arrayIncludesWith(array, value, comparator) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      if (comparator(value, array[index])) {
        return true;
      }
    }
    return false;
  }

  /**
   * A specialized version of `_.map` for arrays without support for iteratee
   * shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns the new mapped array.
   */
  function arrayMap(array, iteratee) {
    var index = -1,
        length = array == null ? 0 : array.length,
        result = Array(length);

    while (++index < length) {
      result[index] = iteratee(array[index], index, array);
    }
    return result;
  }

  /**
   * Appends the elements of `values` to `array`.
   *
   * @private
   * @param {Array} array The array to modify.
   * @param {Array} values The values to append.
   * @returns {Array} Returns `array`.
   */
  function arrayPush(array, values) {
    var index = -1,
        length = values.length,
        offset = array.length;

    while (++index < length) {
      array[offset + index] = values[index];
    }
    return array;
  }

  /**
   * A specialized version of `_.reduce` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @param {*} [accumulator] The initial value.
   * @param {boolean} [initAccum] Specify using the first element of `array` as
   *  the initial value.
   * @returns {*} Returns the accumulated value.
   */
  function arrayReduce(array, iteratee, accumulator, initAccum) {
    var index = -1,
        length = array == null ? 0 : array.length;

    if (initAccum && length) {
      accumulator = array[++index];
    }
    while (++index < length) {
      accumulator = iteratee(accumulator, array[index], index, array);
    }
    return accumulator;
  }

  /**
   * A specialized version of `_.reduceRight` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @param {*} [accumulator] The initial value.
   * @param {boolean} [initAccum] Specify using the last element of `array` as
   *  the initial value.
   * @returns {*} Returns the accumulated value.
   */
  function arrayReduceRight(array, iteratee, accumulator, initAccum) {
    var length = array == null ? 0 : array.length;
    if (initAccum && length) {
      accumulator = array[--length];
    }
    while (length--) {
      accumulator = iteratee(accumulator, array[length], length, array);
    }
    return accumulator;
  }

  /**
   * A specialized version of `_.some` for arrays without support for iteratee
   * shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} predicate The function invoked per iteration.
   * @returns {boolean} Returns `true` if any element passes the predicate check,
   *  else `false`.
   */
  function arraySome(array, predicate) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      if (predicate(array[index], index, array)) {
        return true;
      }
    }
    return false;
  }

  /**
   * Gets the size of an ASCII `string`.
   *
   * @private
   * @param {string} string The string inspect.
   * @returns {number} Returns the string size.
   */
  var asciiSize = baseProperty('length');

  /**
   * Converts an ASCII `string` to an array.
   *
   * @private
   * @param {string} string The string to convert.
   * @returns {Array} Returns the converted array.
   */
  function asciiToArray(string) {
    return string.split('');
  }

  /**
   * Splits an ASCII `string` into an array of its words.
   *
   * @private
   * @param {string} The string to inspect.
   * @returns {Array} Returns the words of `string`.
   */
  function asciiWords(string) {
    return string.match(reAsciiWord) || [];
  }

  /**
   * The base implementation of methods like `_.findKey` and `_.findLastKey`,
   * without support for iteratee shorthands, which iterates over `collection`
   * using `eachFunc`.
   *
   * @private
   * @param {Array|Object} collection The collection to inspect.
   * @param {Function} predicate The function invoked per iteration.
   * @param {Function} eachFunc The function to iterate over `collection`.
   * @returns {*} Returns the found element or its key, else `undefined`.
   */
  function baseFindKey(collection, predicate, eachFunc) {
    var result;
    eachFunc(collection, function(value, key, collection) {
      if (predicate(value, key, collection)) {
        result = key;
        return false;
      }
    });
    return result;
  }

  /**
   * The base implementation of `_.findIndex` and `_.findLastIndex` without
   * support for iteratee shorthands.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {Function} predicate The function invoked per iteration.
   * @param {number} fromIndex The index to search from.
   * @param {boolean} [fromRight] Specify iterating from right to left.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function baseFindIndex(array, predicate, fromIndex, fromRight) {
    var length = array.length,
        index = fromIndex + (fromRight ? 1 : -1);

    while ((fromRight ? index-- : ++index < length)) {
      if (predicate(array[index], index, array)) {
        return index;
      }
    }
    return -1;
  }

  /**
   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} value The value to search for.
   * @param {number} fromIndex The index to search from.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function baseIndexOf(array, value, fromIndex) {
    return value === value
      ? strictIndexOf(array, value, fromIndex)
      : baseFindIndex(array, baseIsNaN, fromIndex);
  }

  /**
   * This function is like `baseIndexOf` except that it accepts a comparator.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} value The value to search for.
   * @param {number} fromIndex The index to search from.
   * @param {Function} comparator The comparator invoked per element.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function baseIndexOfWith(array, value, fromIndex, comparator) {
    var index = fromIndex - 1,
        length = array.length;

    while (++index < length) {
      if (comparator(array[index], value)) {
        return index;
      }
    }
    return -1;
  }

  /**
   * The base implementation of `_.isNaN` without support for number objects.
   *
   * @private
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
   */
  function baseIsNaN(value) {
    return value !== value;
  }

  /**
   * The base implementation of `_.mean` and `_.meanBy` without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} array The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {number} Returns the mean.
   */
  function baseMean(array, iteratee) {
    var length = array == null ? 0 : array.length;
    return length ? (baseSum(array, iteratee) / length) : NAN;
  }

  /**
   * The base implementation of `_.property` without support for deep paths.
   *
   * @private
   * @param {string} key The key of the property to get.
   * @returns {Function} Returns the new accessor function.
   */
  function baseProperty(key) {
    return function(object) {
      return object == null ? undefined : object[key];
    };
  }

  /**
   * The base implementation of `_.propertyOf` without support for deep paths.
   *
   * @private
   * @param {Object} object The object to query.
   * @returns {Function} Returns the new accessor function.
   */
  function basePropertyOf(object) {
    return function(key) {
      return object == null ? undefined : object[key];
    };
  }

  /**
   * The base implementation of `_.reduce` and `_.reduceRight`, without support
   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.
   *
   * @private
   * @param {Array|Object} collection The collection to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @param {*} accumulator The initial value.
   * @param {boolean} initAccum Specify using the first or last element of
   *  `collection` as the initial value.
   * @param {Function} eachFunc The function to iterate over `collection`.
   * @returns {*} Returns the accumulated value.
   */
  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {
    eachFunc(collection, function(value, index, collection) {
      accumulator = initAccum
        ? (initAccum = false, value)
        : iteratee(accumulator, value, index, collection);
    });
    return accumulator;
  }

  /**
   * The base implementation of `_.sortBy` which uses `comparer` to define the
   * sort order of `array` and replaces criteria objects with their corresponding
   * values.
   *
   * @private
   * @param {Array} array The array to sort.
   * @param {Function} comparer The function to define sort order.
   * @returns {Array} Returns `array`.
   */
  function baseSortBy(array, comparer) {
    var length = array.length;

    array.sort(comparer);
    while (length--) {
      array[length] = array[length].value;
    }
    return array;
  }

  /**
   * The base implementation of `_.sum` and `_.sumBy` without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} array The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {number} Returns the sum.
   */
  function baseSum(array, iteratee) {
    var result,
        index = -1,
        length = array.length;

    while (++index < length) {
      var current = iteratee(array[index]);
      if (current !== undefined) {
        result = result === undefined ? current : (result + current);
      }
    }
    return result;
  }

  /**
   * The base implementation of `_.times` without support for iteratee shorthands
   * or max array length checks.
   *
   * @private
   * @param {number} n The number of times to invoke `iteratee`.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns the array of results.
   */
  function baseTimes(n, iteratee) {
    var index = -1,
        result = Array(n);

    while (++index < n) {
      result[index] = iteratee(index);
    }
    return result;
  }

  /**
   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array
   * of key-value pairs for `object` corresponding to the property names of `props`.
   *
   * @private
   * @param {Object} object The object to query.
   * @param {Array} props The property names to get values for.
   * @returns {Object} Returns the key-value pairs.
   */
  function baseToPairs(object, props) {
    return arrayMap(props, function(key) {
      return [key, object[key]];
    });
  }

  /**
   * The base implementation of `_.unary` without support for storing metadata.
   *
   * @private
   * @param {Function} func The function to cap arguments for.
   * @returns {Function} Returns the new capped function.
   */
  function baseUnary(func) {
    return function(value) {
      return func(value);
    };
  }

  /**
   * The base implementation of `_.values` and `_.valuesIn` which creates an
   * array of `object` property values corresponding to the property names
   * of `props`.
   *
   * @private
   * @param {Object} object The object to query.
   * @param {Array} props The property names to get values for.
   * @returns {Object} Returns the array of property values.
   */
  function baseValues(object, props) {
    return arrayMap(props, function(key) {
      return object[key];
    });
  }

  /**
   * Checks if a `cache` value for `key` exists.
   *
   * @private
   * @param {Object} cache The cache to query.
   * @param {string} key The key of the entry to check.
   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
   */
  function cacheHas(cache, key) {
    return cache.has(key);
  }

  /**
   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol
   * that is not found in the character symbols.
   *
   * @private
   * @param {Array} strSymbols The string symbols to inspect.
   * @param {Array} chrSymbols The character symbols to find.
   * @returns {number} Returns the index of the first unmatched string symbol.
   */
  function charsStartIndex(strSymbols, chrSymbols) {
    var index = -1,
        length = strSymbols.length;

    while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}
    return index;
  }

  /**
   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol
   * that is not found in the character symbols.
   *
   * @private
   * @param {Array} strSymbols The string symbols to inspect.
   * @param {Array} chrSymbols The character symbols to find.
   * @returns {number} Returns the index of the last unmatched string symbol.
   */
  function charsEndIndex(strSymbols, chrSymbols) {
    var index = strSymbols.length;

    while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}
    return index;
  }

  /**
   * Gets the number of `placeholder` occurrences in `array`.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} placeholder The placeholder to search for.
   * @returns {number} Returns the placeholder count.
   */
  function countHolders(array, placeholder) {
    var length = array.length,
        result = 0;

    while (length--) {
      if (array[length] === placeholder) {
        ++result;
      }
    }
    return result;
  }

  /**
   * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A
   * letters to basic Latin letters.
   *
   * @private
   * @param {string} letter The matched letter to deburr.
   * @returns {string} Returns the deburred letter.
   */
  var deburrLetter = basePropertyOf(deburredLetters);

  /**
   * Used by `_.escape` to convert characters to HTML entities.
   *
   * @private
   * @param {string} chr The matched character to escape.
   * @returns {string} Returns the escaped character.
   */
  var escapeHtmlChar = basePropertyOf(htmlEscapes);

  /**
   * Used by `_.template` to escape characters for inclusion in compiled string literals.
   *
   * @private
   * @param {string} chr The matched character to escape.
   * @returns {string} Returns the escaped character.
   */
  function escapeStringChar(chr) {
    return '\\' + stringEscapes[chr];
  }

  /**
   * Gets the value at `key` of `object`.
   *
   * @private
   * @param {Object} [object] The object to query.
   * @param {string} key The key of the property to get.
   * @returns {*} Returns the property value.
   */
  function getValue(object, key) {
    return object == null ? undefined : object[key];
  }

  /**
   * Checks if `string` contains Unicode symbols.
   *
   * @private
   * @param {string} string The string to inspect.
   * @returns {boolean} Returns `true` if a symbol is found, else `false`.
   */
  function hasUnicode(string) {
    return reHasUnicode.test(string);
  }

  /**
   * Checks if `string` contains a word composed of Unicode symbols.
   *
   * @private
   * @param {string} string The string to inspect.
   * @returns {boolean} Returns `true` if a word is found, else `false`.
   */
  function hasUnicodeWord(string) {
    return reHasUnicodeWord.test(string);
  }

  /**
   * Converts `iterator` to an array.
   *
   * @private
   * @param {Object} iterator The iterator to convert.
   * @returns {Array} Returns the converted array.
   */
  function iteratorToArray(iterator) {
    var data,
        result = [];

    while (!(data = iterator.next()).done) {
      result.push(data.value);
    }
    return result;
  }

  /**
   * Converts `map` to its key-value pairs.
   *
   * @private
   * @param {Object} map The map to convert.
   * @returns {Array} Returns the key-value pairs.
   */
  function mapToArray(map) {
    var index = -1,
        result = Array(map.size);

    map.forEach(function(value, key) {
      result[++index] = [key, value];
    });
    return result;
  }

  /**
   * Creates a unary function that invokes `func` with its argument transformed.
   *
   * @private
   * @param {Function} func The function to wrap.
   * @param {Function} transform The argument transform.
   * @returns {Function} Returns the new function.
   */
  function overArg(func, transform) {
    return function(arg) {
      return func(transform(arg));
    };
  }

  /**
   * Replaces all `placeholder` elements in `array` with an internal placeholder
   * and returns an array of their indexes.
   *
   * @private
   * @param {Array} array The array to modify.
   * @param {*} placeholder The placeholder to replace.
   * @returns {Array} Returns the new array of placeholder indexes.
   */
  function replaceHolders(array, placeholder) {
    var index = -1,
        length = array.length,
        resIndex = 0,
        result = [];

    while (++index < length) {
      var value = array[index];
      if (value === placeholder || value === PLACEHOLDER) {
        array[index] = PLACEHOLDER;
        result[resIndex++] = index;
      }
    }
    return result;
  }

  /**
   * Converts `set` to an array of its values.
   *
   * @private
   * @param {Object} set The set to convert.
   * @returns {Array} Returns the values.
   */
  function setToArray(set) {
    var index = -1,
        result = Array(set.size);

    set.forEach(function(value) {
      result[++index] = value;
    });
    return result;
  }

  /**
   * Converts `set` to its value-value pairs.
   *
   * @private
   * @param {Object} set The set to convert.
   * @returns {Array} Returns the value-value pairs.
   */
  function setToPairs(set) {
    var index = -1,
        result = Array(set.size);

    set.forEach(function(value) {
      result[++index] = [value, value];
    });
    return result;
  }

  /**
   * A specialized version of `_.indexOf` which performs strict equality
   * comparisons of values, i.e. `===`.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} value The value to search for.
   * @param {number} fromIndex The index to search from.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function strictIndexOf(array, value, fromIndex) {
    var index = fromIndex - 1,
        length = array.length;

    while (++index < length) {
      if (array[index] === value) {
        return index;
      }
    }
    return -1;
  }

  /**
   * A specialized version of `_.lastIndexOf` which performs strict equality
   * comparisons of values, i.e. `===`.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} value The value to search for.
   * @param {number} fromIndex The index to search from.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function strictLastIndexOf(array, value, fromIndex) {
    var index = fromIndex + 1;
    while (index--) {
      if (array[index] === value) {
        return index;
      }
    }
    return index;
  }

  /**
   * Gets the number of symbols in `string`.
   *
   * @private
   * @param {string} string The string to inspect.
   * @returns {number} Returns the string size.
   */
  function stringSize(string) {
    return hasUnicode(string)
      ? unicodeSize(string)
      : asciiSize(string);
  }

  /**
   * Converts `string` to an array.
   *
   * @private
   * @param {string} string The string to convert.
   * @returns {Array} Returns the converted array.
   */
  function stringToArray(string) {
    return hasUnicode(string)
      ? unicodeToArray(string)
      : asciiToArray(string);
  }

  /**
   * Used by `_.unescape` to convert HTML entities to characters.
   *
   * @private
   * @param {string} chr The matched character to unescape.
   * @returns {string} Returns the unescaped character.
   */
  var unescapeHtmlChar = basePropertyOf(htmlUnescapes);

  /**
   * Gets the size of a Unicode `string`.
   *
   * @private
   * @param {string} string The string inspect.
   * @returns {number} Returns the string size.
   */
  function unicodeSize(string) {
    var result = reUnicode.lastIndex = 0;
    while (reUnicode.test(string)) {
      ++result;
    }
    return result;
  }

  /**
   * Converts a Unicode `string` to an array.
   *
   * @private
   * @param {string} string The string to convert.
   * @returns {Array} Returns the converted array.
   */
  function unicodeToArray(string) {
    return string.match(reUnicode) || [];
  }

  /**
   * Splits a Unicode `string` into an array of its words.
   *
   * @private
   * @param {string} The string to inspect.
   * @returns {Array} Returns the words of `string`.
   */
  function unicodeWords(string) {
    return string.match(reUnicodeWord) || [];
  }

  /*--------------------------------------------------------------------------*/

  /**
   * Create a new pristine `lodash` function using the `context` object.
   *
   * @static
   * @memberOf _
   * @since 1.1.0
   * @category Util
   * @param {Object} [context=root] The context object.
   * @returns {Function} Returns a new `lodash` function.
   * @example
   *
   * _.mixin({ 'foo': _.constant('foo') });
   *
   * var lodash = _.runInContext();
   * lodash.mixin({ 'bar': lodash.constant('bar') });
   *
   * _.isFunction(_.foo);
   * // => true
   * _.isFunction(_.bar);
   * // => false
   *
   * lodash.isFunction(lodash.foo);
   * // => false
   * lodash.isFunction(lodash.bar);
   * // => true
   *
   * // Create a suped-up `defer` in Node.js.
   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;
   */
  var runInContext = (function runInContext(context) {
    context = context == null ? root : _.defaults(root.Object(), context, _.pick(root, contextProps));

    /** Built-in constructor references. */
    var Array = context.Array,
        Date = context.Date,
        Error = context.Error,
        Function = context.Function,
        Math = context.Math,
        Object = context.Object,
        RegExp = context.RegExp,
        String = context.String,
        TypeError = context.TypeError;

    /** Used for built-in method references. */
    var arrayProto = Array.prototype,
        funcProto = Function.prototype,
        objectProto = Object.prototype;

    /** Used to detect overreaching core-js shims. */
    var coreJsData = context['__core-js_shared__'];

    /** Used to resolve the decompiled source of functions. */
    var funcToString = funcProto.toString;

    /** Used to check objects for own properties. */
    var hasOwnProperty = objectProto.hasOwnProperty;

    /** Used to generate unique IDs. */
    var idCounter = 0;

    /** Used to detect methods masquerading as native. */
    var maskSrcKey = (function() {
      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');
      return uid ? ('Symbol(src)_1.' + uid) : '';
    }());

    /**
     * Used to resolve the
     * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
     * of values.
     */
    var nativeObjectToString = objectProto.toString;

    /** Used to infer the `Object` constructor. */
    var objectCtorString = funcToString.call(Object);

    /** Used to restore the original `_` reference in `_.noConflict`. */
    var oldDash = root._;

    /** Used to detect if a method is native. */
    var reIsNative = RegExp('^' +
      funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\$&')
      .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$'
    );

    /** Built-in value references. */
    var Buffer = moduleExports ? context.Buffer : undefined,
        Symbol = context.Symbol,
        Uint8Array = context.Uint8Array,
        allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined,
        getPrototype = overArg(Object.getPrototypeOf, Object),
        objectCreate = Object.create,
        propertyIsEnumerable = objectProto.propertyIsEnumerable,
        splice = arrayProto.splice,
        spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined,
        symIterator = Symbol ? Symbol.iterator : undefined,
        symToStringTag = Symbol ? Symbol.toStringTag : undefined;

    var defineProperty = (function() {
      try {
        var func = getNative(Object, 'defineProperty');
        func({}, '', {});
        return func;
      } catch (e) {}
    }());

    /** Mocked built-ins. */
    var ctxClearTimeout = context.clearTimeout !== root.clearTimeout && context.clearTimeout,
        ctxNow = Date && Date.now !== root.Date.now && Date.now,
        ctxSetTimeout = context.setTimeout !== root.setTimeout && context.setTimeout;

    /* Built-in method references for those with the same name as other `lodash` methods. */
    var nativeCeil = Math.ceil,
        nativeFloor = Math.floor,
        nativeGetSymbols = Object.getOwnPropertySymbols,
        nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,
        nativeIsFinite = context.isFinite,
        nativeJoin = arrayProto.join,
        nativeKeys = overArg(Object.keys, Object),
        nativeMax = Math.max,
        nativeMin = Math.min,
        nativeNow = Date.now,
        nativeParseInt = context.parseInt,
        nativeRandom = Math.random,
        nativeReverse = arrayProto.reverse;

    /* Built-in method references that are verified to be native. */
    var DataView = getNative(context, 'DataView'),
        Map = getNative(context, 'Map'),
        Promise = getNative(context, 'Promise'),
        Set = getNative(context, 'Set'),
        WeakMap = getNative(context, 'WeakMap'),
        nativeCreate = getNative(Object, 'create');

    /** Used to store function metadata. */
    var metaMap = WeakMap && new WeakMap;

    /** Used to lookup unminified function names. */
    var realNames = {};

    /** Used to detect maps, sets, and weakmaps. */
    var dataViewCtorString = toSource(DataView),
        mapCtorString = toSource(Map),
        promiseCtorString = toSource(Promise),
        setCtorString = toSource(Set),
        weakMapCtorString = toSource(WeakMap);

    /** Used to convert symbols to primitives and strings. */
    var symbolProto = Symbol ? Symbol.prototype : undefined,
        symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,
        symbolToString = symbolProto ? symbolProto.toString : undefined;

    /*------------------------------------------------------------------------*/

    /**
     * Creates a `lodash` object which wraps `value` to enable implicit method
     * chain sequences. Methods that operate on and return arrays, collections,
     * and functions can be chained together. Methods that retrieve a single value
     * or may return a primitive value will automatically end the chain sequence
     * and return the unwrapped value. Otherwise, the value must be unwrapped
     * with `_#value`.
     *
     * Explicit chain sequences, which must be unwrapped with `_#value`, may be
     * enabled using `_.chain`.
     *
     * The execution of chained methods is lazy, that is, it's deferred until
     * `_#value` is implicitly or explicitly called.
     *
     * Lazy evaluation allows several methods to support shortcut fusion.
     * Shortcut fusion is an optimization to merge iteratee calls; this avoids
     * the creation of intermediate arrays and can greatly reduce the number of
     * iteratee executions. Sections of a chain sequence qualify for shortcut
     * fusion if the section is applied to an array and iteratees accept only
     * one argument. The heuristic for whether a section qualifies for shortcut
     * fusion is subject to change.
     *
     * Chaining is supported in custom builds as long as the `_#value` method is
     * directly or indirectly included in the build.
     *
     * In addition to lodash methods, wrappers have `Array` and `String` methods.
     *
     * The wrapper `Array` methods are:
     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`
     *
     * The wrapper `String` methods are:
     * `replace` and `split`
     *
     * The wrapper methods that support shortcut fusion are:
     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,
     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,
     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`
     *
     * The chainable wrapper methods are:
     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,
     * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,
     * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,
     * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,
     * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,
     * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,
     * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,
     * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,
     * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,
     * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,
     * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,
     * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,
     * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,
     * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,
     * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,
     * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,
     * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,
     * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,
     * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,
     * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,
     * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,
     * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,
     * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,
     * `zipObject`, `zipObjectDeep`, and `zipWith`
     *
     * The wrapper methods that are **not** chainable by default are:
     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,
     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,
     * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,
     * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,
     * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,
     * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,
     * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,
     * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,
     * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,
     * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,
     * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,
     * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,
     * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,
     * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,
     * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,
     * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,
     * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,
     * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,
     * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,
     * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,
     * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,
     * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,
     * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,
     * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,
     * `upperFirst`, `value`, and `words`
     *
     * @name _
     * @constructor
     * @category Seq
     * @param {*} value The value to wrap in a `lodash` instance.
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var wrapped = _([1, 2, 3]);
     *
     * // Returns an unwrapped value.
     * wrapped.reduce(_.add);
     * // => 6
     *
     * // Returns a wrapped value.
     * var squares = wrapped.map(square);
     *
     * _.isArray(squares);
     * // => false
     *
     * _.isArray(squares.value());
     * // => true
     */
    function lodash(value) {
      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {
        if (value instanceof LodashWrapper) {
          return value;
        }
        if (hasOwnProperty.call(value, '__wrapped__')) {
          return wrapperClone(value);
        }
      }
      return new LodashWrapper(value);
    }

    /**
     * The base implementation of `_.create` without support for assigning
     * properties to the created object.
     *
     * @private
     * @param {Object} proto The object to inherit from.
     * @returns {Object} Returns the new object.
     */
    var baseCreate = (function() {
      function object() {}
      return function(proto) {
        if (!isObject(proto)) {
          return {};
        }
        if (objectCreate) {
          return objectCreate(proto);
        }
        object.prototype = proto;
        var result = new object;
        object.prototype = undefined;
        return result;
      };
    }());

    /**
     * The function whose prototype chain sequence wrappers inherit from.
     *
     * @private
     */
    function baseLodash() {
      // No operation performed.
    }

    /**
     * The base constructor for creating `lodash` wrapper objects.
     *
     * @private
     * @param {*} value The value to wrap.
     * @param {boolean} [chainAll] Enable explicit method chain sequences.
     */
    function LodashWrapper(value, chainAll) {
      this.__wrapped__ = value;
      this.__actions__ = [];
      this.__chain__ = !!chainAll;
      this.__index__ = 0;
      this.__values__ = undefined;
    }

    /**
     * By default, the template delimiters used by lodash are like those in
     * embedded Ruby (ERB) as well as ES2015 template strings. Change the
     * following template settings to use alternative delimiters.
     *
     * @static
     * @memberOf _
     * @type {Object}
     */
    lodash.templateSettings = {

      /**
       * Used to detect `data` property values to be HTML-escaped.
       *
       * @memberOf _.templateSettings
       * @type {RegExp}
       */
      'escape': reEscape,

      /**
       * Used to detect code to be evaluated.
       *
       * @memberOf _.templateSettings
       * @type {RegExp}
       */
      'evaluate': reEvaluate,

      /**
       * Used to detect `data` property values to inject.
       *
       * @memberOf _.templateSettings
       * @type {RegExp}
       */
      'interpolate': reInterpolate,

      /**
       * Used to reference the data object in the template text.
       *
       * @memberOf _.templateSettings
       * @type {string}
       */
      'variable': '',

      /**
       * Used to import variables into the compiled template.
       *
       * @memberOf _.templateSettings
       * @type {Object}
       */
      'imports': {

        /**
         * A reference to the `lodash` function.
         *
         * @memberOf _.templateSettings.imports
         * @type {Function}
         */
        '_': lodash
      }
    };

    // Ensure wrappers are instances of `baseLodash`.
    lodash.prototype = baseLodash.prototype;
    lodash.prototype.constructor = lodash;

    LodashWrapper.prototype = baseCreate(baseLodash.prototype);
    LodashWrapper.prototype.constructor = LodashWrapper;

    /*------------------------------------------------------------------------*/

    /**
     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.
     *
     * @private
     * @constructor
     * @param {*} value The value to wrap.
     */
    function LazyWrapper(value) {
      this.__wrapped__ = value;
      this.__actions__ = [];
      this.__dir__ = 1;
      this.__filtered__ = false;
      this.__iteratees__ = [];
      this.__takeCount__ = MAX_ARRAY_LENGTH;
      this.__views__ = [];
    }

    /**
     * Creates a clone of the lazy wrapper object.
     *
     * @private
     * @name clone
     * @memberOf LazyWrapper
     * @returns {Object} Returns the cloned `LazyWrapper` object.
     */
    function lazyClone() {
      var result = new LazyWrapper(this.__wrapped__);
      result.__actions__ = copyArray(this.__actions__);
      result.__dir__ = this.__dir__;
      result.__filtered__ = this.__filtered__;
      result.__iteratees__ = copyArray(this.__iteratees__);
      result.__takeCount__ = this.__takeCount__;
      result.__views__ = copyArray(this.__views__);
      return result;
    }

    /**
     * Reverses the direction of lazy iteration.
     *
     * @private
     * @name reverse
     * @memberOf LazyWrapper
     * @returns {Object} Returns the new reversed `LazyWrapper` object.
     */
    function lazyReverse() {
      if (this.__filtered__) {
        var result = new LazyWrapper(this);
        result.__dir__ = -1;
        result.__filtered__ = true;
      } else {
        result = this.clone();
        result.__dir__ *= -1;
      }
      return result;
    }

    /**
     * Extracts the unwrapped value from its lazy wrapper.
     *
     * @private
     * @name value
     * @memberOf LazyWrapper
     * @returns {*} Returns the unwrapped value.
     */
    function lazyValue() {
      var array = this.__wrapped__.value(),
          dir = this.__dir__,
          isArr = isArray(array),
          isRight = dir < 0,
          arrLength = isArr ? array.length : 0,
          view = getView(0, arrLength, this.__views__),
          start = view.start,
          end = view.end,
          length = end - start,
          index = isRight ? end : (start - 1),
          iteratees = this.__iteratees__,
          iterLength = iteratees.length,
          resIndex = 0,
          takeCount = nativeMin(length, this.__takeCount__);

      if (!isArr || (!isRight && arrLength == length && takeCount == length)) {
        return baseWrapperValue(array, this.__actions__);
      }
      var result = [];

      outer:
      while (length-- && resIndex < takeCount) {
        index += dir;

        var iterIndex = -1,
            value = array[index];

        while (++iterIndex < iterLength) {
          var data = iteratees[iterIndex],
              iteratee = data.iteratee,
              type = data.type,
              computed = iteratee(value);

          if (type == LAZY_MAP_FLAG) {
            value = computed;
          } else if (!computed) {
            if (type == LAZY_FILTER_FLAG) {
              continue outer;
            } else {
              break outer;
            }
          }
        }
        result[resIndex++] = value;
      }
      return result;
    }

    // Ensure `LazyWrapper` is an instance of `baseLodash`.
    LazyWrapper.prototype = baseCreate(baseLodash.prototype);
    LazyWrapper.prototype.constructor = LazyWrapper;

    /*------------------------------------------------------------------------*/

    /**
     * Creates a hash object.
     *
     * @private
     * @constructor
     * @param {Array} [entries] The key-value pairs to cache.
     */
    function Hash(entries) {
      var index = -1,
          length = entries == null ? 0 : entries.length;

      this.clear();
      while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }

    /**
     * Removes all key-value entries from the hash.
     *
     * @private
     * @name clear
     * @memberOf Hash
     */
    function hashClear() {
      this.__data__ = nativeCreate ? nativeCreate(null) : {};
      this.size = 0;
    }

    /**
     * Removes `key` and its value from the hash.
     *
     * @private
     * @name delete
     * @memberOf Hash
     * @param {Object} hash The hash to modify.
     * @param {string} key The key of the value to remove.
     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
     */
    function hashDelete(key) {
      var result = this.has(key) && delete this.__data__[key];
      this.size -= result ? 1 : 0;
      return result;
    }

    /**
     * Gets the hash value for `key`.
     *
     * @private
     * @name get
     * @memberOf Hash
     * @param {string} key The key of the value to get.
     * @returns {*} Returns the entry value.
     */
    function hashGet(key) {
      var data = this.__data__;
      if (nativeCreate) {
        var result = data[key];
        return result === HASH_UNDEFINED ? undefined : result;
      }
      return hasOwnProperty.call(data, key) ? data[key] : undefined;
    }

    /**
     * Checks if a hash value for `key` exists.
     *
     * @private
     * @name has
     * @memberOf Hash
     * @param {string} key The key of the entry to check.
     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
     */
    function hashHas(key) {
      var data = this.__data__;
      return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);
    }

    /**
     * Sets the hash `key` to `value`.
     *
     * @private
     * @name set
     * @memberOf Hash
     * @param {string} key The key of the value to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns the hash instance.
     */
    function hashSet(key, value) {
      var data = this.__data__;
      this.size += this.has(key) ? 0 : 1;
      data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;
      return this;
    }

    // Add methods to `Hash`.
    Hash.prototype.clear = hashClear;
    Hash.prototype['delete'] = hashDelete;
    Hash.prototype.get = hashGet;
    Hash.prototype.has = hashHas;
    Hash.prototype.set = hashSet;

    /*------------------------------------------------------------------------*/

    /**
     * Creates an list cache object.
     *
     * @private
     * @constructor
     * @param {Array} [entries] The key-value pairs to cache.
     */
    function ListCache(entries) {
      var index = -1,
          length = entries == null ? 0 : entries.length;

      this.clear();
      while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }

    /**
     * Removes all key-value entries from the list cache.
     *
     * @private
     * @name clear
     * @memberOf ListCache
     */
    function listCacheClear() {
      this.__data__ = [];
      this.size = 0;
    }

    /**
     * Removes `key` and its value from the list cache.
     *
     * @private
     * @name delete
     * @memberOf ListCache
     * @param {string} key The key of the value to remove.
     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
     */
    function listCacheDelete(key) {
      var data = this.__data__,
          index = assocIndexOf(data, key);

      if (index < 0) {
        return false;
      }
      var lastIndex = data.length - 1;
      if (index == lastIndex) {
        data.pop();
      } else {
        splice.call(data, index, 1);
      }
      --this.size;
      return true;
    }

    /**
     * Gets the list cache value for `key`.
     *
     * @private
     * @name get
     * @memberOf ListCache
     * @param {string} key The key of the value to get.
     * @returns {*} Returns the entry value.
     */
    function listCacheGet(key) {
      var data = this.__data__,
          index = assocIndexOf(data, key);

      return index < 0 ? undefined : data[index][1];
    }

    /**
     * Checks if a list cache value for `key` exists.
     *
     * @private
     * @name has
     * @memberOf ListCache
     * @param {string} key The key of the entry to check.
     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
     */
    function listCacheHas(key) {
      return assocIndexOf(this.__data__, key) > -1;
    }

    /**
     * Sets the list cache `key` to `value`.
     *
     * @private
     * @name set
     * @memberOf ListCache
     * @param {string} key The key of the value to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns the list cache instance.
     */
    function listCacheSet(key, value) {
      var data = this.__data__,
          index = assocIndexOf(data, key);

      if (index < 0) {
        ++this.size;
        data.push([key, value]);
      } else {
        data[index][1] = value;
      }
      return this;
    }

    // Add methods to `ListCache`.
    ListCache.prototype.clear = listCacheClear;
    ListCache.prototype['delete'] = listCacheDelete;
    ListCache.prototype.get = listCacheGet;
    ListCache.prototype.has = listCacheHas;
    ListCache.prototype.set = listCacheSet;

    /*------------------------------------------------------------------------*/

    /**
     * Creates a map cache object to store key-value pairs.
     *
     * @private
     * @constructor
     * @param {Array} [entries] The key-value pairs to cache.
     */
    function MapCache(entries) {
      var index = -1,
          length = entries == null ? 0 : entries.length;

      this.clear();
      while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }

    /**
     * Removes all key-value entries from the map.
     *
     * @private
     * @name clear
     * @memberOf MapCache
     */
    function mapCacheClear() {
      this.size = 0;
      this.__data__ = {
        'hash': new Hash,
        'map': new (Map || ListCache),
        'string': new Hash
      };
    }

    /**
     * Removes `key` and its value from the map.
     *
     * @private
     * @name delete
     * @memberOf MapCache
     * @param {string} key The key of the value to remove.
     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
     */
    function mapCacheDelete(key) {
      var result = getMapData(this, key)['delete'](key);
      this.size -= result ? 1 : 0;
      return result;
    }

    /**
     * Gets the map value for `key`.
     *
     * @private
     * @name get
     * @memberOf MapCache
     * @param {string} key The key of the value to get.
     * @returns {*} Returns the entry value.
     */
    function mapCacheGet(key) {
      return getMapData(this, key).get(key);
    }

    /**
     * Checks if a map value for `key` exists.
     *
     * @private
     * @name has
     * @memberOf MapCache
     * @param {string} key The key of the entry to check.
     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
     */
    function mapCacheHas(key) {
      return getMapData(this, key).has(key);
    }

    /**
     * Sets the map `key` to `value`.
     *
     * @private
     * @name set
     * @memberOf MapCache
     * @param {string} key The key of the value to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns the map cache instance.
     */
    function mapCacheSet(key, value) {
      var data = getMapData(this, key),
          size = data.size;

      data.set(key, value);
      this.size += data.size == size ? 0 : 1;
      return this;
    }

    // Add methods to `MapCache`.
    MapCache.prototype.clear = mapCacheClear;
    MapCache.prototype['delete'] = mapCacheDelete;
    MapCache.prototype.get = mapCacheGet;
    MapCache.prototype.has = mapCacheHas;
    MapCache.prototype.set = mapCacheSet;

    /*------------------------------------------------------------------------*/

    /**
     *
     * Creates an array cache object to store unique values.
     *
     * @private
     * @constructor
     * @param {Array} [values] The values to cache.
     */
    function SetCache(values) {
      var index = -1,
          length = values == null ? 0 : values.length;

      this.__data__ = new MapCache;
      while (++index < length) {
        this.add(values[index]);
      }
    }

    /**
     * Adds `value` to the array cache.
     *
     * @private
     * @name add
     * @memberOf SetCache
     * @alias push
     * @param {*} value The value to cache.
     * @returns {Object} Returns the cache instance.
     */
    function setCacheAdd(value) {
      this.__data__.set(value, HASH_UNDEFINED);
      return this;
    }

    /**
     * Checks if `value` is in the array cache.
     *
     * @private
     * @name has
     * @memberOf SetCache
     * @param {*} value The value to search for.
     * @returns {number} Returns `true` if `value` is found, else `false`.
     */
    function setCacheHas(value) {
      return this.__data__.has(value);
    }

    // Add methods to `SetCache`.
    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
    SetCache.prototype.has = setCacheHas;

    /*------------------------------------------------------------------------*/

    /**
     * Creates a stack cache object to store key-value pairs.
     *
     * @private
     * @constructor
     * @param {Array} [entries] The key-value pairs to cache.
     */
    function Stack(entries) {
      var data = this.__data__ = new ListCache(entries);
      this.size = data.size;
    }

    /**
     * Removes all key-value entries from the stack.
     *
     * @private
     * @name clear
     * @memberOf Stack
     */
    function stackClear() {
      this.__data__ = new ListCache;
      this.size = 0;
    }

    /**
     * Removes `key` and its value from the stack.
     *
     * @private
     * @name delete
     * @memberOf Stack
     * @param {string} key The key of the value to remove.
     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
     */
    function stackDelete(key) {
      var data = this.__data__,
          result = data['delete'](key);

      this.size = data.size;
      return result;
    }

    /**
     * Gets the stack value for `key`.
     *
     * @private
     * @name get
     * @memberOf Stack
     * @param {string} key The key of the value to get.
     * @returns {*} Returns the entry value.
     */
    function stackGet(key) {
      return this.__data__.get(key);
    }

    /**
     * Checks if a stack value for `key` exists.
     *
     * @private
     * @name has
     * @memberOf Stack
     * @param {string} key The key of the entry to check.
     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
     */
    function stackHas(key) {
      return this.__data__.has(key);
    }

    /**
     * Sets the stack `key` to `value`.
     *
     * @private
     * @name set
     * @memberOf Stack
     * @param {string} key The key of the value to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns the stack cache instance.
     */
    function stackSet(key, value) {
      var data = this.__data__;
      if (data instanceof ListCache) {
        var pairs = data.__data__;
        if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {
          pairs.push([key, value]);
          this.size = ++data.size;
          return this;
        }
        data = this.__data__ = new MapCache(pairs);
      }
      data.set(key, value);
      this.size = data.size;
      return this;
    }

    // Add methods to `Stack`.
    Stack.prototype.clear = stackClear;
    Stack.prototype['delete'] = stackDelete;
    Stack.prototype.get = stackGet;
    Stack.prototype.has = stackHas;
    Stack.prototype.set = stackSet;

    /*------------------------------------------------------------------------*/

    /**
     * Creates an array of the enumerable property names of the array-like `value`.
     *
     * @private
     * @param {*} value The value to query.
     * @param {boolean} inherited Specify returning inherited property names.
     * @returns {Array} Returns the array of property names.
     */
    function arrayLikeKeys(value, inherited) {
      var isArr = isArray(value),
          isArg = !isArr && isArguments(value),
          isBuff = !isArr && !isArg && isBuffer(value),
          isType = !isArr && !isArg && !isBuff && isTypedArray(value),
          skipIndexes = isArr || isArg || isBuff || isType,
          result = skipIndexes ? baseTimes(value.length, String) : [],
          length = result.length;

      for (var key in value) {
        if ((inherited || hasOwnProperty.call(value, key)) &&
            !(skipIndexes && (
               // Safari 9 has enumerable `arguments.length` in strict mode.
               key == 'length' ||
               // Node.js 0.10 has enumerable non-index properties on buffers.
               (isBuff && (key == 'offset' || key == 'parent')) ||
               // PhantomJS 2 has enumerable non-index properties on typed arrays.
               (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||
               // Skip index properties.
               isIndex(key, length)
            ))) {
          result.push(key);
        }
      }
      return result;
    }

    /**
     * A specialized version of `_.sample` for arrays.
     *
     * @private
     * @param {Array} array The array to sample.
     * @returns {*} Returns the random element.
     */
    function arraySample(array) {
      var length = array.length;
      return length ? array[baseRandom(0, length - 1)] : undefined;
    }

    /**
     * A specialized version of `_.sampleSize` for arrays.
     *
     * @private
     * @param {Array} array The array to sample.
     * @param {number} n The number of elements to sample.
     * @returns {Array} Returns the random elements.
     */
    function arraySampleSize(array, n) {
      return shuffleSelf(copyArray(array), baseClamp(n, 0, array.length));
    }

    /**
     * A specialized version of `_.shuffle` for arrays.
     *
     * @private
     * @param {Array} array The array to shuffle.
     * @returns {Array} Returns the new shuffled array.
     */
    function arrayShuffle(array) {
      return shuffleSelf(copyArray(array));
    }

    /**
     * This function is like `assignValue` except that it doesn't assign
     * `undefined` values.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {string} key The key of the property to assign.
     * @param {*} value The value to assign.
     */
    function assignMergeValue(object, key, value) {
      if ((value !== undefined && !eq(object[key], value)) ||
          (value === undefined && !(key in object))) {
        baseAssignValue(object, key, value);
      }
    }

    /**
     * Assigns `value` to `key` of `object` if the existing value is not equivalent
     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {string} key The key of the property to assign.
     * @param {*} value The value to assign.
     */
    function assignValue(object, key, value) {
      var objValue = object[key];
      if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||
          (value === undefined && !(key in object))) {
        baseAssignValue(object, key, value);
      }
    }

    /**
     * Gets the index at which the `key` is found in `array` of key-value pairs.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {*} key The key to search for.
     * @returns {number} Returns the index of the matched value, else `-1`.
     */
    function assocIndexOf(array, key) {
      var length = array.length;
      while (length--) {
        if (eq(array[length][0], key)) {
          return length;
        }
      }
      return -1;
    }

    /**
     * Aggregates elements of `collection` on `accumulator` with keys transformed
     * by `iteratee` and values set by `setter`.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} setter The function to set `accumulator` values.
     * @param {Function} iteratee The iteratee to transform keys.
     * @param {Object} accumulator The initial aggregated object.
     * @returns {Function} Returns `accumulator`.
     */
    function baseAggregator(collection, setter, iteratee, accumulator) {
      baseEach(collection, function(value, key, collection) {
        setter(accumulator, value, iteratee(value), collection);
      });
      return accumulator;
    }

    /**
     * The base implementation of `_.assign` without support for multiple sources
     * or `customizer` functions.
     *
     * @private
     * @param {Object} object The destination object.
     * @param {Object} source The source object.
     * @returns {Object} Returns `object`.
     */
    function baseAssign(object, source) {
      return object && copyObject(source, keys(source), object);
    }

    /**
     * The base implementation of `_.assignIn` without support for multiple sources
     * or `customizer` functions.
     *
     * @private
     * @param {Object} object The destination object.
     * @param {Object} source The source object.
     * @returns {Object} Returns `object`.
     */
    function baseAssignIn(object, source) {
      return object && copyObject(source, keysIn(source), object);
    }

    /**
     * The base implementation of `assignValue` and `assignMergeValue` without
     * value checks.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {string} key The key of the property to assign.
     * @param {*} value The value to assign.
     */
    function baseAssignValue(object, key, value) {
      if (key == '__proto__' && defineProperty) {
        defineProperty(object, key, {
          'configurable': true,
          'enumerable': true,
          'value': value,
          'writable': true
        });
      } else {
        object[key] = value;
      }
    }

    /**
     * The base implementation of `_.at` without support for individual paths.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {string[]} paths The property paths to pick.
     * @returns {Array} Returns the picked elements.
     */
    function baseAt(object, paths) {
      var index = -1,
          length = paths.length,
          result = Array(length),
          skip = object == null;

      while (++index < length) {
        result[index] = skip ? undefined : get(object, paths[index]);
      }
      return result;
    }

    /**
     * The base implementation of `_.clamp` which doesn't coerce arguments.
     *
     * @private
     * @param {number} number The number to clamp.
     * @param {number} [lower] The lower bound.
     * @param {number} upper The upper bound.
     * @returns {number} Returns the clamped number.
     */
    function baseClamp(number, lower, upper) {
      if (number === number) {
        if (upper !== undefined) {
          number = number <= upper ? number : upper;
        }
        if (lower !== undefined) {
          number = number >= lower ? number : lower;
        }
      }
      return number;
    }

    /**
     * The base implementation of `_.clone` and `_.cloneDeep` which tracks
     * traversed objects.
     *
     * @private
     * @param {*} value The value to clone.
     * @param {boolean} bitmask The bitmask flags.
     *  1 - Deep clone
     *  2 - Flatten inherited properties
     *  4 - Clone symbols
     * @param {Function} [customizer] The function to customize cloning.
     * @param {string} [key] The key of `value`.
     * @param {Object} [object] The parent object of `value`.
     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.
     * @returns {*} Returns the cloned value.
     */
    function baseClone(value, bitmask, customizer, key, object, stack) {
      var result,
          isDeep = bitmask & CLONE_DEEP_FLAG,
          isFlat = bitmask & CLONE_FLAT_FLAG,
          isFull = bitmask & CLONE_SYMBOLS_FLAG;

      if (customizer) {
        result = object ? customizer(value, key, object, stack) : customizer(value);
      }
      if (result !== undefined) {
        return result;
      }
      if (!isObject(value)) {
        return value;
      }
      var isArr = isArray(value);
      if (isArr) {
        result = initCloneArray(value);
        if (!isDeep) {
          return copyArray(value, result);
        }
      } else {
        var tag = getTag(value),
            isFunc = tag == funcTag || tag == genTag;

        if (isBuffer(value)) {
          return cloneBuffer(value, isDeep);
        }
        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {
          result = (isFlat || isFunc) ? {} : initCloneObject(value);
          if (!isDeep) {
            return isFlat
              ? copySymbolsIn(value, baseAssignIn(result, value))
              : copySymbols(value, baseAssign(result, value));
          }
        } else {
          if (!cloneableTags[tag]) {
            return object ? value : {};
          }
          result = initCloneByTag(value, tag, baseClone, isDeep);
        }
      }
      // Check for circular references and return its corresponding clone.
      stack || (stack = new Stack);
      var stacked = stack.get(value);
      if (stacked) {
        return stacked;
      }
      stack.set(value, result);

      var keysFunc = isFull
        ? (isFlat ? getAllKeysIn : getAllKeys)
        : (isFlat ? keysIn : keys);

      var props = isArr ? undefined : keysFunc(value);
      arrayEach(props || value, function(subValue, key) {
        if (props) {
          key = subValue;
          subValue = value[key];
        }
        // Recursively populate clone (susceptible to call stack limits).
        assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));
      });
      return result;
    }

    /**
     * The base implementation of `_.conforms` which doesn't clone `source`.
     *
     * @private
     * @param {Object} source The object of property predicates to conform to.
     * @returns {Function} Returns the new spec function.
     */
    function baseConforms(source) {
      var props = keys(source);
      return function(object) {
        return baseConformsTo(object, source, props);
      };
    }

    /**
     * The base implementation of `_.conformsTo` which accepts `props` to check.
     *
     * @private
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property predicates to conform to.
     * @returns {boolean} Returns `true` if `object` conforms, else `false`.
     */
    function baseConformsTo(object, source, props) {
      var length = props.length;
      if (object == null) {
        return !length;
      }
      object = Object(object);
      while (length--) {
        var key = props[length],
            predicate = source[key],
            value = object[key];

        if ((value === undefined && !(key in object)) || !predicate(value)) {
          return false;
        }
      }
      return true;
    }

    /**
     * The base implementation of `_.delay` and `_.defer` which accepts `args`
     * to provide to `func`.
     *
     * @private
     * @param {Function} func The function to delay.
     * @param {number} wait The number of milliseconds to delay invocation.
     * @param {Array} args The arguments to provide to `func`.
     * @returns {number|Object} Returns the timer id or timeout object.
     */
    function baseDelay(func, wait, args) {
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      return setTimeout(function() { func.apply(undefined, args); }, wait);
    }

    /**
     * The base implementation of methods like `_.difference` without support
     * for excluding multiple arrays or iteratee shorthands.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {Array} values The values to exclude.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     */
    function baseDifference(array, values, iteratee, comparator) {
      var index = -1,
          includes = arrayIncludes,
          isCommon = true,
          length = array.length,
          result = [],
          valuesLength = values.length;

      if (!length) {
        return result;
      }
      if (iteratee) {
        values = arrayMap(values, baseUnary(iteratee));
      }
      if (comparator) {
        includes = arrayIncludesWith;
        isCommon = false;
      }
      else if (values.length >= LARGE_ARRAY_SIZE) {
        includes = cacheHas;
        isCommon = false;
        values = new SetCache(values);
      }
      outer:
      while (++index < length) {
        var value = array[index],
            computed = iteratee == null ? value : iteratee(value);

        value = (comparator || value !== 0) ? value : 0;
        if (isCommon && computed === computed) {
          var valuesIndex = valuesLength;
          while (valuesIndex--) {
            if (values[valuesIndex] === computed) {
              continue outer;
            }
          }
          result.push(value);
        }
        else if (!includes(values, computed, comparator)) {
          result.push(value);
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.forEach` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Array|Object} Returns `collection`.
     */
    var baseEach = createBaseEach(baseForOwn);

    /**
     * The base implementation of `_.forEachRight` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Array|Object} Returns `collection`.
     */
    var baseEachRight = createBaseEach(baseForOwnRight, true);

    /**
     * The base implementation of `_.every` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} predicate The function invoked per iteration.
     * @returns {boolean} Returns `true` if all elements pass the predicate check,
     *  else `false`
     */
    function baseEvery(collection, predicate) {
      var result = true;
      baseEach(collection, function(value, index, collection) {
        result = !!predicate(value, index, collection);
        return result;
      });
      return result;
    }

    /**
     * The base implementation of methods like `_.max` and `_.min` which accepts a
     * `comparator` to determine the extremum value.
     *
     * @private
     * @param {Array} array The array to iterate over.
     * @param {Function} iteratee The iteratee invoked per iteration.
     * @param {Function} comparator The comparator used to compare values.
     * @returns {*} Returns the extremum value.
     */
    function baseExtremum(array, iteratee, comparator) {
      var index = -1,
          length = array.length;

      while (++index < length) {
        var value = array[index],
            current = iteratee(value);

        if (current != null && (computed === undefined
              ? (current === current && !isSymbol(current))
              : comparator(current, computed)
            )) {
          var computed = current,
              result = value;
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.fill` without an iteratee call guard.
     *
     * @private
     * @param {Array} array The array to fill.
     * @param {*} value The value to fill `array` with.
     * @param {number} [start=0] The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns `array`.
     */
    function baseFill(array, value, start, end) {
      var length = array.length;

      start = toInteger(start);
      if (start < 0) {
        start = -start > length ? 0 : (length + start);
      }
      end = (end === undefined || end > length) ? length : toInteger(end);
      if (end < 0) {
        end += length;
      }
      end = start > end ? 0 : toLength(end);
      while (start < end) {
        array[start++] = value;
      }
      return array;
    }

    /**
     * The base implementation of `_.filter` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} predicate The function invoked per iteration.
     * @returns {Array} Returns the new filtered array.
     */
    function baseFilter(collection, predicate) {
      var result = [];
      baseEach(collection, function(value, index, collection) {
        if (predicate(value, index, collection)) {
          result.push(value);
        }
      });
      return result;
    }

    /**
     * The base implementation of `_.flatten` with support for restricting flattening.
     *
     * @private
     * @param {Array} array The array to flatten.
     * @param {number} depth The maximum recursion depth.
     * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.
     * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.
     * @param {Array} [result=[]] The initial result value.
     * @returns {Array} Returns the new flattened array.
     */
    function baseFlatten(array, depth, predicate, isStrict, result) {
      var index = -1,
          length = array.length;

      predicate || (predicate = isFlattenable);
      result || (result = []);

      while (++index < length) {
        var value = array[index];
        if (depth > 0 && predicate(value)) {
          if (depth > 1) {
            // Recursively flatten arrays (susceptible to call stack limits).
            baseFlatten(value, depth - 1, predicate, isStrict, result);
          } else {
            arrayPush(result, value);
          }
        } else if (!isStrict) {
          result[result.length] = value;
        }
      }
      return result;
    }

    /**
     * The base implementation of `baseForOwn` which iterates over `object`
     * properties returned by `keysFunc` and invokes `iteratee` for each property.
     * Iteratee functions may exit iteration early by explicitly returning `false`.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @param {Function} keysFunc The function to get the keys of `object`.
     * @returns {Object} Returns `object`.
     */
    var baseFor = createBaseFor();

    /**
     * This function is like `baseFor` except that it iterates over properties
     * in the opposite order.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @param {Function} keysFunc The function to get the keys of `object`.
     * @returns {Object} Returns `object`.
     */
    var baseForRight = createBaseFor(true);

    /**
     * The base implementation of `_.forOwn` without support for iteratee shorthands.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Object} Returns `object`.
     */
    function baseForOwn(object, iteratee) {
      return object && baseFor(object, iteratee, keys);
    }

    /**
     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Object} Returns `object`.
     */
    function baseForOwnRight(object, iteratee) {
      return object && baseForRight(object, iteratee, keys);
    }

    /**
     * The base implementation of `_.functions` which creates an array of
     * `object` function property names filtered from `props`.
     *
     * @private
     * @param {Object} object The object to inspect.
     * @param {Array} props The property names to filter.
     * @returns {Array} Returns the function names.
     */
    function baseFunctions(object, props) {
      return arrayFilter(props, function(key) {
        return isFunction(object[key]);
      });
    }

    /**
     * The base implementation of `_.get` without support for default values.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the property to get.
     * @returns {*} Returns the resolved value.
     */
    function baseGet(object, path) {
      path = castPath(path, object);

      var index = 0,
          length = path.length;

      while (object != null && index < length) {
        object = object[toKey(path[index++])];
      }
      return (index && index == length) ? object : undefined;
    }

    /**
     * The base implementation of `getAllKeys` and `getAllKeysIn` which uses
     * `keysFunc` and `symbolsFunc` to get the enumerable property names and
     * symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Function} keysFunc The function to get the keys of `object`.
     * @param {Function} symbolsFunc The function to get the symbols of `object`.
     * @returns {Array} Returns the array of property names and symbols.
     */
    function baseGetAllKeys(object, keysFunc, symbolsFunc) {
      var result = keysFunc(object);
      return isArray(object) ? result : arrayPush(result, symbolsFunc(object));
    }

    /**
     * The base implementation of `getTag` without fallbacks for buggy environments.
     *
     * @private
     * @param {*} value The value to query.
     * @returns {string} Returns the `toStringTag`.
     */
    function baseGetTag(value) {
      if (value == null) {
        return value === undefined ? undefinedTag : nullTag;
      }
      return (symToStringTag && symToStringTag in Object(value))
        ? getRawTag(value)
        : objectToString(value);
    }

    /**
     * The base implementation of `_.gt` which doesn't coerce arguments.
     *
     * @private
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is greater than `other`,
     *  else `false`.
     */
    function baseGt(value, other) {
      return value > other;
    }

    /**
     * The base implementation of `_.has` without support for deep paths.
     *
     * @private
     * @param {Object} [object] The object to query.
     * @param {Array|string} key The key to check.
     * @returns {boolean} Returns `true` if `key` exists, else `false`.
     */
    function baseHas(object, key) {
      return object != null && hasOwnProperty.call(object, key);
    }

    /**
     * The base implementation of `_.hasIn` without support for deep paths.
     *
     * @private
     * @param {Object} [object] The object to query.
     * @param {Array|string} key The key to check.
     * @returns {boolean} Returns `true` if `key` exists, else `false`.
     */
    function baseHasIn(object, key) {
      return object != null && key in Object(object);
    }

    /**
     * The base implementation of `_.inRange` which doesn't coerce arguments.
     *
     * @private
     * @param {number} number The number to check.
     * @param {number} start The start of the range.
     * @param {number} end The end of the range.
     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.
     */
    function baseInRange(number, start, end) {
      return number >= nativeMin(start, end) && number < nativeMax(start, end);
    }

    /**
     * The base implementation of methods like `_.intersection`, without support
     * for iteratee shorthands, that accepts an array of arrays to inspect.
     *
     * @private
     * @param {Array} arrays The arrays to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of shared values.
     */
    function baseIntersection(arrays, iteratee, comparator) {
      var includes = comparator ? arrayIncludesWith : arrayIncludes,
          length = arrays[0].length,
          othLength = arrays.length,
          othIndex = othLength,
          caches = Array(othLength),
          maxLength = Infinity,
          result = [];

      while (othIndex--) {
        var array = arrays[othIndex];
        if (othIndex && iteratee) {
          array = arrayMap(array, baseUnary(iteratee));
        }
        maxLength = nativeMin(array.length, maxLength);
        caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))
          ? new SetCache(othIndex && array)
          : undefined;
      }
      array = arrays[0];

      var index = -1,
          seen = caches[0];

      outer:
      while (++index < length && result.length < maxLength) {
        var value = array[index],
            computed = iteratee ? iteratee(value) : value;

        value = (comparator || value !== 0) ? value : 0;
        if (!(seen
              ? cacheHas(seen, computed)
              : includes(result, computed, comparator)
            )) {
          othIndex = othLength;
          while (--othIndex) {
            var cache = caches[othIndex];
            if (!(cache
                  ? cacheHas(cache, computed)
                  : includes(arrays[othIndex], computed, comparator))
                ) {
              continue outer;
            }
          }
          if (seen) {
            seen.push(computed);
          }
          result.push(value);
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.invert` and `_.invertBy` which inverts
     * `object` with values transformed by `iteratee` and set by `setter`.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} setter The function to set `accumulator` values.
     * @param {Function} iteratee The iteratee to transform values.
     * @param {Object} accumulator The initial inverted object.
     * @returns {Function} Returns `accumulator`.
     */
    function baseInverter(object, setter, iteratee, accumulator) {
      baseForOwn(object, function(value, key, object) {
        setter(accumulator, iteratee(value), key, object);
      });
      return accumulator;
    }

    /**
     * The base implementation of `_.invoke` without support for individual
     * method arguments.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the method to invoke.
     * @param {Array} args The arguments to invoke the method with.
     * @returns {*} Returns the result of the invoked method.
     */
    function baseInvoke(object, path, args) {
      path = castPath(path, object);
      object = parent(object, path);
      var func = object == null ? object : object[toKey(last(path))];
      return func == null ? undefined : apply(func, object, args);
    }

    /**
     * The base implementation of `_.isArguments`.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an `arguments` object,
     */
    function baseIsArguments(value) {
      return isObjectLike(value) && baseGetTag(value) == argsTag;
    }

    /**
     * The base implementation of `_.isArrayBuffer` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.
     */
    function baseIsArrayBuffer(value) {
      return isObjectLike(value) && baseGetTag(value) == arrayBufferTag;
    }

    /**
     * The base implementation of `_.isDate` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.
     */
    function baseIsDate(value) {
      return isObjectLike(value) && baseGetTag(value) == dateTag;
    }

    /**
     * The base implementation of `_.isEqual` which supports partial comparisons
     * and tracks traversed objects.
     *
     * @private
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @param {boolean} bitmask The bitmask flags.
     *  1 - Unordered comparison
     *  2 - Partial comparison
     * @param {Function} [customizer] The function to customize comparisons.
     * @param {Object} [stack] Tracks traversed `value` and `other` objects.
     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
     */
    function baseIsEqual(value, other, bitmask, customizer, stack) {
      if (value === other) {
        return true;
      }
      if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {
        return value !== value && other !== other;
      }
      return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);
    }

    /**
     * A specialized version of `baseIsEqual` for arrays and objects which performs
     * deep comparisons and tracks traversed objects enabling objects with circular
     * references to be compared.
     *
     * @private
     * @param {Object} object The object to compare.
     * @param {Object} other The other object to compare.
     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
     * @param {Function} customizer The function to customize comparisons.
     * @param {Function} equalFunc The function to determine equivalents of values.
     * @param {Object} [stack] Tracks traversed `object` and `other` objects.
     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
     */
    function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {
      var objIsArr = isArray(object),
          othIsArr = isArray(other),
          objTag = objIsArr ? arrayTag : getTag(object),
          othTag = othIsArr ? arrayTag : getTag(other);

      objTag = objTag == argsTag ? objectTag : objTag;
      othTag = othTag == argsTag ? objectTag : othTag;

      var objIsObj = objTag == objectTag,
          othIsObj = othTag == objectTag,
          isSameTag = objTag == othTag;

      if (isSameTag && isBuffer(object)) {
        if (!isBuffer(other)) {
          return false;
        }
        objIsArr = true;
        objIsObj = false;
      }
      if (isSameTag && !objIsObj) {
        stack || (stack = new Stack);
        return (objIsArr || isTypedArray(object))
          ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)
          : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);
      }
      if (!(bitmask & COMPARE_PARTIAL_FLAG)) {
        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),
            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');

        if (objIsWrapped || othIsWrapped) {
          var objUnwrapped = objIsWrapped ? object.value() : object,
              othUnwrapped = othIsWrapped ? other.value() : other;

          stack || (stack = new Stack);
          return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
        }
      }
      if (!isSameTag) {
        return false;
      }
      stack || (stack = new Stack);
      return equalObjects(object, other, bitmask, customizer, equalFunc, stack);
    }

    /**
     * The base implementation of `_.isMap` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a map, else `false`.
     */
    function baseIsMap(value) {
      return isObjectLike(value) && getTag(value) == mapTag;
    }

    /**
     * The base implementation of `_.isMatch` without support for iteratee shorthands.
     *
     * @private
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property values to match.
     * @param {Array} matchData The property names, values, and compare flags to match.
     * @param {Function} [customizer] The function to customize comparisons.
     * @returns {boolean} Returns `true` if `object` is a match, else `false`.
     */
    function baseIsMatch(object, source, matchData, customizer) {
      var index = matchData.length,
          length = index,
          noCustomizer = !customizer;

      if (object == null) {
        return !length;
      }
      object = Object(object);
      while (index--) {
        var data = matchData[index];
        if ((noCustomizer && data[2])
              ? data[1] !== object[data[0]]
              : !(data[0] in object)
            ) {
          return false;
        }
      }
      while (++index < length) {
        data = matchData[index];
        var key = data[0],
            objValue = object[key],
            srcValue = data[1];

        if (noCustomizer && data[2]) {
          if (objValue === undefined && !(key in object)) {
            return false;
          }
        } else {
          var stack = new Stack;
          if (customizer) {
            var result = customizer(objValue, srcValue, key, object, source, stack);
          }
          if (!(result === undefined
                ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)
                : result
              )) {
            return false;
          }
        }
      }
      return true;
    }

    /**
     * The base implementation of `_.isNative` without bad shim checks.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a native function,
     *  else `false`.
     */
    function baseIsNative(value) {
      if (!isObject(value) || isMasked(value)) {
        return false;
      }
      var pattern = isFunction(value) ? reIsNative : reIsHostCtor;
      return pattern.test(toSource(value));
    }

    /**
     * The base implementation of `_.isRegExp` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.
     */
    function baseIsRegExp(value) {
      return isObjectLike(value) && baseGetTag(value) == regexpTag;
    }

    /**
     * The base implementation of `_.isSet` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a set, else `false`.
     */
    function baseIsSet(value) {
      return isObjectLike(value) && getTag(value) == setTag;
    }

    /**
     * The base implementation of `_.isTypedArray` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
     */
    function baseIsTypedArray(value) {
      return isObjectLike(value) &&
        isLength(value.length) && !!typedArrayTags[baseGetTag(value)];
    }

    /**
     * The base implementation of `_.iteratee`.
     *
     * @private
     * @param {*} [value=_.identity] The value to convert to an iteratee.
     * @returns {Function} Returns the iteratee.
     */
    function baseIteratee(value) {
      // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.
      // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.
      if (typeof value == 'function') {
        return value;
      }
      if (value == null) {
        return identity;
      }
      if (typeof value == 'object') {
        return isArray(value)
          ? baseMatchesProperty(value[0], value[1])
          : baseMatches(value);
      }
      return property(value);
    }

    /**
     * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     */
    function baseKeys(object) {
      if (!isPrototype(object)) {
        return nativeKeys(object);
      }
      var result = [];
      for (var key in Object(object)) {
        if (hasOwnProperty.call(object, key) && key != 'constructor') {
          result.push(key);
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     */
    function baseKeysIn(object) {
      if (!isObject(object)) {
        return nativeKeysIn(object);
      }
      var isProto = isPrototype(object),
          result = [];

      for (var key in object) {
        if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {
          result.push(key);
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.lt` which doesn't coerce arguments.
     *
     * @private
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is less than `other`,
     *  else `false`.
     */
    function baseLt(value, other) {
      return value < other;
    }

    /**
     * The base implementation of `_.map` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Array} Returns the new mapped array.
     */
    function baseMap(collection, iteratee) {
      var index = -1,
          result = isArrayLike(collection) ? Array(collection.length) : [];

      baseEach(collection, function(value, key, collection) {
        result[++index] = iteratee(value, key, collection);
      });
      return result;
    }

    /**
     * The base implementation of `_.matches` which doesn't clone `source`.
     *
     * @private
     * @param {Object} source The object of property values to match.
     * @returns {Function} Returns the new spec function.
     */
    function baseMatches(source) {
      var matchData = getMatchData(source);
      if (matchData.length == 1 && matchData[0][2]) {
        return matchesStrictComparable(matchData[0][0], matchData[0][1]);
      }
      return function(object) {
        return object === source || baseIsMatch(object, source, matchData);
      };
    }

    /**
     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.
     *
     * @private
     * @param {string} path The path of the property to get.
     * @param {*} srcValue The value to match.
     * @returns {Function} Returns the new spec function.
     */
    function baseMatchesProperty(path, srcValue) {
      if (isKey(path) && isStrictComparable(srcValue)) {
        return matchesStrictComparable(toKey(path), srcValue);
      }
      return function(object) {
        var objValue = get(object, path);
        return (objValue === undefined && objValue === srcValue)
          ? hasIn(object, path)
          : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);
      };
    }

    /**
     * The base implementation of `_.merge` without support for multiple sources.
     *
     * @private
     * @param {Object} object The destination object.
     * @param {Object} source The source object.
     * @param {number} srcIndex The index of `source`.
     * @param {Function} [customizer] The function to customize merged values.
     * @param {Object} [stack] Tracks traversed source values and their merged
     *  counterparts.
     */
    function baseMerge(object, source, srcIndex, customizer, stack) {
      if (object === source) {
        return;
      }
      baseFor(source, function(srcValue, key) {
        if (isObject(srcValue)) {
          stack || (stack = new Stack);
          baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);
        }
        else {
          var newValue = customizer
            ? customizer(object[key], srcValue, (key + ''), object, source, stack)
            : undefined;

          if (newValue === undefined) {
            newValue = srcValue;
          }
          assignMergeValue(object, key, newValue);
        }
      }, keysIn);
    }

    /**
     * A specialized version of `baseMerge` for arrays and objects which performs
     * deep merges and tracks traversed objects enabling objects with circular
     * references to be merged.
     *
     * @private
     * @param {Object} object The destination object.
     * @param {Object} source The source object.
     * @param {string} key The key of the value to merge.
     * @param {number} srcIndex The index of `source`.
     * @param {Function} mergeFunc The function to merge values.
     * @param {Function} [customizer] The function to customize assigned values.
     * @param {Object} [stack] Tracks traversed source values and their merged
     *  counterparts.
     */
    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {
      var objValue = object[key],
          srcValue = source[key],
          stacked = stack.get(srcValue);

      if (stacked) {
        assignMergeValue(object, key, stacked);
        return;
      }
      var newValue = customizer
        ? customizer(objValue, srcValue, (key + ''), object, source, stack)
        : undefined;

      var isCommon = newValue === undefined;

      if (isCommon) {
        var isArr = isArray(srcValue),
            isBuff = !isArr && isBuffer(srcValue),
            isTyped = !isArr && !isBuff && isTypedArray(srcValue);

        newValue = srcValue;
        if (isArr || isBuff || isTyped) {
          if (isArray(objValue)) {
            newValue = objValue;
          }
          else if (isArrayLikeObject(objValue)) {
            newValue = copyArray(objValue);
          }
          else if (isBuff) {
            isCommon = false;
            newValue = cloneBuffer(srcValue, true);
          }
          else if (isTyped) {
            isCommon = false;
            newValue = cloneTypedArray(srcValue, true);
          }
          else {
            newValue = [];
          }
        }
        else if (isPlainObject(srcValue) || isArguments(srcValue)) {
          newValue = objValue;
          if (isArguments(objValue)) {
            newValue = toPlainObject(objValue);
          }
          else if (!isObject(objValue) || (srcIndex && isFunction(objValue))) {
            newValue = initCloneObject(srcValue);
          }
        }
        else {
          isCommon = false;
        }
      }
      if (isCommon) {
        // Recursively merge objects and arrays (susceptible to call stack limits).
        stack.set(srcValue, newValue);
        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);
        stack['delete'](srcValue);
      }
      assignMergeValue(object, key, newValue);
    }

    /**
     * The base implementation of `_.nth` which doesn't coerce arguments.
     *
     * @private
     * @param {Array} array The array to query.
     * @param {number} n The index of the element to return.
     * @returns {*} Returns the nth element of `array`.
     */
    function baseNth(array, n) {
      var length = array.length;
      if (!length) {
        return;
      }
      n += n < 0 ? length : 0;
      return isIndex(n, length) ? array[n] : undefined;
    }

    /**
     * The base implementation of `_.orderBy` without param guards.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.
     * @param {string[]} orders The sort orders of `iteratees`.
     * @returns {Array} Returns the new sorted array.
     */
    function baseOrderBy(collection, iteratees, orders) {
      var index = -1;
      iteratees = arrayMap(iteratees.length ? iteratees : [identity], baseUnary(getIteratee()));

      var result = baseMap(collection, function(value, key, collection) {
        var criteria = arrayMap(iteratees, function(iteratee) {
          return iteratee(value);
        });
        return { 'criteria': criteria, 'index': ++index, 'value': value };
      });

      return baseSortBy(result, function(object, other) {
        return compareMultiple(object, other, orders);
      });
    }

    /**
     * The base implementation of `_.pick` without support for individual
     * property identifiers.
     *
     * @private
     * @param {Object} object The source object.
     * @param {string[]} paths The property paths to pick.
     * @returns {Object} Returns the new object.
     */
    function basePick(object, paths) {
      return basePickBy(object, paths, function(value, path) {
        return hasIn(object, path);
      });
    }

    /**
     * The base implementation of  `_.pickBy` without support for iteratee shorthands.
     *
     * @private
     * @param {Object} object The source object.
     * @param {string[]} paths The property paths to pick.
     * @param {Function} predicate The function invoked per property.
     * @returns {Object} Returns the new object.
     */
    function basePickBy(object, paths, predicate) {
      var index = -1,
          length = paths.length,
          result = {};

      while (++index < length) {
        var path = paths[index],
            value = baseGet(object, path);

        if (predicate(value, path)) {
          baseSet(result, castPath(path, object), value);
        }
      }
      return result;
    }

    /**
     * A specialized version of `baseProperty` which supports deep paths.
     *
     * @private
     * @param {Array|string} path The path of the property to get.
     * @returns {Function} Returns the new accessor function.
     */
    function basePropertyDeep(path) {
      return function(object) {
        return baseGet(object, path);
      };
    }

    /**
     * The base implementation of `_.pullAllBy` without support for iteratee
     * shorthands.
     *
     * @private
     * @param {Array} array The array to modify.
     * @param {Array} values The values to remove.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns `array`.
     */
    function basePullAll(array, values, iteratee, comparator) {
      var indexOf = comparator ? baseIndexOfWith : baseIndexOf,
          index = -1,
          length = values.length,
          seen = array;

      if (array === values) {
        values = copyArray(values);
      }
      if (iteratee) {
        seen = arrayMap(array, baseUnary(iteratee));
      }
      while (++index < length) {
        var fromIndex = 0,
            value = values[index],
            computed = iteratee ? iteratee(value) : value;

        while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {
          if (seen !== array) {
            splice.call(seen, fromIndex, 1);
          }
          splice.call(array, fromIndex, 1);
        }
      }
      return array;
    }

    /**
     * The base implementation of `_.pullAt` without support for individual
     * indexes or capturing the removed elements.
     *
     * @private
     * @param {Array} array The array to modify.
     * @param {number[]} indexes The indexes of elements to remove.
     * @returns {Array} Returns `array`.
     */
    function basePullAt(array, indexes) {
      var length = array ? indexes.length : 0,
          lastIndex = length - 1;

      while (length--) {
        var index = indexes[length];
        if (length == lastIndex || index !== previous) {
          var previous = index;
          if (isIndex(index)) {
            splice.call(array, index, 1);
          } else {
            baseUnset(array, index);
          }
        }
      }
      return array;
    }

    /**
     * The base implementation of `_.random` without support for returning
     * floating-point numbers.
     *
     * @private
     * @param {number} lower The lower bound.
     * @param {number} upper The upper bound.
     * @returns {number} Returns the random number.
     */
    function baseRandom(lower, upper) {
      return lower + nativeFloor(nativeRandom() * (upper - lower + 1));
    }

    /**
     * The base implementation of `_.range` and `_.rangeRight` which doesn't
     * coerce arguments.
     *
     * @private
     * @param {number} start The start of the range.
     * @param {number} end The end of the range.
     * @param {number} step The value to increment or decrement by.
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Array} Returns the range of numbers.
     */
    function baseRange(start, end, step, fromRight) {
      var index = -1,
          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),
          result = Array(length);

      while (length--) {
        result[fromRight ? length : ++index] = start;
        start += step;
      }
      return result;
    }

    /**
     * The base implementation of `_.repeat` which doesn't coerce arguments.
     *
     * @private
     * @param {string} string The string to repeat.
     * @param {number} n The number of times to repeat the string.
     * @returns {string} Returns the repeated string.
     */
    function baseRepeat(string, n) {
      var result = '';
      if (!string || n < 1 || n > MAX_SAFE_INTEGER) {
        return result;
      }
      // Leverage the exponentiation by squaring algorithm for a faster repeat.
      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.
      do {
        if (n % 2) {
          result += string;
        }
        n = nativeFloor(n / 2);
        if (n) {
          string += string;
        }
      } while (n);

      return result;
    }

    /**
     * The base implementation of `_.rest` which doesn't validate or coerce arguments.
     *
     * @private
     * @param {Function} func The function to apply a rest parameter to.
     * @param {number} [start=func.length-1] The start position of the rest parameter.
     * @returns {Function} Returns the new function.
     */
    function baseRest(func, start) {
      return setToString(overRest(func, start, identity), func + '');
    }

    /**
     * The base implementation of `_.sample`.
     *
     * @private
     * @param {Array|Object} collection The collection to sample.
     * @returns {*} Returns the random element.
     */
    function baseSample(collection) {
      return arraySample(values(collection));
    }

    /**
     * The base implementation of `_.sampleSize` without param guards.
     *
     * @private
     * @param {Array|Object} collection The collection to sample.
     * @param {number} n The number of elements to sample.
     * @returns {Array} Returns the random elements.
     */
    function baseSampleSize(collection, n) {
      var array = values(collection);
      return shuffleSelf(array, baseClamp(n, 0, array.length));
    }

    /**
     * The base implementation of `_.set`.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {*} value The value to set.
     * @param {Function} [customizer] The function to customize path creation.
     * @returns {Object} Returns `object`.
     */
    function baseSet(object, path, value, customizer) {
      if (!isObject(object)) {
        return object;
      }
      path = castPath(path, object);

      var index = -1,
          length = path.length,
          lastIndex = length - 1,
          nested = object;

      while (nested != null && ++index < length) {
        var key = toKey(path[index]),
            newValue = value;

        if (index != lastIndex) {
          var objValue = nested[key];
          newValue = customizer ? customizer(objValue, key, nested) : undefined;
          if (newValue === undefined) {
            newValue = isObject(objValue)
              ? objValue
              : (isIndex(path[index + 1]) ? [] : {});
          }
        }
        assignValue(nested, key, newValue);
        nested = nested[key];
      }
      return object;
    }

    /**
     * The base implementation of `setData` without support for hot loop shorting.
     *
     * @private
     * @param {Function} func The function to associate metadata with.
     * @param {*} data The metadata.
     * @returns {Function} Returns `func`.
     */
    var baseSetData = !metaMap ? identity : function(func, data) {
      metaMap.set(func, data);
      return func;
    };

    /**
     * The base implementation of `setToString` without support for hot loop shorting.
     *
     * @private
     * @param {Function} func The function to modify.
     * @param {Function} string The `toString` result.
     * @returns {Function} Returns `func`.
     */
    var baseSetToString = !defineProperty ? identity : function(func, string) {
      return defineProperty(func, 'toString', {
        'configurable': true,
        'enumerable': false,
        'value': constant(string),
        'writable': true
      });
    };

    /**
     * The base implementation of `_.shuffle`.
     *
     * @private
     * @param {Array|Object} collection The collection to shuffle.
     * @returns {Array} Returns the new shuffled array.
     */
    function baseShuffle(collection) {
      return shuffleSelf(values(collection));
    }

    /**
     * The base implementation of `_.slice` without an iteratee call guard.
     *
     * @private
     * @param {Array} array The array to slice.
     * @param {number} [start=0] The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns the slice of `array`.
     */
    function baseSlice(array, start, end) {
      var index = -1,
          length = array.length;

      if (start < 0) {
        start = -start > length ? 0 : (length + start);
      }
      end = end > length ? length : end;
      if (end < 0) {
        end += length;
      }
      length = start > end ? 0 : ((end - start) >>> 0);
      start >>>= 0;

      var result = Array(length);
      while (++index < length) {
        result[index] = array[index + start];
      }
      return result;
    }

    /**
     * The base implementation of `_.some` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} predicate The function invoked per iteration.
     * @returns {boolean} Returns `true` if any element passes the predicate check,
     *  else `false`.
     */
    function baseSome(collection, predicate) {
      var result;

      baseEach(collection, function(value, index, collection) {
        result = predicate(value, index, collection);
        return !result;
      });
      return !!result;
    }

    /**
     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which
     * performs a binary search of `array` to determine the index at which `value`
     * should be inserted into `array` in order to maintain its sort order.
     *
     * @private
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @param {boolean} [retHighest] Specify returning the highest qualified index.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     */
    function baseSortedIndex(array, value, retHighest) {
      var low = 0,
          high = array == null ? low : array.length;

      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {
        while (low < high) {
          var mid = (low + high) >>> 1,
              computed = array[mid];

          if (computed !== null && !isSymbol(computed) &&
              (retHighest ? (computed <= value) : (computed < value))) {
            low = mid + 1;
          } else {
            high = mid;
          }
        }
        return high;
      }
      return baseSortedIndexBy(array, value, identity, retHighest);
    }

    /**
     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`
     * which invokes `iteratee` for `value` and each element of `array` to compute
     * their sort ranking. The iteratee is invoked with one argument; (value).
     *
     * @private
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @param {Function} iteratee The iteratee invoked per element.
     * @param {boolean} [retHighest] Specify returning the highest qualified index.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     */
    function baseSortedIndexBy(array, value, iteratee, retHighest) {
      value = iteratee(value);

      var low = 0,
          high = array == null ? 0 : array.length,
          valIsNaN = value !== value,
          valIsNull = value === null,
          valIsSymbol = isSymbol(value),
          valIsUndefined = value === undefined;

      while (low < high) {
        var mid = nativeFloor((low + high) / 2),
            computed = iteratee(array[mid]),
            othIsDefined = computed !== undefined,
            othIsNull = computed === null,
            othIsReflexive = computed === computed,
            othIsSymbol = isSymbol(computed);

        if (valIsNaN) {
          var setLow = retHighest || othIsReflexive;
        } else if (valIsUndefined) {
          setLow = othIsReflexive && (retHighest || othIsDefined);
        } else if (valIsNull) {
          setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);
        } else if (valIsSymbol) {
          setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);
        } else if (othIsNull || othIsSymbol) {
          setLow = false;
        } else {
          setLow = retHighest ? (computed <= value) : (computed < value);
        }
        if (setLow) {
          low = mid + 1;
        } else {
          high = mid;
        }
      }
      return nativeMin(high, MAX_ARRAY_INDEX);
    }

    /**
     * The base implementation of `_.sortedUniq` and `_.sortedUniqBy` without
     * support for iteratee shorthands.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     */
    function baseSortedUniq(array, iteratee) {
      var index = -1,
          length = array.length,
          resIndex = 0,
          result = [];

      while (++index < length) {
        var value = array[index],
            computed = iteratee ? iteratee(value) : value;

        if (!index || !eq(computed, seen)) {
          var seen = computed;
          result[resIndex++] = value === 0 ? 0 : value;
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.toNumber` which doesn't ensure correct
     * conversions of binary, hexadecimal, or octal string values.
     *
     * @private
     * @param {*} value The value to process.
     * @returns {number} Returns the number.
     */
    function baseToNumber(value) {
      if (typeof value == 'number') {
        return value;
      }
      if (isSymbol(value)) {
        return NAN;
      }
      return +value;
    }

    /**
     * The base implementation of `_.toString` which doesn't convert nullish
     * values to empty strings.
     *
     * @private
     * @param {*} value The value to process.
     * @returns {string} Returns the string.
     */
    function baseToString(value) {
      // Exit early for strings to avoid a performance hit in some environments.
      if (typeof value == 'string') {
        return value;
      }
      if (isArray(value)) {
        // Recursively convert values (susceptible to call stack limits).
        return arrayMap(value, baseToString) + '';
      }
      if (isSymbol(value)) {
        return symbolToString ? symbolToString.call(value) : '';
      }
      var result = (value + '');
      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
    }

    /**
     * The base implementation of `_.uniqBy` without support for iteratee shorthands.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     */
    function baseUniq(array, iteratee, comparator) {
      var index = -1,
          includes = arrayIncludes,
          length = array.length,
          isCommon = true,
          result = [],
          seen = result;

      if (comparator) {
        isCommon = false;
        includes = arrayIncludesWith;
      }
      else if (length >= LARGE_ARRAY_SIZE) {
        var set = iteratee ? null : createSet(array);
        if (set) {
          return setToArray(set);
        }
        isCommon = false;
        includes = cacheHas;
        seen = new SetCache;
      }
      else {
        seen = iteratee ? [] : result;
      }
      outer:
      while (++index < length) {
        var value = array[index],
            computed = iteratee ? iteratee(value) : value;

        value = (comparator || value !== 0) ? value : 0;
        if (isCommon && computed === computed) {
          var seenIndex = seen.length;
          while (seenIndex--) {
            if (seen[seenIndex] === computed) {
              continue outer;
            }
          }
          if (iteratee) {
            seen.push(computed);
          }
          result.push(value);
        }
        else if (!includes(seen, computed, comparator)) {
          if (seen !== result) {
            seen.push(computed);
          }
          result.push(value);
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.unset`.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {Array|string} path The property path to unset.
     * @returns {boolean} Returns `true` if the property is deleted, else `false`.
     */
    function baseUnset(object, path) {
      path = castPath(path, object);
      object = parent(object, path);
      return object == null || delete object[toKey(last(path))];
    }

    /**
     * The base implementation of `_.update`.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to update.
     * @param {Function} updater The function to produce the updated value.
     * @param {Function} [customizer] The function to customize path creation.
     * @returns {Object} Returns `object`.
     */
    function baseUpdate(object, path, updater, customizer) {
      return baseSet(object, path, updater(baseGet(object, path)), customizer);
    }

    /**
     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`
     * without support for iteratee shorthands.
     *
     * @private
     * @param {Array} array The array to query.
     * @param {Function} predicate The function invoked per iteration.
     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Array} Returns the slice of `array`.
     */
    function baseWhile(array, predicate, isDrop, fromRight) {
      var length = array.length,
          index = fromRight ? length : -1;

      while ((fromRight ? index-- : ++index < length) &&
        predicate(array[index], index, array)) {}

      return isDrop
        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))
        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));
    }

    /**
     * The base implementation of `wrapperValue` which returns the result of
     * performing a sequence of actions on the unwrapped `value`, where each
     * successive action is supplied the return value of the previous.
     *
     * @private
     * @param {*} value The unwrapped value.
     * @param {Array} actions Actions to perform to resolve the unwrapped value.
     * @returns {*} Returns the resolved value.
     */
    function baseWrapperValue(value, actions) {
      var result = value;
      if (result instanceof LazyWrapper) {
        result = result.value();
      }
      return arrayReduce(actions, function(result, action) {
        return action.func.apply(action.thisArg, arrayPush([result], action.args));
      }, result);
    }

    /**
     * The base implementation of methods like `_.xor`, without support for
     * iteratee shorthands, that accepts an array of arrays to inspect.
     *
     * @private
     * @param {Array} arrays The arrays to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of values.
     */
    function baseXor(arrays, iteratee, comparator) {
      var length = arrays.length;
      if (length < 2) {
        return length ? baseUniq(arrays[0]) : [];
      }
      var index = -1,
          result = Array(length);

      while (++index < length) {
        var array = arrays[index],
            othIndex = -1;

        while (++othIndex < length) {
          if (othIndex != index) {
            result[index] = baseDifference(result[index] || array, arrays[othIndex], iteratee, comparator);
          }
        }
      }
      return baseUniq(baseFlatten(result, 1), iteratee, comparator);
    }

    /**
     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.
     *
     * @private
     * @param {Array} props The property identifiers.
     * @param {Array} values The property values.
     * @param {Function} assignFunc The function to assign values.
     * @returns {Object} Returns the new object.
     */
    function baseZipObject(props, values, assignFunc) {
      var index = -1,
          length = props.length,
          valsLength = values.length,
          result = {};

      while (++index < length) {
        var value = index < valsLength ? values[index] : undefined;
        assignFunc(result, props[index], value);
      }
      return result;
    }

    /**
     * Casts `value` to an empty array if it's not an array like object.
     *
     * @private
     * @param {*} value The value to inspect.
     * @returns {Array|Object} Returns the cast array-like object.
     */
    function castArrayLikeObject(value) {
      return isArrayLikeObject(value) ? value : [];
    }

    /**
     * Casts `value` to `identity` if it's not a function.
     *
     * @private
     * @param {*} value The value to inspect.
     * @returns {Function} Returns cast function.
     */
    function castFunction(value) {
      return typeof value == 'function' ? value : identity;
    }

    /**
     * Casts `value` to a path array if it's not one.
     *
     * @private
     * @param {*} value The value to inspect.
     * @param {Object} [object] The object to query keys on.
     * @returns {Array} Returns the cast property path array.
     */
    function castPath(value, object) {
      if (isArray(value)) {
        return value;
      }
      return isKey(value, object) ? [value] : stringToPath(toString(value));
    }

    /**
     * A `baseRest` alias which can be replaced with `identity` by module
     * replacement plugins.
     *
     * @private
     * @type {Function}
     * @param {Function} func The function to apply a rest parameter to.
     * @returns {Function} Returns the new function.
     */
    var castRest = baseRest;

    /**
     * Casts `array` to a slice if it's needed.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {number} start The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns the cast slice.
     */
    function castSlice(array, start, end) {
      var length = array.length;
      end = end === undefined ? length : end;
      return (!start && end >= length) ? array : baseSlice(array, start, end);
    }

    /**
     * A simple wrapper around the global [`clearTimeout`](https://mdn.io/clearTimeout).
     *
     * @private
     * @param {number|Object} id The timer id or timeout object of the timer to clear.
     */
    var clearTimeout = ctxClearTimeout || function(id) {
      return root.clearTimeout(id);
    };

    /**
     * Creates a clone of  `buffer`.
     *
     * @private
     * @param {Buffer} buffer The buffer to clone.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Buffer} Returns the cloned buffer.
     */
    function cloneBuffer(buffer, isDeep) {
      if (isDeep) {
        return buffer.slice();
      }
      var length = buffer.length,
          result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);

      buffer.copy(result);
      return result;
    }

    /**
     * Creates a clone of `arrayBuffer`.
     *
     * @private
     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.
     * @returns {ArrayBuffer} Returns the cloned array buffer.
     */
    function cloneArrayBuffer(arrayBuffer) {
      var result = new arrayBuffer.constructor(arrayBuffer.byteLength);
      new Uint8Array(result).set(new Uint8Array(arrayBuffer));
      return result;
    }

    /**
     * Creates a clone of `dataView`.
     *
     * @private
     * @param {Object} dataView The data view to clone.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Object} Returns the cloned data view.
     */
    function cloneDataView(dataView, isDeep) {
      var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;
      return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);
    }

    /**
     * Creates a clone of `map`.
     *
     * @private
     * @param {Object} map The map to clone.
     * @param {Function} cloneFunc The function to clone values.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Object} Returns the cloned map.
     */
    function cloneMap(map, isDeep, cloneFunc) {
      var array = isDeep ? cloneFunc(mapToArray(map), CLONE_DEEP_FLAG) : mapToArray(map);
      return arrayReduce(array, addMapEntry, new map.constructor);
    }

    /**
     * Creates a clone of `regexp`.
     *
     * @private
     * @param {Object} regexp The regexp to clone.
     * @returns {Object} Returns the cloned regexp.
     */
    function cloneRegExp(regexp) {
      var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));
      result.lastIndex = regexp.lastIndex;
      return result;
    }

    /**
     * Creates a clone of `set`.
     *
     * @private
     * @param {Object} set The set to clone.
     * @param {Function} cloneFunc The function to clone values.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Object} Returns the cloned set.
     */
    function cloneSet(set, isDeep, cloneFunc) {
      var array = isDeep ? cloneFunc(setToArray(set), CLONE_DEEP_FLAG) : setToArray(set);
      return arrayReduce(array, addSetEntry, new set.constructor);
    }

    /**
     * Creates a clone of the `symbol` object.
     *
     * @private
     * @param {Object} symbol The symbol object to clone.
     * @returns {Object} Returns the cloned symbol object.
     */
    function cloneSymbol(symbol) {
      return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};
    }

    /**
     * Creates a clone of `typedArray`.
     *
     * @private
     * @param {Object} typedArray The typed array to clone.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Object} Returns the cloned typed array.
     */
    function cloneTypedArray(typedArray, isDeep) {
      var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;
      return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
    }

    /**
     * Compares values to sort them in ascending order.
     *
     * @private
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {number} Returns the sort order indicator for `value`.
     */
    function compareAscending(value, other) {
      if (value !== other) {
        var valIsDefined = value !== undefined,
            valIsNull = value === null,
            valIsReflexive = value === value,
            valIsSymbol = isSymbol(value);

        var othIsDefined = other !== undefined,
            othIsNull = other === null,
            othIsReflexive = other === other,
            othIsSymbol = isSymbol(other);

        if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||
            (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||
            (valIsNull && othIsDefined && othIsReflexive) ||
            (!valIsDefined && othIsReflexive) ||
            !valIsReflexive) {
          return 1;
        }
        if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||
            (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||
            (othIsNull && valIsDefined && valIsReflexive) ||
            (!othIsDefined && valIsReflexive) ||
            !othIsReflexive) {
          return -1;
        }
      }
      return 0;
    }

    /**
     * Used by `_.orderBy` to compare multiple properties of a value to another
     * and stable sort them.
     *
     * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,
     * specify an order of "desc" for descending or "asc" for ascending sort order
     * of corresponding values.
     *
     * @private
     * @param {Object} object The object to compare.
     * @param {Object} other The other object to compare.
     * @param {boolean[]|string[]} orders The order to sort by for each property.
     * @returns {number} Returns the sort order indicator for `object`.
     */
    function compareMultiple(object, other, orders) {
      var index = -1,
          objCriteria = object.criteria,
          othCriteria = other.criteria,
          length = objCriteria.length,
          ordersLength = orders.length;

      while (++index < length) {
        var result = compareAscending(objCriteria[index], othCriteria[index]);
        if (result) {
          if (index >= ordersLength) {
            return result;
          }
          var order = orders[index];
          return result * (order == 'desc' ? -1 : 1);
        }
      }
      // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications
      // that causes it, under certain circumstances, to provide the same value for
      // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247
      // for more details.
      //
      // This also ensures a stable sort in V8 and other engines.
      // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.
      return object.index - other.index;
    }

    /**
     * Creates an array that is the composition of partially applied arguments,
     * placeholders, and provided arguments into a single array of arguments.
     *
     * @private
     * @param {Array} args The provided arguments.
     * @param {Array} partials The arguments to prepend to those provided.
     * @param {Array} holders The `partials` placeholder indexes.
     * @params {boolean} [isCurried] Specify composing for a curried function.
     * @returns {Array} Returns the new array of composed arguments.
     */
    function composeArgs(args, partials, holders, isCurried) {
      var argsIndex = -1,
          argsLength = args.length,
          holdersLength = holders.length,
          leftIndex = -1,
          leftLength = partials.length,
          rangeLength = nativeMax(argsLength - holdersLength, 0),
          result = Array(leftLength + rangeLength),
          isUncurried = !isCurried;

      while (++leftIndex < leftLength) {
        result[leftIndex] = partials[leftIndex];
      }
      while (++argsIndex < holdersLength) {
        if (isUncurried || argsIndex < argsLength) {
          result[holders[argsIndex]] = args[argsIndex];
        }
      }
      while (rangeLength--) {
        result[leftIndex++] = args[argsIndex++];
      }
      return result;
    }

    /**
     * This function is like `composeArgs` except that the arguments composition
     * is tailored for `_.partialRight`.
     *
     * @private
     * @param {Array} args The provided arguments.
     * @param {Array} partials The arguments to append to those provided.
     * @param {Array} holders The `partials` placeholder indexes.
     * @params {boolean} [isCurried] Specify composing for a curried function.
     * @returns {Array} Returns the new array of composed arguments.
     */
    function composeArgsRight(args, partials, holders, isCurried) {
      var argsIndex = -1,
          argsLength = args.length,
          holdersIndex = -1,
          holdersLength = holders.length,
          rightIndex = -1,
          rightLength = partials.length,
          rangeLength = nativeMax(argsLength - holdersLength, 0),
          result = Array(rangeLength + rightLength),
          isUncurried = !isCurried;

      while (++argsIndex < rangeLength) {
        result[argsIndex] = args[argsIndex];
      }
      var offset = argsIndex;
      while (++rightIndex < rightLength) {
        result[offset + rightIndex] = partials[rightIndex];
      }
      while (++holdersIndex < holdersLength) {
        if (isUncurried || argsIndex < argsLength) {
          result[offset + holders[holdersIndex]] = args[argsIndex++];
        }
      }
      return result;
    }

    /**
     * Copies the values of `source` to `array`.
     *
     * @private
     * @param {Array} source The array to copy values from.
     * @param {Array} [array=[]] The array to copy values to.
     * @returns {Array} Returns `array`.
     */
    function copyArray(source, array) {
      var index = -1,
          length = source.length;

      array || (array = Array(length));
      while (++index < length) {
        array[index] = source[index];
      }
      return array;
    }

    /**
     * Copies properties of `source` to `object`.
     *
     * @private
     * @param {Object} source The object to copy properties from.
     * @param {Array} props The property identifiers to copy.
     * @param {Object} [object={}] The object to copy properties to.
     * @param {Function} [customizer] The function to customize copied values.
     * @returns {Object} Returns `object`.
     */
    function copyObject(source, props, object, customizer) {
      var isNew = !object;
      object || (object = {});

      var index = -1,
          length = props.length;

      while (++index < length) {
        var key = props[index];

        var newValue = customizer
          ? customizer(object[key], source[key], key, object, source)
          : undefined;

        if (newValue === undefined) {
          newValue = source[key];
        }
        if (isNew) {
          baseAssignValue(object, key, newValue);
        } else {
          assignValue(object, key, newValue);
        }
      }
      return object;
    }

    /**
     * Copies own symbols of `source` to `object`.
     *
     * @private
     * @param {Object} source The object to copy symbols from.
     * @param {Object} [object={}] The object to copy symbols to.
     * @returns {Object} Returns `object`.
     */
    function copySymbols(source, object) {
      return copyObject(source, getSymbols(source), object);
    }

    /**
     * Copies own and inherited symbols of `source` to `object`.
     *
     * @private
     * @param {Object} source The object to copy symbols from.
     * @param {Object} [object={}] The object to copy symbols to.
     * @returns {Object} Returns `object`.
     */
    function copySymbolsIn(source, object) {
      return copyObject(source, getSymbolsIn(source), object);
    }

    /**
     * Creates a function like `_.groupBy`.
     *
     * @private
     * @param {Function} setter The function to set accumulator values.
     * @param {Function} [initializer] The accumulator object initializer.
     * @returns {Function} Returns the new aggregator function.
     */
    function createAggregator(setter, initializer) {
      return function(collection, iteratee) {
        var func = isArray(collection) ? arrayAggregator : baseAggregator,
            accumulator = initializer ? initializer() : {};

        return func(collection, setter, getIteratee(iteratee, 2), accumulator);
      };
    }

    /**
     * Creates a function like `_.assign`.
     *
     * @private
     * @param {Function} assigner The function to assign values.
     * @returns {Function} Returns the new assigner function.
     */
    function createAssigner(assigner) {
      return baseRest(function(object, sources) {
        var index = -1,
            length = sources.length,
            customizer = length > 1 ? sources[length - 1] : undefined,
            guard = length > 2 ? sources[2] : undefined;

        customizer = (assigner.length > 3 && typeof customizer == 'function')
          ? (length--, customizer)
          : undefined;

        if (guard && isIterateeCall(sources[0], sources[1], guard)) {
          customizer = length < 3 ? undefined : customizer;
          length = 1;
        }
        object = Object(object);
        while (++index < length) {
          var source = sources[index];
          if (source) {
            assigner(object, source, index, customizer);
          }
        }
        return object;
      });
    }

    /**
     * Creates a `baseEach` or `baseEachRight` function.
     *
     * @private
     * @param {Function} eachFunc The function to iterate over a collection.
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Function} Returns the new base function.
     */
    function createBaseEach(eachFunc, fromRight) {
      return function(collection, iteratee) {
        if (collection == null) {
          return collection;
        }
        if (!isArrayLike(collection)) {
          return eachFunc(collection, iteratee);
        }
        var length = collection.length,
            index = fromRight ? length : -1,
            iterable = Object(collection);

        while ((fromRight ? index-- : ++index < length)) {
          if (iteratee(iterable[index], index, iterable) === false) {
            break;
          }
        }
        return collection;
      };
    }

    /**
     * Creates a base function for methods like `_.forIn` and `_.forOwn`.
     *
     * @private
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Function} Returns the new base function.
     */
    function createBaseFor(fromRight) {
      return function(object, iteratee, keysFunc) {
        var index = -1,
            iterable = Object(object),
            props = keysFunc(object),
            length = props.length;

        while (length--) {
          var key = props[fromRight ? length : ++index];
          if (iteratee(iterable[key], key, iterable) === false) {
            break;
          }
        }
        return object;
      };
    }

    /**
     * Creates a function that wraps `func` to invoke it with the optional `this`
     * binding of `thisArg`.
     *
     * @private
     * @param {Function} func The function to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {*} [thisArg] The `this` binding of `func`.
     * @returns {Function} Returns the new wrapped function.
     */
    function createBind(func, bitmask, thisArg) {
      var isBind = bitmask & WRAP_BIND_FLAG,
          Ctor = createCtor(func);

      function wrapper() {
        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;
        return fn.apply(isBind ? thisArg : this, arguments);
      }
      return wrapper;
    }

    /**
     * Creates a function like `_.lowerFirst`.
     *
     * @private
     * @param {string} methodName The name of the `String` case method to use.
     * @returns {Function} Returns the new case function.
     */
    function createCaseFirst(methodName) {
      return function(string) {
        string = toString(string);

        var strSymbols = hasUnicode(string)
          ? stringToArray(string)
          : undefined;

        var chr = strSymbols
          ? strSymbols[0]
          : string.charAt(0);

        var trailing = strSymbols
          ? castSlice(strSymbols, 1).join('')
          : string.slice(1);

        return chr[methodName]() + trailing;
      };
    }

    /**
     * Creates a function like `_.camelCase`.
     *
     * @private
     * @param {Function} callback The function to combine each word.
     * @returns {Function} Returns the new compounder function.
     */
    function createCompounder(callback) {
      return function(string) {
        return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');
      };
    }

    /**
     * Creates a function that produces an instance of `Ctor` regardless of
     * whether it was invoked as part of a `new` expression or by `call` or `apply`.
     *
     * @private
     * @param {Function} Ctor The constructor to wrap.
     * @returns {Function} Returns the new wrapped function.
     */
    function createCtor(Ctor) {
      return function() {
        // Use a `switch` statement to work with class constructors. See
        // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist
        // for more details.
        var args = arguments;
        switch (args.length) {
          case 0: return new Ctor;
          case 1: return new Ctor(args[0]);
          case 2: return new Ctor(args[0], args[1]);
          case 3: return new Ctor(args[0], args[1], args[2]);
          case 4: return new Ctor(args[0], args[1], args[2], args[3]);
          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);
          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);
          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);
        }
        var thisBinding = baseCreate(Ctor.prototype),
            result = Ctor.apply(thisBinding, args);

        // Mimic the constructor's `return` behavior.
        // See https://es5.github.io/#x13.2.2 for more details.
        return isObject(result) ? result : thisBinding;
      };
    }

    /**
     * Creates a function that wraps `func` to enable currying.
     *
     * @private
     * @param {Function} func The function to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {number} arity The arity of `func`.
     * @returns {Function} Returns the new wrapped function.
     */
    function createCurry(func, bitmask, arity) {
      var Ctor = createCtor(func);

      function wrapper() {
        var length = arguments.length,
            args = Array(length),
            index = length,
            placeholder = getHolder(wrapper);

        while (index--) {
          args[index] = arguments[index];
        }
        var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)
          ? []
          : replaceHolders(args, placeholder);

        length -= holders.length;
        if (length < arity) {
          return createRecurry(
            func, bitmask, createHybrid, wrapper.placeholder, undefined,
            args, holders, undefined, undefined, arity - length);
        }
        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;
        return apply(fn, this, args);
      }
      return wrapper;
    }

    /**
     * Creates a `_.find` or `_.findLast` function.
     *
     * @private
     * @param {Function} findIndexFunc The function to find the collection index.
     * @returns {Function} Returns the new find function.
     */
    function createFind(findIndexFunc) {
      return function(collection, predicate, fromIndex) {
        var iterable = Object(collection);
        if (!isArrayLike(collection)) {
          var iteratee = getIteratee(predicate, 3);
          collection = keys(collection);
          predicate = function(key) { return iteratee(iterable[key], key, iterable); };
        }
        var index = findIndexFunc(collection, predicate, fromIndex);
        return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;
      };
    }

    /**
     * Creates a `_.flow` or `_.flowRight` function.
     *
     * @private
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Function} Returns the new flow function.
     */
    function createFlow(fromRight) {
      return flatRest(function(funcs) {
        var length = funcs.length,
            index = length,
            prereq = LodashWrapper.prototype.thru;

        if (fromRight) {
          funcs.reverse();
        }
        while (index--) {
          var func = funcs[index];
          if (typeof func != 'function') {
            throw new TypeError(FUNC_ERROR_TEXT);
          }
          if (prereq && !wrapper && getFuncName(func) == 'wrapper') {
            var wrapper = new LodashWrapper([], true);
          }
        }
        index = wrapper ? index : length;
        while (++index < length) {
          func = funcs[index];

          var funcName = getFuncName(func),
              data = funcName == 'wrapper' ? getData(func) : undefined;

          if (data && isLaziable(data[0]) &&
                data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) &&
                !data[4].length && data[9] == 1
              ) {
            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);
          } else {
            wrapper = (func.length == 1 && isLaziable(func))
              ? wrapper[funcName]()
              : wrapper.thru(func);
          }
        }
        return function() {
          var args = arguments,
              value = args[0];

          if (wrapper && args.length == 1 && isArray(value)) {
            return wrapper.plant(value).value();
          }
          var index = 0,
              result = length ? funcs[index].apply(this, args) : value;

          while (++index < length) {
            result = funcs[index].call(this, result);
          }
          return result;
        };
      });
    }

    /**
     * Creates a function that wraps `func` to invoke it with optional `this`
     * binding of `thisArg`, partial application, and currying.
     *
     * @private
     * @param {Function|string} func The function or method name to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {*} [thisArg] The `this` binding of `func`.
     * @param {Array} [partials] The arguments to prepend to those provided to
     *  the new function.
     * @param {Array} [holders] The `partials` placeholder indexes.
     * @param {Array} [partialsRight] The arguments to append to those provided
     *  to the new function.
     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.
     * @param {Array} [argPos] The argument positions of the new function.
     * @param {number} [ary] The arity cap of `func`.
     * @param {number} [arity] The arity of `func`.
     * @returns {Function} Returns the new wrapped function.
     */
    function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {
      var isAry = bitmask & WRAP_ARY_FLAG,
          isBind = bitmask & WRAP_BIND_FLAG,
          isBindKey = bitmask & WRAP_BIND_KEY_FLAG,
          isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG),
          isFlip = bitmask & WRAP_FLIP_FLAG,
          Ctor = isBindKey ? undefined : createCtor(func);

      function wrapper() {
        var length = arguments.length,
            args = Array(length),
            index = length;

        while (index--) {
          args[index] = arguments[index];
        }
        if (isCurried) {
          var placeholder = getHolder(wrapper),
              holdersCount = countHolders(args, placeholder);
        }
        if (partials) {
          args = composeArgs(args, partials, holders, isCurried);
        }
        if (partialsRight) {
          args = composeArgsRight(args, partialsRight, holdersRight, isCurried);
        }
        length -= holdersCount;
        if (isCurried && length < arity) {
          var newHolders = replaceHolders(args, placeholder);
          return createRecurry(
            func, bitmask, createHybrid, wrapper.placeholder, thisArg,
            args, newHolders, argPos, ary, arity - length
          );
        }
        var thisBinding = isBind ? thisArg : this,
            fn = isBindKey ? thisBinding[func] : func;

        length = args.length;
        if (argPos) {
          args = reorder(args, argPos);
        } else if (isFlip && length > 1) {
          args.reverse();
        }
        if (isAry && ary < length) {
          args.length = ary;
        }
        if (this && this !== root && this instanceof wrapper) {
          fn = Ctor || createCtor(fn);
        }
        return fn.apply(thisBinding, args);
      }
      return wrapper;
    }

    /**
     * Creates a function like `_.invertBy`.
     *
     * @private
     * @param {Function} setter The function to set accumulator values.
     * @param {Function} toIteratee The function to resolve iteratees.
     * @returns {Function} Returns the new inverter function.
     */
    function createInverter(setter, toIteratee) {
      return function(object, iteratee) {
        return baseInverter(object, setter, toIteratee(iteratee), {});
      };
    }

    /**
     * Creates a function that performs a mathematical operation on two values.
     *
     * @private
     * @param {Function} operator The function to perform the operation.
     * @param {number} [defaultValue] The value used for `undefined` arguments.
     * @returns {Function} Returns the new mathematical operation function.
     */
    function createMathOperation(operator, defaultValue) {
      return function(value, other) {
        var result;
        if (value === undefined && other === undefined) {
          return defaultValue;
        }
        if (value !== undefined) {
          result = value;
        }
        if (other !== undefined) {
          if (result === undefined) {
            return other;
          }
          if (typeof value == 'string' || typeof other == 'string') {
            value = baseToString(value);
            other = baseToString(other);
          } else {
            value = baseToNumber(value);
            other = baseToNumber(other);
          }
          result = operator(value, other);
        }
        return result;
      };
    }

    /**
     * Creates a function like `_.over`.
     *
     * @private
     * @param {Function} arrayFunc The function to iterate over iteratees.
     * @returns {Function} Returns the new over function.
     */
    function createOver(arrayFunc) {
      return flatRest(function(iteratees) {
        iteratees = arrayMap(iteratees, baseUnary(getIteratee()));
        return baseRest(function(args) {
          var thisArg = this;
          return arrayFunc(iteratees, function(iteratee) {
            return apply(iteratee, thisArg, args);
          });
        });
      });
    }

    /**
     * Creates the padding for `string` based on `length`. The `chars` string
     * is truncated if the number of characters exceeds `length`.
     *
     * @private
     * @param {number} length The padding length.
     * @param {string} [chars=' '] The string used as padding.
     * @returns {string} Returns the padding for `string`.
     */
    function createPadding(length, chars) {
      chars = chars === undefined ? ' ' : baseToString(chars);

      var charsLength = chars.length;
      if (charsLength < 2) {
        return charsLength ? baseRepeat(chars, length) : chars;
      }
      var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));
      return hasUnicode(chars)
        ? castSlice(stringToArray(result), 0, length).join('')
        : result.slice(0, length);
    }

    /**
     * Creates a function that wraps `func` to invoke it with the `this` binding
     * of `thisArg` and `partials` prepended to the arguments it receives.
     *
     * @private
     * @param {Function} func The function to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {*} thisArg The `this` binding of `func`.
     * @param {Array} partials The arguments to prepend to those provided to
     *  the new function.
     * @returns {Function} Returns the new wrapped function.
     */
    function createPartial(func, bitmask, thisArg, partials) {
      var isBind = bitmask & WRAP_BIND_FLAG,
          Ctor = createCtor(func);

      function wrapper() {
        var argsIndex = -1,
            argsLength = arguments.length,
            leftIndex = -1,
            leftLength = partials.length,
            args = Array(leftLength + argsLength),
            fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;

        while (++leftIndex < leftLength) {
          args[leftIndex] = partials[leftIndex];
        }
        while (argsLength--) {
          args[leftIndex++] = arguments[++argsIndex];
        }
        return apply(fn, isBind ? thisArg : this, args);
      }
      return wrapper;
    }

    /**
     * Creates a `_.range` or `_.rangeRight` function.
     *
     * @private
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Function} Returns the new range function.
     */
    function createRange(fromRight) {
      return function(start, end, step) {
        if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {
          end = step = undefined;
        }
        // Ensure the sign of `-0` is preserved.
        start = toFinite(start);
        if (end === undefined) {
          end = start;
          start = 0;
        } else {
          end = toFinite(end);
        }
        step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);
        return baseRange(start, end, step, fromRight);
      };
    }

    /**
     * Creates a function that performs a relational operation on two values.
     *
     * @private
     * @param {Function} operator The function to perform the operation.
     * @returns {Function} Returns the new relational operation function.
     */
    function createRelationalOperation(operator) {
      return function(value, other) {
        if (!(typeof value == 'string' && typeof other == 'string')) {
          value = toNumber(value);
          other = toNumber(other);
        }
        return operator(value, other);
      };
    }

    /**
     * Creates a function that wraps `func` to continue currying.
     *
     * @private
     * @param {Function} func The function to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {Function} wrapFunc The function to create the `func` wrapper.
     * @param {*} placeholder The placeholder value.
     * @param {*} [thisArg] The `this` binding of `func`.
     * @param {Array} [partials] The arguments to prepend to those provided to
     *  the new function.
     * @param {Array} [holders] The `partials` placeholder indexes.
     * @param {Array} [argPos] The argument positions of the new function.
     * @param {number} [ary] The arity cap of `func`.
     * @param {number} [arity] The arity of `func`.
     * @returns {Function} Returns the new wrapped function.
     */
    function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {
      var isCurry = bitmask & WRAP_CURRY_FLAG,
          newHolders = isCurry ? holders : undefined,
          newHoldersRight = isCurry ? undefined : holders,
          newPartials = isCurry ? partials : undefined,
          newPartialsRight = isCurry ? undefined : partials;

      bitmask |= (isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG);
      bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);

      if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {
        bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);
      }
      var newData = [
        func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,
        newHoldersRight, argPos, ary, arity
      ];

      var result = wrapFunc.apply(undefined, newData);
      if (isLaziable(func)) {
        setData(result, newData);
      }
      result.placeholder = placeholder;
      return setWrapToString(result, func, bitmask);
    }

    /**
     * Creates a function like `_.round`.
     *
     * @private
     * @param {string} methodName The name of the `Math` method to use when rounding.
     * @returns {Function} Returns the new round function.
     */
    function createRound(methodName) {
      var func = Math[methodName];
      return function(number, precision) {
        number = toNumber(number);
        precision = precision == null ? 0 : nativeMin(toInteger(precision), 292);
        if (precision) {
          // Shift with exponential notation to avoid floating-point issues.
          // See [MDN](https://mdn.io/round#Examples) for more details.
          var pair = (toString(number) + 'e').split('e'),
              value = func(pair[0] + 'e' + (+pair[1] + precision));

          pair = (toString(value) + 'e').split('e');
          return +(pair[0] + 'e' + (+pair[1] - precision));
        }
        return func(number);
      };
    }

    /**
     * Creates a set object of `values`.
     *
     * @private
     * @param {Array} values The values to add to the set.
     * @returns {Object} Returns the new set.
     */
    var createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {
      return new Set(values);
    };

    /**
     * Creates a `_.toPairs` or `_.toPairsIn` function.
     *
     * @private
     * @param {Function} keysFunc The function to get the keys of a given object.
     * @returns {Function} Returns the new pairs function.
     */
    function createToPairs(keysFunc) {
      return function(object) {
        var tag = getTag(object);
        if (tag == mapTag) {
          return mapToArray(object);
        }
        if (tag == setTag) {
          return setToPairs(object);
        }
        return baseToPairs(object, keysFunc(object));
      };
    }

    /**
     * Creates a function that either curries or invokes `func` with optional
     * `this` binding and partially applied arguments.
     *
     * @private
     * @param {Function|string} func The function or method name to wrap.
     * @param {number} bitmask The bitmask flags.
     *    1 - `_.bind`
     *    2 - `_.bindKey`
     *    4 - `_.curry` or `_.curryRight` of a bound function
     *    8 - `_.curry`
     *   16 - `_.curryRight`
     *   32 - `_.partial`
     *   64 - `_.partialRight`
     *  128 - `_.rearg`
     *  256 - `_.ary`
     *  512 - `_.flip`
     * @param {*} [thisArg] The `this` binding of `func`.
     * @param {Array} [partials] The arguments to be partially applied.
     * @param {Array} [holders] The `partials` placeholder indexes.
     * @param {Array} [argPos] The argument positions of the new function.
     * @param {number} [ary] The arity cap of `func`.
     * @param {number} [arity] The arity of `func`.
     * @returns {Function} Returns the new wrapped function.
     */
    function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {
      var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;
      if (!isBindKey && typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      var length = partials ? partials.length : 0;
      if (!length) {
        bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);
        partials = holders = undefined;
      }
      ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);
      arity = arity === undefined ? arity : toInteger(arity);
      length -= holders ? holders.length : 0;

      if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {
        var partialsRight = partials,
            holdersRight = holders;

        partials = holders = undefined;
      }
      var data = isBindKey ? undefined : getData(func);

      var newData = [
        func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,
        argPos, ary, arity
      ];

      if (data) {
        mergeData(newData, data);
      }
      func = newData[0];
      bitmask = newData[1];
      thisArg = newData[2];
      partials = newData[3];
      holders = newData[4];
      arity = newData[9] = newData[9] === undefined
        ? (isBindKey ? 0 : func.length)
        : nativeMax(newData[9] - length, 0);

      if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {
        bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);
      }
      if (!bitmask || bitmask == WRAP_BIND_FLAG) {
        var result = createBind(func, bitmask, thisArg);
      } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {
        result = createCurry(func, bitmask, arity);
      } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {
        result = createPartial(func, bitmask, thisArg, partials);
      } else {
        result = createHybrid.apply(undefined, newData);
      }
      var setter = data ? baseSetData : setData;
      return setWrapToString(setter(result, newData), func, bitmask);
    }

    /**
     * Used by `_.defaults` to customize its `_.assignIn` use to assign properties
     * of source objects to the destination object for all destination properties
     * that resolve to `undefined`.
     *
     * @private
     * @param {*} objValue The destination value.
     * @param {*} srcValue The source value.
     * @param {string} key The key of the property to assign.
     * @param {Object} object The parent object of `objValue`.
     * @returns {*} Returns the value to assign.
     */
    function customDefaultsAssignIn(objValue, srcValue, key, object) {
      if (objValue === undefined ||
          (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {
        return srcValue;
      }
      return objValue;
    }

    /**
     * Used by `_.defaultsDeep` to customize its `_.merge` use to merge source
     * objects into destination objects that are passed thru.
     *
     * @private
     * @param {*} objValue The destination value.
     * @param {*} srcValue The source value.
     * @param {string} key The key of the property to merge.
     * @param {Object} object The parent object of `objValue`.
     * @param {Object} source The parent object of `srcValue`.
     * @param {Object} [stack] Tracks traversed source values and their merged
     *  counterparts.
     * @returns {*} Returns the value to assign.
     */
    function customDefaultsMerge(objValue, srcValue, key, object, source, stack) {
      if (isObject(objValue) && isObject(srcValue)) {
        // Recursively merge objects and arrays (susceptible to call stack limits).
        stack.set(srcValue, objValue);
        baseMerge(objValue, srcValue, undefined, customDefaultsMerge, stack);
        stack['delete'](srcValue);
      }
      return objValue;
    }

    /**
     * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain
     * objects.
     *
     * @private
     * @param {*} value The value to inspect.
     * @param {string} key The key of the property to inspect.
     * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.
     */
    function customOmitClone(value) {
      return isPlainObject(value) ? undefined : value;
    }

    /**
     * A specialized version of `baseIsEqualDeep` for arrays with support for
     * partial deep comparisons.
     *
     * @private
     * @param {Array} array The array to compare.
     * @param {Array} other The other array to compare.
     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
     * @param {Function} customizer The function to customize comparisons.
     * @param {Function} equalFunc The function to determine equivalents of values.
     * @param {Object} stack Tracks traversed `array` and `other` objects.
     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.
     */
    function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {
      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
          arrLength = array.length,
          othLength = other.length;

      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
        return false;
      }
      // Assume cyclic values are equal.
      var stacked = stack.get(array);
      if (stacked && stack.get(other)) {
        return stacked == other;
      }
      var index = -1,
          result = true,
          seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;

      stack.set(array, other);
      stack.set(other, array);

      // Ignore non-index properties.
      while (++index < arrLength) {
        var arrValue = array[index],
            othValue = other[index];

        if (customizer) {
          var compared = isPartial
            ? customizer(othValue, arrValue, index, other, array, stack)
            : customizer(arrValue, othValue, index, array, other, stack);
        }
        if (compared !== undefined) {
          if (compared) {
            continue;
          }
          result = false;
          break;
        }
        // Recursively compare arrays (susceptible to call stack limits).
        if (seen) {
          if (!arraySome(other, function(othValue, othIndex) {
                if (!cacheHas(seen, othIndex) &&
                    (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
                  return seen.push(othIndex);
                }
              })) {
            result = false;
            break;
          }
        } else if (!(
              arrValue === othValue ||
                equalFunc(arrValue, othValue, bitmask, customizer, stack)
            )) {
          result = false;
          break;
        }
      }
      stack['delete'](array);
      stack['delete'](other);
      return result;
    }

    /**
     * A specialized version of `baseIsEqualDeep` for comparing objects of
     * the same `toStringTag`.
     *
     * **Note:** This function only supports comparing values with tags of
     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
     *
     * @private
     * @param {Object} object The object to compare.
     * @param {Object} other The other object to compare.
     * @param {string} tag The `toStringTag` of the objects to compare.
     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
     * @param {Function} customizer The function to customize comparisons.
     * @param {Function} equalFunc The function to determine equivalents of values.
     * @param {Object} stack Tracks traversed `object` and `other` objects.
     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
     */
    function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {
      switch (tag) {
        case dataViewTag:
          if ((object.byteLength != other.byteLength) ||
              (object.byteOffset != other.byteOffset)) {
            return false;
          }
          object = object.buffer;
          other = other.buffer;

        case arrayBufferTag:
          if ((object.byteLength != other.byteLength) ||
              !equalFunc(new Uint8Array(object), new Uint8Array(other))) {
            return false;
          }
          return true;

        case boolTag:
        case dateTag:
        case numberTag:
          // Coerce booleans to `1` or `0` and dates to milliseconds.
          // Invalid dates are coerced to `NaN`.
          return eq(+object, +other);

        case errorTag:
          return object.name == other.name && object.message == other.message;

        case regexpTag:
        case stringTag:
          // Coerce regexes to strings and treat strings, primitives and objects,
          // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring
          // for more details.
          return object == (other + '');

        case mapTag:
          var convert = mapToArray;

        case setTag:
          var isPartial = bitmask & COMPARE_PARTIAL_FLAG;
          convert || (convert = setToArray);

          if (object.size != other.size && !isPartial) {
            return false;
          }
          // Assume cyclic values are equal.
          var stacked = stack.get(object);
          if (stacked) {
            return stacked == other;
          }
          bitmask |= COMPARE_UNORDERED_FLAG;

          // Recursively compare objects (susceptible to call stack limits).
          stack.set(object, other);
          var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);
          stack['delete'](object);
          return result;

        case symbolTag:
          if (symbolValueOf) {
            return symbolValueOf.call(object) == symbolValueOf.call(other);
          }
      }
      return false;
    }

    /**
     * A specialized version of `baseIsEqualDeep` for objects with support for
     * partial deep comparisons.
     *
     * @private
     * @param {Object} object The object to compare.
     * @param {Object} other The other object to compare.
     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
     * @param {Function} customizer The function to customize comparisons.
     * @param {Function} equalFunc The function to determine equivalents of values.
     * @param {Object} stack Tracks traversed `object` and `other` objects.
     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
     */
    function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {
      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
          objProps = getAllKeys(object),
          objLength = objProps.length,
          othProps = getAllKeys(other),
          othLength = othProps.length;

      if (objLength != othLength && !isPartial) {
        return false;
      }
      var index = objLength;
      while (index--) {
        var key = objProps[index];
        if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {
          return false;
        }
      }
      // Assume cyclic values are equal.
      var stacked = stack.get(object);
      if (stacked && stack.get(other)) {
        return stacked == other;
      }
      var result = true;
      stack.set(object, other);
      stack.set(other, object);

      var skipCtor = isPartial;
      while (++index < objLength) {
        key = objProps[index];
        var objValue = object[key],
            othValue = other[key];

        if (customizer) {
          var compared = isPartial
            ? customizer(othValue, objValue, key, other, object, stack)
            : customizer(objValue, othValue, key, object, other, stack);
        }
        // Recursively compare objects (susceptible to call stack limits).
        if (!(compared === undefined
              ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))
              : compared
            )) {
          result = false;
          break;
        }
        skipCtor || (skipCtor = key == 'constructor');
      }
      if (result && !skipCtor) {
        var objCtor = object.constructor,
            othCtor = other.constructor;

        // Non `Object` object instances with different constructors are not equal.
        if (objCtor != othCtor &&
            ('constructor' in object && 'constructor' in other) &&
            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&
              typeof othCtor == 'function' && othCtor instanceof othCtor)) {
          result = false;
        }
      }
      stack['delete'](object);
      stack['delete'](other);
      return result;
    }

    /**
     * A specialized version of `baseRest` which flattens the rest array.
     *
     * @private
     * @param {Function} func The function to apply a rest parameter to.
     * @returns {Function} Returns the new function.
     */
    function flatRest(func) {
      return setToString(overRest(func, undefined, flatten), func + '');
    }

    /**
     * Creates an array of own enumerable property names and symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names and symbols.
     */
    function getAllKeys(object) {
      return baseGetAllKeys(object, keys, getSymbols);
    }

    /**
     * Creates an array of own and inherited enumerable property names and
     * symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names and symbols.
     */
    function getAllKeysIn(object) {
      return baseGetAllKeys(object, keysIn, getSymbolsIn);
    }

    /**
     * Gets metadata for `func`.
     *
     * @private
     * @param {Function} func The function to query.
     * @returns {*} Returns the metadata for `func`.
     */
    var getData = !metaMap ? noop : function(func) {
      return metaMap.get(func);
    };

    /**
     * Gets the name of `func`.
     *
     * @private
     * @param {Function} func The function to query.
     * @returns {string} Returns the function name.
     */
    function getFuncName(func) {
      var result = (func.name + ''),
          array = realNames[result],
          length = hasOwnProperty.call(realNames, result) ? array.length : 0;

      while (length--) {
        var data = array[length],
            otherFunc = data.func;
        if (otherFunc == null || otherFunc == func) {
          return data.name;
        }
      }
      return result;
    }

    /**
     * Gets the argument placeholder value for `func`.
     *
     * @private
     * @param {Function} func The function to inspect.
     * @returns {*} Returns the placeholder value.
     */
    function getHolder(func) {
      var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;
      return object.placeholder;
    }

    /**
     * Gets the appropriate "iteratee" function. If `_.iteratee` is customized,
     * this function returns the custom method, otherwise it returns `baseIteratee`.
     * If arguments are provided, the chosen function is invoked with them and
     * its result is returned.
     *
     * @private
     * @param {*} [value] The value to convert to an iteratee.
     * @param {number} [arity] The arity of the created iteratee.
     * @returns {Function} Returns the chosen function or its result.
     */
    function getIteratee() {
      var result = lodash.iteratee || iteratee;
      result = result === iteratee ? baseIteratee : result;
      return arguments.length ? result(arguments[0], arguments[1]) : result;
    }

    /**
     * Gets the data for `map`.
     *
     * @private
     * @param {Object} map The map to query.
     * @param {string} key The reference key.
     * @returns {*} Returns the map data.
     */
    function getMapData(map, key) {
      var data = map.__data__;
      return isKeyable(key)
        ? data[typeof key == 'string' ? 'string' : 'hash']
        : data.map;
    }

    /**
     * Gets the property names, values, and compare flags of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the match data of `object`.
     */
    function getMatchData(object) {
      var result = keys(object),
          length = result.length;

      while (length--) {
        var key = result[length],
            value = object[key];

        result[length] = [key, value, isStrictComparable(value)];
      }
      return result;
    }

    /**
     * Gets the native function at `key` of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {string} key The key of the method to get.
     * @returns {*} Returns the function if it's native, else `undefined`.
     */
    function getNative(object, key) {
      var value = getValue(object, key);
      return baseIsNative(value) ? value : undefined;
    }

    /**
     * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.
     *
     * @private
     * @param {*} value The value to query.
     * @returns {string} Returns the raw `toStringTag`.
     */
    function getRawTag(value) {
      var isOwn = hasOwnProperty.call(value, symToStringTag),
          tag = value[symToStringTag];

      try {
        value[symToStringTag] = undefined;
        var unmasked = true;
      } catch (e) {}

      var result = nativeObjectToString.call(value);
      if (unmasked) {
        if (isOwn) {
          value[symToStringTag] = tag;
        } else {
          delete value[symToStringTag];
        }
      }
      return result;
    }

    /**
     * Creates an array of the own enumerable symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of symbols.
     */
    var getSymbols = !nativeGetSymbols ? stubArray : function(object) {
      if (object == null) {
        return [];
      }
      object = Object(object);
      return arrayFilter(nativeGetSymbols(object), function(symbol) {
        return propertyIsEnumerable.call(object, symbol);
      });
    };

    /**
     * Creates an array of the own and inherited enumerable symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of symbols.
     */
    var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {
      var result = [];
      while (object) {
        arrayPush(result, getSymbols(object));
        object = getPrototype(object);
      }
      return result;
    };

    /**
     * Gets the `toStringTag` of `value`.
     *
     * @private
     * @param {*} value The value to query.
     * @returns {string} Returns the `toStringTag`.
     */
    var getTag = baseGetTag;

    // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.
    if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||
        (Map && getTag(new Map) != mapTag) ||
        (Promise && getTag(Promise.resolve()) != promiseTag) ||
        (Set && getTag(new Set) != setTag) ||
        (WeakMap && getTag(new WeakMap) != weakMapTag)) {
      getTag = function(value) {
        var result = baseGetTag(value),
            Ctor = result == objectTag ? value.constructor : undefined,
            ctorString = Ctor ? toSource(Ctor) : '';

        if (ctorString) {
          switch (ctorString) {
            case dataViewCtorString: return dataViewTag;
            case mapCtorString: return mapTag;
            case promiseCtorString: return promiseTag;
            case setCtorString: return setTag;
            case weakMapCtorString: return weakMapTag;
          }
        }
        return result;
      };
    }

    /**
     * Gets the view, applying any `transforms` to the `start` and `end` positions.
     *
     * @private
     * @param {number} start The start of the view.
     * @param {number} end The end of the view.
     * @param {Array} transforms The transformations to apply to the view.
     * @returns {Object} Returns an object containing the `start` and `end`
     *  positions of the view.
     */
    function getView(start, end, transforms) {
      var index = -1,
          length = transforms.length;

      while (++index < length) {
        var data = transforms[index],
            size = data.size;

        switch (data.type) {
          case 'drop':      start += size; break;
          case 'dropRight': end -= size; break;
          case 'take':      end = nativeMin(end, start + size); break;
          case 'takeRight': start = nativeMax(start, end - size); break;
        }
      }
      return { 'start': start, 'end': end };
    }

    /**
     * Extracts wrapper details from the `source` body comment.
     *
     * @private
     * @param {string} source The source to inspect.
     * @returns {Array} Returns the wrapper details.
     */
    function getWrapDetails(source) {
      var match = source.match(reWrapDetails);
      return match ? match[1].split(reSplitDetails) : [];
    }

    /**
     * Checks if `path` exists on `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Array|string} path The path to check.
     * @param {Function} hasFunc The function to check properties.
     * @returns {boolean} Returns `true` if `path` exists, else `false`.
     */
    function hasPath(object, path, hasFunc) {
      path = castPath(path, object);

      var index = -1,
          length = path.length,
          result = false;

      while (++index < length) {
        var key = toKey(path[index]);
        if (!(result = object != null && hasFunc(object, key))) {
          break;
        }
        object = object[key];
      }
      if (result || ++index != length) {
        return result;
      }
      length = object == null ? 0 : object.length;
      return !!length && isLength(length) && isIndex(key, length) &&
        (isArray(object) || isArguments(object));
    }

    /**
     * Initializes an array clone.
     *
     * @private
     * @param {Array} array The array to clone.
     * @returns {Array} Returns the initialized clone.
     */
    function initCloneArray(array) {
      var length = array.length,
          result = array.constructor(length);

      // Add properties assigned by `RegExp#exec`.
      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {
        result.index = array.index;
        result.input = array.input;
      }
      return result;
    }

    /**
     * Initializes an object clone.
     *
     * @private
     * @param {Object} object The object to clone.
     * @returns {Object} Returns the initialized clone.
     */
    function initCloneObject(object) {
      return (typeof object.constructor == 'function' && !isPrototype(object))
        ? baseCreate(getPrototype(object))
        : {};
    }

    /**
     * Initializes an object clone based on its `toStringTag`.
     *
     * **Note:** This function only supports cloning values with tags of
     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
     *
     * @private
     * @param {Object} object The object to clone.
     * @param {string} tag The `toStringTag` of the object to clone.
     * @param {Function} cloneFunc The function to clone values.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Object} Returns the initialized clone.
     */
    function initCloneByTag(object, tag, cloneFunc, isDeep) {
      var Ctor = object.constructor;
      switch (tag) {
        case arrayBufferTag:
          return cloneArrayBuffer(object);

        case boolTag:
        case dateTag:
          return new Ctor(+object);

        case dataViewTag:
          return cloneDataView(object, isDeep);

        case float32Tag: case float64Tag:
        case int8Tag: case int16Tag: case int32Tag:
        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:
          return cloneTypedArray(object, isDeep);

        case mapTag:
          return cloneMap(object, isDeep, cloneFunc);

        case numberTag:
        case stringTag:
          return new Ctor(object);

        case regexpTag:
          return cloneRegExp(object);

        case setTag:
          return cloneSet(object, isDeep, cloneFunc);

        case symbolTag:
          return cloneSymbol(object);
      }
    }

    /**
     * Inserts wrapper `details` in a comment at the top of the `source` body.
     *
     * @private
     * @param {string} source The source to modify.
     * @returns {Array} details The details to insert.
     * @returns {string} Returns the modified source.
     */
    function insertWrapDetails(source, details) {
      var length = details.length;
      if (!length) {
        return source;
      }
      var lastIndex = length - 1;
      details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];
      details = details.join(length > 2 ? ', ' : ' ');
      return source.replace(reWrapComment, '{\n/* [wrapped with ' + details + '] */\n');
    }

    /**
     * Checks if `value` is a flattenable `arguments` object or array.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.
     */
    function isFlattenable(value) {
      return isArray(value) || isArguments(value) ||
        !!(spreadableSymbol && value && value[spreadableSymbol]);
    }

    /**
     * Checks if `value` is a valid array-like index.
     *
     * @private
     * @param {*} value The value to check.
     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
     */
    function isIndex(value, length) {
      length = length == null ? MAX_SAFE_INTEGER : length;
      return !!length &&
        (typeof value == 'number' || reIsUint.test(value)) &&
        (value > -1 && value % 1 == 0 && value < length);
    }

    /**
     * Checks if the given arguments are from an iteratee call.
     *
     * @private
     * @param {*} value The potential iteratee value argument.
     * @param {*} index The potential iteratee index or key argument.
     * @param {*} object The potential iteratee object argument.
     * @returns {boolean} Returns `true` if the arguments are from an iteratee call,
     *  else `false`.
     */
    function isIterateeCall(value, index, object) {
      if (!isObject(object)) {
        return false;
      }
      var type = typeof index;
      if (type == 'number'
            ? (isArrayLike(object) && isIndex(index, object.length))
            : (type == 'string' && index in object)
          ) {
        return eq(object[index], value);
      }
      return false;
    }

    /**
     * Checks if `value` is a property name and not a property path.
     *
     * @private
     * @param {*} value The value to check.
     * @param {Object} [object] The object to query keys on.
     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.
     */
    function isKey(value, object) {
      if (isArray(value)) {
        return false;
      }
      var type = typeof value;
      if (type == 'number' || type == 'symbol' || type == 'boolean' ||
          value == null || isSymbol(value)) {
        return true;
      }
      return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||
        (object != null && value in Object(object));
    }

    /**
     * Checks if `value` is suitable for use as unique object key.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
     */
    function isKeyable(value) {
      var type = typeof value;
      return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')
        ? (value !== '__proto__')
        : (value === null);
    }

    /**
     * Checks if `func` has a lazy counterpart.
     *
     * @private
     * @param {Function} func The function to check.
     * @returns {boolean} Returns `true` if `func` has a lazy counterpart,
     *  else `false`.
     */
    function isLaziable(func) {
      var funcName = getFuncName(func),
          other = lodash[funcName];

      if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {
        return false;
      }
      if (func === other) {
        return true;
      }
      var data = getData(other);
      return !!data && func === data[0];
    }

    /**
     * Checks if `func` has its source masked.
     *
     * @private
     * @param {Function} func The function to check.
     * @returns {boolean} Returns `true` if `func` is masked, else `false`.
     */
    function isMasked(func) {
      return !!maskSrcKey && (maskSrcKey in func);
    }

    /**
     * Checks if `func` is capable of being masked.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `func` is maskable, else `false`.
     */
    var isMaskable = coreJsData ? isFunction : stubFalse;

    /**
     * Checks if `value` is likely a prototype object.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
     */
    function isPrototype(value) {
      var Ctor = value && value.constructor,
          proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;

      return value === proto;
    }

    /**
     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` if suitable for strict
     *  equality comparisons, else `false`.
     */
    function isStrictComparable(value) {
      return value === value && !isObject(value);
    }

    /**
     * A specialized version of `matchesProperty` for source values suitable
     * for strict equality comparisons, i.e. `===`.
     *
     * @private
     * @param {string} key The key of the property to get.
     * @param {*} srcValue The value to match.
     * @returns {Function} Returns the new spec function.
     */
    function matchesStrictComparable(key, srcValue) {
      return function(object) {
        if (object == null) {
          return false;
        }
        return object[key] === srcValue &&
          (srcValue !== undefined || (key in Object(object)));
      };
    }

    /**
     * A specialized version of `_.memoize` which clears the memoized function's
     * cache when it exceeds `MAX_MEMOIZE_SIZE`.
     *
     * @private
     * @param {Function} func The function to have its output memoized.
     * @returns {Function} Returns the new memoized function.
     */
    function memoizeCapped(func) {
      var result = memoize(func, function(key) {
        if (cache.size === MAX_MEMOIZE_SIZE) {
          cache.clear();
        }
        return key;
      });

      var cache = result.cache;
      return result;
    }

    /**
     * Merges the function metadata of `source` into `data`.
     *
     * Merging metadata reduces the number of wrappers used to invoke a function.
     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`
     * may be applied regardless of execution order. Methods like `_.ary` and
     * `_.rearg` modify function arguments, making the order in which they are
     * executed important, preventing the merging of metadata. However, we make
     * an exception for a safe combined case where curried functions have `_.ary`
     * and or `_.rearg` applied.
     *
     * @private
     * @param {Array} data The destination metadata.
     * @param {Array} source The source metadata.
     * @returns {Array} Returns `data`.
     */
    function mergeData(data, source) {
      var bitmask = data[1],
          srcBitmask = source[1],
          newBitmask = bitmask | srcBitmask,
          isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);

      var isCombo =
        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_CURRY_FLAG)) ||
        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_REARG_FLAG) && (data[7].length <= source[8])) ||
        ((srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == WRAP_CURRY_FLAG));

      // Exit early if metadata can't be merged.
      if (!(isCommon || isCombo)) {
        return data;
      }
      // Use source `thisArg` if available.
      if (srcBitmask & WRAP_BIND_FLAG) {
        data[2] = source[2];
        // Set when currying a bound function.
        newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;
      }
      // Compose partial arguments.
      var value = source[3];
      if (value) {
        var partials = data[3];
        data[3] = partials ? composeArgs(partials, value, source[4]) : value;
        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];
      }
      // Compose partial right arguments.
      value = source[5];
      if (value) {
        partials = data[5];
        data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;
        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];
      }
      // Use source `argPos` if available.
      value = source[7];
      if (value) {
        data[7] = value;
      }
      // Use source `ary` if it's smaller.
      if (srcBitmask & WRAP_ARY_FLAG) {
        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);
      }
      // Use source `arity` if one is not provided.
      if (data[9] == null) {
        data[9] = source[9];
      }
      // Use source `func` and merge bitmasks.
      data[0] = source[0];
      data[1] = newBitmask;

      return data;
    }

    /**
     * This function is like
     * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
     * except that it includes inherited enumerable properties.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     */
    function nativeKeysIn(object) {
      var result = [];
      if (object != null) {
        for (var key in Object(object)) {
          result.push(key);
        }
      }
      return result;
    }

    /**
     * Converts `value` to a string using `Object.prototype.toString`.
     *
     * @private
     * @param {*} value The value to convert.
     * @returns {string} Returns the converted string.
     */
    function objectToString(value) {
      return nativeObjectToString.call(value);
    }

    /**
     * A specialized version of `baseRest` which transforms the rest array.
     *
     * @private
     * @param {Function} func The function to apply a rest parameter to.
     * @param {number} [start=func.length-1] The start position of the rest parameter.
     * @param {Function} transform The rest array transform.
     * @returns {Function} Returns the new function.
     */
    function overRest(func, start, transform) {
      start = nativeMax(start === undefined ? (func.length - 1) : start, 0);
      return function() {
        var args = arguments,
            index = -1,
            length = nativeMax(args.length - start, 0),
            array = Array(length);

        while (++index < length) {
          array[index] = args[start + index];
        }
        index = -1;
        var otherArgs = Array(start + 1);
        while (++index < start) {
          otherArgs[index] = args[index];
        }
        otherArgs[start] = transform(array);
        return apply(func, this, otherArgs);
      };
    }

    /**
     * Gets the parent value at `path` of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Array} path The path to get the parent value of.
     * @returns {*} Returns the parent value.
     */
    function parent(object, path) {
      return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));
    }

    /**
     * Reorder `array` according to the specified indexes where the element at
     * the first index is assigned as the first element, the element at
     * the second index is assigned as the second element, and so on.
     *
     * @private
     * @param {Array} array The array to reorder.
     * @param {Array} indexes The arranged array indexes.
     * @returns {Array} Returns `array`.
     */
    function reorder(array, indexes) {
      var arrLength = array.length,
          length = nativeMin(indexes.length, arrLength),
          oldArray = copyArray(array);

      while (length--) {
        var index = indexes[length];
        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;
      }
      return array;
    }

    /**
     * Sets metadata for `func`.
     *
     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short
     * period of time, it will trip its breaker and transition to an identity
     * function to avoid garbage collection pauses in V8. See
     * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)
     * for more details.
     *
     * @private
     * @param {Function} func The function to associate metadata with.
     * @param {*} data The metadata.
     * @returns {Function} Returns `func`.
     */
    var setData = shortOut(baseSetData);

    /**
     * A simple wrapper around the global [`setTimeout`](https://mdn.io/setTimeout).
     *
     * @private
     * @param {Function} func The function to delay.
     * @param {number} wait The number of milliseconds to delay invocation.
     * @returns {number|Object} Returns the timer id or timeout object.
     */
    var setTimeout = ctxSetTimeout || function(func, wait) {
      return root.setTimeout(func, wait);
    };

    /**
     * Sets the `toString` method of `func` to return `string`.
     *
     * @private
     * @param {Function} func The function to modify.
     * @param {Function} string The `toString` result.
     * @returns {Function} Returns `func`.
     */
    var setToString = shortOut(baseSetToString);

    /**
     * Sets the `toString` method of `wrapper` to mimic the source of `reference`
     * with wrapper details in a comment at the top of the source body.
     *
     * @private
     * @param {Function} wrapper The function to modify.
     * @param {Function} reference The reference function.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @returns {Function} Returns `wrapper`.
     */
    function setWrapToString(wrapper, reference, bitmask) {
      var source = (reference + '');
      return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));
    }

    /**
     * Creates a function that'll short out and invoke `identity` instead
     * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`
     * milliseconds.
     *
     * @private
     * @param {Function} func The function to restrict.
     * @returns {Function} Returns the new shortable function.
     */
    function shortOut(func) {
      var count = 0,
          lastCalled = 0;

      return function() {
        var stamp = nativeNow(),
            remaining = HOT_SPAN - (stamp - lastCalled);

        lastCalled = stamp;
        if (remaining > 0) {
          if (++count >= HOT_COUNT) {
            return arguments[0];
          }
        } else {
          count = 0;
        }
        return func.apply(undefined, arguments);
      };
    }

    /**
     * A specialized version of `_.shuffle` which mutates and sets the size of `array`.
     *
     * @private
     * @param {Array} array The array to shuffle.
     * @param {number} [size=array.length] The size of `array`.
     * @returns {Array} Returns `array`.
     */
    function shuffleSelf(array, size) {
      var index = -1,
          length = array.length,
          lastIndex = length - 1;

      size = size === undefined ? length : size;
      while (++index < size) {
        var rand = baseRandom(index, lastIndex),
            value = array[rand];

        array[rand] = array[index];
        array[index] = value;
      }
      array.length = size;
      return array;
    }

    /**
     * Converts `string` to a property path array.
     *
     * @private
     * @param {string} string The string to convert.
     * @returns {Array} Returns the property path array.
     */
    var stringToPath = memoizeCapped(function(string) {
      var result = [];
      if (reLeadingDot.test(string)) {
        result.push('');
      }
      string.replace(rePropName, function(match, number, quote, string) {
        result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));
      });
      return result;
    });

    /**
     * Converts `value` to a string key if it's not a string or symbol.
     *
     * @private
     * @param {*} value The value to inspect.
     * @returns {string|symbol} Returns the key.
     */
    function toKey(value) {
      if (typeof value == 'string' || isSymbol(value)) {
        return value;
      }
      var result = (value + '');
      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
    }

    /**
     * Converts `func` to its source code.
     *
     * @private
     * @param {Function} func The function to convert.
     * @returns {string} Returns the source code.
     */
    function toSource(func) {
      if (func != null) {
        try {
          return funcToString.call(func);
        } catch (e) {}
        try {
          return (func + '');
        } catch (e) {}
      }
      return '';
    }

    /**
     * Updates wrapper `details` based on `bitmask` flags.
     *
     * @private
     * @returns {Array} details The details to modify.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @returns {Array} Returns `details`.
     */
    function updateWrapDetails(details, bitmask) {
      arrayEach(wrapFlags, function(pair) {
        var value = '_.' + pair[0];
        if ((bitmask & pair[1]) && !arrayIncludes(details, value)) {
          details.push(value);
        }
      });
      return details.sort();
    }

    /**
     * Creates a clone of `wrapper`.
     *
     * @private
     * @param {Object} wrapper The wrapper to clone.
     * @returns {Object} Returns the cloned wrapper.
     */
    function wrapperClone(wrapper) {
      if (wrapper instanceof LazyWrapper) {
        return wrapper.clone();
      }
      var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);
      result.__actions__ = copyArray(wrapper.__actions__);
      result.__index__  = wrapper.__index__;
      result.__values__ = wrapper.__values__;
      return result;
    }

    /*------------------------------------------------------------------------*/

    /**
     * Creates an array of elements split into groups the length of `size`.
     * If `array` can't be split evenly, the final chunk will be the remaining
     * elements.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to process.
     * @param {number} [size=1] The length of each chunk
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the new array of chunks.
     * @example
     *
     * _.chunk(['a', 'b', 'c', 'd'], 2);
     * // => [['a', 'b'], ['c', 'd']]
     *
     * _.chunk(['a', 'b', 'c', 'd'], 3);
     * // => [['a', 'b', 'c'], ['d']]
     */
    function chunk(array, size, guard) {
      if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {
        size = 1;
      } else {
        size = nativeMax(toInteger(size), 0);
      }
      var length = array == null ? 0 : array.length;
      if (!length || size < 1) {
        return [];
      }
      var index = 0,
          resIndex = 0,
          result = Array(nativeCeil(length / size));

      while (index < length) {
        result[resIndex++] = baseSlice(array, index, (index += size));
      }
      return result;
    }

    /**
     * Creates an array with all falsey values removed. The values `false`, `null`,
     * `0`, `""`, `undefined`, and `NaN` are falsey.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to compact.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * _.compact([0, 1, false, 2, '', 3]);
     * // => [1, 2, 3]
     */
    function compact(array) {
      var index = -1,
          length = array == null ? 0 : array.length,
          resIndex = 0,
          result = [];

      while (++index < length) {
        var value = array[index];
        if (value) {
          result[resIndex++] = value;
        }
      }
      return result;
    }

    /**
     * Creates a new array concatenating `array` with any additional arrays
     * and/or values.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to concatenate.
     * @param {...*} [values] The values to concatenate.
     * @returns {Array} Returns the new concatenated array.
     * @example
     *
     * var array = [1];
     * var other = _.concat(array, 2, [3], [[4]]);
     *
     * console.log(other);
     * // => [1, 2, 3, [4]]
     *
     * console.log(array);
     * // => [1]
     */
    function concat() {
      var length = arguments.length;
      if (!length) {
        return [];
      }
      var args = Array(length - 1),
          array = arguments[0],
          index = length;

      while (index--) {
        args[index - 1] = arguments[index];
      }
      return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));
    }

    /**
     * Creates an array of `array` values not included in the other given arrays
     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons. The order and references of result values are
     * determined by the first array.
     *
     * **Note:** Unlike `_.pullAll`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {...Array} [values] The values to exclude.
     * @returns {Array} Returns the new array of filtered values.
     * @see _.without, _.xor
     * @example
     *
     * _.difference([2, 1], [2, 3]);
     * // => [1]
     */
    var difference = baseRest(function(array, values) {
      return isArrayLikeObject(array)
        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))
        : [];
    });

    /**
     * This method is like `_.difference` except that it accepts `iteratee` which
     * is invoked for each element of `array` and `values` to generate the criterion
     * by which they're compared. The order and references of result values are
     * determined by the first array. The iteratee is invoked with one argument:
     * (value).
     *
     * **Note:** Unlike `_.pullAllBy`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {...Array} [values] The values to exclude.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);
     * // => [1.2]
     *
     * // The `_.property` iteratee shorthand.
     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');
     * // => [{ 'x': 2 }]
     */
    var differenceBy = baseRest(function(array, values) {
      var iteratee = last(values);
      if (isArrayLikeObject(iteratee)) {
        iteratee = undefined;
      }
      return isArrayLikeObject(array)
        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), getIteratee(iteratee, 2))
        : [];
    });

    /**
     * This method is like `_.difference` except that it accepts `comparator`
     * which is invoked to compare elements of `array` to `values`. The order and
     * references of result values are determined by the first array. The comparator
     * is invoked with two arguments: (arrVal, othVal).
     *
     * **Note:** Unlike `_.pullAllWith`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {...Array} [values] The values to exclude.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
     *
     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);
     * // => [{ 'x': 2, 'y': 1 }]
     */
    var differenceWith = baseRest(function(array, values) {
      var comparator = last(values);
      if (isArrayLikeObject(comparator)) {
        comparator = undefined;
      }
      return isArrayLikeObject(array)
        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator)
        : [];
    });

    /**
     * Creates a slice of `array` with `n` elements dropped from the beginning.
     *
     * @static
     * @memberOf _
     * @since 0.5.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=1] The number of elements to drop.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.drop([1, 2, 3]);
     * // => [2, 3]
     *
     * _.drop([1, 2, 3], 2);
     * // => [3]
     *
     * _.drop([1, 2, 3], 5);
     * // => []
     *
     * _.drop([1, 2, 3], 0);
     * // => [1, 2, 3]
     */
    function drop(array, n, guard) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      n = (guard || n === undefined) ? 1 : toInteger(n);
      return baseSlice(array, n < 0 ? 0 : n, length);
    }

    /**
     * Creates a slice of `array` with `n` elements dropped from the end.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=1] The number of elements to drop.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.dropRight([1, 2, 3]);
     * // => [1, 2]
     *
     * _.dropRight([1, 2, 3], 2);
     * // => [1]
     *
     * _.dropRight([1, 2, 3], 5);
     * // => []
     *
     * _.dropRight([1, 2, 3], 0);
     * // => [1, 2, 3]
     */
    function dropRight(array, n, guard) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      n = (guard || n === undefined) ? 1 : toInteger(n);
      n = length - n;
      return baseSlice(array, 0, n < 0 ? 0 : n);
    }

    /**
     * Creates a slice of `array` excluding elements dropped from the end.
     * Elements are dropped until `predicate` returns falsey. The predicate is
     * invoked with three arguments: (value, index, array).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': true },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': false }
     * ];
     *
     * _.dropRightWhile(users, function(o) { return !o.active; });
     * // => objects for ['barney']
     *
     * // The `_.matches` iteratee shorthand.
     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });
     * // => objects for ['barney', 'fred']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.dropRightWhile(users, ['active', false]);
     * // => objects for ['barney']
     *
     * // The `_.property` iteratee shorthand.
     * _.dropRightWhile(users, 'active');
     * // => objects for ['barney', 'fred', 'pebbles']
     */
    function dropRightWhile(array, predicate) {
      return (array && array.length)
        ? baseWhile(array, getIteratee(predicate, 3), true, true)
        : [];
    }

    /**
     * Creates a slice of `array` excluding elements dropped from the beginning.
     * Elements are dropped until `predicate` returns falsey. The predicate is
     * invoked with three arguments: (value, index, array).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': false },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': true }
     * ];
     *
     * _.dropWhile(users, function(o) { return !o.active; });
     * // => objects for ['pebbles']
     *
     * // The `_.matches` iteratee shorthand.
     * _.dropWhile(users, { 'user': 'barney', 'active': false });
     * // => objects for ['fred', 'pebbles']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.dropWhile(users, ['active', false]);
     * // => objects for ['pebbles']
     *
     * // The `_.property` iteratee shorthand.
     * _.dropWhile(users, 'active');
     * // => objects for ['barney', 'fred', 'pebbles']
     */
    function dropWhile(array, predicate) {
      return (array && array.length)
        ? baseWhile(array, getIteratee(predicate, 3), true)
        : [];
    }

    /**
     * Fills elements of `array` with `value` from `start` up to, but not
     * including, `end`.
     *
     * **Note:** This method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 3.2.0
     * @category Array
     * @param {Array} array The array to fill.
     * @param {*} value The value to fill `array` with.
     * @param {number} [start=0] The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = [1, 2, 3];
     *
     * _.fill(array, 'a');
     * console.log(array);
     * // => ['a', 'a', 'a']
     *
     * _.fill(Array(3), 2);
     * // => [2, 2, 2]
     *
     * _.fill([4, 6, 8, 10], '*', 1, 3);
     * // => [4, '*', '*', 10]
     */
    function fill(array, value, start, end) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {
        start = 0;
        end = length;
      }
      return baseFill(array, value, start, end);
    }

    /**
     * This method is like `_.find` except that it returns the index of the first
     * element `predicate` returns truthy for instead of the element itself.
     *
     * @static
     * @memberOf _
     * @since 1.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param {number} [fromIndex=0] The index to search from.
     * @returns {number} Returns the index of the found element, else `-1`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': false },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': true }
     * ];
     *
     * _.findIndex(users, function(o) { return o.user == 'barney'; });
     * // => 0
     *
     * // The `_.matches` iteratee shorthand.
     * _.findIndex(users, { 'user': 'fred', 'active': false });
     * // => 1
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.findIndex(users, ['active', false]);
     * // => 0
     *
     * // The `_.property` iteratee shorthand.
     * _.findIndex(users, 'active');
     * // => 2
     */
    function findIndex(array, predicate, fromIndex) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return -1;
      }
      var index = fromIndex == null ? 0 : toInteger(fromIndex);
      if (index < 0) {
        index = nativeMax(length + index, 0);
      }
      return baseFindIndex(array, getIteratee(predicate, 3), index);
    }

    /**
     * This method is like `_.findIndex` except that it iterates over elements
     * of `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param {number} [fromIndex=array.length-1] The index to search from.
     * @returns {number} Returns the index of the found element, else `-1`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': true },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': false }
     * ];
     *
     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });
     * // => 2
     *
     * // The `_.matches` iteratee shorthand.
     * _.findLastIndex(users, { 'user': 'barney', 'active': true });
     * // => 0
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.findLastIndex(users, ['active', false]);
     * // => 2
     *
     * // The `_.property` iteratee shorthand.
     * _.findLastIndex(users, 'active');
     * // => 0
     */
    function findLastIndex(array, predicate, fromIndex) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return -1;
      }
      var index = length - 1;
      if (fromIndex !== undefined) {
        index = toInteger(fromIndex);
        index = fromIndex < 0
          ? nativeMax(length + index, 0)
          : nativeMin(index, length - 1);
      }
      return baseFindIndex(array, getIteratee(predicate, 3), index, true);
    }

    /**
     * Flattens `array` a single level deep.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to flatten.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * _.flatten([1, [2, [3, [4]], 5]]);
     * // => [1, 2, [3, [4]], 5]
     */
    function flatten(array) {
      var length = array == null ? 0 : array.length;
      return length ? baseFlatten(array, 1) : [];
    }

    /**
     * Recursively flattens `array`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to flatten.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * _.flattenDeep([1, [2, [3, [4]], 5]]);
     * // => [1, 2, 3, 4, 5]
     */
    function flattenDeep(array) {
      var length = array == null ? 0 : array.length;
      return length ? baseFlatten(array, INFINITY) : [];
    }

    /**
     * Recursively flatten `array` up to `depth` times.
     *
     * @static
     * @memberOf _
     * @since 4.4.0
     * @category Array
     * @param {Array} array The array to flatten.
     * @param {number} [depth=1] The maximum recursion depth.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * var array = [1, [2, [3, [4]], 5]];
     *
     * _.flattenDepth(array, 1);
     * // => [1, 2, [3, [4]], 5]
     *
     * _.flattenDepth(array, 2);
     * // => [1, 2, 3, [4], 5]
     */
    function flattenDepth(array, depth) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      depth = depth === undefined ? 1 : toInteger(depth);
      return baseFlatten(array, depth);
    }

    /**
     * The inverse of `_.toPairs`; this method returns an object composed
     * from key-value `pairs`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} pairs The key-value pairs.
     * @returns {Object} Returns the new object.
     * @example
     *
     * _.fromPairs([['a', 1], ['b', 2]]);
     * // => { 'a': 1, 'b': 2 }
     */
    function fromPairs(pairs) {
      var index = -1,
          length = pairs == null ? 0 : pairs.length,
          result = {};

      while (++index < length) {
        var pair = pairs[index];
        result[pair[0]] = pair[1];
      }
      return result;
    }

    /**
     * Gets the first element of `array`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @alias first
     * @category Array
     * @param {Array} array The array to query.
     * @returns {*} Returns the first element of `array`.
     * @example
     *
     * _.head([1, 2, 3]);
     * // => 1
     *
     * _.head([]);
     * // => undefined
     */
    function head(array) {
      return (array && array.length) ? array[0] : undefined;
    }

    /**
     * Gets the index at which the first occurrence of `value` is found in `array`
     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons. If `fromIndex` is negative, it's used as the
     * offset from the end of `array`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {*} value The value to search for.
     * @param {number} [fromIndex=0] The index to search from.
     * @returns {number} Returns the index of the matched value, else `-1`.
     * @example
     *
     * _.indexOf([1, 2, 1, 2], 2);
     * // => 1
     *
     * // Search from the `fromIndex`.
     * _.indexOf([1, 2, 1, 2], 2, 2);
     * // => 3
     */
    function indexOf(array, value, fromIndex) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return -1;
      }
      var index = fromIndex == null ? 0 : toInteger(fromIndex);
      if (index < 0) {
        index = nativeMax(length + index, 0);
      }
      return baseIndexOf(array, value, index);
    }

    /**
     * Gets all but the last element of `array`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to query.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.initial([1, 2, 3]);
     * // => [1, 2]
     */
    function initial(array) {
      var length = array == null ? 0 : array.length;
      return length ? baseSlice(array, 0, -1) : [];
    }

    /**
     * Creates an array of unique values that are included in all given arrays
     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons. The order and references of result values are
     * determined by the first array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @returns {Array} Returns the new array of intersecting values.
     * @example
     *
     * _.intersection([2, 1], [2, 3]);
     * // => [2]
     */
    var intersection = baseRest(function(arrays) {
      var mapped = arrayMap(arrays, castArrayLikeObject);
      return (mapped.length && mapped[0] === arrays[0])
        ? baseIntersection(mapped)
        : [];
    });

    /**
     * This method is like `_.intersection` except that it accepts `iteratee`
     * which is invoked for each element of each `arrays` to generate the criterion
     * by which they're compared. The order and references of result values are
     * determined by the first array. The iteratee is invoked with one argument:
     * (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new array of intersecting values.
     * @example
     *
     * _.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);
     * // => [2.1]
     *
     * // The `_.property` iteratee shorthand.
     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
     * // => [{ 'x': 1 }]
     */
    var intersectionBy = baseRest(function(arrays) {
      var iteratee = last(arrays),
          mapped = arrayMap(arrays, castArrayLikeObject);

      if (iteratee === last(mapped)) {
        iteratee = undefined;
      } else {
        mapped.pop();
      }
      return (mapped.length && mapped[0] === arrays[0])
        ? baseIntersection(mapped, getIteratee(iteratee, 2))
        : [];
    });

    /**
     * This method is like `_.intersection` except that it accepts `comparator`
     * which is invoked to compare elements of `arrays`. The order and references
     * of result values are determined by the first array. The comparator is
     * invoked with two arguments: (arrVal, othVal).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of intersecting values.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
     *
     * _.intersectionWith(objects, others, _.isEqual);
     * // => [{ 'x': 1, 'y': 2 }]
     */
    var intersectionWith = baseRest(function(arrays) {
      var comparator = last(arrays),
          mapped = arrayMap(arrays, castArrayLikeObject);

      comparator = typeof comparator == 'function' ? comparator : undefined;
      if (comparator) {
        mapped.pop();
      }
      return (mapped.length && mapped[0] === arrays[0])
        ? baseIntersection(mapped, undefined, comparator)
        : [];
    });

    /**
     * Converts all elements in `array` into a string separated by `separator`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to convert.
     * @param {string} [separator=','] The element separator.
     * @returns {string} Returns the joined string.
     * @example
     *
     * _.join(['a', 'b', 'c'], '~');
     * // => 'a~b~c'
     */
    function join(array, separator) {
      return array == null ? '' : nativeJoin.call(array, separator);
    }

    /**
     * Gets the last element of `array`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to query.
     * @returns {*} Returns the last element of `array`.
     * @example
     *
     * _.last([1, 2, 3]);
     * // => 3
     */
    function last(array) {
      var length = array == null ? 0 : array.length;
      return length ? array[length - 1] : undefined;
    }

    /**
     * This method is like `_.indexOf` except that it iterates over elements of
     * `array` from right to left.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {*} value The value to search for.
     * @param {number} [fromIndex=array.length-1] The index to search from.
     * @returns {number} Returns the index of the matched value, else `-1`.
     * @example
     *
     * _.lastIndexOf([1, 2, 1, 2], 2);
     * // => 3
     *
     * // Search from the `fromIndex`.
     * _.lastIndexOf([1, 2, 1, 2], 2, 2);
     * // => 1
     */
    function lastIndexOf(array, value, fromIndex) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return -1;
      }
      var index = length;
      if (fromIndex !== undefined) {
        index = toInteger(fromIndex);
        index = index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);
      }
      return value === value
        ? strictLastIndexOf(array, value, index)
        : baseFindIndex(array, baseIsNaN, index, true);
    }

    /**
     * Gets the element at index `n` of `array`. If `n` is negative, the nth
     * element from the end is returned.
     *
     * @static
     * @memberOf _
     * @since 4.11.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=0] The index of the element to return.
     * @returns {*} Returns the nth element of `array`.
     * @example
     *
     * var array = ['a', 'b', 'c', 'd'];
     *
     * _.nth(array, 1);
     * // => 'b'
     *
     * _.nth(array, -2);
     * // => 'c';
     */
    function nth(array, n) {
      return (array && array.length) ? baseNth(array, toInteger(n)) : undefined;
    }

    /**
     * Removes all given values from `array` using
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons.
     *
     * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`
     * to remove elements from an array by predicate.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {...*} [values] The values to remove.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];
     *
     * _.pull(array, 'a', 'c');
     * console.log(array);
     * // => ['b', 'b']
     */
    var pull = baseRest(pullAll);

    /**
     * This method is like `_.pull` except that it accepts an array of values to remove.
     *
     * **Note:** Unlike `_.difference`, this method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {Array} values The values to remove.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];
     *
     * _.pullAll(array, ['a', 'c']);
     * console.log(array);
     * // => ['b', 'b']
     */
    function pullAll(array, values) {
      return (array && array.length && values && values.length)
        ? basePullAll(array, values)
        : array;
    }

    /**
     * This method is like `_.pullAll` except that it accepts `iteratee` which is
     * invoked for each element of `array` and `values` to generate the criterion
     * by which they're compared. The iteratee is invoked with one argument: (value).
     *
     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {Array} values The values to remove.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];
     *
     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');
     * console.log(array);
     * // => [{ 'x': 2 }]
     */
    function pullAllBy(array, values, iteratee) {
      return (array && array.length && values && values.length)
        ? basePullAll(array, values, getIteratee(iteratee, 2))
        : array;
    }

    /**
     * This method is like `_.pullAll` except that it accepts `comparator` which
     * is invoked to compare elements of `array` to `values`. The comparator is
     * invoked with two arguments: (arrVal, othVal).
     *
     * **Note:** Unlike `_.differenceWith`, this method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 4.6.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {Array} values The values to remove.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];
     *
     * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);
     * console.log(array);
     * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]
     */
    function pullAllWith(array, values, comparator) {
      return (array && array.length && values && values.length)
        ? basePullAll(array, values, undefined, comparator)
        : array;
    }

    /**
     * Removes elements from `array` corresponding to `indexes` and returns an
     * array of removed elements.
     *
     * **Note:** Unlike `_.at`, this method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {...(number|number[])} [indexes] The indexes of elements to remove.
     * @returns {Array} Returns the new array of removed elements.
     * @example
     *
     * var array = ['a', 'b', 'c', 'd'];
     * var pulled = _.pullAt(array, [1, 3]);
     *
     * console.log(array);
     * // => ['a', 'c']
     *
     * console.log(pulled);
     * // => ['b', 'd']
     */
    var pullAt = flatRest(function(array, indexes) {
      var length = array == null ? 0 : array.length,
          result = baseAt(array, indexes);

      basePullAt(array, arrayMap(indexes, function(index) {
        return isIndex(index, length) ? +index : index;
      }).sort(compareAscending));

      return result;
    });

    /**
     * Removes all elements from `array` that `predicate` returns truthy for
     * and returns an array of the removed elements. The predicate is invoked
     * with three arguments: (value, index, array).
     *
     * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`
     * to pull elements from an array by value.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new array of removed elements.
     * @example
     *
     * var array = [1, 2, 3, 4];
     * var evens = _.remove(array, function(n) {
     *   return n % 2 == 0;
     * });
     *
     * console.log(array);
     * // => [1, 3]
     *
     * console.log(evens);
     * // => [2, 4]
     */
    function remove(array, predicate) {
      var result = [];
      if (!(array && array.length)) {
        return result;
      }
      var index = -1,
          indexes = [],
          length = array.length;

      predicate = getIteratee(predicate, 3);
      while (++index < length) {
        var value = array[index];
        if (predicate(value, index, array)) {
          result.push(value);
          indexes.push(index);
        }
      }
      basePullAt(array, indexes);
      return result;
    }

    /**
     * Reverses `array` so that the first element becomes the last, the second
     * element becomes the second to last, and so on.
     *
     * **Note:** This method mutates `array` and is based on
     * [`Array#reverse`](https://mdn.io/Array/reverse).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = [1, 2, 3];
     *
     * _.reverse(array);
     * // => [3, 2, 1]
     *
     * console.log(array);
     * // => [3, 2, 1]
     */
    function reverse(array) {
      return array == null ? array : nativeReverse.call(array);
    }

    /**
     * Creates a slice of `array` from `start` up to, but not including, `end`.
     *
     * **Note:** This method is used instead of
     * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are
     * returned.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to slice.
     * @param {number} [start=0] The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns the slice of `array`.
     */
    function slice(array, start, end) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {
        start = 0;
        end = length;
      }
      else {
        start = start == null ? 0 : toInteger(start);
        end = end === undefined ? length : toInteger(end);
      }
      return baseSlice(array, start, end);
    }

    /**
     * Uses a binary search to determine the lowest index at which `value`
     * should be inserted into `array` in order to maintain its sort order.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     * @example
     *
     * _.sortedIndex([30, 50], 40);
     * // => 1
     */
    function sortedIndex(array, value) {
      return baseSortedIndex(array, value);
    }

    /**
     * This method is like `_.sortedIndex` except that it accepts `iteratee`
     * which is invoked for `value` and each element of `array` to compute their
     * sort ranking. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     * @example
     *
     * var objects = [{ 'x': 4 }, { 'x': 5 }];
     *
     * _.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });
     * // => 0
     *
     * // The `_.property` iteratee shorthand.
     * _.sortedIndexBy(objects, { 'x': 4 }, 'x');
     * // => 0
     */
    function sortedIndexBy(array, value, iteratee) {
      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2));
    }

    /**
     * This method is like `_.indexOf` except that it performs a binary
     * search on a sorted `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {*} value The value to search for.
     * @returns {number} Returns the index of the matched value, else `-1`.
     * @example
     *
     * _.sortedIndexOf([4, 5, 5, 5, 6], 5);
     * // => 1
     */
    function sortedIndexOf(array, value) {
      var length = array == null ? 0 : array.length;
      if (length) {
        var index = baseSortedIndex(array, value);
        if (index < length && eq(array[index], value)) {
          return index;
        }
      }
      return -1;
    }

    /**
     * This method is like `_.sortedIndex` except that it returns the highest
     * index at which `value` should be inserted into `array` in order to
     * maintain its sort order.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     * @example
     *
     * _.sortedLastIndex([4, 5, 5, 5, 6], 5);
     * // => 4
     */
    function sortedLastIndex(array, value) {
      return baseSortedIndex(array, value, true);
    }

    /**
     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`
     * which is invoked for `value` and each element of `array` to compute their
     * sort ranking. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     * @example
     *
     * var objects = [{ 'x': 4 }, { 'x': 5 }];
     *
     * _.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });
     * // => 1
     *
     * // The `_.property` iteratee shorthand.
     * _.sortedLastIndexBy(objects, { 'x': 4 }, 'x');
     * // => 1
     */
    function sortedLastIndexBy(array, value, iteratee) {
      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2), true);
    }

    /**
     * This method is like `_.lastIndexOf` except that it performs a binary
     * search on a sorted `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {*} value The value to search for.
     * @returns {number} Returns the index of the matched value, else `-1`.
     * @example
     *
     * _.sortedLastIndexOf([4, 5, 5, 5, 6], 5);
     * // => 3
     */
    function sortedLastIndexOf(array, value) {
      var length = array == null ? 0 : array.length;
      if (length) {
        var index = baseSortedIndex(array, value, true) - 1;
        if (eq(array[index], value)) {
          return index;
        }
      }
      return -1;
    }

    /**
     * This method is like `_.uniq` except that it's designed and optimized
     * for sorted arrays.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * _.sortedUniq([1, 1, 2]);
     * // => [1, 2]
     */
    function sortedUniq(array) {
      return (array && array.length)
        ? baseSortedUniq(array)
        : [];
    }

    /**
     * This method is like `_.uniqBy` except that it's designed and optimized
     * for sorted arrays.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);
     * // => [1.1, 2.3]
     */
    function sortedUniqBy(array, iteratee) {
      return (array && array.length)
        ? baseSortedUniq(array, getIteratee(iteratee, 2))
        : [];
    }

    /**
     * Gets all but the first element of `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.tail([1, 2, 3]);
     * // => [2, 3]
     */
    function tail(array) {
      var length = array == null ? 0 : array.length;
      return length ? baseSlice(array, 1, length) : [];
    }

    /**
     * Creates a slice of `array` with `n` elements taken from the beginning.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=1] The number of elements to take.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.take([1, 2, 3]);
     * // => [1]
     *
     * _.take([1, 2, 3], 2);
     * // => [1, 2]
     *
     * _.take([1, 2, 3], 5);
     * // => [1, 2, 3]
     *
     * _.take([1, 2, 3], 0);
     * // => []
     */
    function take(array, n, guard) {
      if (!(array && array.length)) {
        return [];
      }
      n = (guard || n === undefined) ? 1 : toInteger(n);
      return baseSlice(array, 0, n < 0 ? 0 : n);
    }

    /**
     * Creates a slice of `array` with `n` elements taken from the end.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=1] The number of elements to take.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.takeRight([1, 2, 3]);
     * // => [3]
     *
     * _.takeRight([1, 2, 3], 2);
     * // => [2, 3]
     *
     * _.takeRight([1, 2, 3], 5);
     * // => [1, 2, 3]
     *
     * _.takeRight([1, 2, 3], 0);
     * // => []
     */
    function takeRight(array, n, guard) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      n = (guard || n === undefined) ? 1 : toInteger(n);
      n = length - n;
      return baseSlice(array, n < 0 ? 0 : n, length);
    }

    /**
     * Creates a slice of `array` with elements taken from the end. Elements are
     * taken until `predicate` returns falsey. The predicate is invoked with
     * three arguments: (value, index, array).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': true },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': false }
     * ];
     *
     * _.takeRightWhile(users, function(o) { return !o.active; });
     * // => objects for ['fred', 'pebbles']
     *
     * // The `_.matches` iteratee shorthand.
     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });
     * // => objects for ['pebbles']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.takeRightWhile(users, ['active', false]);
     * // => objects for ['fred', 'pebbles']
     *
     * // The `_.property` iteratee shorthand.
     * _.takeRightWhile(users, 'active');
     * // => []
     */
    function takeRightWhile(array, predicate) {
      return (array && array.length)
        ? baseWhile(array, getIteratee(predicate, 3), false, true)
        : [];
    }

    /**
     * Creates a slice of `array` with elements taken from the beginning. Elements
     * are taken until `predicate` returns falsey. The predicate is invoked with
     * three arguments: (value, index, array).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': false },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': true }
     * ];
     *
     * _.takeWhile(users, function(o) { return !o.active; });
     * // => objects for ['barney', 'fred']
     *
     * // The `_.matches` iteratee shorthand.
     * _.takeWhile(users, { 'user': 'barney', 'active': false });
     * // => objects for ['barney']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.takeWhile(users, ['active', false]);
     * // => objects for ['barney', 'fred']
     *
     * // The `_.property` iteratee shorthand.
     * _.takeWhile(users, 'active');
     * // => []
     */
    function takeWhile(array, predicate) {
      return (array && array.length)
        ? baseWhile(array, getIteratee(predicate, 3))
        : [];
    }

    /**
     * Creates an array of unique values, in order, from all given arrays using
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @returns {Array} Returns the new array of combined values.
     * @example
     *
     * _.union([2], [1, 2]);
     * // => [2, 1]
     */
    var union = baseRest(function(arrays) {
      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));
    });

    /**
     * This method is like `_.union` except that it accepts `iteratee` which is
     * invoked for each element of each `arrays` to generate the criterion by
     * which uniqueness is computed. Result values are chosen from the first
     * array in which the value occurs. The iteratee is invoked with one argument:
     * (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new array of combined values.
     * @example
     *
     * _.unionBy([2.1], [1.2, 2.3], Math.floor);
     * // => [2.1, 1.2]
     *
     * // The `_.property` iteratee shorthand.
     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
     * // => [{ 'x': 1 }, { 'x': 2 }]
     */
    var unionBy = baseRest(function(arrays) {
      var iteratee = last(arrays);
      if (isArrayLikeObject(iteratee)) {
        iteratee = undefined;
      }
      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee, 2));
    });

    /**
     * This method is like `_.union` except that it accepts `comparator` which
     * is invoked to compare elements of `arrays`. Result values are chosen from
     * the first array in which the value occurs. The comparator is invoked
     * with two arguments: (arrVal, othVal).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of combined values.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
     *
     * _.unionWith(objects, others, _.isEqual);
     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]
     */
    var unionWith = baseRest(function(arrays) {
      var comparator = last(arrays);
      comparator = typeof comparator == 'function' ? comparator : undefined;
      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);
    });

    /**
     * Creates a duplicate-free version of an array, using
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons, in which only the first occurrence of each element
     * is kept. The order of result values is determined by the order they occur
     * in the array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * _.uniq([2, 1, 2]);
     * // => [2, 1]
     */
    function uniq(array) {
      return (array && array.length) ? baseUniq(array) : [];
    }

    /**
     * This method is like `_.uniq` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the criterion by which
     * uniqueness is computed. The order of result values is determined by the
     * order they occur in the array. The iteratee is invoked with one argument:
     * (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);
     * // => [2.1, 1.2]
     *
     * // The `_.property` iteratee shorthand.
     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');
     * // => [{ 'x': 1 }, { 'x': 2 }]
     */
    function uniqBy(array, iteratee) {
      return (array && array.length) ? baseUniq(array, getIteratee(iteratee, 2)) : [];
    }

    /**
     * This method is like `_.uniq` except that it accepts `comparator` which
     * is invoked to compare elements of `array`. The order of result values is
     * determined by the order they occur in the array.The comparator is invoked
     * with two arguments: (arrVal, othVal).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];
     *
     * _.uniqWith(objects, _.isEqual);
     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]
     */
    function uniqWith(array, comparator) {
      comparator = typeof comparator == 'function' ? comparator : undefined;
      return (array && array.length) ? baseUniq(array, undefined, comparator) : [];
    }

    /**
     * This method is like `_.zip` except that it accepts an array of grouped
     * elements and creates an array regrouping the elements to their pre-zip
     * configuration.
     *
     * @static
     * @memberOf _
     * @since 1.2.0
     * @category Array
     * @param {Array} array The array of grouped elements to process.
     * @returns {Array} Returns the new array of regrouped elements.
     * @example
     *
     * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);
     * // => [['a', 1, true], ['b', 2, false]]
     *
     * _.unzip(zipped);
     * // => [['a', 'b'], [1, 2], [true, false]]
     */
    function unzip(array) {
      if (!(array && array.length)) {
        return [];
      }
      var length = 0;
      array = arrayFilter(array, function(group) {
        if (isArrayLikeObject(group)) {
          length = nativeMax(group.length, length);
          return true;
        }
      });
      return baseTimes(length, function(index) {
        return arrayMap(array, baseProperty(index));
      });
    }

    /**
     * This method is like `_.unzip` except that it accepts `iteratee` to specify
     * how regrouped values should be combined. The iteratee is invoked with the
     * elements of each group: (...group).
     *
     * @static
     * @memberOf _
     * @since 3.8.0
     * @category Array
     * @param {Array} array The array of grouped elements to process.
     * @param {Function} [iteratee=_.identity] The function to combine
     *  regrouped values.
     * @returns {Array} Returns the new array of regrouped elements.
     * @example
     *
     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);
     * // => [[1, 10, 100], [2, 20, 200]]
     *
     * _.unzipWith(zipped, _.add);
     * // => [3, 30, 300]
     */
    function unzipWith(array, iteratee) {
      if (!(array && array.length)) {
        return [];
      }
      var result = unzip(array);
      if (iteratee == null) {
        return result;
      }
      return arrayMap(result, function(group) {
        return apply(iteratee, undefined, group);
      });
    }

    /**
     * Creates an array excluding all given values using
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons.
     *
     * **Note:** Unlike `_.pull`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {...*} [values] The values to exclude.
     * @returns {Array} Returns the new array of filtered values.
     * @see _.difference, _.xor
     * @example
     *
     * _.without([2, 1, 2, 3], 1, 2);
     * // => [3]
     */
    var without = baseRest(function(array, values) {
      return isArrayLikeObject(array)
        ? baseDifference(array, values)
        : [];
    });

    /**
     * Creates an array of unique values that is the
     * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)
     * of the given arrays. The order of result values is determined by the order
     * they occur in the arrays.
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @returns {Array} Returns the new array of filtered values.
     * @see _.difference, _.without
     * @example
     *
     * _.xor([2, 1], [2, 3]);
     * // => [1, 3]
     */
    var xor = baseRest(function(arrays) {
      return baseXor(arrayFilter(arrays, isArrayLikeObject));
    });

    /**
     * This method is like `_.xor` except that it accepts `iteratee` which is
     * invoked for each element of each `arrays` to generate the criterion by
     * which by which they're compared. The order of result values is determined
     * by the order they occur in the arrays. The iteratee is invoked with one
     * argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * _.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);
     * // => [1.2, 3.4]
     *
     * // The `_.property` iteratee shorthand.
     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
     * // => [{ 'x': 2 }]
     */
    var xorBy = baseRest(function(arrays) {
      var iteratee = last(arrays);
      if (isArrayLikeObject(iteratee)) {
        iteratee = undefined;
      }
      return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee, 2));
    });

    /**
     * This method is like `_.xor` except that it accepts `comparator` which is
     * invoked to compare elements of `arrays`. The order of result values is
     * determined by the order they occur in the arrays. The comparator is invoked
     * with two arguments: (arrVal, othVal).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
     *
     * _.xorWith(objects, others, _.isEqual);
     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]
     */
    var xorWith = baseRest(function(arrays) {
      var comparator = last(arrays);
      comparator = typeof comparator == 'function' ? comparator : undefined;
      return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);
    });

    /**
     * Creates an array of grouped elements, the first of which contains the
     * first elements of the given arrays, the second of which contains the
     * second elements of the given arrays, and so on.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {...Array} [arrays] The arrays to process.
     * @returns {Array} Returns the new array of grouped elements.
     * @example
     *
     * _.zip(['a', 'b'], [1, 2], [true, false]);
     * // => [['a', 1, true], ['b', 2, false]]
     */
    var zip = baseRest(unzip);

    /**
     * This method is like `_.fromPairs` except that it accepts two arrays,
     * one of property identifiers and one of corresponding values.
     *
     * @static
     * @memberOf _
     * @since 0.4.0
     * @category Array
     * @param {Array} [props=[]] The property identifiers.
     * @param {Array} [values=[]] The property values.
     * @returns {Object} Returns the new object.
     * @example
     *
     * _.zipObject(['a', 'b'], [1, 2]);
     * // => { 'a': 1, 'b': 2 }
     */
    function zipObject(props, values) {
      return baseZipObject(props || [], values || [], assignValue);
    }

    /**
     * This method is like `_.zipObject` except that it supports property paths.
     *
     * @static
     * @memberOf _
     * @since 4.1.0
     * @category Array
     * @param {Array} [props=[]] The property identifiers.
     * @param {Array} [values=[]] The property values.
     * @returns {Object} Returns the new object.
     * @example
     *
     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);
     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }
     */
    function zipObjectDeep(props, values) {
      return baseZipObject(props || [], values || [], baseSet);
    }

    /**
     * This method is like `_.zip` except that it accepts `iteratee` to specify
     * how grouped values should be combined. The iteratee is invoked with the
     * elements of each group: (...group).
     *
     * @static
     * @memberOf _
     * @since 3.8.0
     * @category Array
     * @param {...Array} [arrays] The arrays to process.
     * @param {Function} [iteratee=_.identity] The function to combine
     *  grouped values.
     * @returns {Array} Returns the new array of grouped elements.
     * @example
     *
     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {
     *   return a + b + c;
     * });
     * // => [111, 222]
     */
    var zipWith = baseRest(function(arrays) {
      var length = arrays.length,
          iteratee = length > 1 ? arrays[length - 1] : undefined;

      iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;
      return unzipWith(arrays, iteratee);
    });

    /*------------------------------------------------------------------------*/

    /**
     * Creates a `lodash` wrapper instance that wraps `value` with explicit method
     * chain sequences enabled. The result of such sequences must be unwrapped
     * with `_#value`.
     *
     * @static
     * @memberOf _
     * @since 1.3.0
     * @category Seq
     * @param {*} value The value to wrap.
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'age': 36 },
     *   { 'user': 'fred',    'age': 40 },
     *   { 'user': 'pebbles', 'age': 1 }
     * ];
     *
     * var youngest = _
     *   .chain(users)
     *   .sortBy('age')
     *   .map(function(o) {
     *     return o.user + ' is ' + o.age;
     *   })
     *   .head()
     *   .value();
     * // => 'pebbles is 1'
     */
    function chain(value) {
      var result = lodash(value);
      result.__chain__ = true;
      return result;
    }

    /**
     * This method invokes `interceptor` and returns `value`. The interceptor
     * is invoked with one argument; (value). The purpose of this method is to
     * "tap into" a method chain sequence in order to modify intermediate results.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Seq
     * @param {*} value The value to provide to `interceptor`.
     * @param {Function} interceptor The function to invoke.
     * @returns {*} Returns `value`.
     * @example
     *
     * _([1, 2, 3])
     *  .tap(function(array) {
     *    // Mutate input array.
     *    array.pop();
     *  })
     *  .reverse()
     *  .value();
     * // => [2, 1]
     */
    function tap(value, interceptor) {
      interceptor(value);
      return value;
    }

    /**
     * This method is like `_.tap` except that it returns the result of `interceptor`.
     * The purpose of this method is to "pass thru" values replacing intermediate
     * results in a method chain sequence.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Seq
     * @param {*} value The value to provide to `interceptor`.
     * @param {Function} interceptor The function to invoke.
     * @returns {*} Returns the result of `interceptor`.
     * @example
     *
     * _('  abc  ')
     *  .chain()
     *  .trim()
     *  .thru(function(value) {
     *    return [value];
     *  })
     *  .value();
     * // => ['abc']
     */
    function thru(value, interceptor) {
      return interceptor(value);
    }

    /**
     * This method is the wrapper version of `_.at`.
     *
     * @name at
     * @memberOf _
     * @since 1.0.0
     * @category Seq
     * @param {...(string|string[])} [paths] The property paths to pick.
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };
     *
     * _(object).at(['a[0].b.c', 'a[1]']).value();
     * // => [3, 4]
     */
    var wrapperAt = flatRest(function(paths) {
      var length = paths.length,
          start = length ? paths[0] : 0,
          value = this.__wrapped__,
          interceptor = function(object) { return baseAt(object, paths); };

      if (length > 1 || this.__actions__.length ||
          !(value instanceof LazyWrapper) || !isIndex(start)) {
        return this.thru(interceptor);
      }
      value = value.slice(start, +start + (length ? 1 : 0));
      value.__actions__.push({
        'func': thru,
        'args': [interceptor],
        'thisArg': undefined
      });
      return new LodashWrapper(value, this.__chain__).thru(function(array) {
        if (length && !array.length) {
          array.push(undefined);
        }
        return array;
      });
    });

    /**
     * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.
     *
     * @name chain
     * @memberOf _
     * @since 0.1.0
     * @category Seq
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36 },
     *   { 'user': 'fred',   'age': 40 }
     * ];
     *
     * // A sequence without explicit chaining.
     * _(users).head();
     * // => { 'user': 'barney', 'age': 36 }
     *
     * // A sequence with explicit chaining.
     * _(users)
     *   .chain()
     *   .head()
     *   .pick('user')
     *   .value();
     * // => { 'user': 'barney' }
     */
    function wrapperChain() {
      return chain(this);
    }

    /**
     * Executes the chain sequence and returns the wrapped result.
     *
     * @name commit
     * @memberOf _
     * @since 3.2.0
     * @category Seq
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var array = [1, 2];
     * var wrapped = _(array).push(3);
     *
     * console.log(array);
     * // => [1, 2]
     *
     * wrapped = wrapped.commit();
     * console.log(array);
     * // => [1, 2, 3]
     *
     * wrapped.last();
     * // => 3
     *
     * console.log(array);
     * // => [1, 2, 3]
     */
    function wrapperCommit() {
      return new LodashWrapper(this.value(), this.__chain__);
    }

    /**
     * Gets the next value on a wrapped object following the
     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).
     *
     * @name next
     * @memberOf _
     * @since 4.0.0
     * @category Seq
     * @returns {Object} Returns the next iterator value.
     * @example
     *
     * var wrapped = _([1, 2]);
     *
     * wrapped.next();
     * // => { 'done': false, 'value': 1 }
     *
     * wrapped.next();
     * // => { 'done': false, 'value': 2 }
     *
     * wrapped.next();
     * // => { 'done': true, 'value': undefined }
     */
    function wrapperNext() {
      if (this.__values__ === undefined) {
        this.__values__ = toArray(this.value());
      }
      var done = this.__index__ >= this.__values__.length,
          value = done ? undefined : this.__values__[this.__index__++];

      return { 'done': done, 'value': value };
    }

    /**
     * Enables the wrapper to be iterable.
     *
     * @name Symbol.iterator
     * @memberOf _
     * @since 4.0.0
     * @category Seq
     * @returns {Object} Returns the wrapper object.
     * @example
     *
     * var wrapped = _([1, 2]);
     *
     * wrapped[Symbol.iterator]() === wrapped;
     * // => true
     *
     * Array.from(wrapped);
     * // => [1, 2]
     */
    function wrapperToIterator() {
      return this;
    }

    /**
     * Creates a clone of the chain sequence planting `value` as the wrapped value.
     *
     * @name plant
     * @memberOf _
     * @since 3.2.0
     * @category Seq
     * @param {*} value The value to plant.
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var wrapped = _([1, 2]).map(square);
     * var other = wrapped.plant([3, 4]);
     *
     * other.value();
     * // => [9, 16]
     *
     * wrapped.value();
     * // => [1, 4]
     */
    function wrapperPlant(value) {
      var result,
          parent = this;

      while (parent instanceof baseLodash) {
        var clone = wrapperClone(parent);
        clone.__index__ = 0;
        clone.__values__ = undefined;
        if (result) {
          previous.__wrapped__ = clone;
        } else {
          result = clone;
        }
        var previous = clone;
        parent = parent.__wrapped__;
      }
      previous.__wrapped__ = value;
      return result;
    }

    /**
     * This method is the wrapper version of `_.reverse`.
     *
     * **Note:** This method mutates the wrapped array.
     *
     * @name reverse
     * @memberOf _
     * @since 0.1.0
     * @category Seq
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var array = [1, 2, 3];
     *
     * _(array).reverse().value()
     * // => [3, 2, 1]
     *
     * console.log(array);
     * // => [3, 2, 1]
     */
    function wrapperReverse() {
      var value = this.__wrapped__;
      if (value instanceof LazyWrapper) {
        var wrapped = value;
        if (this.__actions__.length) {
          wrapped = new LazyWrapper(this);
        }
        wrapped = wrapped.reverse();
        wrapped.__actions__.push({
          'func': thru,
          'args': [reverse],
          'thisArg': undefined
        });
        return new LodashWrapper(wrapped, this.__chain__);
      }
      return this.thru(reverse);
    }

    /**
     * Executes the chain sequence to resolve the unwrapped value.
     *
     * @name value
     * @memberOf _
     * @since 0.1.0
     * @alias toJSON, valueOf
     * @category Seq
     * @returns {*} Returns the resolved unwrapped value.
     * @example
     *
     * _([1, 2, 3]).value();
     * // => [1, 2, 3]
     */
    function wrapperValue() {
      return baseWrapperValue(this.__wrapped__, this.__actions__);
    }

    /*------------------------------------------------------------------------*/

    /**
     * Creates an object composed of keys generated from the results of running
     * each element of `collection` thru `iteratee`. The corresponding value of
     * each key is the number of times the key was returned by `iteratee`. The
     * iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 0.5.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
     * @returns {Object} Returns the composed aggregate object.
     * @example
     *
     * _.countBy([6.1, 4.2, 6.3], Math.floor);
     * // => { '4': 1, '6': 2 }
     *
     * // The `_.property` iteratee shorthand.
     * _.countBy(['one', 'two', 'three'], 'length');
     * // => { '3': 2, '5': 1 }
     */
    var countBy = createAggregator(function(result, value, key) {
      if (hasOwnProperty.call(result, key)) {
        ++result[key];
      } else {
        baseAssignValue(result, key, 1);
      }
    });

    /**
     * Checks if `predicate` returns truthy for **all** elements of `collection`.
     * Iteration is stopped once `predicate` returns falsey. The predicate is
     * invoked with three arguments: (value, index|key, collection).
     *
     * **Note:** This method returns `true` for
     * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because
     * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of
     * elements of empty collections.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {boolean} Returns `true` if all elements pass the predicate check,
     *  else `false`.
     * @example
     *
     * _.every([true, 1, null, 'yes'], Boolean);
     * // => false
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36, 'active': false },
     *   { 'user': 'fred',   'age': 40, 'active': false }
     * ];
     *
     * // The `_.matches` iteratee shorthand.
     * _.every(users, { 'user': 'barney', 'active': false });
     * // => false
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.every(users, ['active', false]);
     * // => true
     *
     * // The `_.property` iteratee shorthand.
     * _.every(users, 'active');
     * // => false
     */
    function every(collection, predicate, guard) {
      var func = isArray(collection) ? arrayEvery : baseEvery;
      if (guard && isIterateeCall(collection, predicate, guard)) {
        predicate = undefined;
      }
      return func(collection, getIteratee(predicate, 3));
    }

    /**
     * Iterates over elements of `collection`, returning an array of all elements
     * `predicate` returns truthy for. The predicate is invoked with three
     * arguments: (value, index|key, collection).
     *
     * **Note:** Unlike `_.remove`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new filtered array.
     * @see _.reject
     * @example
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36, 'active': true },
     *   { 'user': 'fred',   'age': 40, 'active': false }
     * ];
     *
     * _.filter(users, function(o) { return !o.active; });
     * // => objects for ['fred']
     *
     * // The `_.matches` iteratee shorthand.
     * _.filter(users, { 'age': 36, 'active': true });
     * // => objects for ['barney']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.filter(users, ['active', false]);
     * // => objects for ['fred']
     *
     * // The `_.property` iteratee shorthand.
     * _.filter(users, 'active');
     * // => objects for ['barney']
     */
    function filter(collection, predicate) {
      var func = isArray(collection) ? arrayFilter : baseFilter;
      return func(collection, getIteratee(predicate, 3));
    }

    /**
     * Iterates over elements of `collection`, returning the first element
     * `predicate` returns truthy for. The predicate is invoked with three
     * arguments: (value, index|key, collection).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param {number} [fromIndex=0] The index to search from.
     * @returns {*} Returns the matched element, else `undefined`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'age': 36, 'active': true },
     *   { 'user': 'fred',    'age': 40, 'active': false },
     *   { 'user': 'pebbles', 'age': 1,  'active': true }
     * ];
     *
     * _.find(users, function(o) { return o.age < 40; });
     * // => object for 'barney'
     *
     * // The `_.matches` iteratee shorthand.
     * _.find(users, { 'age': 1, 'active': true });
     * // => object for 'pebbles'
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.find(users, ['active', false]);
     * // => object for 'fred'
     *
     * // The `_.property` iteratee shorthand.
     * _.find(users, 'active');
     * // => object for 'barney'
     */
    var find = createFind(findIndex);

    /**
     * This method is like `_.find` except that it iterates over elements of
     * `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param {number} [fromIndex=collection.length-1] The index to search from.
     * @returns {*} Returns the matched element, else `undefined`.
     * @example
     *
     * _.findLast([1, 2, 3, 4], function(n) {
     *   return n % 2 == 1;
     * });
     * // => 3
     */
    var findLast = createFind(findLastIndex);

    /**
     * Creates a flattened array of values by running each element in `collection`
     * thru `iteratee` and flattening the mapped results. The iteratee is invoked
     * with three arguments: (value, index|key, collection).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * function duplicate(n) {
     *   return [n, n];
     * }
     *
     * _.flatMap([1, 2], duplicate);
     * // => [1, 1, 2, 2]
     */
    function flatMap(collection, iteratee) {
      return baseFlatten(map(collection, iteratee), 1);
    }

    /**
     * This method is like `_.flatMap` except that it recursively flattens the
     * mapped results.
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * function duplicate(n) {
     *   return [[[n, n]]];
     * }
     *
     * _.flatMapDeep([1, 2], duplicate);
     * // => [1, 1, 2, 2]
     */
    function flatMapDeep(collection, iteratee) {
      return baseFlatten(map(collection, iteratee), INFINITY);
    }

    /**
     * This method is like `_.flatMap` except that it recursively flattens the
     * mapped results up to `depth` times.
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @param {number} [depth=1] The maximum recursion depth.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * function duplicate(n) {
     *   return [[[n, n]]];
     * }
     *
     * _.flatMapDepth([1, 2], duplicate, 2);
     * // => [[1, 1], [2, 2]]
     */
    function flatMapDepth(collection, iteratee, depth) {
      depth = depth === undefined ? 1 : toInteger(depth);
      return baseFlatten(map(collection, iteratee), depth);
    }

    /**
     * Iterates over elements of `collection` and invokes `iteratee` for each element.
     * The iteratee is invoked with three arguments: (value, index|key, collection).
     * Iteratee functions may exit iteration early by explicitly returning `false`.
     *
     * **Note:** As with other "Collections" methods, objects with a "length"
     * property are iterated like arrays. To avoid this behavior use `_.forIn`
     * or `_.forOwn` for object iteration.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @alias each
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array|Object} Returns `collection`.
     * @see _.forEachRight
     * @example
     *
     * _.forEach([1, 2], function(value) {
     *   console.log(value);
     * });
     * // => Logs `1` then `2`.
     *
     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'a' then 'b' (iteration order is not guaranteed).
     */
    function forEach(collection, iteratee) {
      var func = isArray(collection) ? arrayEach : baseEach;
      return func(collection, getIteratee(iteratee, 3));
    }

    /**
     * This method is like `_.forEach` except that it iterates over elements of
     * `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @alias eachRight
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array|Object} Returns `collection`.
     * @see _.forEach
     * @example
     *
     * _.forEachRight([1, 2], function(value) {
     *   console.log(value);
     * });
     * // => Logs `2` then `1`.
     */
    function forEachRight(collection, iteratee) {
      var func = isArray(collection) ? arrayEachRight : baseEachRight;
      return func(collection, getIteratee(iteratee, 3));
    }

    /**
     * Creates an object composed of keys generated from the results of running
     * each element of `collection` thru `iteratee`. The order of grouped values
     * is determined by the order they occur in `collection`. The corresponding
     * value of each key is an array of elements responsible for generating the
     * key. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
     * @returns {Object} Returns the composed aggregate object.
     * @example
     *
     * _.groupBy([6.1, 4.2, 6.3], Math.floor);
     * // => { '4': [4.2], '6': [6.1, 6.3] }
     *
     * // The `_.property` iteratee shorthand.
     * _.groupBy(['one', 'two', 'three'], 'length');
     * // => { '3': ['one', 'two'], '5': ['three'] }
     */
    var groupBy = createAggregator(function(result, value, key) {
      if (hasOwnProperty.call(result, key)) {
        result[key].push(value);
      } else {
        baseAssignValue(result, key, [value]);
      }
    });

    /**
     * Checks if `value` is in `collection`. If `collection` is a string, it's
     * checked for a substring of `value`, otherwise
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * is used for equality comparisons. If `fromIndex` is negative, it's used as
     * the offset from the end of `collection`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object|string} collection The collection to inspect.
     * @param {*} value The value to search for.
     * @param {number} [fromIndex=0] The index to search from.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.
     * @returns {boolean} Returns `true` if `value` is found, else `false`.
     * @example
     *
     * _.includes([1, 2, 3], 1);
     * // => true
     *
     * _.includes([1, 2, 3], 1, 2);
     * // => false
     *
     * _.includes({ 'a': 1, 'b': 2 }, 1);
     * // => true
     *
     * _.includes('abcd', 'bc');
     * // => true
     */
    function includes(collection, value, fromIndex, guard) {
      collection = isArrayLike(collection) ? collection : values(collection);
      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;

      var length = collection.length;
      if (fromIndex < 0) {
        fromIndex = nativeMax(length + fromIndex, 0);
      }
      return isString(collection)
        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)
        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);
    }

    /**
     * Invokes the method at `path` of each element in `collection`, returning
     * an array of the results of each invoked method. Any additional arguments
     * are provided to each invoked method. If `path` is a function, it's invoked
     * for, and `this` bound to, each element in `collection`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Array|Function|string} path The path of the method to invoke or
     *  the function invoked per iteration.
     * @param {...*} [args] The arguments to invoke each method with.
     * @returns {Array} Returns the array of results.
     * @example
     *
     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');
     * // => [[1, 5, 7], [1, 2, 3]]
     *
     * _.invokeMap([123, 456], String.prototype.split, '');
     * // => [['1', '2', '3'], ['4', '5', '6']]
     */
    var invokeMap = baseRest(function(collection, path, args) {
      var index = -1,
          isFunc = typeof path == 'function',
          result = isArrayLike(collection) ? Array(collection.length) : [];

      baseEach(collection, function(value) {
        result[++index] = isFunc ? apply(path, value, args) : baseInvoke(value, path, args);
      });
      return result;
    });

    /**
     * Creates an object composed of keys generated from the results of running
     * each element of `collection` thru `iteratee`. The corresponding value of
     * each key is the last element responsible for generating the key. The
     * iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
     * @returns {Object} Returns the composed aggregate object.
     * @example
     *
     * var array = [
     *   { 'dir': 'left', 'code': 97 },
     *   { 'dir': 'right', 'code': 100 }
     * ];
     *
     * _.keyBy(array, function(o) {
     *   return String.fromCharCode(o.code);
     * });
     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }
     *
     * _.keyBy(array, 'dir');
     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }
     */
    var keyBy = createAggregator(function(result, value, key) {
      baseAssignValue(result, key, value);
    });

    /**
     * Creates an array of values by running each element in `collection` thru
     * `iteratee`. The iteratee is invoked with three arguments:
     * (value, index|key, collection).
     *
     * Many lodash methods are guarded to work as iteratees for methods like
     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.
     *
     * The guarded methods are:
     * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,
     * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,
     * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,
     * `template`, `trim`, `trimEnd`, `trimStart`, and `words`
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new mapped array.
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * _.map([4, 8], square);
     * // => [16, 64]
     *
     * _.map({ 'a': 4, 'b': 8 }, square);
     * // => [16, 64] (iteration order is not guaranteed)
     *
     * var users = [
     *   { 'user': 'barney' },
     *   { 'user': 'fred' }
     * ];
     *
     * // The `_.property` iteratee shorthand.
     * _.map(users, 'user');
     * // => ['barney', 'fred']
     */
    function map(collection, iteratee) {
      var func = isArray(collection) ? arrayMap : baseMap;
      return func(collection, getIteratee(iteratee, 3));
    }

    /**
     * This method is like `_.sortBy` except that it allows specifying the sort
     * orders of the iteratees to sort by. If `orders` is unspecified, all values
     * are sorted in ascending order. Otherwise, specify an order of "desc" for
     * descending or "asc" for ascending sort order of corresponding values.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]
     *  The iteratees to sort by.
     * @param {string[]} [orders] The sort orders of `iteratees`.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.
     * @returns {Array} Returns the new sorted array.
     * @example
     *
     * var users = [
     *   { 'user': 'fred',   'age': 48 },
     *   { 'user': 'barney', 'age': 34 },
     *   { 'user': 'fred',   'age': 40 },
     *   { 'user': 'barney', 'age': 36 }
     * ];
     *
     * // Sort by `user` in ascending order and by `age` in descending order.
     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);
     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]
     */
    function orderBy(collection, iteratees, orders, guard) {
      if (collection == null) {
        return [];
      }
      if (!isArray(iteratees)) {
        iteratees = iteratees == null ? [] : [iteratees];
      }
      orders = guard ? undefined : orders;
      if (!isArray(orders)) {
        orders = orders == null ? [] : [orders];
      }
      return baseOrderBy(collection, iteratees, orders);
    }

    /**
     * Creates an array of elements split into two groups, the first of which
     * contains elements `predicate` returns truthy for, the second of which
     * contains elements `predicate` returns falsey for. The predicate is
     * invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the array of grouped elements.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'age': 36, 'active': false },
     *   { 'user': 'fred',    'age': 40, 'active': true },
     *   { 'user': 'pebbles', 'age': 1,  'active': false }
     * ];
     *
     * _.partition(users, function(o) { return o.active; });
     * // => objects for [['fred'], ['barney', 'pebbles']]
     *
     * // The `_.matches` iteratee shorthand.
     * _.partition(users, { 'age': 1, 'active': false });
     * // => objects for [['pebbles'], ['barney', 'fred']]
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.partition(users, ['active', false]);
     * // => objects for [['barney', 'pebbles'], ['fred']]
     *
     * // The `_.property` iteratee shorthand.
     * _.partition(users, 'active');
     * // => objects for [['fred'], ['barney', 'pebbles']]
     */
    var partition = createAggregator(function(result, value, key) {
      result[key ? 0 : 1].push(value);
    }, function() { return [[], []]; });

    /**
     * Reduces `collection` to a value which is the accumulated result of running
     * each element in `collection` thru `iteratee`, where each successive
     * invocation is supplied the return value of the previous. If `accumulator`
     * is not given, the first element of `collection` is used as the initial
     * value. The iteratee is invoked with four arguments:
     * (accumulator, value, index|key, collection).
     *
     * Many lodash methods are guarded to work as iteratees for methods like
     * `_.reduce`, `_.reduceRight`, and `_.transform`.
     *
     * The guarded methods are:
     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,
     * and `sortBy`
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @param {*} [accumulator] The initial value.
     * @returns {*} Returns the accumulated value.
     * @see _.reduceRight
     * @example
     *
     * _.reduce([1, 2], function(sum, n) {
     *   return sum + n;
     * }, 0);
     * // => 3
     *
     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {
     *   (result[value] || (result[value] = [])).push(key);
     *   return result;
     * }, {});
     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)
     */
    function reduce(collection, iteratee, accumulator) {
      var func = isArray(collection) ? arrayReduce : baseReduce,
          initAccum = arguments.length < 3;

      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);
    }

    /**
     * This method is like `_.reduce` except that it iterates over elements of
     * `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @param {*} [accumulator] The initial value.
     * @returns {*} Returns the accumulated value.
     * @see _.reduce
     * @example
     *
     * var array = [[0, 1], [2, 3], [4, 5]];
     *
     * _.reduceRight(array, function(flattened, other) {
     *   return flattened.concat(other);
     * }, []);
     * // => [4, 5, 2, 3, 0, 1]
     */
    function reduceRight(collection, iteratee, accumulator) {
      var func = isArray(collection) ? arrayReduceRight : baseReduce,
          initAccum = arguments.length < 3;

      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);
    }

    /**
     * The opposite of `_.filter`; this method returns the elements of `collection`
     * that `predicate` does **not** return truthy for.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new filtered array.
     * @see _.filter
     * @example
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36, 'active': false },
     *   { 'user': 'fred',   'age': 40, 'active': true }
     * ];
     *
     * _.reject(users, function(o) { return !o.active; });
     * // => objects for ['fred']
     *
     * // The `_.matches` iteratee shorthand.
     * _.reject(users, { 'age': 40, 'active': true });
     * // => objects for ['barney']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.reject(users, ['active', false]);
     * // => objects for ['fred']
     *
     * // The `_.property` iteratee shorthand.
     * _.reject(users, 'active');
     * // => objects for ['barney']
     */
    function reject(collection, predicate) {
      var func = isArray(collection) ? arrayFilter : baseFilter;
      return func(collection, negate(getIteratee(predicate, 3)));
    }

    /**
     * Gets a random element from `collection`.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to sample.
     * @returns {*} Returns the random element.
     * @example
     *
     * _.sample([1, 2, 3, 4]);
     * // => 2
     */
    function sample(collection) {
      var func = isArray(collection) ? arraySample : baseSample;
      return func(collection);
    }

    /**
     * Gets `n` random elements at unique keys from `collection` up to the
     * size of `collection`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to sample.
     * @param {number} [n=1] The number of elements to sample.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the random elements.
     * @example
     *
     * _.sampleSize([1, 2, 3], 2);
     * // => [3, 1]
     *
     * _.sampleSize([1, 2, 3], 4);
     * // => [2, 3, 1]
     */
    function sampleSize(collection, n, guard) {
      if ((guard ? isIterateeCall(collection, n, guard) : n === undefined)) {
        n = 1;
      } else {
        n = toInteger(n);
      }
      var func = isArray(collection) ? arraySampleSize : baseSampleSize;
      return func(collection, n);
    }

    /**
     * Creates an array of shuffled values, using a version of the
     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to shuffle.
     * @returns {Array} Returns the new shuffled array.
     * @example
     *
     * _.shuffle([1, 2, 3, 4]);
     * // => [4, 1, 3, 2]
     */
    function shuffle(collection) {
      var func = isArray(collection) ? arrayShuffle : baseShuffle;
      return func(collection);
    }

    /**
     * Gets the size of `collection` by returning its length for array-like
     * values or the number of own enumerable string keyed properties for objects.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object|string} collection The collection to inspect.
     * @returns {number} Returns the collection size.
     * @example
     *
     * _.size([1, 2, 3]);
     * // => 3
     *
     * _.size({ 'a': 1, 'b': 2 });
     * // => 2
     *
     * _.size('pebbles');
     * // => 7
     */
    function size(collection) {
      if (collection == null) {
        return 0;
      }
      if (isArrayLike(collection)) {
        return isString(collection) ? stringSize(collection) : collection.length;
      }
      var tag = getTag(collection);
      if (tag == mapTag || tag == setTag) {
        return collection.size;
      }
      return baseKeys(collection).length;
    }

    /**
     * Checks if `predicate` returns truthy for **any** element of `collection`.
     * Iteration is stopped once `predicate` returns truthy. The predicate is
     * invoked with three arguments: (value, index|key, collection).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {boolean} Returns `true` if any element passes the predicate check,
     *  else `false`.
     * @example
     *
     * _.some([null, 0, 'yes', false], Boolean);
     * // => true
     *
     * var users = [
     *   { 'user': 'barney', 'active': true },
     *   { 'user': 'fred',   'active': false }
     * ];
     *
     * // The `_.matches` iteratee shorthand.
     * _.some(users, { 'user': 'barney', 'active': false });
     * // => false
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.some(users, ['active', false]);
     * // => true
     *
     * // The `_.property` iteratee shorthand.
     * _.some(users, 'active');
     * // => true
     */
    function some(collection, predicate, guard) {
      var func = isArray(collection) ? arraySome : baseSome;
      if (guard && isIterateeCall(collection, predicate, guard)) {
        predicate = undefined;
      }
      return func(collection, getIteratee(predicate, 3));
    }

    /**
     * Creates an array of elements, sorted in ascending order by the results of
     * running each element in a collection thru each iteratee. This method
     * performs a stable sort, that is, it preserves the original sort order of
     * equal elements. The iteratees are invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {...(Function|Function[])} [iteratees=[_.identity]]
     *  The iteratees to sort by.
     * @returns {Array} Returns the new sorted array.
     * @example
     *
     * var users = [
     *   { 'user': 'fred',   'age': 48 },
     *   { 'user': 'barney', 'age': 36 },
     *   { 'user': 'fred',   'age': 40 },
     *   { 'user': 'barney', 'age': 34 }
     * ];
     *
     * _.sortBy(users, [function(o) { return o.user; }]);
     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]
     *
     * _.sortBy(users, ['user', 'age']);
     * // => objects for [['barney', 34], ['barney', 36], ['fred', 40], ['fred', 48]]
     */
    var sortBy = baseRest(function(collection, iteratees) {
      if (collection == null) {
        return [];
      }
      var length = iteratees.length;
      if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {
        iteratees = [];
      } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {
        iteratees = [iteratees[0]];
      }
      return baseOrderBy(collection, baseFlatten(iteratees, 1), []);
    });

    /*------------------------------------------------------------------------*/

    /**
     * Gets the timestamp of the number of milliseconds that have elapsed since
     * the Unix epoch (1 January 1970 00:00:00 UTC).
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Date
     * @returns {number} Returns the timestamp.
     * @example
     *
     * _.defer(function(stamp) {
     *   console.log(_.now() - stamp);
     * }, _.now());
     * // => Logs the number of milliseconds it took for the deferred invocation.
     */
    var now = ctxNow || function() {
      return root.Date.now();
    };

    /*------------------------------------------------------------------------*/

    /**
     * The opposite of `_.before`; this method creates a function that invokes
     * `func` once it's called `n` or more times.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {number} n The number of calls before `func` is invoked.
     * @param {Function} func The function to restrict.
     * @returns {Function} Returns the new restricted function.
     * @example
     *
     * var saves = ['profile', 'settings'];
     *
     * var done = _.after(saves.length, function() {
     *   console.log('done saving!');
     * });
     *
     * _.forEach(saves, function(type) {
     *   asyncSave({ 'type': type, 'complete': done });
     * });
     * // => Logs 'done saving!' after the two async saves have completed.
     */
    function after(n, func) {
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      n = toInteger(n);
      return function() {
        if (--n < 1) {
          return func.apply(this, arguments);
        }
      };
    }

    /**
     * Creates a function that invokes `func`, with up to `n` arguments,
     * ignoring any additional arguments.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {Function} func The function to cap arguments for.
     * @param {number} [n=func.length] The arity cap.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Function} Returns the new capped function.
     * @example
     *
     * _.map(['6', '8', '10'], _.ary(parseInt, 1));
     * // => [6, 8, 10]
     */
    function ary(func, n, guard) {
      n = guard ? undefined : n;
      n = (func && n == null) ? func.length : n;
      return createWrap(func, WRAP_ARY_FLAG, undefined, undefined, undefined, undefined, n);
    }

    /**
     * Creates a function that invokes `func`, with the `this` binding and arguments
     * of the created function, while it's called less than `n` times. Subsequent
     * calls to the created function return the result of the last `func` invocation.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {number} n The number of calls at which `func` is no longer invoked.
     * @param {Function} func The function to restrict.
     * @returns {Function} Returns the new restricted function.
     * @example
     *
     * jQuery(element).on('click', _.before(5, addContactToList));
     * // => Allows adding up to 4 contacts to the list.
     */
    function before(n, func) {
      var result;
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      n = toInteger(n);
      return function() {
        if (--n > 0) {
          result = func.apply(this, arguments);
        }
        if (n <= 1) {
          func = undefined;
        }
        return result;
      };
    }

    /**
     * Creates a function that invokes `func` with the `this` binding of `thisArg`
     * and `partials` prepended to the arguments it receives.
     *
     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,
     * may be used as a placeholder for partially applied arguments.
     *
     * **Note:** Unlike native `Function#bind`, this method doesn't set the "length"
     * property of bound functions.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to bind.
     * @param {*} thisArg The `this` binding of `func`.
     * @param {...*} [partials] The arguments to be partially applied.
     * @returns {Function} Returns the new bound function.
     * @example
     *
     * function greet(greeting, punctuation) {
     *   return greeting + ' ' + this.user + punctuation;
     * }
     *
     * var object = { 'user': 'fred' };
     *
     * var bound = _.bind(greet, object, 'hi');
     * bound('!');
     * // => 'hi fred!'
     *
     * // Bound with placeholders.
     * var bound = _.bind(greet, object, _, '!');
     * bound('hi');
     * // => 'hi fred!'
     */
    var bind = baseRest(function(func, thisArg, partials) {
      var bitmask = WRAP_BIND_FLAG;
      if (partials.length) {
        var holders = replaceHolders(partials, getHolder(bind));
        bitmask |= WRAP_PARTIAL_FLAG;
      }
      return createWrap(func, bitmask, thisArg, partials, holders);
    });

    /**
     * Creates a function that invokes the method at `object[key]` with `partials`
     * prepended to the arguments it receives.
     *
     * This method differs from `_.bind` by allowing bound functions to reference
     * methods that may be redefined or don't yet exist. See
     * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)
     * for more details.
     *
     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic
     * builds, may be used as a placeholder for partially applied arguments.
     *
     * @static
     * @memberOf _
     * @since 0.10.0
     * @category Function
     * @param {Object} object The object to invoke the method on.
     * @param {string} key The key of the method.
     * @param {...*} [partials] The arguments to be partially applied.
     * @returns {Function} Returns the new bound function.
     * @example
     *
     * var object = {
     *   'user': 'fred',
     *   'greet': function(greeting, punctuation) {
     *     return greeting + ' ' + this.user + punctuation;
     *   }
     * };
     *
     * var bound = _.bindKey(object, 'greet', 'hi');
     * bound('!');
     * // => 'hi fred!'
     *
     * object.greet = function(greeting, punctuation) {
     *   return greeting + 'ya ' + this.user + punctuation;
     * };
     *
     * bound('!');
     * // => 'hiya fred!'
     *
     * // Bound with placeholders.
     * var bound = _.bindKey(object, 'greet', _, '!');
     * bound('hi');
     * // => 'hiya fred!'
     */
    var bindKey = baseRest(function(object, key, partials) {
      var bitmask = WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG;
      if (partials.length) {
        var holders = replaceHolders(partials, getHolder(bindKey));
        bitmask |= WRAP_PARTIAL_FLAG;
      }
      return createWrap(key, bitmask, object, partials, holders);
    });

    /**
     * Creates a function that accepts arguments of `func` and either invokes
     * `func` returning its result, if at least `arity` number of arguments have
     * been provided, or returns a function that accepts the remaining `func`
     * arguments, and so on. The arity of `func` may be specified if `func.length`
     * is not sufficient.
     *
     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,
     * may be used as a placeholder for provided arguments.
     *
     * **Note:** This method doesn't set the "length" property of curried functions.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Function
     * @param {Function} func The function to curry.
     * @param {number} [arity=func.length] The arity of `func`.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Function} Returns the new curried function.
     * @example
     *
     * var abc = function(a, b, c) {
     *   return [a, b, c];
     * };
     *
     * var curried = _.curry(abc);
     *
     * curried(1)(2)(3);
     * // => [1, 2, 3]
     *
     * curried(1, 2)(3);
     * // => [1, 2, 3]
     *
     * curried(1, 2, 3);
     * // => [1, 2, 3]
     *
     * // Curried with placeholders.
     * curried(1)(_, 3)(2);
     * // => [1, 2, 3]
     */
    function curry(func, arity, guard) {
      arity = guard ? undefined : arity;
      var result = createWrap(func, WRAP_CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);
      result.placeholder = curry.placeholder;
      return result;
    }

    /**
     * This method is like `_.curry` except that arguments are applied to `func`
     * in the manner of `_.partialRight` instead of `_.partial`.
     *
     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic
     * builds, may be used as a placeholder for provided arguments.
     *
     * **Note:** This method doesn't set the "length" property of curried functions.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {Function} func The function to curry.
     * @param {number} [arity=func.length] The arity of `func`.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Function} Returns the new curried function.
     * @example
     *
     * var abc = function(a, b, c) {
     *   return [a, b, c];
     * };
     *
     * var curried = _.curryRight(abc);
     *
     * curried(3)(2)(1);
     * // => [1, 2, 3]
     *
     * curried(2, 3)(1);
     * // => [1, 2, 3]
     *
     * curried(1, 2, 3);
     * // => [1, 2, 3]
     *
     * // Curried with placeholders.
     * curried(3)(1, _)(2);
     * // => [1, 2, 3]
     */
    function curryRight(func, arity, guard) {
      arity = guard ? undefined : arity;
      var result = createWrap(func, WRAP_CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);
      result.placeholder = curryRight.placeholder;
      return result;
    }

    /**
     * Creates a debounced function that delays invoking `func` until after `wait`
     * milliseconds have elapsed since the last time the debounced function was
     * invoked. The debounced function comes with a `cancel` method to cancel
     * delayed `func` invocations and a `flush` method to immediately invoke them.
     * Provide `options` to indicate whether `func` should be invoked on the
     * leading and/or trailing edge of the `wait` timeout. The `func` is invoked
     * with the last arguments provided to the debounced function. Subsequent
     * calls to the debounced function return the result of the last `func`
     * invocation.
     *
     * **Note:** If `leading` and `trailing` options are `true`, `func` is
     * invoked on the trailing edge of the timeout only if the debounced function
     * is invoked more than once during the `wait` timeout.
     *
     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
     * until to the next tick, similar to `setTimeout` with a timeout of `0`.
     *
     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
     * for details over the differences between `_.debounce` and `_.throttle`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to debounce.
     * @param {number} [wait=0] The number of milliseconds to delay.
     * @param {Object} [options={}] The options object.
     * @param {boolean} [options.leading=false]
     *  Specify invoking on the leading edge of the timeout.
     * @param {number} [options.maxWait]
     *  The maximum time `func` is allowed to be delayed before it's invoked.
     * @param {boolean} [options.trailing=true]
     *  Specify invoking on the trailing edge of the timeout.
     * @returns {Function} Returns the new debounced function.
     * @example
     *
     * // Avoid costly calculations while the window size is in flux.
     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));
     *
     * // Invoke `sendMail` when clicked, debouncing subsequent calls.
     * jQuery(element).on('click', _.debounce(sendMail, 300, {
     *   'leading': true,
     *   'trailing': false
     * }));
     *
     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.
     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });
     * var source = new EventSource('/stream');
     * jQuery(source).on('message', debounced);
     *
     * // Cancel the trailing debounced invocation.
     * jQuery(window).on('popstate', debounced.cancel);
     */
    function debounce(func, wait, options) {
      var lastArgs,
          lastThis,
          maxWait,
          result,
          timerId,
          lastCallTime,
          lastInvokeTime = 0,
          leading = false,
          maxing = false,
          trailing = true;

      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      wait = toNumber(wait) || 0;
      if (isObject(options)) {
        leading = !!options.leading;
        maxing = 'maxWait' in options;
        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;
        trailing = 'trailing' in options ? !!options.trailing : trailing;
      }

      function invokeFunc(time) {
        var args = lastArgs,
            thisArg = lastThis;

        lastArgs = lastThis = undefined;
        lastInvokeTime = time;
        result = func.apply(thisArg, args);
        return result;
      }

      function leadingEdge(time) {
        // Reset any `maxWait` timer.
        lastInvokeTime = time;
        // Start the timer for the trailing edge.
        timerId = setTimeout(timerExpired, wait);
        // Invoke the leading edge.
        return leading ? invokeFunc(time) : result;
      }

      function remainingWait(time) {
        var timeSinceLastCall = time - lastCallTime,
            timeSinceLastInvoke = time - lastInvokeTime,
            result = wait - timeSinceLastCall;

        return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;
      }

      function shouldInvoke(time) {
        var timeSinceLastCall = time - lastCallTime,
            timeSinceLastInvoke = time - lastInvokeTime;

        // Either this is the first call, activity has stopped and we're at the
        // trailing edge, the system time has gone backwards and we're treating
        // it as the trailing edge, or we've hit the `maxWait` limit.
        return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||
          (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));
      }

      function timerExpired() {
        var time = now();
        if (shouldInvoke(time)) {
          return trailingEdge(time);
        }
        // Restart the timer.
        timerId = setTimeout(timerExpired, remainingWait(time));
      }

      function trailingEdge(time) {
        timerId = undefined;

        // Only invoke if we have `lastArgs` which means `func` has been
        // debounced at least once.
        if (trailing && lastArgs) {
          return invokeFunc(time);
        }
        lastArgs = lastThis = undefined;
        return result;
      }

      function cancel() {
        if (timerId !== undefined) {
          clearTimeout(timerId);
        }
        lastInvokeTime = 0;
        lastArgs = lastCallTime = lastThis = timerId = undefined;
      }

      function flush() {
        return timerId === undefined ? result : trailingEdge(now());
      }

      function debounced() {
        var time = now(),
            isInvoking = shouldInvoke(time);

        lastArgs = arguments;
        lastThis = this;
        lastCallTime = time;

        if (isInvoking) {
          if (timerId === undefined) {
            return leadingEdge(lastCallTime);
          }
          if (maxing) {
            // Handle invocations in a tight loop.
            timerId = setTimeout(timerExpired, wait);
            return invokeFunc(lastCallTime);
          }
        }
        if (timerId === undefined) {
          timerId = setTimeout(timerExpired, wait);
        }
        return result;
      }
      debounced.cancel = cancel;
      debounced.flush = flush;
      return debounced;
    }

    /**
     * Defers invoking the `func` until the current call stack has cleared. Any
     * additional arguments are provided to `func` when it's invoked.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to defer.
     * @param {...*} [args] The arguments to invoke `func` with.
     * @returns {number} Returns the timer id.
     * @example
     *
     * _.defer(function(text) {
     *   console.log(text);
     * }, 'deferred');
     * // => Logs 'deferred' after one millisecond.
     */
    var defer = baseRest(function(func, args) {
      return baseDelay(func, 1, args);
    });

    /**
     * Invokes `func` after `wait` milliseconds. Any additional arguments are
     * provided to `func` when it's invoked.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to delay.
     * @param {number} wait The number of milliseconds to delay invocation.
     * @param {...*} [args] The arguments to invoke `func` with.
     * @returns {number} Returns the timer id.
     * @example
     *
     * _.delay(function(text) {
     *   console.log(text);
     * }, 1000, 'later');
     * // => Logs 'later' after one second.
     */
    var delay = baseRest(function(func, wait, args) {
      return baseDelay(func, toNumber(wait) || 0, args);
    });

    /**
     * Creates a function that invokes `func` with arguments reversed.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Function
     * @param {Function} func The function to flip arguments for.
     * @returns {Function} Returns the new flipped function.
     * @example
     *
     * var flipped = _.flip(function() {
     *   return _.toArray(arguments);
     * });
     *
     * flipped('a', 'b', 'c', 'd');
     * // => ['d', 'c', 'b', 'a']
     */
    function flip(func) {
      return createWrap(func, WRAP_FLIP_FLAG);
    }

    /**
     * Creates a function that memoizes the result of `func`. If `resolver` is
     * provided, it determines the cache key for storing the result based on the
     * arguments provided to the memoized function. By default, the first argument
     * provided to the memoized function is used as the map cache key. The `func`
     * is invoked with the `this` binding of the memoized function.
     *
     * **Note:** The cache is exposed as the `cache` property on the memoized
     * function. Its creation may be customized by replacing the `_.memoize.Cache`
     * constructor with one whose instances implement the
     * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)
     * method interface of `clear`, `delete`, `get`, `has`, and `set`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to have its output memoized.
     * @param {Function} [resolver] The function to resolve the cache key.
     * @returns {Function} Returns the new memoized function.
     * @example
     *
     * var object = { 'a': 1, 'b': 2 };
     * var other = { 'c': 3, 'd': 4 };
     *
     * var values = _.memoize(_.values);
     * values(object);
     * // => [1, 2]
     *
     * values(other);
     * // => [3, 4]
     *
     * object.a = 2;
     * values(object);
     * // => [1, 2]
     *
     * // Modify the result cache.
     * values.cache.set(object, ['a', 'b']);
     * values(object);
     * // => ['a', 'b']
     *
     * // Replace `_.memoize.Cache`.
     * _.memoize.Cache = WeakMap;
     */
    function memoize(func, resolver) {
      if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      var memoized = function() {
        var args = arguments,
            key = resolver ? resolver.apply(this, args) : args[0],
            cache = memoized.cache;

        if (cache.has(key)) {
          return cache.get(key);
        }
        var result = func.apply(this, args);
        memoized.cache = cache.set(key, result) || cache;
        return result;
      };
      memoized.cache = new (memoize.Cache || MapCache);
      return memoized;
    }

    // Expose `MapCache`.
    memoize.Cache = MapCache;

    /**
     * Creates a function that negates the result of the predicate `func`. The
     * `func` predicate is invoked with the `this` binding and arguments of the
     * created function.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {Function} predicate The predicate to negate.
     * @returns {Function} Returns the new negated function.
     * @example
     *
     * function isEven(n) {
     *   return n % 2 == 0;
     * }
     *
     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));
     * // => [1, 3, 5]
     */
    function negate(predicate) {
      if (typeof predicate != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      return function() {
        var args = arguments;
        switch (args.length) {
          case 0: return !predicate.call(this);
          case 1: return !predicate.call(this, args[0]);
          case 2: return !predicate.call(this, args[0], args[1]);
          case 3: return !predicate.call(this, args[0], args[1], args[2]);
        }
        return !predicate.apply(this, args);
      };
    }

    /**
     * Creates a function that is restricted to invoking `func` once. Repeat calls
     * to the function return the value of the first invocation. The `func` is
     * invoked with the `this` binding and arguments of the created function.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to restrict.
     * @returns {Function} Returns the new restricted function.
     * @example
     *
     * var initialize = _.once(createApplication);
     * initialize();
     * initialize();
     * // => `createApplication` is invoked once
     */
    function once(func) {
      return before(2, func);
    }

    /**
     * Creates a function that invokes `func` with its arguments transformed.
     *
     * @static
     * @since 4.0.0
     * @memberOf _
     * @category Function
     * @param {Function} func The function to wrap.
     * @param {...(Function|Function[])} [transforms=[_.identity]]
     *  The argument transforms.
     * @returns {Function} Returns the new function.
     * @example
     *
     * function doubled(n) {
     *   return n * 2;
     * }
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var func = _.overArgs(function(x, y) {
     *   return [x, y];
     * }, [square, doubled]);
     *
     * func(9, 3);
     * // => [81, 6]
     *
     * func(10, 5);
     * // => [100, 10]
     */
    var overArgs = castRest(function(func, transforms) {
      transforms = (transforms.length == 1 && isArray(transforms[0]))
        ? arrayMap(transforms[0], baseUnary(getIteratee()))
        : arrayMap(baseFlatten(transforms, 1), baseUnary(getIteratee()));

      var funcsLength = transforms.length;
      return baseRest(function(args) {
        var index = -1,
            length = nativeMin(args.length, funcsLength);

        while (++index < length) {
          args[index] = transforms[index].call(this, args[index]);
        }
        return apply(func, this, args);
      });
    });

    /**
     * Creates a function that invokes `func` with `partials` prepended to the
     * arguments it receives. This method is like `_.bind` except it does **not**
     * alter the `this` binding.
     *
     * The `_.partial.placeholder` value, which defaults to `_` in monolithic
     * builds, may be used as a placeholder for partially applied arguments.
     *
     * **Note:** This method doesn't set the "length" property of partially
     * applied functions.
     *
     * @static
     * @memberOf _
     * @since 0.2.0
     * @category Function
     * @param {Function} func The function to partially apply arguments to.
     * @param {...*} [partials] The arguments to be partially applied.
     * @returns {Function} Returns the new partially applied function.
     * @example
     *
     * function greet(greeting, name) {
     *   return greeting + ' ' + name;
     * }
     *
     * var sayHelloTo = _.partial(greet, 'hello');
     * sayHelloTo('fred');
     * // => 'hello fred'
     *
     * // Partially applied with placeholders.
     * var greetFred = _.partial(greet, _, 'fred');
     * greetFred('hi');
     * // => 'hi fred'
     */
    var partial = baseRest(function(func, partials) {
      var holders = replaceHolders(partials, getHolder(partial));
      return createWrap(func, WRAP_PARTIAL_FLAG, undefined, partials, holders);
    });

    /**
     * This method is like `_.partial` except that partially applied arguments
     * are appended to the arguments it receives.
     *
     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic
     * builds, may be used as a placeholder for partially applied arguments.
     *
     * **Note:** This method doesn't set the "length" property of partially
     * applied functions.
     *
     * @static
     * @memberOf _
     * @since 1.0.0
     * @category Function
     * @param {Function} func The function to partially apply arguments to.
     * @param {...*} [partials] The arguments to be partially applied.
     * @returns {Function} Returns the new partially applied function.
     * @example
     *
     * function greet(greeting, name) {
     *   return greeting + ' ' + name;
     * }
     *
     * var greetFred = _.partialRight(greet, 'fred');
     * greetFred('hi');
     * // => 'hi fred'
     *
     * // Partially applied with placeholders.
     * var sayHelloTo = _.partialRight(greet, 'hello', _);
     * sayHelloTo('fred');
     * // => 'hello fred'
     */
    var partialRight = baseRest(function(func, partials) {
      var holders = replaceHolders(partials, getHolder(partialRight));
      return createWrap(func, WRAP_PARTIAL_RIGHT_FLAG, undefined, partials, holders);
    });

    /**
     * Creates a function that invokes `func` with arguments arranged according
     * to the specified `indexes` where the argument value at the first index is
     * provided as the first argument, the argument value at the second index is
     * provided as the second argument, and so on.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {Function} func The function to rearrange arguments for.
     * @param {...(number|number[])} indexes The arranged argument indexes.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var rearged = _.rearg(function(a, b, c) {
     *   return [a, b, c];
     * }, [2, 0, 1]);
     *
     * rearged('b', 'c', 'a')
     * // => ['a', 'b', 'c']
     */
    var rearg = flatRest(function(func, indexes) {
      return createWrap(func, WRAP_REARG_FLAG, undefined, undefined, undefined, indexes);
    });

    /**
     * Creates a function that invokes `func` with the `this` binding of the
     * created function and arguments from `start` and beyond provided as
     * an array.
     *
     * **Note:** This method is based on the
     * [rest parameter](https://mdn.io/rest_parameters).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Function
     * @param {Function} func The function to apply a rest parameter to.
     * @param {number} [start=func.length-1] The start position of the rest parameter.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var say = _.rest(function(what, names) {
     *   return what + ' ' + _.initial(names).join(', ') +
     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);
     * });
     *
     * say('hello', 'fred', 'barney', 'pebbles');
     * // => 'hello fred, barney, & pebbles'
     */
    function rest(func, start) {
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      start = start === undefined ? start : toInteger(start);
      return baseRest(func, start);
    }

    /**
     * Creates a function that invokes `func` with the `this` binding of the
     * create function and an array of arguments much like
     * [`Function#apply`](http://www.ecma-international.org/ecma-262/7.0/#sec-function.prototype.apply).
     *
     * **Note:** This method is based on the
     * [spread operator](https://mdn.io/spread_operator).
     *
     * @static
     * @memberOf _
     * @since 3.2.0
     * @category Function
     * @param {Function} func The function to spread arguments over.
     * @param {number} [start=0] The start position of the spread.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var say = _.spread(function(who, what) {
     *   return who + ' says ' + what;
     * });
     *
     * say(['fred', 'hello']);
     * // => 'fred says hello'
     *
     * var numbers = Promise.all([
     *   Promise.resolve(40),
     *   Promise.resolve(36)
     * ]);
     *
     * numbers.then(_.spread(function(x, y) {
     *   return x + y;
     * }));
     * // => a Promise of 76
     */
    function spread(func, start) {
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      start = start == null ? 0 : nativeMax(toInteger(start), 0);
      return baseRest(function(args) {
        var array = args[start],
            otherArgs = castSlice(args, 0, start);

        if (array) {
          arrayPush(otherArgs, array);
        }
        return apply(func, this, otherArgs);
      });
    }

    /**
     * Creates a throttled function that only invokes `func` at most once per
     * every `wait` milliseconds. The throttled function comes with a `cancel`
     * method to cancel delayed `func` invocations and a `flush` method to
     * immediately invoke them. Provide `options` to indicate whether `func`
     * should be invoked on the leading and/or trailing edge of the `wait`
     * timeout. The `func` is invoked with the last arguments provided to the
     * throttled function. Subsequent calls to the throttled function return the
     * result of the last `func` invocation.
     *
     * **Note:** If `leading` and `trailing` options are `true`, `func` is
     * invoked on the trailing edge of the timeout only if the throttled function
     * is invoked more than once during the `wait` timeout.
     *
     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
     * until to the next tick, similar to `setTimeout` with a timeout of `0`.
     *
     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
     * for details over the differences between `_.throttle` and `_.debounce`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to throttle.
     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.
     * @param {Object} [options={}] The options object.
     * @param {boolean} [options.leading=true]
     *  Specify invoking on the leading edge of the timeout.
     * @param {boolean} [options.trailing=true]
     *  Specify invoking on the trailing edge of the timeout.
     * @returns {Function} Returns the new throttled function.
     * @example
     *
     * // Avoid excessively updating the position while scrolling.
     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));
     *
     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.
     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });
     * jQuery(element).on('click', throttled);
     *
     * // Cancel the trailing throttled invocation.
     * jQuery(window).on('popstate', throttled.cancel);
     */
    function throttle(func, wait, options) {
      var leading = true,
          trailing = true;

      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      if (isObject(options)) {
        leading = 'leading' in options ? !!options.leading : leading;
        trailing = 'trailing' in options ? !!options.trailing : trailing;
      }
      return debounce(func, wait, {
        'leading': leading,
        'maxWait': wait,
        'trailing': trailing
      });
    }

    /**
     * Creates a function that accepts up to one argument, ignoring any
     * additional arguments.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Function
     * @param {Function} func The function to cap arguments for.
     * @returns {Function} Returns the new capped function.
     * @example
     *
     * _.map(['6', '8', '10'], _.unary(parseInt));
     * // => [6, 8, 10]
     */
    function unary(func) {
      return ary(func, 1);
    }

    /**
     * Creates a function that provides `value` to `wrapper` as its first
     * argument. Any additional arguments provided to the function are appended
     * to those provided to the `wrapper`. The wrapper is invoked with the `this`
     * binding of the created function.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {*} value The value to wrap.
     * @param {Function} [wrapper=identity] The wrapper function.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var p = _.wrap(_.escape, function(func, text) {
     *   return '<p>' + func(text) + '</p>';
     * });
     *
     * p('fred, barney, & pebbles');
     * // => '<p>fred, barney, &amp; pebbles</p>'
     */
    function wrap(value, wrapper) {
      return partial(castFunction(wrapper), value);
    }

    /*------------------------------------------------------------------------*/

    /**
     * Casts `value` as an array if it's not one.
     *
     * @static
     * @memberOf _
     * @since 4.4.0
     * @category Lang
     * @param {*} value The value to inspect.
     * @returns {Array} Returns the cast array.
     * @example
     *
     * _.castArray(1);
     * // => [1]
     *
     * _.castArray({ 'a': 1 });
     * // => [{ 'a': 1 }]
     *
     * _.castArray('abc');
     * // => ['abc']
     *
     * _.castArray(null);
     * // => [null]
     *
     * _.castArray(undefined);
     * // => [undefined]
     *
     * _.castArray();
     * // => []
     *
     * var array = [1, 2, 3];
     * console.log(_.castArray(array) === array);
     * // => true
     */
    function castArray() {
      if (!arguments.length) {
        return [];
      }
      var value = arguments[0];
      return isArray(value) ? value : [value];
    }

    /**
     * Creates a shallow clone of `value`.
     *
     * **Note:** This method is loosely based on the
     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)
     * and supports cloning arrays, array buffers, booleans, date objects, maps,
     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed
     * arrays. The own enumerable properties of `arguments` objects are cloned
     * as plain objects. An empty object is returned for uncloneable values such
     * as error objects, functions, DOM nodes, and WeakMaps.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to clone.
     * @returns {*} Returns the cloned value.
     * @see _.cloneDeep
     * @example
     *
     * var objects = [{ 'a': 1 }, { 'b': 2 }];
     *
     * var shallow = _.clone(objects);
     * console.log(shallow[0] === objects[0]);
     * // => true
     */
    function clone(value) {
      return baseClone(value, CLONE_SYMBOLS_FLAG);
    }

    /**
     * This method is like `_.clone` except that it accepts `customizer` which
     * is invoked to produce the cloned value. If `customizer` returns `undefined`,
     * cloning is handled by the method instead. The `customizer` is invoked with
     * up to four arguments; (value [, index|key, object, stack]).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to clone.
     * @param {Function} [customizer] The function to customize cloning.
     * @returns {*} Returns the cloned value.
     * @see _.cloneDeepWith
     * @example
     *
     * function customizer(value) {
     *   if (_.isElement(value)) {
     *     return value.cloneNode(false);
     *   }
     * }
     *
     * var el = _.cloneWith(document.body, customizer);
     *
     * console.log(el === document.body);
     * // => false
     * console.log(el.nodeName);
     * // => 'BODY'
     * console.log(el.childNodes.length);
     * // => 0
     */
    function cloneWith(value, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return baseClone(value, CLONE_SYMBOLS_FLAG, customizer);
    }

    /**
     * This method is like `_.clone` except that it recursively clones `value`.
     *
     * @static
     * @memberOf _
     * @since 1.0.0
     * @category Lang
     * @param {*} value The value to recursively clone.
     * @returns {*} Returns the deep cloned value.
     * @see _.clone
     * @example
     *
     * var objects = [{ 'a': 1 }, { 'b': 2 }];
     *
     * var deep = _.cloneDeep(objects);
     * console.log(deep[0] === objects[0]);
     * // => false
     */
    function cloneDeep(value) {
      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);
    }

    /**
     * This method is like `_.cloneWith` except that it recursively clones `value`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to recursively clone.
     * @param {Function} [customizer] The function to customize cloning.
     * @returns {*} Returns the deep cloned value.
     * @see _.cloneWith
     * @example
     *
     * function customizer(value) {
     *   if (_.isElement(value)) {
     *     return value.cloneNode(true);
     *   }
     * }
     *
     * var el = _.cloneDeepWith(document.body, customizer);
     *
     * console.log(el === document.body);
     * // => false
     * console.log(el.nodeName);
     * // => 'BODY'
     * console.log(el.childNodes.length);
     * // => 20
     */
    function cloneDeepWith(value, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, customizer);
    }

    /**
     * Checks if `object` conforms to `source` by invoking the predicate
     * properties of `source` with the corresponding property values of `object`.
     *
     * **Note:** This method is equivalent to `_.conforms` when `source` is
     * partially applied.
     *
     * @static
     * @memberOf _
     * @since 4.14.0
     * @category Lang
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property predicates to conform to.
     * @returns {boolean} Returns `true` if `object` conforms, else `false`.
     * @example
     *
     * var object = { 'a': 1, 'b': 2 };
     *
     * _.conformsTo(object, { 'b': function(n) { return n > 1; } });
     * // => true
     *
     * _.conformsTo(object, { 'b': function(n) { return n > 2; } });
     * // => false
     */
    function conformsTo(object, source) {
      return source == null || baseConformsTo(object, source, keys(source));
    }

    /**
     * Performs a
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * comparison between two values to determine if they are equivalent.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
     * @example
     *
     * var object = { 'a': 1 };
     * var other = { 'a': 1 };
     *
     * _.eq(object, object);
     * // => true
     *
     * _.eq(object, other);
     * // => false
     *
     * _.eq('a', 'a');
     * // => true
     *
     * _.eq('a', Object('a'));
     * // => false
     *
     * _.eq(NaN, NaN);
     * // => true
     */
    function eq(value, other) {
      return value === other || (value !== value && other !== other);
    }

    /**
     * Checks if `value` is greater than `other`.
     *
     * @static
     * @memberOf _
     * @since 3.9.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is greater than `other`,
     *  else `false`.
     * @see _.lt
     * @example
     *
     * _.gt(3, 1);
     * // => true
     *
     * _.gt(3, 3);
     * // => false
     *
     * _.gt(1, 3);
     * // => false
     */
    var gt = createRelationalOperation(baseGt);

    /**
     * Checks if `value` is greater than or equal to `other`.
     *
     * @static
     * @memberOf _
     * @since 3.9.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is greater than or equal to
     *  `other`, else `false`.
     * @see _.lte
     * @example
     *
     * _.gte(3, 1);
     * // => true
     *
     * _.gte(3, 3);
     * // => true
     *
     * _.gte(1, 3);
     * // => false
     */
    var gte = createRelationalOperation(function(value, other) {
      return value >= other;
    });

    /**
     * Checks if `value` is likely an `arguments` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an `arguments` object,
     *  else `false`.
     * @example
     *
     * _.isArguments(function() { return arguments; }());
     * // => true
     *
     * _.isArguments([1, 2, 3]);
     * // => false
     */
    var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {
      return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&
        !propertyIsEnumerable.call(value, 'callee');
    };

    /**
     * Checks if `value` is classified as an `Array` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an array, else `false`.
     * @example
     *
     * _.isArray([1, 2, 3]);
     * // => true
     *
     * _.isArray(document.body.children);
     * // => false
     *
     * _.isArray('abc');
     * // => false
     *
     * _.isArray(_.noop);
     * // => false
     */
    var isArray = Array.isArray;

    /**
     * Checks if `value` is classified as an `ArrayBuffer` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.
     * @example
     *
     * _.isArrayBuffer(new ArrayBuffer(2));
     * // => true
     *
     * _.isArrayBuffer(new Array(2));
     * // => false
     */
    var isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;

    /**
     * Checks if `value` is array-like. A value is considered array-like if it's
     * not a function and has a `value.length` that's an integer greater than or
     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
     * @example
     *
     * _.isArrayLike([1, 2, 3]);
     * // => true
     *
     * _.isArrayLike(document.body.children);
     * // => true
     *
     * _.isArrayLike('abc');
     * // => true
     *
     * _.isArrayLike(_.noop);
     * // => false
     */
    function isArrayLike(value) {
      return value != null && isLength(value.length) && !isFunction(value);
    }

    /**
     * This method is like `_.isArrayLike` except that it also checks if `value`
     * is an object.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an array-like object,
     *  else `false`.
     * @example
     *
     * _.isArrayLikeObject([1, 2, 3]);
     * // => true
     *
     * _.isArrayLikeObject(document.body.children);
     * // => true
     *
     * _.isArrayLikeObject('abc');
     * // => false
     *
     * _.isArrayLikeObject(_.noop);
     * // => false
     */
    function isArrayLikeObject(value) {
      return isObjectLike(value) && isArrayLike(value);
    }

    /**
     * Checks if `value` is classified as a boolean primitive or object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.
     * @example
     *
     * _.isBoolean(false);
     * // => true
     *
     * _.isBoolean(null);
     * // => false
     */
    function isBoolean(value) {
      return value === true || value === false ||
        (isObjectLike(value) && baseGetTag(value) == boolTag);
    }

    /**
     * Checks if `value` is a buffer.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.
     * @example
     *
     * _.isBuffer(new Buffer(2));
     * // => true
     *
     * _.isBuffer(new Uint8Array(2));
     * // => false
     */
    var isBuffer = nativeIsBuffer || stubFalse;

    /**
     * Checks if `value` is classified as a `Date` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.
     * @example
     *
     * _.isDate(new Date);
     * // => true
     *
     * _.isDate('Mon April 23 2012');
     * // => false
     */
    var isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;

    /**
     * Checks if `value` is likely a DOM element.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.
     * @example
     *
     * _.isElement(document.body);
     * // => true
     *
     * _.isElement('<body>');
     * // => false
     */
    function isElement(value) {
      return isObjectLike(value) && value.nodeType === 1 && !isPlainObject(value);
    }

    /**
     * Checks if `value` is an empty object, collection, map, or set.
     *
     * Objects are considered empty if they have no own enumerable string keyed
     * properties.
     *
     * Array-like values such as `arguments` objects, arrays, buffers, strings, or
     * jQuery-like collections are considered empty if they have a `length` of `0`.
     * Similarly, maps and sets are considered empty if they have a `size` of `0`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is empty, else `false`.
     * @example
     *
     * _.isEmpty(null);
     * // => true
     *
     * _.isEmpty(true);
     * // => true
     *
     * _.isEmpty(1);
     * // => true
     *
     * _.isEmpty([1, 2, 3]);
     * // => false
     *
     * _.isEmpty({ 'a': 1 });
     * // => false
     */
    function isEmpty(value) {
      if (value == null) {
        return true;
      }
      if (isArrayLike(value) &&
          (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||
            isBuffer(value) || isTypedArray(value) || isArguments(value))) {
        return !value.length;
      }
      var tag = getTag(value);
      if (tag == mapTag || tag == setTag) {
        return !value.size;
      }
      if (isPrototype(value)) {
        return !baseKeys(value).length;
      }
      for (var key in value) {
        if (hasOwnProperty.call(value, key)) {
          return false;
        }
      }
      return true;
    }

    /**
     * Performs a deep comparison between two values to determine if they are
     * equivalent.
     *
     * **Note:** This method supports comparing arrays, array buffers, booleans,
     * date objects, error objects, maps, numbers, `Object` objects, regexes,
     * sets, strings, symbols, and typed arrays. `Object` objects are compared
     * by their own, not inherited, enumerable properties. Functions and DOM
     * nodes are compared by strict equality, i.e. `===`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
     * @example
     *
     * var object = { 'a': 1 };
     * var other = { 'a': 1 };
     *
     * _.isEqual(object, other);
     * // => true
     *
     * object === other;
     * // => false
     */
    function isEqual(value, other) {
      return baseIsEqual(value, other);
    }

    /**
     * This method is like `_.isEqual` except that it accepts `customizer` which
     * is invoked to compare values. If `customizer` returns `undefined`, comparisons
     * are handled by the method instead. The `customizer` is invoked with up to
     * six arguments: (objValue, othValue [, index|key, object, other, stack]).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @param {Function} [customizer] The function to customize comparisons.
     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
     * @example
     *
     * function isGreeting(value) {
     *   return /^h(?:i|ello)$/.test(value);
     * }
     *
     * function customizer(objValue, othValue) {
     *   if (isGreeting(objValue) && isGreeting(othValue)) {
     *     return true;
     *   }
     * }
     *
     * var array = ['hello', 'goodbye'];
     * var other = ['hi', 'goodbye'];
     *
     * _.isEqualWith(array, other, customizer);
     * // => true
     */
    function isEqualWith(value, other, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      var result = customizer ? customizer(value, other) : undefined;
      return result === undefined ? baseIsEqual(value, other, undefined, customizer) : !!result;
    }

    /**
     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,
     * `SyntaxError`, `TypeError`, or `URIError` object.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.
     * @example
     *
     * _.isError(new Error);
     * // => true
     *
     * _.isError(Error);
     * // => false
     */
    function isError(value) {
      if (!isObjectLike(value)) {
        return false;
      }
      var tag = baseGetTag(value);
      return tag == errorTag || tag == domExcTag ||
        (typeof value.message == 'string' && typeof value.name == 'string' && !isPlainObject(value));
    }

    /**
     * Checks if `value` is a finite primitive number.
     *
     * **Note:** This method is based on
     * [`Number.isFinite`](https://mdn.io/Number/isFinite).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.
     * @example
     *
     * _.isFinite(3);
     * // => true
     *
     * _.isFinite(Number.MIN_VALUE);
     * // => true
     *
     * _.isFinite(Infinity);
     * // => false
     *
     * _.isFinite('3');
     * // => false
     */
    function isFinite(value) {
      return typeof value == 'number' && nativeIsFinite(value);
    }

    /**
     * Checks if `value` is classified as a `Function` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a function, else `false`.
     * @example
     *
     * _.isFunction(_);
     * // => true
     *
     * _.isFunction(/abc/);
     * // => false
     */
    function isFunction(value) {
      if (!isObject(value)) {
        return false;
      }
      // The use of `Object#toString` avoids issues with the `typeof` operator
      // in Safari 9 which returns 'object' for typed arrays and other constructors.
      var tag = baseGetTag(value);
      return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
    }

    /**
     * Checks if `value` is an integer.
     *
     * **Note:** This method is based on
     * [`Number.isInteger`](https://mdn.io/Number/isInteger).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.
     * @example
     *
     * _.isInteger(3);
     * // => true
     *
     * _.isInteger(Number.MIN_VALUE);
     * // => false
     *
     * _.isInteger(Infinity);
     * // => false
     *
     * _.isInteger('3');
     * // => false
     */
    function isInteger(value) {
      return typeof value == 'number' && value == toInteger(value);
    }

    /**
     * Checks if `value` is a valid array-like length.
     *
     * **Note:** This method is loosely based on
     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
     * @example
     *
     * _.isLength(3);
     * // => true
     *
     * _.isLength(Number.MIN_VALUE);
     * // => false
     *
     * _.isLength(Infinity);
     * // => false
     *
     * _.isLength('3');
     * // => false
     */
    function isLength(value) {
      return typeof value == 'number' &&
        value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
    }

    /**
     * Checks if `value` is the
     * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
     * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an object, else `false`.
     * @example
     *
     * _.isObject({});
     * // => true
     *
     * _.isObject([1, 2, 3]);
     * // => true
     *
     * _.isObject(_.noop);
     * // => true
     *
     * _.isObject(null);
     * // => false
     */
    function isObject(value) {
      var type = typeof value;
      return value != null && (type == 'object' || type == 'function');
    }

    /**
     * Checks if `value` is object-like. A value is object-like if it's not `null`
     * and has a `typeof` result of "object".
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
     * @example
     *
     * _.isObjectLike({});
     * // => true
     *
     * _.isObjectLike([1, 2, 3]);
     * // => true
     *
     * _.isObjectLike(_.noop);
     * // => false
     *
     * _.isObjectLike(null);
     * // => false
     */
    function isObjectLike(value) {
      return value != null && typeof value == 'object';
    }

    /**
     * Checks if `value` is classified as a `Map` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a map, else `false`.
     * @example
     *
     * _.isMap(new Map);
     * // => true
     *
     * _.isMap(new WeakMap);
     * // => false
     */
    var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;

    /**
     * Performs a partial deep comparison between `object` and `source` to
     * determine if `object` contains equivalent property values.
     *
     * **Note:** This method is equivalent to `_.matches` when `source` is
     * partially applied.
     *
     * Partial comparisons will match empty array and empty object `source`
     * values against any array or object value, respectively. See `_.isEqual`
     * for a list of supported value comparisons.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property values to match.
     * @returns {boolean} Returns `true` if `object` is a match, else `false`.
     * @example
     *
     * var object = { 'a': 1, 'b': 2 };
     *
     * _.isMatch(object, { 'b': 2 });
     * // => true
     *
     * _.isMatch(object, { 'b': 1 });
     * // => false
     */
    function isMatch(object, source) {
      return object === source || baseIsMatch(object, source, getMatchData(source));
    }

    /**
     * This method is like `_.isMatch` except that it accepts `customizer` which
     * is invoked to compare values. If `customizer` returns `undefined`, comparisons
     * are handled by the method instead. The `customizer` is invoked with five
     * arguments: (objValue, srcValue, index|key, object, source).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property values to match.
     * @param {Function} [customizer] The function to customize comparisons.
     * @returns {boolean} Returns `true` if `object` is a match, else `false`.
     * @example
     *
     * function isGreeting(value) {
     *   return /^h(?:i|ello)$/.test(value);
     * }
     *
     * function customizer(objValue, srcValue) {
     *   if (isGreeting(objValue) && isGreeting(srcValue)) {
     *     return true;
     *   }
     * }
     *
     * var object = { 'greeting': 'hello' };
     * var source = { 'greeting': 'hi' };
     *
     * _.isMatchWith(object, source, customizer);
     * // => true
     */
    function isMatchWith(object, source, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return baseIsMatch(object, source, getMatchData(source), customizer);
    }

    /**
     * Checks if `value` is `NaN`.
     *
     * **Note:** This method is based on
     * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as
     * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for
     * `undefined` and other non-number values.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
     * @example
     *
     * _.isNaN(NaN);
     * // => true
     *
     * _.isNaN(new Number(NaN));
     * // => true
     *
     * isNaN(undefined);
     * // => true
     *
     * _.isNaN(undefined);
     * // => false
     */
    function isNaN(value) {
      // An `NaN` primitive is the only value that is not equal to itself.
      // Perform the `toStringTag` check first to avoid errors with some
      // ActiveX objects in IE.
      return isNumber(value) && value != +value;
    }

    /**
     * Checks if `value` is a pristine native function.
     *
     * **Note:** This method can't reliably detect native functions in the presence
     * of the core-js package because core-js circumvents this kind of detection.
     * Despite multiple requests, the core-js maintainer has made it clear: any
     * attempt to fix the detection will be obstructed. As a result, we're left
     * with little choice but to throw an error. Unfortunately, this also affects
     * packages, like [babel-polyfill](https://www.npmjs.com/package/babel-polyfill),
     * which rely on core-js.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a native function,
     *  else `false`.
     * @example
     *
     * _.isNative(Array.prototype.push);
     * // => true
     *
     * _.isNative(_);
     * // => false
     */
    function isNative(value) {
      if (isMaskable(value)) {
        throw new Error(CORE_ERROR_TEXT);
      }
      return baseIsNative(value);
    }

    /**
     * Checks if `value` is `null`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.
     * @example
     *
     * _.isNull(null);
     * // => true
     *
     * _.isNull(void 0);
     * // => false
     */
    function isNull(value) {
      return value === null;
    }

    /**
     * Checks if `value` is `null` or `undefined`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.
     * @example
     *
     * _.isNil(null);
     * // => true
     *
     * _.isNil(void 0);
     * // => true
     *
     * _.isNil(NaN);
     * // => false
     */
    function isNil(value) {
      return value == null;
    }

    /**
     * Checks if `value` is classified as a `Number` primitive or object.
     *
     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are
     * classified as numbers, use the `_.isFinite` method.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a number, else `false`.
     * @example
     *
     * _.isNumber(3);
     * // => true
     *
     * _.isNumber(Number.MIN_VALUE);
     * // => true
     *
     * _.isNumber(Infinity);
     * // => true
     *
     * _.isNumber('3');
     * // => false
     */
    function isNumber(value) {
      return typeof value == 'number' ||
        (isObjectLike(value) && baseGetTag(value) == numberTag);
    }

    /**
     * Checks if `value` is a plain object, that is, an object created by the
     * `Object` constructor or one with a `[[Prototype]]` of `null`.
     *
     * @static
     * @memberOf _
     * @since 0.8.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     * }
     *
     * _.isPlainObject(new Foo);
     * // => false
     *
     * _.isPlainObject([1, 2, 3]);
     * // => false
     *
     * _.isPlainObject({ 'x': 0, 'y': 0 });
     * // => true
     *
     * _.isPlainObject(Object.create(null));
     * // => true
     */
    function isPlainObject(value) {
      if (!isObjectLike(value) || baseGetTag(value) != objectTag) {
        return false;
      }
      var proto = getPrototype(value);
      if (proto === null) {
        return true;
      }
      var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;
      return typeof Ctor == 'function' && Ctor instanceof Ctor &&
        funcToString.call(Ctor) == objectCtorString;
    }

    /**
     * Checks if `value` is classified as a `RegExp` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.
     * @example
     *
     * _.isRegExp(/abc/);
     * // => true
     *
     * _.isRegExp('/abc/');
     * // => false
     */
    var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;

    /**
     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754
     * double precision number which isn't the result of a rounded unsafe integer.
     *
     * **Note:** This method is based on
     * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a safe integer, else `false`.
     * @example
     *
     * _.isSafeInteger(3);
     * // => true
     *
     * _.isSafeInteger(Number.MIN_VALUE);
     * // => false
     *
     * _.isSafeInteger(Infinity);
     * // => false
     *
     * _.isSafeInteger('3');
     * // => false
     */
    function isSafeInteger(value) {
      return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;
    }

    /**
     * Checks if `value` is classified as a `Set` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a set, else `false`.
     * @example
     *
     * _.isSet(new Set);
     * // => true
     *
     * _.isSet(new WeakSet);
     * // => false
     */
    var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;

    /**
     * Checks if `value` is classified as a `String` primitive or object.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a string, else `false`.
     * @example
     *
     * _.isString('abc');
     * // => true
     *
     * _.isString(1);
     * // => false
     */
    function isString(value) {
      return typeof value == 'string' ||
        (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);
    }

    /**
     * Checks if `value` is classified as a `Symbol` primitive or object.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
     * @example
     *
     * _.isSymbol(Symbol.iterator);
     * // => true
     *
     * _.isSymbol('abc');
     * // => false
     */
    function isSymbol(value) {
      return typeof value == 'symbol' ||
        (isObjectLike(value) && baseGetTag(value) == symbolTag);
    }

    /**
     * Checks if `value` is classified as a typed array.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
     * @example
     *
     * _.isTypedArray(new Uint8Array);
     * // => true
     *
     * _.isTypedArray([]);
     * // => false
     */
    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;

    /**
     * Checks if `value` is `undefined`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.
     * @example
     *
     * _.isUndefined(void 0);
     * // => true
     *
     * _.isUndefined(null);
     * // => false
     */
    function isUndefined(value) {
      return value === undefined;
    }

    /**
     * Checks if `value` is classified as a `WeakMap` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a weak map, else `false`.
     * @example
     *
     * _.isWeakMap(new WeakMap);
     * // => true
     *
     * _.isWeakMap(new Map);
     * // => false
     */
    function isWeakMap(value) {
      return isObjectLike(value) && getTag(value) == weakMapTag;
    }

    /**
     * Checks if `value` is classified as a `WeakSet` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a weak set, else `false`.
     * @example
     *
     * _.isWeakSet(new WeakSet);
     * // => true
     *
     * _.isWeakSet(new Set);
     * // => false
     */
    function isWeakSet(value) {
      return isObjectLike(value) && baseGetTag(value) == weakSetTag;
    }

    /**
     * Checks if `value` is less than `other`.
     *
     * @static
     * @memberOf _
     * @since 3.9.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is less than `other`,
     *  else `false`.
     * @see _.gt
     * @example
     *
     * _.lt(1, 3);
     * // => true
     *
     * _.lt(3, 3);
     * // => false
     *
     * _.lt(3, 1);
     * // => false
     */
    var lt = createRelationalOperation(baseLt);

    /**
     * Checks if `value` is less than or equal to `other`.
     *
     * @static
     * @memberOf _
     * @since 3.9.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is less than or equal to
     *  `other`, else `false`.
     * @see _.gte
     * @example
     *
     * _.lte(1, 3);
     * // => true
     *
     * _.lte(3, 3);
     * // => true
     *
     * _.lte(3, 1);
     * // => false
     */
    var lte = createRelationalOperation(function(value, other) {
      return value <= other;
    });

    /**
     * Converts `value` to an array.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {Array} Returns the converted array.
     * @example
     *
     * _.toArray({ 'a': 1, 'b': 2 });
     * // => [1, 2]
     *
     * _.toArray('abc');
     * // => ['a', 'b', 'c']
     *
     * _.toArray(1);
     * // => []
     *
     * _.toArray(null);
     * // => []
     */
    function toArray(value) {
      if (!value) {
        return [];
      }
      if (isArrayLike(value)) {
        return isString(value) ? stringToArray(value) : copyArray(value);
      }
      if (symIterator && value[symIterator]) {
        return iteratorToArray(value[symIterator]());
      }
      var tag = getTag(value),
          func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);

      return func(value);
    }

    /**
     * Converts `value` to a finite number.
     *
     * @static
     * @memberOf _
     * @since 4.12.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {number} Returns the converted number.
     * @example
     *
     * _.toFinite(3.2);
     * // => 3.2
     *
     * _.toFinite(Number.MIN_VALUE);
     * // => 5e-324
     *
     * _.toFinite(Infinity);
     * // => 1.7976931348623157e+308
     *
     * _.toFinite('3.2');
     * // => 3.2
     */
    function toFinite(value) {
      if (!value) {
        return value === 0 ? value : 0;
      }
      value = toNumber(value);
      if (value === INFINITY || value === -INFINITY) {
        var sign = (value < 0 ? -1 : 1);
        return sign * MAX_INTEGER;
      }
      return value === value ? value : 0;
    }

    /**
     * Converts `value` to an integer.
     *
     * **Note:** This method is loosely based on
     * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {number} Returns the converted integer.
     * @example
     *
     * _.toInteger(3.2);
     * // => 3
     *
     * _.toInteger(Number.MIN_VALUE);
     * // => 0
     *
     * _.toInteger(Infinity);
     * // => 1.7976931348623157e+308
     *
     * _.toInteger('3.2');
     * // => 3
     */
    function toInteger(value) {
      var result = toFinite(value),
          remainder = result % 1;

      return result === result ? (remainder ? result - remainder : result) : 0;
    }

    /**
     * Converts `value` to an integer suitable for use as the length of an
     * array-like object.
     *
     * **Note:** This method is based on
     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {number} Returns the converted integer.
     * @example
     *
     * _.toLength(3.2);
     * // => 3
     *
     * _.toLength(Number.MIN_VALUE);
     * // => 0
     *
     * _.toLength(Infinity);
     * // => 4294967295
     *
     * _.toLength('3.2');
     * // => 3
     */
    function toLength(value) {
      return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;
    }

    /**
     * Converts `value` to a number.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to process.
     * @returns {number} Returns the number.
     * @example
     *
     * _.toNumber(3.2);
     * // => 3.2
     *
     * _.toNumber(Number.MIN_VALUE);
     * // => 5e-324
     *
     * _.toNumber(Infinity);
     * // => Infinity
     *
     * _.toNumber('3.2');
     * // => 3.2
     */
    function toNumber(value) {
      if (typeof value == 'number') {
        return value;
      }
      if (isSymbol(value)) {
        return NAN;
      }
      if (isObject(value)) {
        var other = typeof value.valueOf == 'function' ? value.valueOf() : value;
        value = isObject(other) ? (other + '') : other;
      }
      if (typeof value != 'string') {
        return value === 0 ? value : +value;
      }
      value = value.replace(reTrim, '');
      var isBinary = reIsBinary.test(value);
      return (isBinary || reIsOctal.test(value))
        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)
        : (reIsBadHex.test(value) ? NAN : +value);
    }

    /**
     * Converts `value` to a plain object flattening inherited enumerable string
     * keyed properties of `value` to own properties of the plain object.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {Object} Returns the converted plain object.
     * @example
     *
     * function Foo() {
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.assign({ 'a': 1 }, new Foo);
     * // => { 'a': 1, 'b': 2 }
     *
     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));
     * // => { 'a': 1, 'b': 2, 'c': 3 }
     */
    function toPlainObject(value) {
      return copyObject(value, keysIn(value));
    }

    /**
     * Converts `value` to a safe integer. A safe integer can be compared and
     * represented correctly.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {number} Returns the converted integer.
     * @example
     *
     * _.toSafeInteger(3.2);
     * // => 3
     *
     * _.toSafeInteger(Number.MIN_VALUE);
     * // => 0
     *
     * _.toSafeInteger(Infinity);
     * // => 9007199254740991
     *
     * _.toSafeInteger('3.2');
     * // => 3
     */
    function toSafeInteger(value) {
      return value
        ? baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER)
        : (value === 0 ? value : 0);
    }

    /**
     * Converts `value` to a string. An empty string is returned for `null`
     * and `undefined` values. The sign of `-0` is preserved.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {string} Returns the converted string.
     * @example
     *
     * _.toString(null);
     * // => ''
     *
     * _.toString(-0);
     * // => '-0'
     *
     * _.toString([1, 2, 3]);
     * // => '1,2,3'
     */
    function toString(value) {
      return value == null ? '' : baseToString(value);
    }

    /*------------------------------------------------------------------------*/

    /**
     * Assigns own enumerable string keyed properties of source objects to the
     * destination object. Source objects are applied from left to right.
     * Subsequent sources overwrite property assignments of previous sources.
     *
     * **Note:** This method mutates `object` and is loosely based on
     * [`Object.assign`](https://mdn.io/Object/assign).
     *
     * @static
     * @memberOf _
     * @since 0.10.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @see _.assignIn
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     * }
     *
     * function Bar() {
     *   this.c = 3;
     * }
     *
     * Foo.prototype.b = 2;
     * Bar.prototype.d = 4;
     *
     * _.assign({ 'a': 0 }, new Foo, new Bar);
     * // => { 'a': 1, 'c': 3 }
     */
    var assign = createAssigner(function(object, source) {
      if (isPrototype(source) || isArrayLike(source)) {
        copyObject(source, keys(source), object);
        return;
      }
      for (var key in source) {
        if (hasOwnProperty.call(source, key)) {
          assignValue(object, key, source[key]);
        }
      }
    });

    /**
     * This method is like `_.assign` except that it iterates over own and
     * inherited source properties.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @alias extend
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @see _.assign
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     * }
     *
     * function Bar() {
     *   this.c = 3;
     * }
     *
     * Foo.prototype.b = 2;
     * Bar.prototype.d = 4;
     *
     * _.assignIn({ 'a': 0 }, new Foo, new Bar);
     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }
     */
    var assignIn = createAssigner(function(object, source) {
      copyObject(source, keysIn(source), object);
    });

    /**
     * This method is like `_.assignIn` except that it accepts `customizer`
     * which is invoked to produce the assigned values. If `customizer` returns
     * `undefined`, assignment is handled by the method instead. The `customizer`
     * is invoked with five arguments: (objValue, srcValue, key, object, source).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @alias extendWith
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} sources The source objects.
     * @param {Function} [customizer] The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @see _.assignWith
     * @example
     *
     * function customizer(objValue, srcValue) {
     *   return _.isUndefined(objValue) ? srcValue : objValue;
     * }
     *
     * var defaults = _.partialRight(_.assignInWith, customizer);
     *
     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
     * // => { 'a': 1, 'b': 2 }
     */
    var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {
      copyObject(source, keysIn(source), object, customizer);
    });

    /**
     * This method is like `_.assign` except that it accepts `customizer`
     * which is invoked to produce the assigned values. If `customizer` returns
     * `undefined`, assignment is handled by the method instead. The `customizer`
     * is invoked with five arguments: (objValue, srcValue, key, object, source).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} sources The source objects.
     * @param {Function} [customizer] The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @see _.assignInWith
     * @example
     *
     * function customizer(objValue, srcValue) {
     *   return _.isUndefined(objValue) ? srcValue : objValue;
     * }
     *
     * var defaults = _.partialRight(_.assignWith, customizer);
     *
     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
     * // => { 'a': 1, 'b': 2 }
     */
    var assignWith = createAssigner(function(object, source, srcIndex, customizer) {
      copyObject(source, keys(source), object, customizer);
    });

    /**
     * Creates an array of values corresponding to `paths` of `object`.
     *
     * @static
     * @memberOf _
     * @since 1.0.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {...(string|string[])} [paths] The property paths to pick.
     * @returns {Array} Returns the picked values.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };
     *
     * _.at(object, ['a[0].b.c', 'a[1]']);
     * // => [3, 4]
     */
    var at = flatRest(baseAt);

    /**
     * Creates an object that inherits from the `prototype` object. If a
     * `properties` object is given, its own enumerable string keyed properties
     * are assigned to the created object.
     *
     * @static
     * @memberOf _
     * @since 2.3.0
     * @category Object
     * @param {Object} prototype The object to inherit from.
     * @param {Object} [properties] The properties to assign to the object.
     * @returns {Object} Returns the new object.
     * @example
     *
     * function Shape() {
     *   this.x = 0;
     *   this.y = 0;
     * }
     *
     * function Circle() {
     *   Shape.call(this);
     * }
     *
     * Circle.prototype = _.create(Shape.prototype, {
     *   'constructor': Circle
     * });
     *
     * var circle = new Circle;
     * circle instanceof Circle;
     * // => true
     *
     * circle instanceof Shape;
     * // => true
     */
    function create(prototype, properties) {
      var result = baseCreate(prototype);
      return properties == null ? result : baseAssign(result, properties);
    }

    /**
     * Assigns own and inherited enumerable string keyed properties of source
     * objects to the destination object for all destination properties that
     * resolve to `undefined`. Source objects are applied from left to right.
     * Once a property is set, additional values of the same property are ignored.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @see _.defaultsDeep
     * @example
     *
     * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
     * // => { 'a': 1, 'b': 2 }
     */
    var defaults = baseRest(function(args) {
      args.push(undefined, customDefaultsAssignIn);
      return apply(assignInWith, undefined, args);
    });

    /**
     * This method is like `_.defaults` except that it recursively assigns
     * default properties.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 3.10.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @see _.defaults
     * @example
     *
     * _.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });
     * // => { 'a': { 'b': 2, 'c': 3 } }
     */
    var defaultsDeep = baseRest(function(args) {
      args.push(undefined, customDefaultsMerge);
      return apply(mergeWith, undefined, args);
    });

    /**
     * This method is like `_.find` except that it returns the key of the first
     * element `predicate` returns truthy for instead of the element itself.
     *
     * @static
     * @memberOf _
     * @since 1.1.0
     * @category Object
     * @param {Object} object The object to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {string|undefined} Returns the key of the matched element,
     *  else `undefined`.
     * @example
     *
     * var users = {
     *   'barney':  { 'age': 36, 'active': true },
     *   'fred':    { 'age': 40, 'active': false },
     *   'pebbles': { 'age': 1,  'active': true }
     * };
     *
     * _.findKey(users, function(o) { return o.age < 40; });
     * // => 'barney' (iteration order is not guaranteed)
     *
     * // The `_.matches` iteratee shorthand.
     * _.findKey(users, { 'age': 1, 'active': true });
     * // => 'pebbles'
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.findKey(users, ['active', false]);
     * // => 'fred'
     *
     * // The `_.property` iteratee shorthand.
     * _.findKey(users, 'active');
     * // => 'barney'
     */
    function findKey(object, predicate) {
      return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);
    }

    /**
     * This method is like `_.findKey` except that it iterates over elements of
     * a collection in the opposite order.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Object
     * @param {Object} object The object to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {string|undefined} Returns the key of the matched element,
     *  else `undefined`.
     * @example
     *
     * var users = {
     *   'barney':  { 'age': 36, 'active': true },
     *   'fred':    { 'age': 40, 'active': false },
     *   'pebbles': { 'age': 1,  'active': true }
     * };
     *
     * _.findLastKey(users, function(o) { return o.age < 40; });
     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'
     *
     * // The `_.matches` iteratee shorthand.
     * _.findLastKey(users, { 'age': 36, 'active': true });
     * // => 'barney'
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.findLastKey(users, ['active', false]);
     * // => 'fred'
     *
     * // The `_.property` iteratee shorthand.
     * _.findLastKey(users, 'active');
     * // => 'pebbles'
     */
    function findLastKey(object, predicate) {
      return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);
    }

    /**
     * Iterates over own and inherited enumerable string keyed properties of an
     * object and invokes `iteratee` for each property. The iteratee is invoked
     * with three arguments: (value, key, object). Iteratee functions may exit
     * iteration early by explicitly returning `false`.
     *
     * @static
     * @memberOf _
     * @since 0.3.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns `object`.
     * @see _.forInRight
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.forIn(new Foo, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).
     */
    function forIn(object, iteratee) {
      return object == null
        ? object
        : baseFor(object, getIteratee(iteratee, 3), keysIn);
    }

    /**
     * This method is like `_.forIn` except that it iterates over properties of
     * `object` in the opposite order.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns `object`.
     * @see _.forIn
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.forInRight(new Foo, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.
     */
    function forInRight(object, iteratee) {
      return object == null
        ? object
        : baseForRight(object, getIteratee(iteratee, 3), keysIn);
    }

    /**
     * Iterates over own enumerable string keyed properties of an object and
     * invokes `iteratee` for each property. The iteratee is invoked with three
     * arguments: (value, key, object). Iteratee functions may exit iteration
     * early by explicitly returning `false`.
     *
     * @static
     * @memberOf _
     * @since 0.3.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns `object`.
     * @see _.forOwnRight
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.forOwn(new Foo, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'a' then 'b' (iteration order is not guaranteed).
     */
    function forOwn(object, iteratee) {
      return object && baseForOwn(object, getIteratee(iteratee, 3));
    }

    /**
     * This method is like `_.forOwn` except that it iterates over properties of
     * `object` in the opposite order.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns `object`.
     * @see _.forOwn
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.forOwnRight(new Foo, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.
     */
    function forOwnRight(object, iteratee) {
      return object && baseForOwnRight(object, getIteratee(iteratee, 3));
    }

    /**
     * Creates an array of function property names from own enumerable properties
     * of `object`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to inspect.
     * @returns {Array} Returns the function names.
     * @see _.functionsIn
     * @example
     *
     * function Foo() {
     *   this.a = _.constant('a');
     *   this.b = _.constant('b');
     * }
     *
     * Foo.prototype.c = _.constant('c');
     *
     * _.functions(new Foo);
     * // => ['a', 'b']
     */
    function functions(object) {
      return object == null ? [] : baseFunctions(object, keys(object));
    }

    /**
     * Creates an array of function property names from own and inherited
     * enumerable properties of `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to inspect.
     * @returns {Array} Returns the function names.
     * @see _.functions
     * @example
     *
     * function Foo() {
     *   this.a = _.constant('a');
     *   this.b = _.constant('b');
     * }
     *
     * Foo.prototype.c = _.constant('c');
     *
     * _.functionsIn(new Foo);
     * // => ['a', 'b', 'c']
     */
    function functionsIn(object) {
      return object == null ? [] : baseFunctions(object, keysIn(object));
    }

    /**
     * Gets the value at `path` of `object`. If the resolved value is
     * `undefined`, the `defaultValue` is returned in its place.
     *
     * @static
     * @memberOf _
     * @since 3.7.0
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the property to get.
     * @param {*} [defaultValue] The value returned for `undefined` resolved values.
     * @returns {*} Returns the resolved value.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }] };
     *
     * _.get(object, 'a[0].b.c');
     * // => 3
     *
     * _.get(object, ['a', '0', 'b', 'c']);
     * // => 3
     *
     * _.get(object, 'a.b.c', 'default');
     * // => 'default'
     */
    function get(object, path, defaultValue) {
      var result = object == null ? undefined : baseGet(object, path);
      return result === undefined ? defaultValue : result;
    }

    /**
     * Checks if `path` is a direct property of `object`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path to check.
     * @returns {boolean} Returns `true` if `path` exists, else `false`.
     * @example
     *
     * var object = { 'a': { 'b': 2 } };
     * var other = _.create({ 'a': _.create({ 'b': 2 }) });
     *
     * _.has(object, 'a');
     * // => true
     *
     * _.has(object, 'a.b');
     * // => true
     *
     * _.has(object, ['a', 'b']);
     * // => true
     *
     * _.has(other, 'a');
     * // => false
     */
    function has(object, path) {
      return object != null && hasPath(object, path, baseHas);
    }

    /**
     * Checks if `path` is a direct or inherited property of `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path to check.
     * @returns {boolean} Returns `true` if `path` exists, else `false`.
     * @example
     *
     * var object = _.create({ 'a': _.create({ 'b': 2 }) });
     *
     * _.hasIn(object, 'a');
     * // => true
     *
     * _.hasIn(object, 'a.b');
     * // => true
     *
     * _.hasIn(object, ['a', 'b']);
     * // => true
     *
     * _.hasIn(object, 'b');
     * // => false
     */
    function hasIn(object, path) {
      return object != null && hasPath(object, path, baseHasIn);
    }

    /**
     * Creates an object composed of the inverted keys and values of `object`.
     * If `object` contains duplicate values, subsequent values overwrite
     * property assignments of previous values.
     *
     * @static
     * @memberOf _
     * @since 0.7.0
     * @category Object
     * @param {Object} object The object to invert.
     * @returns {Object} Returns the new inverted object.
     * @example
     *
     * var object = { 'a': 1, 'b': 2, 'c': 1 };
     *
     * _.invert(object);
     * // => { '1': 'c', '2': 'b' }
     */
    var invert = createInverter(function(result, value, key) {
      result[value] = key;
    }, constant(identity));

    /**
     * This method is like `_.invert` except that the inverted object is generated
     * from the results of running each element of `object` thru `iteratee`. The
     * corresponding inverted value of each inverted key is an array of keys
     * responsible for generating the inverted value. The iteratee is invoked
     * with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.1.0
     * @category Object
     * @param {Object} object The object to invert.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Object} Returns the new inverted object.
     * @example
     *
     * var object = { 'a': 1, 'b': 2, 'c': 1 };
     *
     * _.invertBy(object);
     * // => { '1': ['a', 'c'], '2': ['b'] }
     *
     * _.invertBy(object, function(value) {
     *   return 'group' + value;
     * });
     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }
     */
    var invertBy = createInverter(function(result, value, key) {
      if (hasOwnProperty.call(result, value)) {
        result[value].push(key);
      } else {
        result[value] = [key];
      }
    }, getIteratee);

    /**
     * Invokes the method at `path` of `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the method to invoke.
     * @param {...*} [args] The arguments to invoke the method with.
     * @returns {*} Returns the result of the invoked method.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };
     *
     * _.invoke(object, 'a[0].b.c.slice', 1, 3);
     * // => [2, 3]
     */
    var invoke = baseRest(baseInvoke);

    /**
     * Creates an array of the own enumerable property names of `object`.
     *
     * **Note:** Non-object values are coerced to objects. See the
     * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
     * for more details.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.keys(new Foo);
     * // => ['a', 'b'] (iteration order is not guaranteed)
     *
     * _.keys('hi');
     * // => ['0', '1']
     */
    function keys(object) {
      return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
    }

    /**
     * Creates an array of the own and inherited enumerable property names of `object`.
     *
     * **Note:** Non-object values are coerced to objects.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.keysIn(new Foo);
     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)
     */
    function keysIn(object) {
      return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);
    }

    /**
     * The opposite of `_.mapValues`; this method creates an object with the
     * same values as `object` and keys generated by running each own enumerable
     * string keyed property of `object` thru `iteratee`. The iteratee is invoked
     * with three arguments: (value, key, object).
     *
     * @static
     * @memberOf _
     * @since 3.8.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns the new mapped object.
     * @see _.mapValues
     * @example
     *
     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {
     *   return key + value;
     * });
     * // => { 'a1': 1, 'b2': 2 }
     */
    function mapKeys(object, iteratee) {
      var result = {};
      iteratee = getIteratee(iteratee, 3);

      baseForOwn(object, function(value, key, object) {
        baseAssignValue(result, iteratee(value, key, object), value);
      });
      return result;
    }

    /**
     * Creates an object with the same keys as `object` and values generated
     * by running each own enumerable string keyed property of `object` thru
     * `iteratee`. The iteratee is invoked with three arguments:
     * (value, key, object).
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns the new mapped object.
     * @see _.mapKeys
     * @example
     *
     * var users = {
     *   'fred':    { 'user': 'fred',    'age': 40 },
     *   'pebbles': { 'user': 'pebbles', 'age': 1 }
     * };
     *
     * _.mapValues(users, function(o) { return o.age; });
     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)
     *
     * // The `_.property` iteratee shorthand.
     * _.mapValues(users, 'age');
     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)
     */
    function mapValues(object, iteratee) {
      var result = {};
      iteratee = getIteratee(iteratee, 3);

      baseForOwn(object, function(value, key, object) {
        baseAssignValue(result, key, iteratee(value, key, object));
      });
      return result;
    }

    /**
     * This method is like `_.assign` except that it recursively merges own and
     * inherited enumerable string keyed properties of source objects into the
     * destination object. Source properties that resolve to `undefined` are
     * skipped if a destination value exists. Array and plain object properties
     * are merged recursively. Other objects and value types are overridden by
     * assignment. Source objects are applied from left to right. Subsequent
     * sources overwrite property assignments of previous sources.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 0.5.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = {
     *   'a': [{ 'b': 2 }, { 'd': 4 }]
     * };
     *
     * var other = {
     *   'a': [{ 'c': 3 }, { 'e': 5 }]
     * };
     *
     * _.merge(object, other);
     * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }
     */
    var merge = createAssigner(function(object, source, srcIndex) {
      baseMerge(object, source, srcIndex);
    });

    /**
     * This method is like `_.merge` except that it accepts `customizer` which
     * is invoked to produce the merged values of the destination and source
     * properties. If `customizer` returns `undefined`, merging is handled by the
     * method instead. The `customizer` is invoked with six arguments:
     * (objValue, srcValue, key, object, source, stack).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} sources The source objects.
     * @param {Function} customizer The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @example
     *
     * function customizer(objValue, srcValue) {
     *   if (_.isArray(objValue)) {
     *     return objValue.concat(srcValue);
     *   }
     * }
     *
     * var object = { 'a': [1], 'b': [2] };
     * var other = { 'a': [3], 'b': [4] };
     *
     * _.mergeWith(object, other, customizer);
     * // => { 'a': [1, 3], 'b': [2, 4] }
     */
    var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {
      baseMerge(object, source, srcIndex, customizer);
    });

    /**
     * The opposite of `_.pick`; this method creates an object composed of the
     * own and inherited enumerable property paths of `object` that are not omitted.
     *
     * **Note:** This method is considerably slower than `_.pick`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The source object.
     * @param {...(string|string[])} [paths] The property paths to omit.
     * @returns {Object} Returns the new object.
     * @example
     *
     * var object = { 'a': 1, 'b': '2', 'c': 3 };
     *
     * _.omit(object, ['a', 'c']);
     * // => { 'b': '2' }
     */
    var omit = flatRest(function(object, paths) {
      var result = {};
      if (object == null) {
        return result;
      }
      var isDeep = false;
      paths = arrayMap(paths, function(path) {
        path = castPath(path, object);
        isDeep || (isDeep = path.length > 1);
        return path;
      });
      copyObject(object, getAllKeysIn(object), result);
      if (isDeep) {
        result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);
      }
      var length = paths.length;
      while (length--) {
        baseUnset(result, paths[length]);
      }
      return result;
    });

    /**
     * The opposite of `_.pickBy`; this method creates an object composed of
     * the own and inherited enumerable string keyed properties of `object` that
     * `predicate` doesn't return truthy for. The predicate is invoked with two
     * arguments: (value, key).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The source object.
     * @param {Function} [predicate=_.identity] The function invoked per property.
     * @returns {Object} Returns the new object.
     * @example
     *
     * var object = { 'a': 1, 'b': '2', 'c': 3 };
     *
     * _.omitBy(object, _.isNumber);
     * // => { 'b': '2' }
     */
    function omitBy(object, predicate) {
      return pickBy(object, negate(getIteratee(predicate)));
    }

    /**
     * Creates an object composed of the picked `object` properties.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The source object.
     * @param {...(string|string[])} [paths] The property paths to pick.
     * @returns {Object} Returns the new object.
     * @example
     *
     * var object = { 'a': 1, 'b': '2', 'c': 3 };
     *
     * _.pick(object, ['a', 'c']);
     * // => { 'a': 1, 'c': 3 }
     */
    var pick = flatRest(function(object, paths) {
      return object == null ? {} : basePick(object, paths);
    });

    /**
     * Creates an object composed of the `object` properties `predicate` returns
     * truthy for. The predicate is invoked with two arguments: (value, key).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The source object.
     * @param {Function} [predicate=_.identity] The function invoked per property.
     * @returns {Object} Returns the new object.
     * @example
     *
     * var object = { 'a': 1, 'b': '2', 'c': 3 };
     *
     * _.pickBy(object, _.isNumber);
     * // => { 'a': 1, 'c': 3 }
     */
    function pickBy(object, predicate) {
      if (object == null) {
        return {};
      }
      var props = arrayMap(getAllKeysIn(object), function(prop) {
        return [prop];
      });
      predicate = getIteratee(predicate);
      return basePickBy(object, props, function(value, path) {
        return predicate(value, path[0]);
      });
    }

    /**
     * This method is like `_.get` except that if the resolved value is a
     * function it's invoked with the `this` binding of its parent object and
     * its result is returned.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the property to resolve.
     * @param {*} [defaultValue] The value returned for `undefined` resolved values.
     * @returns {*} Returns the resolved value.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };
     *
     * _.result(object, 'a[0].b.c1');
     * // => 3
     *
     * _.result(object, 'a[0].b.c2');
     * // => 4
     *
     * _.result(object, 'a[0].b.c3', 'default');
     * // => 'default'
     *
     * _.result(object, 'a[0].b.c3', _.constant('default'));
     * // => 'default'
     */
    function result(object, path, defaultValue) {
      path = castPath(path, object);

      var index = -1,
          length = path.length;

      // Ensure the loop is entered when path is empty.
      if (!length) {
        length = 1;
        object = undefined;
      }
      while (++index < length) {
        var value = object == null ? undefined : object[toKey(path[index])];
        if (value === undefined) {
          index = length;
          value = defaultValue;
        }
        object = isFunction(value) ? value.call(object) : value;
      }
      return object;
    }

    /**
     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,
     * it's created. Arrays are created for missing index properties while objects
     * are created for all other missing properties. Use `_.setWith` to customize
     * `path` creation.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 3.7.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }] };
     *
     * _.set(object, 'a[0].b.c', 4);
     * console.log(object.a[0].b.c);
     * // => 4
     *
     * _.set(object, ['x', '0', 'y', 'z'], 5);
     * console.log(object.x[0].y.z);
     * // => 5
     */
    function set(object, path, value) {
      return object == null ? object : baseSet(object, path, value);
    }

    /**
     * This method is like `_.set` except that it accepts `customizer` which is
     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`
     * path creation is handled by the method instead. The `customizer` is invoked
     * with three arguments: (nsValue, key, nsObject).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {*} value The value to set.
     * @param {Function} [customizer] The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = {};
     *
     * _.setWith(object, '[0][1]', 'a', Object);
     * // => { '0': { '1': 'a' } }
     */
    function setWith(object, path, value, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return object == null ? object : baseSet(object, path, value, customizer);
    }

    /**
     * Creates an array of own enumerable string keyed-value pairs for `object`
     * which can be consumed by `_.fromPairs`. If `object` is a map or set, its
     * entries are returned.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @alias entries
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the key-value pairs.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.toPairs(new Foo);
     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)
     */
    var toPairs = createToPairs(keys);

    /**
     * Creates an array of own and inherited enumerable string keyed-value pairs
     * for `object` which can be consumed by `_.fromPairs`. If `object` is a map
     * or set, its entries are returned.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @alias entriesIn
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the key-value pairs.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.toPairsIn(new Foo);
     * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)
     */
    var toPairsIn = createToPairs(keysIn);

    /**
     * An alternative to `_.reduce`; this method transforms `object` to a new
     * `accumulator` object which is the result of running each of its own
     * enumerable string keyed properties thru `iteratee`, with each invocation
     * potentially mutating the `accumulator` object. If `accumulator` is not
     * provided, a new object with the same `[[Prototype]]` will be used. The
     * iteratee is invoked with four arguments: (accumulator, value, key, object).
     * Iteratee functions may exit iteration early by explicitly returning `false`.
     *
     * @static
     * @memberOf _
     * @since 1.3.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @param {*} [accumulator] The custom accumulator value.
     * @returns {*} Returns the accumulated value.
     * @example
     *
     * _.transform([2, 3, 4], function(result, n) {
     *   result.push(n *= n);
     *   return n % 2 == 0;
     * }, []);
     * // => [4, 9]
     *
     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {
     *   (result[value] || (result[value] = [])).push(key);
     * }, {});
     * // => { '1': ['a', 'c'], '2': ['b'] }
     */
    function transform(object, iteratee, accumulator) {
      var isArr = isArray(object),
          isArrLike = isArr || isBuffer(object) || isTypedArray(object);

      iteratee = getIteratee(iteratee, 4);
      if (accumulator == null) {
        var Ctor = object && object.constructor;
        if (isArrLike) {
          accumulator = isArr ? new Ctor : [];
        }
        else if (isObject(object)) {
          accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};
        }
        else {
          accumulator = {};
        }
      }
      (isArrLike ? arrayEach : baseForOwn)(object, function(value, index, object) {
        return iteratee(accumulator, value, index, object);
      });
      return accumulator;
    }

    /**
     * Removes the property at `path` of `object`.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to unset.
     * @returns {boolean} Returns `true` if the property is deleted, else `false`.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 7 } }] };
     * _.unset(object, 'a[0].b.c');
     * // => true
     *
     * console.log(object);
     * // => { 'a': [{ 'b': {} }] };
     *
     * _.unset(object, ['a', '0', 'b', 'c']);
     * // => true
     *
     * console.log(object);
     * // => { 'a': [{ 'b': {} }] };
     */
    function unset(object, path) {
      return object == null ? true : baseUnset(object, path);
    }

    /**
     * This method is like `_.set` except that accepts `updater` to produce the
     * value to set. Use `_.updateWith` to customize `path` creation. The `updater`
     * is invoked with one argument: (value).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.6.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {Function} updater The function to produce the updated value.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }] };
     *
     * _.update(object, 'a[0].b.c', function(n) { return n * n; });
     * console.log(object.a[0].b.c);
     * // => 9
     *
     * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });
     * console.log(object.x[0].y.z);
     * // => 0
     */
    function update(object, path, updater) {
      return object == null ? object : baseUpdate(object, path, castFunction(updater));
    }

    /**
     * This method is like `_.update` except that it accepts `customizer` which is
     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`
     * path creation is handled by the method instead. The `customizer` is invoked
     * with three arguments: (nsValue, key, nsObject).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.6.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {Function} updater The function to produce the updated value.
     * @param {Function} [customizer] The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = {};
     *
     * _.updateWith(object, '[0][1]', _.constant('a'), Object);
     * // => { '0': { '1': 'a' } }
     */
    function updateWith(object, path, updater, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);
    }

    /**
     * Creates an array of the own enumerable string keyed property values of `object`.
     *
     * **Note:** Non-object values are coerced to objects.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property values.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.values(new Foo);
     * // => [1, 2] (iteration order is not guaranteed)
     *
     * _.values('hi');
     * // => ['h', 'i']
     */
    function values(object) {
      return object == null ? [] : baseValues(object, keys(object));
    }

    /**
     * Creates an array of the own and inherited enumerable string keyed property
     * values of `object`.
     *
     * **Note:** Non-object values are coerced to objects.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property values.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.valuesIn(new Foo);
     * // => [1, 2, 3] (iteration order is not guaranteed)
     */
    function valuesIn(object) {
      return object == null ? [] : baseValues(object, keysIn(object));
    }

    /*------------------------------------------------------------------------*/

    /**
     * Clamps `number` within the inclusive `lower` and `upper` bounds.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Number
     * @param {number} number The number to clamp.
     * @param {number} [lower] The lower bound.
     * @param {number} upper The upper bound.
     * @returns {number} Returns the clamped number.
     * @example
     *
     * _.clamp(-10, -5, 5);
     * // => -5
     *
     * _.clamp(10, -5, 5);
     * // => 5
     */
    function clamp(number, lower, upper) {
      if (upper === undefined) {
        upper = lower;
        lower = undefined;
      }
      if (upper !== undefined) {
        upper = toNumber(upper);
        upper = upper === upper ? upper : 0;
      }
      if (lower !== undefined) {
        lower = toNumber(lower);
        lower = lower === lower ? lower : 0;
      }
      return baseClamp(toNumber(number), lower, upper);
    }

    /**
     * Checks if `n` is between `start` and up to, but not including, `end`. If
     * `end` is not specified, it's set to `start` with `start` then set to `0`.
     * If `start` is greater than `end` the params are swapped to support
     * negative ranges.
     *
     * @static
     * @memberOf _
     * @since 3.3.0
     * @category Number
     * @param {number} number The number to check.
     * @param {number} [start=0] The start of the range.
     * @param {number} end The end of the range.
     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.
     * @see _.range, _.rangeRight
     * @example
     *
     * _.inRange(3, 2, 4);
     * // => true
     *
     * _.inRange(4, 8);
     * // => true
     *
     * _.inRange(4, 2);
     * // => false
     *
     * _.inRange(2, 2);
     * // => false
     *
     * _.inRange(1.2, 2);
     * // => true
     *
     * _.inRange(5.2, 4);
     * // => false
     *
     * _.inRange(-3, -2, -6);
     * // => true
     */
    function inRange(number, start, end) {
      start = toFinite(start);
      if (end === undefined) {
        end = start;
        start = 0;
      } else {
        end = toFinite(end);
      }
      number = toNumber(number);
      return baseInRange(number, start, end);
    }

    /**
     * Produces a random number between the inclusive `lower` and `upper` bounds.
     * If only one argument is provided a number between `0` and the given number
     * is returned. If `floating` is `true`, or either `lower` or `upper` are
     * floats, a floating-point number is returned instead of an integer.
     *
     * **Note:** JavaScript follows the IEEE-754 standard for resolving
     * floating-point values which can produce unexpected results.
     *
     * @static
     * @memberOf _
     * @since 0.7.0
     * @category Number
     * @param {number} [lower=0] The lower bound.
     * @param {number} [upper=1] The upper bound.
     * @param {boolean} [floating] Specify returning a floating-point number.
     * @returns {number} Returns the random number.
     * @example
     *
     * _.random(0, 5);
     * // => an integer between 0 and 5
     *
     * _.random(5);
     * // => also an integer between 0 and 5
     *
     * _.random(5, true);
     * // => a floating-point number between 0 and 5
     *
     * _.random(1.2, 5.2);
     * // => a floating-point number between 1.2 and 5.2
     */
    function random(lower, upper, floating) {
      if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {
        upper = floating = undefined;
      }
      if (floating === undefined) {
        if (typeof upper == 'boolean') {
          floating = upper;
          upper = undefined;
        }
        else if (typeof lower == 'boolean') {
          floating = lower;
          lower = undefined;
        }
      }
      if (lower === undefined && upper === undefined) {
        lower = 0;
        upper = 1;
      }
      else {
        lower = toFinite(lower);
        if (upper === undefined) {
          upper = lower;
          lower = 0;
        } else {
          upper = toFinite(upper);
        }
      }
      if (lower > upper) {
        var temp = lower;
        lower = upper;
        upper = temp;
      }
      if (floating || lower % 1 || upper % 1) {
        var rand = nativeRandom();
        return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);
      }
      return baseRandom(lower, upper);
    }

    /*------------------------------------------------------------------------*/

    /**
     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the camel cased string.
     * @example
     *
     * _.camelCase('Foo Bar');
     * // => 'fooBar'
     *
     * _.camelCase('--foo-bar--');
     * // => 'fooBar'
     *
     * _.camelCase('__FOO_BAR__');
     * // => 'fooBar'
     */
    var camelCase = createCompounder(function(result, word, index) {
      word = word.toLowerCase();
      return result + (index ? capitalize(word) : word);
    });

    /**
     * Converts the first character of `string` to upper case and the remaining
     * to lower case.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to capitalize.
     * @returns {string} Returns the capitalized string.
     * @example
     *
     * _.capitalize('FRED');
     * // => 'Fred'
     */
    function capitalize(string) {
      return upperFirst(toString(string).toLowerCase());
    }

    /**
     * Deburrs `string` by converting
     * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)
     * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)
     * letters to basic Latin letters and removing
     * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to deburr.
     * @returns {string} Returns the deburred string.
     * @example
     *
     * _.deburr('déjà vu');
     * // => 'deja vu'
     */
    function deburr(string) {
      string = toString(string);
      return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');
    }

    /**
     * Checks if `string` ends with the given target string.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to inspect.
     * @param {string} [target] The string to search for.
     * @param {number} [position=string.length] The position to search up to.
     * @returns {boolean} Returns `true` if `string` ends with `target`,
     *  else `false`.
     * @example
     *
     * _.endsWith('abc', 'c');
     * // => true
     *
     * _.endsWith('abc', 'b');
     * // => false
     *
     * _.endsWith('abc', 'b', 2);
     * // => true
     */
    function endsWith(string, target, position) {
      string = toString(string);
      target = baseToString(target);

      var length = string.length;
      position = position === undefined
        ? length
        : baseClamp(toInteger(position), 0, length);

      var end = position;
      position -= target.length;
      return position >= 0 && string.slice(position, end) == target;
    }

    /**
     * Converts the characters "&", "<", ">", '"', and "'" in `string` to their
     * corresponding HTML entities.
     *
     * **Note:** No other characters are escaped. To escape additional
     * characters use a third-party library like [_he_](https://mths.be/he).
     *
     * Though the ">" character is escaped for symmetry, characters like
     * ">" and "/" don't need escaping in HTML and have no special meaning
     * unless they're part of a tag or unquoted attribute value. See
     * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)
     * (under "semi-related fun fact") for more details.
     *
     * When working with HTML you should always
     * [quote attribute values](http://wonko.com/post/html-escaping) to reduce
     * XSS vectors.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category String
     * @param {string} [string=''] The string to escape.
     * @returns {string} Returns the escaped string.
     * @example
     *
     * _.escape('fred, barney, & pebbles');
     * // => 'fred, barney, &amp; pebbles'
     */
    function escape(string) {
      string = toString(string);
      return (string && reHasUnescapedHtml.test(string))
        ? string.replace(reUnescapedHtml, escapeHtmlChar)
        : string;
    }

    /**
     * Escapes the `RegExp` special characters "^", "$", "\", ".", "*", "+",
     * "?", "(", ")", "[", "]", "{", "}", and "|" in `string`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to escape.
     * @returns {string} Returns the escaped string.
     * @example
     *
     * _.escapeRegExp('[lodash](https://lodash.com/)');
     * // => '\[lodash\]\(https://lodash\.com/\)'
     */
    function escapeRegExp(string) {
      string = toString(string);
      return (string && reHasRegExpChar.test(string))
        ? string.replace(reRegExpChar, '\\$&')
        : string;
    }

    /**
     * Converts `string` to
     * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the kebab cased string.
     * @example
     *
     * _.kebabCase('Foo Bar');
     * // => 'foo-bar'
     *
     * _.kebabCase('fooBar');
     * // => 'foo-bar'
     *
     * _.kebabCase('__FOO_BAR__');
     * // => 'foo-bar'
     */
    var kebabCase = createCompounder(function(result, word, index) {
      return result + (index ? '-' : '') + word.toLowerCase();
    });

    /**
     * Converts `string`, as space separated words, to lower case.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the lower cased string.
     * @example
     *
     * _.lowerCase('--Foo-Bar--');
     * // => 'foo bar'
     *
     * _.lowerCase('fooBar');
     * // => 'foo bar'
     *
     * _.lowerCase('__FOO_BAR__');
     * // => 'foo bar'
     */
    var lowerCase = createCompounder(function(result, word, index) {
      return result + (index ? ' ' : '') + word.toLowerCase();
    });

    /**
     * Converts the first character of `string` to lower case.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the converted string.
     * @example
     *
     * _.lowerFirst('Fred');
     * // => 'fred'
     *
     * _.lowerFirst('FRED');
     * // => 'fRED'
     */
    var lowerFirst = createCaseFirst('toLowerCase');

    /**
     * Pads `string` on the left and right sides if it's shorter than `length`.
     * Padding characters are truncated if they can't be evenly divided by `length`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to pad.
     * @param {number} [length=0] The padding length.
     * @param {string} [chars=' '] The string used as padding.
     * @returns {string} Returns the padded string.
     * @example
     *
     * _.pad('abc', 8);
     * // => '  abc   '
     *
     * _.pad('abc', 8, '_-');
     * // => '_-abc_-_'
     *
     * _.pad('abc', 3);
     * // => 'abc'
     */
    function pad(string, length, chars) {
      string = toString(string);
      length = toInteger(length);

      var strLength = length ? stringSize(string) : 0;
      if (!length || strLength >= length) {
        return string;
      }
      var mid = (length - strLength) / 2;
      return (
        createPadding(nativeFloor(mid), chars) +
        string +
        createPadding(nativeCeil(mid), chars)
      );
    }

    /**
     * Pads `string` on the right side if it's shorter than `length`. Padding
     * characters are truncated if they exceed `length`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to pad.
     * @param {number} [length=0] The padding length.
     * @param {string} [chars=' '] The string used as padding.
     * @returns {string} Returns the padded string.
     * @example
     *
     * _.padEnd('abc', 6);
     * // => 'abc   '
     *
     * _.padEnd('abc', 6, '_-');
     * // => 'abc_-_'
     *
     * _.padEnd('abc', 3);
     * // => 'abc'
     */
    function padEnd(string, length, chars) {
      string = toString(string);
      length = toInteger(length);

      var strLength = length ? stringSize(string) : 0;
      return (length && strLength < length)
        ? (string + createPadding(length - strLength, chars))
        : string;
    }

    /**
     * Pads `string` on the left side if it's shorter than `length`. Padding
     * characters are truncated if they exceed `length`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to pad.
     * @param {number} [length=0] The padding length.
     * @param {string} [chars=' '] The string used as padding.
     * @returns {string} Returns the padded string.
     * @example
     *
     * _.padStart('abc', 6);
     * // => '   abc'
     *
     * _.padStart('abc', 6, '_-');
     * // => '_-_abc'
     *
     * _.padStart('abc', 3);
     * // => 'abc'
     */
    function padStart(string, length, chars) {
      string = toString(string);
      length = toInteger(length);

      var strLength = length ? stringSize(string) : 0;
      return (length && strLength < length)
        ? (createPadding(length - strLength, chars) + string)
        : string;
    }

    /**
     * Converts `string` to an integer of the specified radix. If `radix` is
     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a
     * hexadecimal, in which case a `radix` of `16` is used.
     *
     * **Note:** This method aligns with the
     * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.
     *
     * @static
     * @memberOf _
     * @since 1.1.0
     * @category String
     * @param {string} string The string to convert.
     * @param {number} [radix=10] The radix to interpret `value` by.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {number} Returns the converted integer.
     * @example
     *
     * _.parseInt('08');
     * // => 8
     *
     * _.map(['6', '08', '10'], _.parseInt);
     * // => [6, 8, 10]
     */
    function parseInt(string, radix, guard) {
      if (guard || radix == null) {
        radix = 0;
      } else if (radix) {
        radix = +radix;
      }
      return nativeParseInt(toString(string).replace(reTrimStart, ''), radix || 0);
    }

    /**
     * Repeats the given string `n` times.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to repeat.
     * @param {number} [n=1] The number of times to repeat the string.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {string} Returns the repeated string.
     * @example
     *
     * _.repeat('*', 3);
     * // => '***'
     *
     * _.repeat('abc', 2);
     * // => 'abcabc'
     *
     * _.repeat('abc', 0);
     * // => ''
     */
    function repeat(string, n, guard) {
      if ((guard ? isIterateeCall(string, n, guard) : n === undefined)) {
        n = 1;
      } else {
        n = toInteger(n);
      }
      return baseRepeat(toString(string), n);
    }

    /**
     * Replaces matches for `pattern` in `string` with `replacement`.
     *
     * **Note:** This method is based on
     * [`String#replace`](https://mdn.io/String/replace).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to modify.
     * @param {RegExp|string} pattern The pattern to replace.
     * @param {Function|string} replacement The match replacement.
     * @returns {string} Returns the modified string.
     * @example
     *
     * _.replace('Hi Fred', 'Fred', 'Barney');
     * // => 'Hi Barney'
     */
    function replace() {
      var args = arguments,
          string = toString(args[0]);

      return args.length < 3 ? string : string.replace(args[1], args[2]);
    }

    /**
     * Converts `string` to
     * [snake case](https://en.wikipedia.org/wiki/Snake_case).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the snake cased string.
     * @example
     *
     * _.snakeCase('Foo Bar');
     * // => 'foo_bar'
     *
     * _.snakeCase('fooBar');
     * // => 'foo_bar'
     *
     * _.snakeCase('--FOO-BAR--');
     * // => 'foo_bar'
     */
    var snakeCase = createCompounder(function(result, word, index) {
      return result + (index ? '_' : '') + word.toLowerCase();
    });

    /**
     * Splits `string` by `separator`.
     *
     * **Note:** This method is based on
     * [`String#split`](https://mdn.io/String/split).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to split.
     * @param {RegExp|string} separator The separator pattern to split by.
     * @param {number} [limit] The length to truncate results to.
     * @returns {Array} Returns the string segments.
     * @example
     *
     * _.split('a-b-c', '-', 2);
     * // => ['a', 'b']
     */
    function split(string, separator, limit) {
      if (limit && typeof limit != 'number' && isIterateeCall(string, separator, limit)) {
        separator = limit = undefined;
      }
      limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;
      if (!limit) {
        return [];
      }
      string = toString(string);
      if (string && (
            typeof separator == 'string' ||
            (separator != null && !isRegExp(separator))
          )) {
        separator = baseToString(separator);
        if (!separator && hasUnicode(string)) {
          return castSlice(stringToArray(string), 0, limit);
        }
      }
      return string.split(separator, limit);
    }

    /**
     * Converts `string` to
     * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).
     *
     * @static
     * @memberOf _
     * @since 3.1.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the start cased string.
     * @example
     *
     * _.startCase('--foo-bar--');
     * // => 'Foo Bar'
     *
     * _.startCase('fooBar');
     * // => 'Foo Bar'
     *
     * _.startCase('__FOO_BAR__');
     * // => 'FOO BAR'
     */
    var startCase = createCompounder(function(result, word, index) {
      return result + (index ? ' ' : '') + upperFirst(word);
    });

    /**
     * Checks if `string` starts with the given target string.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to inspect.
     * @param {string} [target] The string to search for.
     * @param {number} [position=0] The position to search from.
     * @returns {boolean} Returns `true` if `string` starts with `target`,
     *  else `false`.
     * @example
     *
     * _.startsWith('abc', 'a');
     * // => true
     *
     * _.startsWith('abc', 'b');
     * // => false
     *
     * _.startsWith('abc', 'b', 1);
     * // => true
     */
    function startsWith(string, target, position) {
      string = toString(string);
      position = position == null
        ? 0
        : baseClamp(toInteger(position), 0, string.length);

      target = baseToString(target);
      return string.slice(position, position + target.length) == target;
    }

    /**
     * Creates a compiled template function that can interpolate data properties
     * in "interpolate" delimiters, HTML-escape interpolated data properties in
     * "escape" delimiters, and execute JavaScript in "evaluate" delimiters. Data
     * properties may be accessed as free variables in the template. If a setting
     * object is given, it takes precedence over `_.templateSettings` values.
     *
     * **Note:** In the development build `_.template` utilizes
     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)
     * for easier debugging.
     *
     * For more information on precompiling templates see
     * [lodash's custom builds documentation](https://lodash.com/custom-builds).
     *
     * For more information on Chrome extension sandboxes see
     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category String
     * @param {string} [string=''] The template string.
     * @param {Object} [options={}] The options object.
     * @param {RegExp} [options.escape=_.templateSettings.escape]
     *  The HTML "escape" delimiter.
     * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]
     *  The "evaluate" delimiter.
     * @param {Object} [options.imports=_.templateSettings.imports]
     *  An object to import into the template as free variables.
     * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]
     *  The "interpolate" delimiter.
     * @param {string} [options.sourceURL='lodash.templateSources[n]']
     *  The sourceURL of the compiled template.
     * @param {string} [options.variable='obj']
     *  The data object variable name.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Function} Returns the compiled template function.
     * @example
     *
     * // Use the "interpolate" delimiter to create a compiled template.
     * var compiled = _.template('hello <%= user %>!');
     * compiled({ 'user': 'fred' });
     * // => 'hello fred!'
     *
     * // Use the HTML "escape" delimiter to escape data property values.
     * var compiled = _.template('<b><%- value %></b>');
     * compiled({ 'value': '<script>' });
     * // => '<b>&lt;script&gt;</b>'
     *
     * // Use the "evaluate" delimiter to execute JavaScript and generate HTML.
     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');
     * compiled({ 'users': ['fred', 'barney'] });
     * // => '<li>fred</li><li>barney</li>'
     *
     * // Use the internal `print` function in "evaluate" delimiters.
     * var compiled = _.template('<% print("hello " + user); %>!');
     * compiled({ 'user': 'barney' });
     * // => 'hello barney!'
     *
     * // Use the ES template literal delimiter as an "interpolate" delimiter.
     * // Disable support by replacing the "interpolate" delimiter.
     * var compiled = _.template('hello ${ user }!');
     * compiled({ 'user': 'pebbles' });
     * // => 'hello pebbles!'
     *
     * // Use backslashes to treat delimiters as plain text.
     * var compiled = _.template('<%= "\\<%- value %\\>" %>');
     * compiled({ 'value': 'ignored' });
     * // => '<%- value %>'
     *
     * // Use the `imports` option to import `jQuery` as `jq`.
     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';
     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });
     * compiled({ 'users': ['fred', 'barney'] });
     * // => '<li>fred</li><li>barney</li>'
     *
     * // Use the `sourceURL` option to specify a custom sourceURL for the template.
     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });
     * compiled(data);
     * // => Find the source of "greeting.jst" under the Sources tab or Resources panel of the web inspector.
     *
     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.
     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });
     * compiled.source;
     * // => function(data) {
     * //   var __t, __p = '';
     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';
     * //   return __p;
     * // }
     *
     * // Use custom template delimiters.
     * _.templateSettings.interpolate = /{{([\s\S]+?)}}/g;
     * var compiled = _.template('hello {{ user }}!');
     * compiled({ 'user': 'mustache' });
     * // => 'hello mustache!'
     *
     * // Use the `source` property to inline compiled templates for meaningful
     * // line numbers in error messages and stack traces.
     * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\
     *   var JST = {\
     *     "main": ' + _.template(mainText).source + '\
     *   };\
     * ');
     */
    function template(string, options, guard) {
      // Based on John Resig's `tmpl` implementation
      // (http://ejohn.org/blog/javascript-micro-templating/)
      // and Laura Doktorova's doT.js (https://github.com/olado/doT).
      var settings = lodash.templateSettings;

      if (guard && isIterateeCall(string, options, guard)) {
        options = undefined;
      }
      string = toString(string);
      options = assignInWith({}, options, settings, customDefaultsAssignIn);

      var imports = assignInWith({}, options.imports, settings.imports, customDefaultsAssignIn),
          importsKeys = keys(imports),
          importsValues = baseValues(imports, importsKeys);

      var isEscaping,
          isEvaluating,
          index = 0,
          interpolate = options.interpolate || reNoMatch,
          source = "__p += '";

      // Compile the regexp to match each delimiter.
      var reDelimiters = RegExp(
        (options.escape || reNoMatch).source + '|' +
        interpolate.source + '|' +
        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +
        (options.evaluate || reNoMatch).source + '|$'
      , 'g');

      // Use a sourceURL for easier debugging.
      var sourceURL = '//# sourceURL=' +
        ('sourceURL' in options
          ? options.sourceURL
          : ('lodash.templateSources[' + (++templateCounter) + ']')
        ) + '\n';

      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {
        interpolateValue || (interpolateValue = esTemplateValue);

        // Escape characters that can't be included in string literals.
        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);

        // Replace delimiters with snippets.
        if (escapeValue) {
          isEscaping = true;
          source += "' +\n__e(" + escapeValue + ") +\n'";
        }
        if (evaluateValue) {
          isEvaluating = true;
          source += "';\n" + evaluateValue + ";\n__p += '";
        }
        if (interpolateValue) {
          source += "' +\n((__t = (" + interpolateValue + ")) == null ? '' : __t) +\n'";
        }
        index = offset + match.length;

        // The JS engine embedded in Adobe products needs `match` returned in
        // order to produce the correct `offset` value.
        return match;
      });

      source += "';\n";

      // If `variable` is not specified wrap a with-statement around the generated
      // code to add the data object to the top of the scope chain.
      var variable = options.variable;
      if (!variable) {
        source = 'with (obj) {\n' + source + '\n}\n';
      }
      // Cleanup code by stripping empty strings.
      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)
        .replace(reEmptyStringMiddle, '$1')
        .replace(reEmptyStringTrailing, '$1;');

      // Frame code as the function body.
      source = 'function(' + (variable || 'obj') + ') {\n' +
        (variable
          ? ''
          : 'obj || (obj = {});\n'
        ) +
        "var __t, __p = ''" +
        (isEscaping
           ? ', __e = _.escape'
           : ''
        ) +
        (isEvaluating
          ? ', __j = Array.prototype.join;\n' +
            "function print() { __p += __j.call(arguments, '') }\n"
          : ';\n'
        ) +
        source +
        'return __p\n}';

      var result = attempt(function() {
        return Function(importsKeys, sourceURL + 'return ' + source)
          .apply(undefined, importsValues);
      });

      // Provide the compiled function's source by its `toString` method or
      // the `source` property as a convenience for inlining compiled templates.
      result.source = source;
      if (isError(result)) {
        throw result;
      }
      return result;
    }

    /**
     * Converts `string`, as a whole, to lower case just like
     * [String#toLowerCase](https://mdn.io/toLowerCase).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the lower cased string.
     * @example
     *
     * _.toLower('--Foo-Bar--');
     * // => '--foo-bar--'
     *
     * _.toLower('fooBar');
     * // => 'foobar'
     *
     * _.toLower('__FOO_BAR__');
     * // => '__foo_bar__'
     */
    function toLower(value) {
      return toString(value).toLowerCase();
    }

    /**
     * Converts `string`, as a whole, to upper case just like
     * [String#toUpperCase](https://mdn.io/toUpperCase).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the upper cased string.
     * @example
     *
     * _.toUpper('--foo-bar--');
     * // => '--FOO-BAR--'
     *
     * _.toUpper('fooBar');
     * // => 'FOOBAR'
     *
     * _.toUpper('__foo_bar__');
     * // => '__FOO_BAR__'
     */
    function toUpper(value) {
      return toString(value).toUpperCase();
    }

    /**
     * Removes leading and trailing whitespace or specified characters from `string`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to trim.
     * @param {string} [chars=whitespace] The characters to trim.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {string} Returns the trimmed string.
     * @example
     *
     * _.trim('  abc  ');
     * // => 'abc'
     *
     * _.trim('-_-abc-_-', '_-');
     * // => 'abc'
     *
     * _.map(['  foo  ', '  bar  '], _.trim);
     * // => ['foo', 'bar']
     */
    function trim(string, chars, guard) {
      string = toString(string);
      if (string && (guard || chars === undefined)) {
        return string.replace(reTrim, '');
      }
      if (!string || !(chars = baseToString(chars))) {
        return string;
      }
      var strSymbols = stringToArray(string),
          chrSymbols = stringToArray(chars),
          start = charsStartIndex(strSymbols, chrSymbols),
          end = charsEndIndex(strSymbols, chrSymbols) + 1;

      return castSlice(strSymbols, start, end).join('');
    }

    /**
     * Removes trailing whitespace or specified characters from `string`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to trim.
     * @param {string} [chars=whitespace] The characters to trim.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {string} Returns the trimmed string.
     * @example
     *
     * _.trimEnd('  abc  ');
     * // => '  abc'
     *
     * _.trimEnd('-_-abc-_-', '_-');
     * // => '-_-abc'
     */
    function trimEnd(string, chars, guard) {
      string = toString(string);
      if (string && (guard || chars === undefined)) {
        return string.replace(reTrimEnd, '');
      }
      if (!string || !(chars = baseToString(chars))) {
        return string;
      }
      var strSymbols = stringToArray(string),
          end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;

      return castSlice(strSymbols, 0, end).join('');
    }

    /**
     * Removes leading whitespace or specified characters from `string`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to trim.
     * @param {string} [chars=whitespace] The characters to trim.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {string} Returns the trimmed string.
     * @example
     *
     * _.trimStart('  abc  ');
     * // => 'abc  '
     *
     * _.trimStart('-_-abc-_-', '_-');
     * // => 'abc-_-'
     */
    function trimStart(string, chars, guard) {
      string = toString(string);
      if (string && (guard || chars === undefined)) {
        return string.replace(reTrimStart, '');
      }
      if (!string || !(chars = baseToString(chars))) {
        return string;
      }
      var strSymbols = stringToArray(string),
          start = charsStartIndex(strSymbols, stringToArray(chars));

      return castSlice(strSymbols, start).join('');
    }

    /**
     * Truncates `string` if it's longer than the given maximum string length.
     * The last characters of the truncated string are replaced with the omission
     * string which defaults to "...".
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to truncate.
     * @param {Object} [options={}] The options object.
     * @param {number} [options.length=30] The maximum string length.
     * @param {string} [options.omission='...'] The string to indicate text is omitted.
     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.
     * @returns {string} Returns the truncated string.
     * @example
     *
     * _.truncate('hi-diddly-ho there, neighborino');
     * // => 'hi-diddly-ho there, neighbo...'
     *
     * _.truncate('hi-diddly-ho there, neighborino', {
     *   'length': 24,
     *   'separator': ' '
     * });
     * // => 'hi-diddly-ho there,...'
     *
     * _.truncate('hi-diddly-ho there, neighborino', {
     *   'length': 24,
     *   'separator': /,? +/
     * });
     * // => 'hi-diddly-ho there...'
     *
     * _.truncate('hi-diddly-ho there, neighborino', {
     *   'omission': ' [...]'
     * });
     * // => 'hi-diddly-ho there, neig [...]'
     */
    function truncate(string, options) {
      var length = DEFAULT_TRUNC_LENGTH,
          omission = DEFAULT_TRUNC_OMISSION;

      if (isObject(options)) {
        var separator = 'separator' in options ? options.separator : separator;
        length = 'length' in options ? toInteger(options.length) : length;
        omission = 'omission' in options ? baseToString(options.omission) : omission;
      }
      string = toString(string);

      var strLength = string.length;
      if (hasUnicode(string)) {
        var strSymbols = stringToArray(string);
        strLength = strSymbols.length;
      }
      if (length >= strLength) {
        return string;
      }
      var end = length - stringSize(omission);
      if (end < 1) {
        return omission;
      }
      var result = strSymbols
        ? castSlice(strSymbols, 0, end).join('')
        : string.slice(0, end);

      if (separator === undefined) {
        return result + omission;
      }
      if (strSymbols) {
        end += (result.length - end);
      }
      if (isRegExp(separator)) {
        if (string.slice(end).search(separator)) {
          var match,
              substring = result;

          if (!separator.global) {
            separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');
          }
          separator.lastIndex = 0;
          while ((match = separator.exec(substring))) {
            var newEnd = match.index;
          }
          result = result.slice(0, newEnd === undefined ? end : newEnd);
        }
      } else if (string.indexOf(baseToString(separator), end) != end) {
        var index = result.lastIndexOf(separator);
        if (index > -1) {
          result = result.slice(0, index);
        }
      }
      return result + omission;
    }

    /**
     * The inverse of `_.escape`; this method converts the HTML entities
     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to
     * their corresponding characters.
     *
     * **Note:** No other HTML entities are unescaped. To unescape additional
     * HTML entities use a third-party library like [_he_](https://mths.be/he).
     *
     * @static
     * @memberOf _
     * @since 0.6.0
     * @category String
     * @param {string} [string=''] The string to unescape.
     * @returns {string} Returns the unescaped string.
     * @example
     *
     * _.unescape('fred, barney, &amp; pebbles');
     * // => 'fred, barney, & pebbles'
     */
    function unescape(string) {
      string = toString(string);
      return (string && reHasEscapedHtml.test(string))
        ? string.replace(reEscapedHtml, unescapeHtmlChar)
        : string;
    }

    /**
     * Converts `string`, as space separated words, to upper case.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the upper cased string.
     * @example
     *
     * _.upperCase('--foo-bar');
     * // => 'FOO BAR'
     *
     * _.upperCase('fooBar');
     * // => 'FOO BAR'
     *
     * _.upperCase('__foo_bar__');
     * // => 'FOO BAR'
     */
    var upperCase = createCompounder(function(result, word, index) {
      return result + (index ? ' ' : '') + word.toUpperCase();
    });

    /**
     * Converts the first character of `string` to upper case.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the converted string.
     * @example
     *
     * _.upperFirst('fred');
     * // => 'Fred'
     *
     * _.upperFirst('FRED');
     * // => 'FRED'
     */
    var upperFirst = createCaseFirst('toUpperCase');

    /**
     * Splits `string` into an array of its words.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to inspect.
     * @param {RegExp|string} [pattern] The pattern to match words.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the words of `string`.
     * @example
     *
     * _.words('fred, barney, & pebbles');
     * // => ['fred', 'barney', 'pebbles']
     *
     * _.words('fred, barney, & pebbles', /[^, ]+/g);
     * // => ['fred', 'barney', '&', 'pebbles']
     */
    function words(string, pattern, guard) {
      string = toString(string);
      pattern = guard ? undefined : pattern;

      if (pattern === undefined) {
        return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);
      }
      return string.match(pattern) || [];
    }

    /*------------------------------------------------------------------------*/

    /**
     * Attempts to invoke `func`, returning either the result or the caught error
     * object. Any additional arguments are provided to `func` when it's invoked.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Util
     * @param {Function} func The function to attempt.
     * @param {...*} [args] The arguments to invoke `func` with.
     * @returns {*} Returns the `func` result or error object.
     * @example
     *
     * // Avoid throwing errors for invalid selectors.
     * var elements = _.attempt(function(selector) {
     *   return document.querySelectorAll(selector);
     * }, '>_>');
     *
     * if (_.isError(elements)) {
     *   elements = [];
     * }
     */
    var attempt = baseRest(function(func, args) {
      try {
        return apply(func, undefined, args);
      } catch (e) {
        return isError(e) ? e : new Error(e);
      }
    });

    /**
     * Binds methods of an object to the object itself, overwriting the existing
     * method.
     *
     * **Note:** This method doesn't set the "length" property of bound functions.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {Object} object The object to bind and assign the bound methods to.
     * @param {...(string|string[])} methodNames The object method names to bind.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var view = {
     *   'label': 'docs',
     *   'click': function() {
     *     console.log('clicked ' + this.label);
     *   }
     * };
     *
     * _.bindAll(view, ['click']);
     * jQuery(element).on('click', view.click);
     * // => Logs 'clicked docs' when clicked.
     */
    var bindAll = flatRest(function(object, methodNames) {
      arrayEach(methodNames, function(key) {
        key = toKey(key);
        baseAssignValue(object, key, bind(object[key], object));
      });
      return object;
    });

    /**
     * Creates a function that iterates over `pairs` and invokes the corresponding
     * function of the first predicate to return truthy. The predicate-function
     * pairs are invoked with the `this` binding and arguments of the created
     * function.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {Array} pairs The predicate-function pairs.
     * @returns {Function} Returns the new composite function.
     * @example
     *
     * var func = _.cond([
     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],
     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],
     *   [_.stubTrue,                      _.constant('no match')]
     * ]);
     *
     * func({ 'a': 1, 'b': 2 });
     * // => 'matches A'
     *
     * func({ 'a': 0, 'b': 1 });
     * // => 'matches B'
     *
     * func({ 'a': '1', 'b': '2' });
     * // => 'no match'
     */
    function cond(pairs) {
      var length = pairs == null ? 0 : pairs.length,
          toIteratee = getIteratee();

      pairs = !length ? [] : arrayMap(pairs, function(pair) {
        if (typeof pair[1] != 'function') {
          throw new TypeError(FUNC_ERROR_TEXT);
        }
        return [toIteratee(pair[0]), pair[1]];
      });

      return baseRest(function(args) {
        var index = -1;
        while (++index < length) {
          var pair = pairs[index];
          if (apply(pair[0], this, args)) {
            return apply(pair[1], this, args);
          }
        }
      });
    }

    /**
     * Creates a function that invokes the predicate properties of `source` with
     * the corresponding property values of a given object, returning `true` if
     * all predicates return truthy, else `false`.
     *
     * **Note:** The created function is equivalent to `_.conformsTo` with
     * `source` partially applied.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {Object} source The object of property predicates to conform to.
     * @returns {Function} Returns the new spec function.
     * @example
     *
     * var objects = [
     *   { 'a': 2, 'b': 1 },
     *   { 'a': 1, 'b': 2 }
     * ];
     *
     * _.filter(objects, _.conforms({ 'b': function(n) { return n > 1; } }));
     * // => [{ 'a': 1, 'b': 2 }]
     */
    function conforms(source) {
      return baseConforms(baseClone(source, CLONE_DEEP_FLAG));
    }

    /**
     * Creates a function that returns `value`.
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Util
     * @param {*} value The value to return from the new function.
     * @returns {Function} Returns the new constant function.
     * @example
     *
     * var objects = _.times(2, _.constant({ 'a': 1 }));
     *
     * console.log(objects);
     * // => [{ 'a': 1 }, { 'a': 1 }]
     *
     * console.log(objects[0] === objects[1]);
     * // => true
     */
    function constant(value) {
      return function() {
        return value;
      };
    }

    /**
     * Checks `value` to determine whether a default value should be returned in
     * its place. The `defaultValue` is returned if `value` is `NaN`, `null`,
     * or `undefined`.
     *
     * @static
     * @memberOf _
     * @since 4.14.0
     * @category Util
     * @param {*} value The value to check.
     * @param {*} defaultValue The default value.
     * @returns {*} Returns the resolved value.
     * @example
     *
     * _.defaultTo(1, 10);
     * // => 1
     *
     * _.defaultTo(undefined, 10);
     * // => 10
     */
    function defaultTo(value, defaultValue) {
      return (value == null || value !== value) ? defaultValue : value;
    }

    /**
     * Creates a function that returns the result of invoking the given functions
     * with the `this` binding of the created function, where each successive
     * invocation is supplied the return value of the previous.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Util
     * @param {...(Function|Function[])} [funcs] The functions to invoke.
     * @returns {Function} Returns the new composite function.
     * @see _.flowRight
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var addSquare = _.flow([_.add, square]);
     * addSquare(1, 2);
     * // => 9
     */
    var flow = createFlow();

    /**
     * This method is like `_.flow` except that it creates a function that
     * invokes the given functions from right to left.
     *
     * @static
     * @since 3.0.0
     * @memberOf _
     * @category Util
     * @param {...(Function|Function[])} [funcs] The functions to invoke.
     * @returns {Function} Returns the new composite function.
     * @see _.flow
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var addSquare = _.flowRight([square, _.add]);
     * addSquare(1, 2);
     * // => 9
     */
    var flowRight = createFlow(true);

    /**
     * This method returns the first argument it receives.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {*} value Any value.
     * @returns {*} Returns `value`.
     * @example
     *
     * var object = { 'a': 1 };
     *
     * console.log(_.identity(object) === object);
     * // => true
     */
    function identity(value) {
      return value;
    }

    /**
     * Creates a function that invokes `func` with the arguments of the created
     * function. If `func` is a property name, the created function returns the
     * property value for a given element. If `func` is an array or object, the
     * created function returns `true` for elements that contain the equivalent
     * source properties, otherwise it returns `false`.
     *
     * @static
     * @since 4.0.0
     * @memberOf _
     * @category Util
     * @param {*} [func=_.identity] The value to convert to a callback.
     * @returns {Function} Returns the callback.
     * @example
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36, 'active': true },
     *   { 'user': 'fred',   'age': 40, 'active': false }
     * ];
     *
     * // The `_.matches` iteratee shorthand.
     * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));
     * // => [{ 'user': 'barney', 'age': 36, 'active': true }]
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.filter(users, _.iteratee(['user', 'fred']));
     * // => [{ 'user': 'fred', 'age': 40 }]
     *
     * // The `_.property` iteratee shorthand.
     * _.map(users, _.iteratee('user'));
     * // => ['barney', 'fred']
     *
     * // Create custom iteratee shorthands.
     * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {
     *   return !_.isRegExp(func) ? iteratee(func) : function(string) {
     *     return func.test(string);
     *   };
     * });
     *
     * _.filter(['abc', 'def'], /ef/);
     * // => ['def']
     */
    function iteratee(func) {
      return baseIteratee(typeof func == 'function' ? func : baseClone(func, CLONE_DEEP_FLAG));
    }

    /**
     * Creates a function that performs a partial deep comparison between a given
     * object and `source`, returning `true` if the given object has equivalent
     * property values, else `false`.
     *
     * **Note:** The created function is equivalent to `_.isMatch` with `source`
     * partially applied.
     *
     * Partial comparisons will match empty array and empty object `source`
     * values against any array or object value, respectively. See `_.isEqual`
     * for a list of supported value comparisons.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Util
     * @param {Object} source The object of property values to match.
     * @returns {Function} Returns the new spec function.
     * @example
     *
     * var objects = [
     *   { 'a': 1, 'b': 2, 'c': 3 },
     *   { 'a': 4, 'b': 5, 'c': 6 }
     * ];
     *
     * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));
     * // => [{ 'a': 4, 'b': 5, 'c': 6 }]
     */
    function matches(source) {
      return baseMatches(baseClone(source, CLONE_DEEP_FLAG));
    }

    /**
     * Creates a function that performs a partial deep comparison between the
     * value at `path` of a given object to `srcValue`, returning `true` if the
     * object value is equivalent, else `false`.
     *
     * **Note:** Partial comparisons will match empty array and empty object
     * `srcValue` values against any array or object value, respectively. See
     * `_.isEqual` for a list of supported value comparisons.
     *
     * @static
     * @memberOf _
     * @since 3.2.0
     * @category Util
     * @param {Array|string} path The path of the property to get.
     * @param {*} srcValue The value to match.
     * @returns {Function} Returns the new spec function.
     * @example
     *
     * var objects = [
     *   { 'a': 1, 'b': 2, 'c': 3 },
     *   { 'a': 4, 'b': 5, 'c': 6 }
     * ];
     *
     * _.find(objects, _.matchesProperty('a', 4));
     * // => { 'a': 4, 'b': 5, 'c': 6 }
     */
    function matchesProperty(path, srcValue) {
      return baseMatchesProperty(path, baseClone(srcValue, CLONE_DEEP_FLAG));
    }

    /**
     * Creates a function that invokes the method at `path` of a given object.
     * Any additional arguments are provided to the invoked method.
     *
     * @static
     * @memberOf _
     * @since 3.7.0
     * @category Util
     * @param {Array|string} path The path of the method to invoke.
     * @param {...*} [args] The arguments to invoke the method with.
     * @returns {Function} Returns the new invoker function.
     * @example
     *
     * var objects = [
     *   { 'a': { 'b': _.constant(2) } },
     *   { 'a': { 'b': _.constant(1) } }
     * ];
     *
     * _.map(objects, _.method('a.b'));
     * // => [2, 1]
     *
     * _.map(objects, _.method(['a', 'b']));
     * // => [2, 1]
     */
    var method = baseRest(function(path, args) {
      return function(object) {
        return baseInvoke(object, path, args);
      };
    });

    /**
     * The opposite of `_.method`; this method creates a function that invokes
     * the method at a given path of `object`. Any additional arguments are
     * provided to the invoked method.
     *
     * @static
     * @memberOf _
     * @since 3.7.0
     * @category Util
     * @param {Object} object The object to query.
     * @param {...*} [args] The arguments to invoke the method with.
     * @returns {Function} Returns the new invoker function.
     * @example
     *
     * var array = _.times(3, _.constant),
     *     object = { 'a': array, 'b': array, 'c': array };
     *
     * _.map(['a[2]', 'c[0]'], _.methodOf(object));
     * // => [2, 0]
     *
     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));
     * // => [2, 0]
     */
    var methodOf = baseRest(function(object, args) {
      return function(path) {
        return baseInvoke(object, path, args);
      };
    });

    /**
     * Adds all own enumerable string keyed function properties of a source
     * object to the destination object. If `object` is a function, then methods
     * are added to its prototype as well.
     *
     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to
     * avoid conflicts caused by modifying the original.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {Function|Object} [object=lodash] The destination object.
     * @param {Object} source The object of functions to add.
     * @param {Object} [options={}] The options object.
     * @param {boolean} [options.chain=true] Specify whether mixins are chainable.
     * @returns {Function|Object} Returns `object`.
     * @example
     *
     * function vowels(string) {
     *   return _.filter(string, function(v) {
     *     return /[aeiou]/i.test(v);
     *   });
     * }
     *
     * _.mixin({ 'vowels': vowels });
     * _.vowels('fred');
     * // => ['e']
     *
     * _('fred').vowels().value();
     * // => ['e']
     *
     * _.mixin({ 'vowels': vowels }, { 'chain': false });
     * _('fred').vowels();
     * // => ['e']
     */
    function mixin(object, source, options) {
      var props = keys(source),
          methodNames = baseFunctions(source, props);

      if (options == null &&
          !(isObject(source) && (methodNames.length || !props.length))) {
        options = source;
        source = object;
        object = this;
        methodNames = baseFunctions(source, keys(source));
      }
      var chain = !(isObject(options) && 'chain' in options) || !!options.chain,
          isFunc = isFunction(object);

      arrayEach(methodNames, function(methodName) {
        var func = source[methodName];
        object[methodName] = func;
        if (isFunc) {
          object.prototype[methodName] = function() {
            var chainAll = this.__chain__;
            if (chain || chainAll) {
              var result = object(this.__wrapped__),
                  actions = result.__actions__ = copyArray(this.__actions__);

              actions.push({ 'func': func, 'args': arguments, 'thisArg': object });
              result.__chain__ = chainAll;
              return result;
            }
            return func.apply(object, arrayPush([this.value()], arguments));
          };
        }
      });

      return object;
    }

    /**
     * Reverts the `_` variable to its previous value and returns a reference to
     * the `lodash` function.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @returns {Function} Returns the `lodash` function.
     * @example
     *
     * var lodash = _.noConflict();
     */
    function noConflict() {
      if (root._ === this) {
        root._ = oldDash;
      }
      return this;
    }

    /**
     * This method returns `undefined`.
     *
     * @static
     * @memberOf _
     * @since 2.3.0
     * @category Util
     * @example
     *
     * _.times(2, _.noop);
     * // => [undefined, undefined]
     */
    function noop() {
      // No operation performed.
    }

    /**
     * Creates a function that gets the argument at index `n`. If `n` is negative,
     * the nth argument from the end is returned.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {number} [n=0] The index of the argument to return.
     * @returns {Function} Returns the new pass-thru function.
     * @example
     *
     * var func = _.nthArg(1);
     * func('a', 'b', 'c', 'd');
     * // => 'b'
     *
     * var func = _.nthArg(-2);
     * func('a', 'b', 'c', 'd');
     * // => 'c'
     */
    function nthArg(n) {
      n = toInteger(n);
      return baseRest(function(args) {
        return baseNth(args, n);
      });
    }

    /**
     * Creates a function that invokes `iteratees` with the arguments it receives
     * and returns their results.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {...(Function|Function[])} [iteratees=[_.identity]]
     *  The iteratees to invoke.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var func = _.over([Math.max, Math.min]);
     *
     * func(1, 2, 3, 4);
     * // => [4, 1]
     */
    var over = createOver(arrayMap);

    /**
     * Creates a function that checks if **all** of the `predicates` return
     * truthy when invoked with the arguments it receives.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {...(Function|Function[])} [predicates=[_.identity]]
     *  The predicates to check.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var func = _.overEvery([Boolean, isFinite]);
     *
     * func('1');
     * // => true
     *
     * func(null);
     * // => false
     *
     * func(NaN);
     * // => false
     */
    var overEvery = createOver(arrayEvery);

    /**
     * Creates a function that checks if **any** of the `predicates` return
     * truthy when invoked with the arguments it receives.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {...(Function|Function[])} [predicates=[_.identity]]
     *  The predicates to check.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var func = _.overSome([Boolean, isFinite]);
     *
     * func('1');
     * // => true
     *
     * func(null);
     * // => true
     *
     * func(NaN);
     * // => false
     */
    var overSome = createOver(arraySome);

    /**
     * Creates a function that returns the value at `path` of a given object.
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Util
     * @param {Array|string} path The path of the property to get.
     * @returns {Function} Returns the new accessor function.
     * @example
     *
     * var objects = [
     *   { 'a': { 'b': 2 } },
     *   { 'a': { 'b': 1 } }
     * ];
     *
     * _.map(objects, _.property('a.b'));
     * // => [2, 1]
     *
     * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');
     * // => [1, 2]
     */
    function property(path) {
      return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);
    }

    /**
     * The opposite of `_.property`; this method creates a function that returns
     * the value at a given path of `object`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Util
     * @param {Object} object The object to query.
     * @returns {Function} Returns the new accessor function.
     * @example
     *
     * var array = [0, 1, 2],
     *     object = { 'a': array, 'b': array, 'c': array };
     *
     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));
     * // => [2, 0]
     *
     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));
     * // => [2, 0]
     */
    function propertyOf(object) {
      return function(path) {
        return object == null ? undefined : baseGet(object, path);
      };
    }

    /**
     * Creates an array of numbers (positive and/or negative) progressing from
     * `start` up to, but not including, `end`. A step of `-1` is used if a negative
     * `start` is specified without an `end` or `step`. If `end` is not specified,
     * it's set to `start` with `start` then set to `0`.
     *
     * **Note:** JavaScript follows the IEEE-754 standard for resolving
     * floating-point values which can produce unexpected results.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {number} [start=0] The start of the range.
     * @param {number} end The end of the range.
     * @param {number} [step=1] The value to increment or decrement by.
     * @returns {Array} Returns the range of numbers.
     * @see _.inRange, _.rangeRight
     * @example
     *
     * _.range(4);
     * // => [0, 1, 2, 3]
     *
     * _.range(-4);
     * // => [0, -1, -2, -3]
     *
     * _.range(1, 5);
     * // => [1, 2, 3, 4]
     *
     * _.range(0, 20, 5);
     * // => [0, 5, 10, 15]
     *
     * _.range(0, -4, -1);
     * // => [0, -1, -2, -3]
     *
     * _.range(1, 4, 0);
     * // => [1, 1, 1]
     *
     * _.range(0);
     * // => []
     */
    var range = createRange();

    /**
     * This method is like `_.range` except that it populates values in
     * descending order.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {number} [start=0] The start of the range.
     * @param {number} end The end of the range.
     * @param {number} [step=1] The value to increment or decrement by.
     * @returns {Array} Returns the range of numbers.
     * @see _.inRange, _.range
     * @example
     *
     * _.rangeRight(4);
     * // => [3, 2, 1, 0]
     *
     * _.rangeRight(-4);
     * // => [-3, -2, -1, 0]
     *
     * _.rangeRight(1, 5);
     * // => [4, 3, 2, 1]
     *
     * _.rangeRight(0, 20, 5);
     * // => [15, 10, 5, 0]
     *
     * _.rangeRight(0, -4, -1);
     * // => [-3, -2, -1, 0]
     *
     * _.rangeRight(1, 4, 0);
     * // => [1, 1, 1]
     *
     * _.rangeRight(0);
     * // => []
     */
    var rangeRight = createRange(true);

    /**
     * This method returns a new empty array.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {Array} Returns the new empty array.
     * @example
     *
     * var arrays = _.times(2, _.stubArray);
     *
     * console.log(arrays);
     * // => [[], []]
     *
     * console.log(arrays[0] === arrays[1]);
     * // => false
     */
    function stubArray() {
      return [];
    }

    /**
     * This method returns `false`.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {boolean} Returns `false`.
     * @example
     *
     * _.times(2, _.stubFalse);
     * // => [false, false]
     */
    function stubFalse() {
      return false;
    }

    /**
     * This method returns a new empty object.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {Object} Returns the new empty object.
     * @example
     *
     * var objects = _.times(2, _.stubObject);
     *
     * console.log(objects);
     * // => [{}, {}]
     *
     * console.log(objects[0] === objects[1]);
     * // => false
     */
    function stubObject() {
      return {};
    }

    /**
     * This method returns an empty string.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {string} Returns the empty string.
     * @example
     *
     * _.times(2, _.stubString);
     * // => ['', '']
     */
    function stubString() {
      return '';
    }

    /**
     * This method returns `true`.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {boolean} Returns `true`.
     * @example
     *
     * _.times(2, _.stubTrue);
     * // => [true, true]
     */
    function stubTrue() {
      return true;
    }

    /**
     * Invokes the iteratee `n` times, returning an array of the results of
     * each invocation. The iteratee is invoked with one argument; (index).
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {number} n The number of times to invoke `iteratee`.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the array of results.
     * @example
     *
     * _.times(3, String);
     * // => ['0', '1', '2']
     *
     *  _.times(4, _.constant(0));
     * // => [0, 0, 0, 0]
     */
    function times(n, iteratee) {
      n = toInteger(n);
      if (n < 1 || n > MAX_SAFE_INTEGER) {
        return [];
      }
      var index = MAX_ARRAY_LENGTH,
          length = nativeMin(n, MAX_ARRAY_LENGTH);

      iteratee = getIteratee(iteratee);
      n -= MAX_ARRAY_LENGTH;

      var result = baseTimes(length, iteratee);
      while (++index < n) {
        iteratee(index);
      }
      return result;
    }

    /**
     * Converts `value` to a property path array.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {*} value The value to convert.
     * @returns {Array} Returns the new property path array.
     * @example
     *
     * _.toPath('a.b.c');
     * // => ['a', 'b', 'c']
     *
     * _.toPath('a[0].b.c');
     * // => ['a', '0', 'b', 'c']
     */
    function toPath(value) {
      if (isArray(value)) {
        return arrayMap(value, toKey);
      }
      return isSymbol(value) ? [value] : copyArray(stringToPath(toString(value)));
    }

    /**
     * Generates a unique ID. If `prefix` is given, the ID is appended to it.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {string} [prefix=''] The value to prefix the ID with.
     * @returns {string} Returns the unique ID.
     * @example
     *
     * _.uniqueId('contact_');
     * // => 'contact_104'
     *
     * _.uniqueId();
     * // => '105'
     */
    function uniqueId(prefix) {
      var id = ++idCounter;
      return toString(prefix) + id;
    }

    /*------------------------------------------------------------------------*/

    /**
     * Adds two numbers.
     *
     * @static
     * @memberOf _
     * @since 3.4.0
     * @category Math
     * @param {number} augend The first number in an addition.
     * @param {number} addend The second number in an addition.
     * @returns {number} Returns the total.
     * @example
     *
     * _.add(6, 4);
     * // => 10
     */
    var add = createMathOperation(function(augend, addend) {
      return augend + addend;
    }, 0);

    /**
     * Computes `number` rounded up to `precision`.
     *
     * @static
     * @memberOf _
     * @since 3.10.0
     * @category Math
     * @param {number} number The number to round up.
     * @param {number} [precision=0] The precision to round up to.
     * @returns {number} Returns the rounded up number.
     * @example
     *
     * _.ceil(4.006);
     * // => 5
     *
     * _.ceil(6.004, 2);
     * // => 6.01
     *
     * _.ceil(6040, -2);
     * // => 6100
     */
    var ceil = createRound('ceil');

    /**
     * Divide two numbers.
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Math
     * @param {number} dividend The first number in a division.
     * @param {number} divisor The second number in a division.
     * @returns {number} Returns the quotient.
     * @example
     *
     * _.divide(6, 4);
     * // => 1.5
     */
    var divide = createMathOperation(function(dividend, divisor) {
      return dividend / divisor;
    }, 1);

    /**
     * Computes `number` rounded down to `precision`.
     *
     * @static
     * @memberOf _
     * @since 3.10.0
     * @category Math
     * @param {number} number The number to round down.
     * @param {number} [precision=0] The precision to round down to.
     * @returns {number} Returns the rounded down number.
     * @example
     *
     * _.floor(4.006);
     * // => 4
     *
     * _.floor(0.046, 2);
     * // => 0.04
     *
     * _.floor(4060, -2);
     * // => 4000
     */
    var floor = createRound('floor');

    /**
     * Computes the maximum value of `array`. If `array` is empty or falsey,
     * `undefined` is returned.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Math
     * @param {Array} array The array to iterate over.
     * @returns {*} Returns the maximum value.
     * @example
     *
     * _.max([4, 2, 8, 6]);
     * // => 8
     *
     * _.max([]);
     * // => undefined
     */
    function max(array) {
      return (array && array.length)
        ? baseExtremum(array, identity, baseGt)
        : undefined;
    }

    /**
     * This method is like `_.max` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the criterion by which
     * the value is ranked. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {*} Returns the maximum value.
     * @example
     *
     * var objects = [{ 'n': 1 }, { 'n': 2 }];
     *
     * _.maxBy(objects, function(o) { return o.n; });
     * // => { 'n': 2 }
     *
     * // The `_.property` iteratee shorthand.
     * _.maxBy(objects, 'n');
     * // => { 'n': 2 }
     */
    function maxBy(array, iteratee) {
      return (array && array.length)
        ? baseExtremum(array, getIteratee(iteratee, 2), baseGt)
        : undefined;
    }

    /**
     * Computes the mean of the values in `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @returns {number} Returns the mean.
     * @example
     *
     * _.mean([4, 2, 8, 6]);
     * // => 5
     */
    function mean(array) {
      return baseMean(array, identity);
    }

    /**
     * This method is like `_.mean` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the value to be averaged.
     * The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {number} Returns the mean.
     * @example
     *
     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];
     *
     * _.meanBy(objects, function(o) { return o.n; });
     * // => 5
     *
     * // The `_.property` iteratee shorthand.
     * _.meanBy(objects, 'n');
     * // => 5
     */
    function meanBy(array, iteratee) {
      return baseMean(array, getIteratee(iteratee, 2));
    }

    /**
     * Computes the minimum value of `array`. If `array` is empty or falsey,
     * `undefined` is returned.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Math
     * @param {Array} array The array to iterate over.
     * @returns {*} Returns the minimum value.
     * @example
     *
     * _.min([4, 2, 8, 6]);
     * // => 2
     *
     * _.min([]);
     * // => undefined
     */
    function min(array) {
      return (array && array.length)
        ? baseExtremum(array, identity, baseLt)
        : undefined;
    }

    /**
     * This method is like `_.min` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the criterion by which
     * the value is ranked. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {*} Returns the minimum value.
     * @example
     *
     * var objects = [{ 'n': 1 }, { 'n': 2 }];
     *
     * _.minBy(objects, function(o) { return o.n; });
     * // => { 'n': 1 }
     *
     * // The `_.property` iteratee shorthand.
     * _.minBy(objects, 'n');
     * // => { 'n': 1 }
     */
    function minBy(array, iteratee) {
      return (array && array.length)
        ? baseExtremum(array, getIteratee(iteratee, 2), baseLt)
        : undefined;
    }

    /**
     * Multiply two numbers.
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Math
     * @param {number} multiplier The first number in a multiplication.
     * @param {number} multiplicand The second number in a multiplication.
     * @returns {number} Returns the product.
     * @example
     *
     * _.multiply(6, 4);
     * // => 24
     */
    var multiply = createMathOperation(function(multiplier, multiplicand) {
      return multiplier * multiplicand;
    }, 1);

    /**
     * Computes `number` rounded to `precision`.
     *
     * @static
     * @memberOf _
     * @since 3.10.0
     * @category Math
     * @param {number} number The number to round.
     * @param {number} [precision=0] The precision to round to.
     * @returns {number} Returns the rounded number.
     * @example
     *
     * _.round(4.006);
     * // => 4
     *
     * _.round(4.006, 2);
     * // => 4.01
     *
     * _.round(4060, -2);
     * // => 4100
     */
    var round = createRound('round');

    /**
     * Subtract two numbers.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {number} minuend The first number in a subtraction.
     * @param {number} subtrahend The second number in a subtraction.
     * @returns {number} Returns the difference.
     * @example
     *
     * _.subtract(6, 4);
     * // => 2
     */
    var subtract = createMathOperation(function(minuend, subtrahend) {
      return minuend - subtrahend;
    }, 0);

    /**
     * Computes the sum of the values in `array`.
     *
     * @static
     * @memberOf _
     * @since 3.4.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @returns {number} Returns the sum.
     * @example
     *
     * _.sum([4, 2, 8, 6]);
     * // => 20
     */
    function sum(array) {
      return (array && array.length)
        ? baseSum(array, identity)
        : 0;
    }

    /**
     * This method is like `_.sum` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the value to be summed.
     * The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {number} Returns the sum.
     * @example
     *
     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];
     *
     * _.sumBy(objects, function(o) { return o.n; });
     * // => 20
     *
     * // The `_.property` iteratee shorthand.
     * _.sumBy(objects, 'n');
     * // => 20
     */
    function sumBy(array, iteratee) {
      return (array && array.length)
        ? baseSum(array, getIteratee(iteratee, 2))
        : 0;
    }

    /*------------------------------------------------------------------------*/

    // Add methods that return wrapped values in chain sequences.
    lodash.after = after;
    lodash.ary = ary;
    lodash.assign = assign;
    lodash.assignIn = assignIn;
    lodash.assignInWith = assignInWith;
    lodash.assignWith = assignWith;
    lodash.at = at;
    lodash.before = before;
    lodash.bind = bind;
    lodash.bindAll = bindAll;
    lodash.bindKey = bindKey;
    lodash.castArray = castArray;
    lodash.chain = chain;
    lodash.chunk = chunk;
    lodash.compact = compact;
    lodash.concat = concat;
    lodash.cond = cond;
    lodash.conforms = conforms;
    lodash.constant = constant;
    lodash.countBy = countBy;
    lodash.create = create;
    lodash.curry = curry;
    lodash.curryRight = curryRight;
    lodash.debounce = debounce;
    lodash.defaults = defaults;
    lodash.defaultsDeep = defaultsDeep;
    lodash.defer = defer;
    lodash.delay = delay;
    lodash.difference = difference;
    lodash.differenceBy = differenceBy;
    lodash.differenceWith = differenceWith;
    lodash.drop = drop;
    lodash.dropRight = dropRight;
    lodash.dropRightWhile = dropRightWhile;
    lodash.dropWhile = dropWhile;
    lodash.fill = fill;
    lodash.filter = filter;
    lodash.flatMap = flatMap;
    lodash.flatMapDeep = flatMapDeep;
    lodash.flatMapDepth = flatMapDepth;
    lodash.flatten = flatten;
    lodash.flattenDeep = flattenDeep;
    lodash.flattenDepth = flattenDepth;
    lodash.flip = flip;
    lodash.flow = flow;
    lodash.flowRight = flowRight;
    lodash.fromPairs = fromPairs;
    lodash.functions = functions;
    lodash.functionsIn = functionsIn;
    lodash.groupBy = groupBy;
    lodash.initial = initial;
    lodash.intersection = intersection;
    lodash.intersectionBy = intersectionBy;
    lodash.intersectionWith = intersectionWith;
    lodash.invert = invert;
    lodash.invertBy = invertBy;
    lodash.invokeMap = invokeMap;
    lodash.iteratee = iteratee;
    lodash.keyBy = keyBy;
    lodash.keys = keys;
    lodash.keysIn = keysIn;
    lodash.map = map;
    lodash.mapKeys = mapKeys;
    lodash.mapValues = mapValues;
    lodash.matches = matches;
    lodash.matchesProperty = matchesProperty;
    lodash.memoize = memoize;
    lodash.merge = merge;
    lodash.mergeWith = mergeWith;
    lodash.method = method;
    lodash.methodOf = methodOf;
    lodash.mixin = mixin;
    lodash.negate = negate;
    lodash.nthArg = nthArg;
    lodash.omit = omit;
    lodash.omitBy = omitBy;
    lodash.once = once;
    lodash.orderBy = orderBy;
    lodash.over = over;
    lodash.overArgs = overArgs;
    lodash.overEvery = overEvery;
    lodash.overSome = overSome;
    lodash.partial = partial;
    lodash.partialRight = partialRight;
    lodash.partition = partition;
    lodash.pick = pick;
    lodash.pickBy = pickBy;
    lodash.property = property;
    lodash.propertyOf = propertyOf;
    lodash.pull = pull;
    lodash.pullAll = pullAll;
    lodash.pullAllBy = pullAllBy;
    lodash.pullAllWith = pullAllWith;
    lodash.pullAt = pullAt;
    lodash.range = range;
    lodash.rangeRight = rangeRight;
    lodash.rearg = rearg;
    lodash.reject = reject;
    lodash.remove = remove;
    lodash.rest = rest;
    lodash.reverse = reverse;
    lodash.sampleSize = sampleSize;
    lodash.set = set;
    lodash.setWith = setWith;
    lodash.shuffle = shuffle;
    lodash.slice = slice;
    lodash.sortBy = sortBy;
    lodash.sortedUniq = sortedUniq;
    lodash.sortedUniqBy = sortedUniqBy;
    lodash.split = split;
    lodash.spread = spread;
    lodash.tail = tail;
    lodash.take = take;
    lodash.takeRight = takeRight;
    lodash.takeRightWhile = takeRightWhile;
    lodash.takeWhile = takeWhile;
    lodash.tap = tap;
    lodash.throttle = throttle;
    lodash.thru = thru;
    lodash.toArray = toArray;
    lodash.toPairs = toPairs;
    lodash.toPairsIn = toPairsIn;
    lodash.toPath = toPath;
    lodash.toPlainObject = toPlainObject;
    lodash.transform = transform;
    lodash.unary = unary;
    lodash.union = union;
    lodash.unionBy = unionBy;
    lodash.unionWith = unionWith;
    lodash.uniq = uniq;
    lodash.uniqBy = uniqBy;
    lodash.uniqWith = uniqWith;
    lodash.unset = unset;
    lodash.unzip = unzip;
    lodash.unzipWith = unzipWith;
    lodash.update = update;
    lodash.updateWith = updateWith;
    lodash.values = values;
    lodash.valuesIn = valuesIn;
    lodash.without = without;
    lodash.words = words;
    lodash.wrap = wrap;
    lodash.xor = xor;
    lodash.xorBy = xorBy;
    lodash.xorWith = xorWith;
    lodash.zip = zip;
    lodash.zipObject = zipObject;
    lodash.zipObjectDeep = zipObjectDeep;
    lodash.zipWith = zipWith;

    // Add aliases.
    lodash.entries = toPairs;
    lodash.entriesIn = toPairsIn;
    lodash.extend = assignIn;
    lodash.extendWith = assignInWith;

    // Add methods to `lodash.prototype`.
    mixin(lodash, lodash);

    /*------------------------------------------------------------------------*/

    // Add methods that return unwrapped values in chain sequences.
    lodash.add = add;
    lodash.attempt = attempt;
    lodash.camelCase = camelCase;
    lodash.capitalize = capitalize;
    lodash.ceil = ceil;
    lodash.clamp = clamp;
    lodash.clone = clone;
    lodash.cloneDeep = cloneDeep;
    lodash.cloneDeepWith = cloneDeepWith;
    lodash.cloneWith = cloneWith;
    lodash.conformsTo = conformsTo;
    lodash.deburr = deburr;
    lodash.defaultTo = defaultTo;
    lodash.divide = divide;
    lodash.endsWith = endsWith;
    lodash.eq = eq;
    lodash.escape = escape;
    lodash.escapeRegExp = escapeRegExp;
    lodash.every = every;
    lodash.find = find;
    lodash.findIndex = findIndex;
    lodash.findKey = findKey;
    lodash.findLast = findLast;
    lodash.findLastIndex = findLastIndex;
    lodash.findLastKey = findLastKey;
    lodash.floor = floor;
    lodash.forEach = forEach;
    lodash.forEachRight = forEachRight;
    lodash.forIn = forIn;
    lodash.forInRight = forInRight;
    lodash.forOwn = forOwn;
    lodash.forOwnRight = forOwnRight;
    lodash.get = get;
    lodash.gt = gt;
    lodash.gte = gte;
    lodash.has = has;
    lodash.hasIn = hasIn;
    lodash.head = head;
    lodash.identity = identity;
    lodash.includes = includes;
    lodash.indexOf = indexOf;
    lodash.inRange = inRange;
    lodash.invoke = invoke;
    lodash.isArguments = isArguments;
    lodash.isArray = isArray;
    lodash.isArrayBuffer = isArrayBuffer;
    lodash.isArrayLike = isArrayLike;
    lodash.isArrayLikeObject = isArrayLikeObject;
    lodash.isBoolean = isBoolean;
    lodash.isBuffer = isBuffer;
    lodash.isDate = isDate;
    lodash.isElement = isElement;
    lodash.isEmpty = isEmpty;
    lodash.isEqual = isEqual;
    lodash.isEqualWith = isEqualWith;
    lodash.isError = isError;
    lodash.isFinite = isFinite;
    lodash.isFunction = isFunction;
    lodash.isInteger = isInteger;
    lodash.isLength = isLength;
    lodash.isMap = isMap;
    lodash.isMatch = isMatch;
    lodash.isMatchWith = isMatchWith;
    lodash.isNaN = isNaN;
    lodash.isNative = isNative;
    lodash.isNil = isNil;
    lodash.isNull = isNull;
    lodash.isNumber = isNumber;
    lodash.isObject = isObject;
    lodash.isObjectLike = isObjectLike;
    lodash.isPlainObject = isPlainObject;
    lodash.isRegExp = isRegExp;
    lodash.isSafeInteger = isSafeInteger;
    lodash.isSet = isSet;
    lodash.isString = isString;
    lodash.isSymbol = isSymbol;
    lodash.isTypedArray = isTypedArray;
    lodash.isUndefined = isUndefined;
    lodash.isWeakMap = isWeakMap;
    lodash.isWeakSet = isWeakSet;
    lodash.join = join;
    lodash.kebabCase = kebabCase;
    lodash.last = last;
    lodash.lastIndexOf = lastIndexOf;
    lodash.lowerCase = lowerCase;
    lodash.lowerFirst = lowerFirst;
    lodash.lt = lt;
    lodash.lte = lte;
    lodash.max = max;
    lodash.maxBy = maxBy;
    lodash.mean = mean;
    lodash.meanBy = meanBy;
    lodash.min = min;
    lodash.minBy = minBy;
    lodash.stubArray = stubArray;
    lodash.stubFalse = stubFalse;
    lodash.stubObject = stubObject;
    lodash.stubString = stubString;
    lodash.stubTrue = stubTrue;
    lodash.multiply = multiply;
    lodash.nth = nth;
    lodash.noConflict = noConflict;
    lodash.noop = noop;
    lodash.now = now;
    lodash.pad = pad;
    lodash.padEnd = padEnd;
    lodash.padStart = padStart;
    lodash.parseInt = parseInt;
    lodash.random = random;
    lodash.reduce = reduce;
    lodash.reduceRight = reduceRight;
    lodash.repeat = repeat;
    lodash.replace = replace;
    lodash.result = result;
    lodash.round = round;
    lodash.runInContext = runInContext;
    lodash.sample = sample;
    lodash.size = size;
    lodash.snakeCase = snakeCase;
    lodash.some = some;
    lodash.sortedIndex = sortedIndex;
    lodash.sortedIndexBy = sortedIndexBy;
    lodash.sortedIndexOf = sortedIndexOf;
    lodash.sortedLastIndex = sortedLastIndex;
    lodash.sortedLastIndexBy = sortedLastIndexBy;
    lodash.sortedLastIndexOf = sortedLastIndexOf;
    lodash.startCase = startCase;
    lodash.startsWith = startsWith;
    lodash.subtract = subtract;
    lodash.sum = sum;
    lodash.sumBy = sumBy;
    lodash.template = template;
    lodash.times = times;
    lodash.toFinite = toFinite;
    lodash.toInteger = toInteger;
    lodash.toLength = toLength;
    lodash.toLower = toLower;
    lodash.toNumber = toNumber;
    lodash.toSafeInteger = toSafeInteger;
    lodash.toString = toString;
    lodash.toUpper = toUpper;
    lodash.trim = trim;
    lodash.trimEnd = trimEnd;
    lodash.trimStart = trimStart;
    lodash.truncate = truncate;
    lodash.unescape = unescape;
    lodash.uniqueId = uniqueId;
    lodash.upperCase = upperCase;
    lodash.upperFirst = upperFirst;

    // Add aliases.
    lodash.each = forEach;
    lodash.eachRight = forEachRight;
    lodash.first = head;

    mixin(lodash, (function() {
      var source = {};
      baseForOwn(lodash, function(func, methodName) {
        if (!hasOwnProperty.call(lodash.prototype, methodName)) {
          source[methodName] = func;
        }
      });
      return source;
    }()), { 'chain': false });

    /*------------------------------------------------------------------------*/

    /**
     * The semantic version number.
     *
     * @static
     * @memberOf _
     * @type {string}
     */
    lodash.VERSION = VERSION;

    // Assign default placeholders.
    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {
      lodash[methodName].placeholder = lodash;
    });

    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.
    arrayEach(['drop', 'take'], function(methodName, index) {
      LazyWrapper.prototype[methodName] = function(n) {
        n = n === undefined ? 1 : nativeMax(toInteger(n), 0);

        var result = (this.__filtered__ && !index)
          ? new LazyWrapper(this)
          : this.clone();

        if (result.__filtered__) {
          result.__takeCount__ = nativeMin(n, result.__takeCount__);
        } else {
          result.__views__.push({
            'size': nativeMin(n, MAX_ARRAY_LENGTH),
            'type': methodName + (result.__dir__ < 0 ? 'Right' : '')
          });
        }
        return result;
      };

      LazyWrapper.prototype[methodName + 'Right'] = function(n) {
        return this.reverse()[methodName](n).reverse();
      };
    });

    // Add `LazyWrapper` methods that accept an `iteratee` value.
    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {
      var type = index + 1,
          isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;

      LazyWrapper.prototype[methodName] = function(iteratee) {
        var result = this.clone();
        result.__iteratees__.push({
          'iteratee': getIteratee(iteratee, 3),
          'type': type
        });
        result.__filtered__ = result.__filtered__ || isFilter;
        return result;
      };
    });

    // Add `LazyWrapper` methods for `_.head` and `_.last`.
    arrayEach(['head', 'last'], function(methodName, index) {
      var takeName = 'take' + (index ? 'Right' : '');

      LazyWrapper.prototype[methodName] = function() {
        return this[takeName](1).value()[0];
      };
    });

    // Add `LazyWrapper` methods for `_.initial` and `_.tail`.
    arrayEach(['initial', 'tail'], function(methodName, index) {
      var dropName = 'drop' + (index ? '' : 'Right');

      LazyWrapper.prototype[methodName] = function() {
        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);
      };
    });

    LazyWrapper.prototype.compact = function() {
      return this.filter(identity);
    };

    LazyWrapper.prototype.find = function(predicate) {
      return this.filter(predicate).head();
    };

    LazyWrapper.prototype.findLast = function(predicate) {
      return this.reverse().find(predicate);
    };

    LazyWrapper.prototype.invokeMap = baseRest(function(path, args) {
      if (typeof path == 'function') {
        return new LazyWrapper(this);
      }
      return this.map(function(value) {
        return baseInvoke(value, path, args);
      });
    });

    LazyWrapper.prototype.reject = function(predicate) {
      return this.filter(negate(getIteratee(predicate)));
    };

    LazyWrapper.prototype.slice = function(start, end) {
      start = toInteger(start);

      var result = this;
      if (result.__filtered__ && (start > 0 || end < 0)) {
        return new LazyWrapper(result);
      }
      if (start < 0) {
        result = result.takeRight(-start);
      } else if (start) {
        result = result.drop(start);
      }
      if (end !== undefined) {
        end = toInteger(end);
        result = end < 0 ? result.dropRight(-end) : result.take(end - start);
      }
      return result;
    };

    LazyWrapper.prototype.takeRightWhile = function(predicate) {
      return this.reverse().takeWhile(predicate).reverse();
    };

    LazyWrapper.prototype.toArray = function() {
      return this.take(MAX_ARRAY_LENGTH);
    };

    // Add `LazyWrapper` methods to `lodash.prototype`.
    baseForOwn(LazyWrapper.prototype, function(func, methodName) {
      var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),
          isTaker = /^(?:head|last)$/.test(methodName),
          lodashFunc = lodash[isTaker ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName],
          retUnwrapped = isTaker || /^find/.test(methodName);

      if (!lodashFunc) {
        return;
      }
      lodash.prototype[methodName] = function() {
        var value = this.__wrapped__,
            args = isTaker ? [1] : arguments,
            isLazy = value instanceof LazyWrapper,
            iteratee = args[0],
            useLazy = isLazy || isArray(value);

        var interceptor = function(value) {
          var result = lodashFunc.apply(lodash, arrayPush([value], args));
          return (isTaker && chainAll) ? result[0] : result;
        };

        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {
          // Avoid lazy use if the iteratee has a "length" value other than `1`.
          isLazy = useLazy = false;
        }
        var chainAll = this.__chain__,
            isHybrid = !!this.__actions__.length,
            isUnwrapped = retUnwrapped && !chainAll,
            onlyLazy = isLazy && !isHybrid;

        if (!retUnwrapped && useLazy) {
          value = onlyLazy ? value : new LazyWrapper(this);
          var result = func.apply(value, args);
          result.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });
          return new LodashWrapper(result, chainAll);
        }
        if (isUnwrapped && onlyLazy) {
          return func.apply(this, args);
        }
        result = this.thru(interceptor);
        return isUnwrapped ? (isTaker ? result.value()[0] : result.value()) : result;
      };
    });

    // Add `Array` methods to `lodash.prototype`.
    arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {
      var func = arrayProto[methodName],
          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',
          retUnwrapped = /^(?:pop|shift)$/.test(methodName);

      lodash.prototype[methodName] = function() {
        var args = arguments;
        if (retUnwrapped && !this.__chain__) {
          var value = this.value();
          return func.apply(isArray(value) ? value : [], args);
        }
        return this[chainName](function(value) {
          return func.apply(isArray(value) ? value : [], args);
        });
      };
    });

    // Map minified method names to their real names.
    baseForOwn(LazyWrapper.prototype, function(func, methodName) {
      var lodashFunc = lodash[methodName];
      if (lodashFunc) {
        var key = (lodashFunc.name + ''),
            names = realNames[key] || (realNames[key] = []);

        names.push({ 'name': methodName, 'func': lodashFunc });
      }
    });

    realNames[createHybrid(undefined, WRAP_BIND_KEY_FLAG).name] = [{
      'name': 'wrapper',
      'func': undefined
    }];

    // Add methods to `LazyWrapper`.
    LazyWrapper.prototype.clone = lazyClone;
    LazyWrapper.prototype.reverse = lazyReverse;
    LazyWrapper.prototype.value = lazyValue;

    // Add chain sequence methods to the `lodash` wrapper.
    lodash.prototype.at = wrapperAt;
    lodash.prototype.chain = wrapperChain;
    lodash.prototype.commit = wrapperCommit;
    lodash.prototype.next = wrapperNext;
    lodash.prototype.plant = wrapperPlant;
    lodash.prototype.reverse = wrapperReverse;
    lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;

    // Add lazy aliases.
    lodash.prototype.first = lodash.prototype.head;

    if (symIterator) {
      lodash.prototype[symIterator] = wrapperToIterator;
    }
    return lodash;
  });

  /*--------------------------------------------------------------------------*/

  // Export lodash.
  var _ = runInContext();

  // Some AMD build optimizers, like r.js, check for condition patterns like:
  if (true) {
    // Expose Lodash on the global object to prevent errors when Lodash is
    // loaded by a script tag in the presence of an AMD loader.
    // See http://requirejs.org/docs/errors.html#mismatch for more details.
    // Use `_.noConflict` to remove Lodash from the global object.
    root._ = _;

    // Define as an anonymous module so, through path mapping, it can be
    // referenced as the "underscore" module.
    !(__WEBPACK_AMD_DEFINE_RESULT__ = function() {
      return _;
    }.call(exports, __webpack_require__, exports, module),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  }
  // Check for `exports` after `define` in case a build optimizer adds it.
  else if (freeModule) {
    // Export for Node.js.
    (freeModule.exports = _)._ = _;
    // Export for CommonJS support.
    freeExports._ = _;
  }
  else {
    // Export to the global object.
    root._ = _;
  }
}.call(this));

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(27), __webpack_require__(93)(module)))

/***/ }),
/* 8 */
/***/ (function(module, exports) {

// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
var global = module.exports = typeof window != 'undefined' && window.Math == Math
  ? window : typeof self != 'undefined' && self.Math == Math ? self
  // eslint-disable-next-line no-new-func
  : Function('return this')();
if (typeof __g == 'number') __g = global; // eslint-disable-line no-undef


/***/ }),
/* 9 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var bind = __webpack_require__(69);
var isBuffer = __webpack_require__(258);

/*global toString:true*/

// utils is a library of generic helper functions non-specific to axios

var toString = Object.prototype.toString;

/**
 * Determine if a value is an Array
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an Array, otherwise false
 */
function isArray(val) {
  return toString.call(val) === '[object Array]';
}

/**
 * Determine if a value is an ArrayBuffer
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an ArrayBuffer, otherwise false
 */
function isArrayBuffer(val) {
  return toString.call(val) === '[object ArrayBuffer]';
}

/**
 * Determine if a value is a FormData
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an FormData, otherwise false
 */
function isFormData(val) {
  return (typeof FormData !== 'undefined') && (val instanceof FormData);
}

/**
 * Determine if a value is a view on an ArrayBuffer
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false
 */
function isArrayBufferView(val) {
  var result;
  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {
    result = ArrayBuffer.isView(val);
  } else {
    result = (val) && (val.buffer) && (val.buffer instanceof ArrayBuffer);
  }
  return result;
}

/**
 * Determine if a value is a String
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a String, otherwise false
 */
function isString(val) {
  return typeof val === 'string';
}

/**
 * Determine if a value is a Number
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Number, otherwise false
 */
function isNumber(val) {
  return typeof val === 'number';
}

/**
 * Determine if a value is undefined
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if the value is undefined, otherwise false
 */
function isUndefined(val) {
  return typeof val === 'undefined';
}

/**
 * Determine if a value is an Object
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an Object, otherwise false
 */
function isObject(val) {
  return val !== null && typeof val === 'object';
}

/**
 * Determine if a value is a Date
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Date, otherwise false
 */
function isDate(val) {
  return toString.call(val) === '[object Date]';
}

/**
 * Determine if a value is a File
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a File, otherwise false
 */
function isFile(val) {
  return toString.call(val) === '[object File]';
}

/**
 * Determine if a value is a Blob
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Blob, otherwise false
 */
function isBlob(val) {
  return toString.call(val) === '[object Blob]';
}

/**
 * Determine if a value is a Function
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Function, otherwise false
 */
function isFunction(val) {
  return toString.call(val) === '[object Function]';
}

/**
 * Determine if a value is a Stream
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Stream, otherwise false
 */
function isStream(val) {
  return isObject(val) && isFunction(val.pipe);
}

/**
 * Determine if a value is a URLSearchParams object
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a URLSearchParams object, otherwise false
 */
function isURLSearchParams(val) {
  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;
}

/**
 * Trim excess whitespace off the beginning and end of a string
 *
 * @param {String} str The String to trim
 * @returns {String} The String freed of excess whitespace
 */
function trim(str) {
  return str.replace(/^\s*/, '').replace(/\s*$/, '');
}

/**
 * Determine if we're running in a standard browser environment
 *
 * This allows axios to run in a web worker, and react-native.
 * Both environments support XMLHttpRequest, but not fully standard globals.
 *
 * web workers:
 *  typeof window -> undefined
 *  typeof document -> undefined
 *
 * react-native:
 *  navigator.product -> 'ReactNative'
 */
function isStandardBrowserEnv() {
  if (typeof navigator !== 'undefined' && navigator.product === 'ReactNative') {
    return false;
  }
  return (
    typeof window !== 'undefined' &&
    typeof document !== 'undefined'
  );
}

/**
 * Iterate over an Array or an Object invoking a function for each item.
 *
 * If `obj` is an Array callback will be called passing
 * the value, index, and complete array for each item.
 *
 * If 'obj' is an Object callback will be called passing
 * the value, key, and complete object for each property.
 *
 * @param {Object|Array} obj The object to iterate
 * @param {Function} fn The callback to invoke for each item
 */
function forEach(obj, fn) {
  // Don't bother if no value provided
  if (obj === null || typeof obj === 'undefined') {
    return;
  }

  // Force an array if not already something iterable
  if (typeof obj !== 'object' && !isArray(obj)) {
    /*eslint no-param-reassign:0*/
    obj = [obj];
  }

  if (isArray(obj)) {
    // Iterate over array values
    for (var i = 0, l = obj.length; i < l; i++) {
      fn.call(null, obj[i], i, obj);
    }
  } else {
    // Iterate over object keys
    for (var key in obj) {
      if (Object.prototype.hasOwnProperty.call(obj, key)) {
        fn.call(null, obj[key], key, obj);
      }
    }
  }
}

/**
 * Accepts varargs expecting each argument to be an object, then
 * immutably merges the properties of each object and returns result.
 *
 * When multiple objects contain the same key the later object in
 * the arguments list will take precedence.
 *
 * Example:
 *
 * ```js
 * var result = merge({foo: 123}, {foo: 456});
 * console.log(result.foo); // outputs 456
 * ```
 *
 * @param {Object} obj1 Object to merge
 * @returns {Object} Result of all merge properties
 */
function merge(/* obj1, obj2, obj3, ... */) {
  var result = {};
  function assignValue(val, key) {
    if (typeof result[key] === 'object' && typeof val === 'object') {
      result[key] = merge(result[key], val);
    } else {
      result[key] = val;
    }
  }

  for (var i = 0, l = arguments.length; i < l; i++) {
    forEach(arguments[i], assignValue);
  }
  return result;
}

/**
 * Extends object a by mutably adding to it the properties of object b.
 *
 * @param {Object} a The object to be extended
 * @param {Object} b The object to copy properties from
 * @param {Object} thisArg The object to bind function to
 * @return {Object} The resulting value of object a
 */
function extend(a, b, thisArg) {
  forEach(b, function assignValue(val, key) {
    if (thisArg && typeof val === 'function') {
      a[key] = bind(val, thisArg);
    } else {
      a[key] = val;
    }
  });
  return a;
}

module.exports = {
  isArray: isArray,
  isArrayBuffer: isArrayBuffer,
  isBuffer: isBuffer,
  isFormData: isFormData,
  isArrayBufferView: isArrayBufferView,
  isString: isString,
  isNumber: isNumber,
  isObject: isObject,
  isUndefined: isUndefined,
  isDate: isDate,
  isFile: isFile,
  isBlob: isBlob,
  isFunction: isFunction,
  isStream: isStream,
  isURLSearchParams: isURLSearchParams,
  isStandardBrowserEnv: isStandardBrowserEnv,
  forEach: forEach,
  merge: merge,
  extend: extend,
  trim: trim
};


/***/ }),
/* 10 */
/***/ (function(module, exports, __webpack_require__) {

/*
	MIT License http://www.opensource.org/licenses/mit-license.php
	Author Tobias Koppers @sokra
*/

var stylesInDom = {};

var	memoize = function (fn) {
	var memo;

	return function () {
		if (typeof memo === "undefined") memo = fn.apply(this, arguments);
		return memo;
	};
};

var isOldIE = memoize(function () {
	// Test for IE <= 9 as proposed by Browserhacks
	// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805
	// Tests for existence of standard globals is to allow style-loader
	// to operate correctly into non-standard environments
	// @see https://github.com/webpack-contrib/style-loader/issues/177
	return window && document && document.all && !window.atob;
});

var getElement = (function (fn) {
	var memo = {};

	return function(selector) {
		if (typeof memo[selector] === "undefined") {
			memo[selector] = fn.call(this, selector);
		}

		return memo[selector]
	};
})(function (target) {
	return document.querySelector(target)
});

var singleton = null;
var	singletonCounter = 0;
var	stylesInsertedAtTop = [];

var	fixUrls = __webpack_require__(283);

module.exports = function(list, options) {
	if (typeof DEBUG !== "undefined" && DEBUG) {
		if (typeof document !== "object") throw new Error("The style-loader cannot be used in a non-browser environment");
	}

	options = options || {};

	options.attrs = typeof options.attrs === "object" ? options.attrs : {};

	// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>
	// tags it will allow on a page
	if (!options.singleton) options.singleton = isOldIE();

	// By default, add <style> tags to the <head> element
	if (!options.insertInto) options.insertInto = "head";

	// By default, add <style> tags to the bottom of the target
	if (!options.insertAt) options.insertAt = "bottom";

	var styles = listToStyles(list, options);

	addStylesToDom(styles, options);

	return function update (newList) {
		var mayRemove = [];

		for (var i = 0; i < styles.length; i++) {
			var item = styles[i];
			var domStyle = stylesInDom[item.id];

			domStyle.refs--;
			mayRemove.push(domStyle);
		}

		if(newList) {
			var newStyles = listToStyles(newList, options);
			addStylesToDom(newStyles, options);
		}

		for (var i = 0; i < mayRemove.length; i++) {
			var domStyle = mayRemove[i];

			if(domStyle.refs === 0) {
				for (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();

				delete stylesInDom[domStyle.id];
			}
		}
	};
};

function addStylesToDom (styles, options) {
	for (var i = 0; i < styles.length; i++) {
		var item = styles[i];
		var domStyle = stylesInDom[item.id];

		if(domStyle) {
			domStyle.refs++;

			for(var j = 0; j < domStyle.parts.length; j++) {
				domStyle.parts[j](item.parts[j]);
			}

			for(; j < item.parts.length; j++) {
				domStyle.parts.push(addStyle(item.parts[j], options));
			}
		} else {
			var parts = [];

			for(var j = 0; j < item.parts.length; j++) {
				parts.push(addStyle(item.parts[j], options));
			}

			stylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};
		}
	}
}

function listToStyles (list, options) {
	var styles = [];
	var newStyles = {};

	for (var i = 0; i < list.length; i++) {
		var item = list[i];
		var id = options.base ? item[0] + options.base : item[0];
		var css = item[1];
		var media = item[2];
		var sourceMap = item[3];
		var part = {css: css, media: media, sourceMap: sourceMap};

		if(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});
		else newStyles[id].parts.push(part);
	}

	return styles;
}

function insertStyleElement (options, style) {
	var target = getElement(options.insertInto)

	if (!target) {
		throw new Error("Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.");
	}

	var lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];

	if (options.insertAt === "top") {
		if (!lastStyleElementInsertedAtTop) {
			target.insertBefore(style, target.firstChild);
		} else if (lastStyleElementInsertedAtTop.nextSibling) {
			target.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);
		} else {
			target.appendChild(style);
		}
		stylesInsertedAtTop.push(style);
	} else if (options.insertAt === "bottom") {
		target.appendChild(style);
	} else {
		throw new Error("Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.");
	}
}

function removeStyleElement (style) {
	if (style.parentNode === null) return false;
	style.parentNode.removeChild(style);

	var idx = stylesInsertedAtTop.indexOf(style);
	if(idx >= 0) {
		stylesInsertedAtTop.splice(idx, 1);
	}
}

function createStyleElement (options) {
	var style = document.createElement("style");

	options.attrs.type = "text/css";

	addAttrs(style, options.attrs);
	insertStyleElement(options, style);

	return style;
}

function createLinkElement (options) {
	var link = document.createElement("link");

	options.attrs.type = "text/css";
	options.attrs.rel = "stylesheet";

	addAttrs(link, options.attrs);
	insertStyleElement(options, link);

	return link;
}

function addAttrs (el, attrs) {
	Object.keys(attrs).forEach(function (key) {
		el.setAttribute(key, attrs[key]);
	});
}

function addStyle (obj, options) {
	var style, update, remove, result;

	// If a transform function was defined, run it on the css
	if (options.transform && obj.css) {
	    result = options.transform(obj.css);

	    if (result) {
	    	// If transform returns a value, use that instead of the original css.
	    	// This allows running runtime transformations on the css.
	    	obj.css = result;
	    } else {
	    	// If the transform function returns a falsy value, don't add this css.
	    	// This allows conditional loading of css
	    	return function() {
	    		// noop
	    	};
	    }
	}

	if (options.singleton) {
		var styleIndex = singletonCounter++;

		style = singleton || (singleton = createStyleElement(options));

		update = applyToSingletonTag.bind(null, style, styleIndex, false);
		remove = applyToSingletonTag.bind(null, style, styleIndex, true);

	} else if (
		obj.sourceMap &&
		typeof URL === "function" &&
		typeof URL.createObjectURL === "function" &&
		typeof URL.revokeObjectURL === "function" &&
		typeof Blob === "function" &&
		typeof btoa === "function"
	) {
		style = createLinkElement(options);
		update = updateLink.bind(null, style, options);
		remove = function () {
			removeStyleElement(style);

			if(style.href) URL.revokeObjectURL(style.href);
		};
	} else {
		style = createStyleElement(options);
		update = applyToTag.bind(null, style);
		remove = function () {
			removeStyleElement(style);
		};
	}

	update(obj);

	return function updateStyle (newObj) {
		if (newObj) {
			if (
				newObj.css === obj.css &&
				newObj.media === obj.media &&
				newObj.sourceMap === obj.sourceMap
			) {
				return;
			}

			update(obj = newObj);
		} else {
			remove();
		}
	};
}

var replaceText = (function () {
	var textStore = [];

	return function (index, replacement) {
		textStore[index] = replacement;

		return textStore.filter(Boolean).join('\n');
	};
})();

function applyToSingletonTag (style, index, remove, obj) {
	var css = remove ? "" : obj.css;

	if (style.styleSheet) {
		style.styleSheet.cssText = replaceText(index, css);
	} else {
		var cssNode = document.createTextNode(css);
		var childNodes = style.childNodes;

		if (childNodes[index]) style.removeChild(childNodes[index]);

		if (childNodes.length) {
			style.insertBefore(cssNode, childNodes[index]);
		} else {
			style.appendChild(cssNode);
		}
	}
}

function applyToTag (style, obj) {
	var css = obj.css;
	var media = obj.media;

	if(media) {
		style.setAttribute("media", media)
	}

	if(style.styleSheet) {
		style.styleSheet.cssText = css;
	} else {
		while(style.firstChild) {
			style.removeChild(style.firstChild);
		}

		style.appendChild(document.createTextNode(css));
	}
}

function updateLink (link, options, obj) {
	var css = obj.css;
	var sourceMap = obj.sourceMap;

	/*
		If convertToAbsoluteUrls isn't defined, but sourcemaps are enabled
		and there is no publicPath defined then lets turn convertToAbsoluteUrls
		on by default.  Otherwise default to the convertToAbsoluteUrls option
		directly
	*/
	var autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;

	if (options.convertToAbsoluteUrls || autoFixUrls) {
		css = fixUrls(css);
	}

	if (sourceMap) {
		// http://stackoverflow.com/a/26603875
		css += "\n/*# sourceMappingURL=data:application/json;base64," + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + " */";
	}

	var blob = new Blob([css], { type: "text/css" });

	var oldSrc = link.href;

	link.href = URL.createObjectURL(blob);

	if(oldSrc) URL.revokeObjectURL(oldSrc);
}


/***/ }),
/* 11 */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(26);
module.exports = function (it) {
  if (!isObject(it)) throw TypeError(it + ' is not an object!');
  return it;
};


/***/ }),
/* 12 */
/***/ (function(module, exports) {

var index;

module.exports = index = {
  Set: {},
  Map: {},
  Name: {},
  Finder: {},
  Query: {},
  set_deploy: function (key, cb) {
    return this.Name[key].deploys.push(cb);
  },
  set_depend: function (key, cb) {
    return this.Name[key].depends.push(cb);
  }
};

/***/ }),
/* 13 */
/***/ (function(module, exports, __webpack_require__) {

// Thank's IE8 for his funny defineProperty
module.exports = !__webpack_require__(21)(function () {
  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;
});


/***/ }),
/* 14 */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(8);
var core = __webpack_require__(5);
var ctx = __webpack_require__(29);
var hide = __webpack_require__(16);
var PROTOTYPE = 'prototype';

var $export = function (type, name, source) {
  var IS_FORCED = type & $export.F;
  var IS_GLOBAL = type & $export.G;
  var IS_STATIC = type & $export.S;
  var IS_PROTO = type & $export.P;
  var IS_BIND = type & $export.B;
  var IS_WRAP = type & $export.W;
  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});
  var expProto = exports[PROTOTYPE];
  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE];
  var key, own, out;
  if (IS_GLOBAL) source = name;
  for (key in source) {
    // contains in native
    own = !IS_FORCED && target && target[key] !== undefined;
    if (own && key in exports) continue;
    // export native or passed
    out = own ? target[key] : source[key];
    // prevent global pollution for namespaces
    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]
    // bind timers to global for call from export context
    : IS_BIND && own ? ctx(out, global)
    // wrap global constructors for prevent change them in library
    : IS_WRAP && target[key] == out ? (function (C) {
      var F = function (a, b, c) {
        if (this instanceof C) {
          switch (arguments.length) {
            case 0: return new C();
            case 1: return new C(a);
            case 2: return new C(a, b);
          } return new C(a, b, c);
        } return C.apply(this, arguments);
      };
      F[PROTOTYPE] = C[PROTOTYPE];
      return F;
    // make static versions for prototype methods
    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;
    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%
    if (IS_PROTO) {
      (exports.virtual || (exports.virtual = {}))[key] = out;
      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%
      if (type & $export.R && expProto && !expProto[key]) hide(expProto, key, out);
    }
  }
};
// type bitmap
$export.F = 1;   // forced
$export.G = 2;   // global
$export.S = 4;   // static
$export.P = 8;   // proto
$export.B = 16;  // bind
$export.W = 32;  // wrap
$export.U = 64;  // safe
$export.R = 128; // real proto method for `library`
module.exports = $export;


/***/ }),
/* 15 */
/***/ (function(module, exports) {

var hasOwnProperty = {}.hasOwnProperty;
module.exports = function (it, key) {
  return hasOwnProperty.call(it, key);
};


/***/ }),
/* 16 */
/***/ (function(module, exports, __webpack_require__) {

var dP = __webpack_require__(17);
var createDesc = __webpack_require__(32);
module.exports = __webpack_require__(13) ? function (object, key, value) {
  return dP.f(object, key, createDesc(1, value));
} : function (object, key, value) {
  object[key] = value;
  return object;
};


/***/ }),
/* 17 */
/***/ (function(module, exports, __webpack_require__) {

var anObject = __webpack_require__(11);
var IE8_DOM_DEFINE = __webpack_require__(77);
var toPrimitive = __webpack_require__(53);
var dP = Object.defineProperty;

exports.f = __webpack_require__(13) ? Object.defineProperty : function defineProperty(O, P, Attributes) {
  anObject(O);
  P = toPrimitive(P, true);
  anObject(Attributes);
  if (IE8_DOM_DEFINE) try {
    return dP(O, P, Attributes);
  } catch (e) { /* empty */ }
  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');
  if ('value' in Attributes) O[P] = Attributes.value;
  return O;
};


/***/ }),
/* 18 */
/***/ (function(module, exports, __webpack_require__) {

// to indexed object, toObject with fallback for non-array-like ES3 strings
var IObject = __webpack_require__(78);
var defined = __webpack_require__(44);
module.exports = function (it) {
  return IObject(defined(it));
};


/***/ }),
/* 19 */
/***/ (function(module, exports, __webpack_require__) {

var Component = __webpack_require__(0)(
  /* script */
  __webpack_require__(153),
  /* template */
  null,
  /* styles */
  null,
  /* scopeId */
  null,
  /* moduleIdentifier (server only) */
  null
)

module.exports = Component.exports


/***/ }),
/* 20 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(102);

/***/ }),
/* 21 */
/***/ (function(module, exports) {

module.exports = function (exec) {
  try {
    return !!exec();
  } catch (e) {
    return true;
  }
};


/***/ }),
/* 22 */
/***/ (function(module, exports) {

module.exports = {};


/***/ }),
/* 23 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.14 / 15.2.3.14 Object.keys(O)
var $keys = __webpack_require__(82);
var enumBugKeys = __webpack_require__(46);

module.exports = Object.keys || function keys(O) {
  return $keys(O, enumBugKeys);
};


/***/ }),
/* 24 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__(185), __esModule: true };

/***/ }),
/* 25 */
/***/ (function(module, exports) {

var toString = {}.toString;

module.exports = function (it) {
  return toString.call(it).slice(8, -1);
};


/***/ }),
/* 26 */
/***/ (function(module, exports) {

module.exports = function (it) {
  return typeof it === 'object' ? it !== null : typeof it === 'function';
};


/***/ }),
/* 27 */
/***/ (function(module, exports) {

var g;

// This works in non-strict mode
g = (function() {
	return this;
})();

try {
	// This works if eval is allowed (see CSP)
	g = g || Function("return this")() || (1,eval)("this");
} catch(e) {
	// This works if the window reference is available
	if(typeof window === "object")
		g = window;
}

// g can still be undefined, but nothing to do about it...
// We return undefined, instead of nothing here, so it's
// easier to handle this case. if(!global) { ...}

module.exports = g;


/***/ }),
/* 28 */
/***/ (function(module, exports) {

module.exports = function (it) {
  if (typeof it != 'function') throw TypeError(it + ' is not a function!');
  return it;
};


/***/ }),
/* 29 */
/***/ (function(module, exports, __webpack_require__) {

// optional / simple context binding
var aFunction = __webpack_require__(28);
module.exports = function (fn, that, length) {
  aFunction(fn);
  if (that === undefined) return fn;
  switch (length) {
    case 1: return function (a) {
      return fn.call(that, a);
    };
    case 2: return function (a, b) {
      return fn.call(that, a, b);
    };
    case 3: return function (a, b, c) {
      return fn.call(that, a, b, c);
    };
  }
  return function (/* ...args */) {
    return fn.apply(that, arguments);
  };
};


/***/ }),
/* 30 */
/***/ (function(module, exports) {

module.exports = true;


/***/ }),
/* 31 */
/***/ (function(module, exports) {

exports.f = {}.propertyIsEnumerable;


/***/ }),
/* 32 */
/***/ (function(module, exports) {

module.exports = function (bitmap, value) {
  return {
    enumerable: !(bitmap & 1),
    configurable: !(bitmap & 2),
    writable: !(bitmap & 4),
    value: value
  };
};


/***/ }),
/* 33 */
/***/ (function(module, exports, __webpack_require__) {

var def = __webpack_require__(17).f;
var has = __webpack_require__(15);
var TAG = __webpack_require__(6)('toStringTag');

module.exports = function (it, tag, stat) {
  if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });
};


/***/ }),
/* 34 */
/***/ (function(module, exports) {

var id = 0;
var px = Math.random();
module.exports = function (key) {
  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));
};


/***/ }),
/* 35 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $at = __webpack_require__(211)(true);

// 21.1.3.27 String.prototype[@@iterator]()
__webpack_require__(79)(String, 'String', function (iterated) {
  this._t = String(iterated); // target
  this._i = 0;                // next index
// 21.1.5.2.1 %StringIteratorPrototype%.next()
}, function () {
  var O = this._t;
  var index = this._i;
  var point;
  if (index >= O.length) return { value: undefined, done: true };
  point = $at(O, index);
  this._i += point.length;
  return { value: point, done: false };
});


/***/ }),
/* 36 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(215);
var global = __webpack_require__(8);
var hide = __webpack_require__(16);
var Iterators = __webpack_require__(22);
var TO_STRING_TAG = __webpack_require__(6)('toStringTag');

var DOMIterables = ('CSSRuleList,CSSStyleDeclaration,CSSValueList,ClientRectList,DOMRectList,DOMStringList,' +
  'DOMTokenList,DataTransferItemList,FileList,HTMLAllCollection,HTMLCollection,HTMLFormElement,HTMLSelectElement,' +
  'MediaList,MimeTypeArray,NamedNodeMap,NodeList,PaintRequestList,Plugin,PluginArray,SVGLengthList,SVGNumberList,' +
  'SVGPathSegList,SVGPointList,SVGStringList,SVGTransformList,SourceBufferList,StyleSheetList,TextTrackCueList,' +
  'TextTrackList,TouchList').split(',');

for (var i = 0; i < DOMIterables.length; i++) {
  var NAME = DOMIterables[i];
  var Collection = global[NAME];
  var proto = Collection && Collection.prototype;
  if (proto && !proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);
  Iterators[NAME] = Iterators.Array;
}


/***/ }),
/* 37 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Store", function() { return Store; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mapState", function() { return mapState; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mapMutations", function() { return mapMutations; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mapGetters", function() { return mapGetters; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mapActions", function() { return mapActions; });
/**
 * vuex v2.3.0
 * (c) 2017 Evan You
 * @license MIT
 */
var applyMixin = function (Vue) {
  var version = Number(Vue.version.split('.')[0]);

  if (version >= 2) {
    var usesInit = Vue.config._lifecycleHooks.indexOf('init') > -1;
    Vue.mixin(usesInit ? { init: vuexInit } : { beforeCreate: vuexInit });
  } else {
    // override init and inject vuex init procedure
    // for 1.x backwards compatibility.
    var _init = Vue.prototype._init;
    Vue.prototype._init = function (options) {
      if ( options === void 0 ) options = {};

      options.init = options.init
        ? [vuexInit].concat(options.init)
        : vuexInit;
      _init.call(this, options);
    };
  }

  /**
   * Vuex init hook, injected into each instances init hooks list.
   */

  function vuexInit () {
    var options = this.$options;
    // store injection
    if (options.store) {
      this.$store = options.store;
    } else if (options.parent && options.parent.$store) {
      this.$store = options.parent.$store;
    }
  }
};

var devtoolHook =
  typeof window !== 'undefined' &&
  window.__VUE_DEVTOOLS_GLOBAL_HOOK__;

function devtoolPlugin (store) {
  if (!devtoolHook) { return }

  store._devtoolHook = devtoolHook;

  devtoolHook.emit('vuex:init', store);

  devtoolHook.on('vuex:travel-to-state', function (targetState) {
    store.replaceState(targetState);
  });

  store.subscribe(function (mutation, state) {
    devtoolHook.emit('vuex:mutation', mutation, state);
  });
}

/**
 * Get the first item that pass the test
 * by second argument function
 *
 * @param {Array} list
 * @param {Function} f
 * @return {*}
 */
/**
 * Deep copy the given object considering circular structure.
 * This function caches all nested objects and its copies.
 * If it detects circular structure, use cached copy to avoid infinite loop.
 *
 * @param {*} obj
 * @param {Array<Object>} cache
 * @return {*}
 */


/**
 * forEach for object
 */
function forEachValue (obj, fn) {
  Object.keys(obj).forEach(function (key) { return fn(obj[key], key); });
}

function isObject (obj) {
  return obj !== null && typeof obj === 'object'
}

function isPromise (val) {
  return val && typeof val.then === 'function'
}

function assert (condition, msg) {
  if (!condition) { throw new Error(("[vuex] " + msg)) }
}

var Module = function Module (rawModule, runtime) {
  this.runtime = runtime;
  this._children = Object.create(null);
  this._rawModule = rawModule;
  var rawState = rawModule.state;
  this.state = (typeof rawState === 'function' ? rawState() : rawState) || {};
};

var prototypeAccessors$1 = { namespaced: {} };

prototypeAccessors$1.namespaced.get = function () {
  return !!this._rawModule.namespaced
};

Module.prototype.addChild = function addChild (key, module) {
  this._children[key] = module;
};

Module.prototype.removeChild = function removeChild (key) {
  delete this._children[key];
};

Module.prototype.getChild = function getChild (key) {
  return this._children[key]
};

Module.prototype.update = function update (rawModule) {
  this._rawModule.namespaced = rawModule.namespaced;
  if (rawModule.actions) {
    this._rawModule.actions = rawModule.actions;
  }
  if (rawModule.mutations) {
    this._rawModule.mutations = rawModule.mutations;
  }
  if (rawModule.getters) {
    this._rawModule.getters = rawModule.getters;
  }
};

Module.prototype.forEachChild = function forEachChild (fn) {
  forEachValue(this._children, fn);
};

Module.prototype.forEachGetter = function forEachGetter (fn) {
  if (this._rawModule.getters) {
    forEachValue(this._rawModule.getters, fn);
  }
};

Module.prototype.forEachAction = function forEachAction (fn) {
  if (this._rawModule.actions) {
    forEachValue(this._rawModule.actions, fn);
  }
};

Module.prototype.forEachMutation = function forEachMutation (fn) {
  if (this._rawModule.mutations) {
    forEachValue(this._rawModule.mutations, fn);
  }
};

Object.defineProperties( Module.prototype, prototypeAccessors$1 );

var ModuleCollection = function ModuleCollection (rawRootModule) {
  var this$1 = this;

  // register root module (Vuex.Store options)
  this.root = new Module(rawRootModule, false);

  // register all nested modules
  if (rawRootModule.modules) {
    forEachValue(rawRootModule.modules, function (rawModule, key) {
      this$1.register([key], rawModule, false);
    });
  }
};

ModuleCollection.prototype.get = function get (path) {
  return path.reduce(function (module, key) {
    return module.getChild(key)
  }, this.root)
};

ModuleCollection.prototype.getNamespace = function getNamespace (path) {
  var module = this.root;
  return path.reduce(function (namespace, key) {
    module = module.getChild(key);
    return namespace + (module.namespaced ? key + '/' : '')
  }, '')
};

ModuleCollection.prototype.update = function update$1 (rawRootModule) {
  update(this.root, rawRootModule);
};

ModuleCollection.prototype.register = function register (path, rawModule, runtime) {
    var this$1 = this;
    if ( runtime === void 0 ) runtime = true;

  var parent = this.get(path.slice(0, -1));
  var newModule = new Module(rawModule, runtime);
  parent.addChild(path[path.length - 1], newModule);

  // register nested modules
  if (rawModule.modules) {
    forEachValue(rawModule.modules, function (rawChildModule, key) {
      this$1.register(path.concat(key), rawChildModule, runtime);
    });
  }
};

ModuleCollection.prototype.unregister = function unregister (path) {
  var parent = this.get(path.slice(0, -1));
  var key = path[path.length - 1];
  if (!parent.getChild(key).runtime) { return }

  parent.removeChild(key);
};

function update (targetModule, newModule) {
  // update target module
  targetModule.update(newModule);

  // update nested modules
  if (newModule.modules) {
    for (var key in newModule.modules) {
      if (!targetModule.getChild(key)) {
        console.warn(
          "[vuex] trying to add a new module '" + key + "' on hot reloading, " +
          'manual reload is needed'
        );
        return
      }
      update(targetModule.getChild(key), newModule.modules[key]);
    }
  }
}

var Vue; // bind on install

var Store = function Store (options) {
  var this$1 = this;
  if ( options === void 0 ) options = {};

  assert(Vue, "must call Vue.use(Vuex) before creating a store instance.");
  assert(typeof Promise !== 'undefined', "vuex requires a Promise polyfill in this browser.");

  var state = options.state; if ( state === void 0 ) state = {};
  var plugins = options.plugins; if ( plugins === void 0 ) plugins = [];
  var strict = options.strict; if ( strict === void 0 ) strict = false;

  // store internal state
  this._committing = false;
  this._actions = Object.create(null);
  this._mutations = Object.create(null);
  this._wrappedGetters = Object.create(null);
  this._modules = new ModuleCollection(options);
  this._modulesNamespaceMap = Object.create(null);
  this._subscribers = [];
  this._watcherVM = new Vue();

  // bind commit and dispatch to self
  var store = this;
  var ref = this;
  var dispatch = ref.dispatch;
  var commit = ref.commit;
  this.dispatch = function boundDispatch (type, payload) {
    return dispatch.call(store, type, payload)
  };
  this.commit = function boundCommit (type, payload, options) {
    return commit.call(store, type, payload, options)
  };

  // strict mode
  this.strict = strict;

  // init root module.
  // this also recursively registers all sub-modules
  // and collects all module getters inside this._wrappedGetters
  installModule(this, state, [], this._modules.root);

  // initialize the store vm, which is responsible for the reactivity
  // (also registers _wrappedGetters as computed properties)
  resetStoreVM(this, state);

  // apply plugins
  plugins.concat(devtoolPlugin).forEach(function (plugin) { return plugin(this$1); });
};

var prototypeAccessors = { state: {} };

prototypeAccessors.state.get = function () {
  return this._vm._data.$$state
};

prototypeAccessors.state.set = function (v) {
  assert(false, "Use store.replaceState() to explicit replace store state.");
};

Store.prototype.commit = function commit (_type, _payload, _options) {
    var this$1 = this;

  // check object-style commit
  var ref = unifyObjectStyle(_type, _payload, _options);
    var type = ref.type;
    var payload = ref.payload;
    var options = ref.options;

  var mutation = { type: type, payload: payload };
  var entry = this._mutations[type];
  if (!entry) {
    console.error(("[vuex] unknown mutation type: " + type));
    return
  }
  this._withCommit(function () {
    entry.forEach(function commitIterator (handler) {
      handler(payload);
    });
  });
  this._subscribers.forEach(function (sub) { return sub(mutation, this$1.state); });

  if (options && options.silent) {
    console.warn(
      "[vuex] mutation type: " + type + ". Silent option has been removed. " +
      'Use the filter functionality in the vue-devtools'
    );
  }
};

Store.prototype.dispatch = function dispatch (_type, _payload) {
  // check object-style dispatch
  var ref = unifyObjectStyle(_type, _payload);
    var type = ref.type;
    var payload = ref.payload;

  var entry = this._actions[type];
  if (!entry) {
    console.error(("[vuex] unknown action type: " + type));
    return
  }
  return entry.length > 1
    ? Promise.all(entry.map(function (handler) { return handler(payload); }))
    : entry[0](payload)
};

Store.prototype.subscribe = function subscribe (fn) {
  var subs = this._subscribers;
  if (subs.indexOf(fn) < 0) {
    subs.push(fn);
  }
  return function () {
    var i = subs.indexOf(fn);
    if (i > -1) {
      subs.splice(i, 1);
    }
  }
};

Store.prototype.watch = function watch (getter, cb, options) {
    var this$1 = this;

  assert(typeof getter === 'function', "store.watch only accepts a function.");
  return this._watcherVM.$watch(function () { return getter(this$1.state, this$1.getters); }, cb, options)
};

Store.prototype.replaceState = function replaceState (state) {
    var this$1 = this;

  this._withCommit(function () {
    this$1._vm._data.$$state = state;
  });
};

Store.prototype.registerModule = function registerModule (path, rawModule) {
  if (typeof path === 'string') { path = [path]; }
  assert(Array.isArray(path), "module path must be a string or an Array.");
  this._modules.register(path, rawModule);
  installModule(this, this.state, path, this._modules.get(path));
  // reset store to update getters...
  resetStoreVM(this, this.state);
};

Store.prototype.unregisterModule = function unregisterModule (path) {
    var this$1 = this;

  if (typeof path === 'string') { path = [path]; }
  assert(Array.isArray(path), "module path must be a string or an Array.");
  this._modules.unregister(path);
  this._withCommit(function () {
    var parentState = getNestedState(this$1.state, path.slice(0, -1));
    Vue.delete(parentState, path[path.length - 1]);
  });
  resetStore(this);
};

Store.prototype.hotUpdate = function hotUpdate (newOptions) {
  this._modules.update(newOptions);
  resetStore(this, true);
};

Store.prototype._withCommit = function _withCommit (fn) {
  var committing = this._committing;
  this._committing = true;
  fn();
  this._committing = committing;
};

Object.defineProperties( Store.prototype, prototypeAccessors );

function resetStore (store, hot) {
  store._actions = Object.create(null);
  store._mutations = Object.create(null);
  store._wrappedGetters = Object.create(null);
  store._modulesNamespaceMap = Object.create(null);
  var state = store.state;
  // init all modules
  installModule(store, state, [], store._modules.root, true);
  // reset vm
  resetStoreVM(store, state, hot);
}

function resetStoreVM (store, state, hot) {
  var oldVm = store._vm;

  // bind store public getters
  store.getters = {};
  var wrappedGetters = store._wrappedGetters;
  var computed = {};
  forEachValue(wrappedGetters, function (fn, key) {
    // use computed to leverage its lazy-caching mechanism
    computed[key] = function () { return fn(store); };
    Object.defineProperty(store.getters, key, {
      get: function () { return store._vm[key]; },
      enumerable: true // for local getters
    });
  });

  // use a Vue instance to store the state tree
  // suppress warnings just in case the user has added
  // some funky global mixins
  var silent = Vue.config.silent;
  Vue.config.silent = true;
  store._vm = new Vue({
    data: {
      $$state: state
    },
    computed: computed
  });
  Vue.config.silent = silent;

  // enable strict mode for new vm
  if (store.strict) {
    enableStrictMode(store);
  }

  if (oldVm) {
    if (hot) {
      // dispatch changes in all subscribed watchers
      // to force getter re-evaluation for hot reloading.
      store._withCommit(function () {
        oldVm._data.$$state = null;
      });
    }
    Vue.nextTick(function () { return oldVm.$destroy(); });
  }
}

function installModule (store, rootState, path, module, hot) {
  var isRoot = !path.length;
  var namespace = store._modules.getNamespace(path);

  // register in namespace map
  if (module.namespaced) {
    store._modulesNamespaceMap[namespace] = module;
  }

  // set state
  if (!isRoot && !hot) {
    var parentState = getNestedState(rootState, path.slice(0, -1));
    var moduleName = path[path.length - 1];
    store._withCommit(function () {
      Vue.set(parentState, moduleName, module.state);
    });
  }

  var local = module.context = makeLocalContext(store, namespace, path);

  module.forEachMutation(function (mutation, key) {
    var namespacedType = namespace + key;
    registerMutation(store, namespacedType, mutation, local);
  });

  module.forEachAction(function (action, key) {
    var namespacedType = namespace + key;
    registerAction(store, namespacedType, action, local);
  });

  module.forEachGetter(function (getter, key) {
    var namespacedType = namespace + key;
    registerGetter(store, namespacedType, getter, local);
  });

  module.forEachChild(function (child, key) {
    installModule(store, rootState, path.concat(key), child, hot);
  });
}

/**
 * make localized dispatch, commit, getters and state
 * if there is no namespace, just use root ones
 */
function makeLocalContext (store, namespace, path) {
  var noNamespace = namespace === '';

  var local = {
    dispatch: noNamespace ? store.dispatch : function (_type, _payload, _options) {
      var args = unifyObjectStyle(_type, _payload, _options);
      var payload = args.payload;
      var options = args.options;
      var type = args.type;

      if (!options || !options.root) {
        type = namespace + type;
        if (!store._actions[type]) {
          console.error(("[vuex] unknown local action type: " + (args.type) + ", global type: " + type));
          return
        }
      }

      return store.dispatch(type, payload)
    },

    commit: noNamespace ? store.commit : function (_type, _payload, _options) {
      var args = unifyObjectStyle(_type, _payload, _options);
      var payload = args.payload;
      var options = args.options;
      var type = args.type;

      if (!options || !options.root) {
        type = namespace + type;
        if (!store._mutations[type]) {
          console.error(("[vuex] unknown local mutation type: " + (args.type) + ", global type: " + type));
          return
        }
      }

      store.commit(type, payload, options);
    }
  };

  // getters and state object must be gotten lazily
  // because they will be changed by vm update
  Object.defineProperties(local, {
    getters: {
      get: noNamespace
        ? function () { return store.getters; }
        : function () { return makeLocalGetters(store, namespace); }
    },
    state: {
      get: function () { return getNestedState(store.state, path); }
    }
  });

  return local
}

function makeLocalGetters (store, namespace) {
  var gettersProxy = {};

  var splitPos = namespace.length;
  Object.keys(store.getters).forEach(function (type) {
    // skip if the target getter is not match this namespace
    if (type.slice(0, splitPos) !== namespace) { return }

    // extract local getter type
    var localType = type.slice(splitPos);

    // Add a port to the getters proxy.
    // Define as getter property because
    // we do not want to evaluate the getters in this time.
    Object.defineProperty(gettersProxy, localType, {
      get: function () { return store.getters[type]; },
      enumerable: true
    });
  });

  return gettersProxy
}

function registerMutation (store, type, handler, local) {
  var entry = store._mutations[type] || (store._mutations[type] = []);
  entry.push(function wrappedMutationHandler (payload) {
    handler(local.state, payload);
  });
}

function registerAction (store, type, handler, local) {
  var entry = store._actions[type] || (store._actions[type] = []);
  entry.push(function wrappedActionHandler (payload, cb) {
    var res = handler({
      dispatch: local.dispatch,
      commit: local.commit,
      getters: local.getters,
      state: local.state,
      rootGetters: store.getters,
      rootState: store.state
    }, payload, cb);
    if (!isPromise(res)) {
      res = Promise.resolve(res);
    }
    if (store._devtoolHook) {
      return res.catch(function (err) {
        store._devtoolHook.emit('vuex:error', err);
        throw err
      })
    } else {
      return res
    }
  });
}

function registerGetter (store, type, rawGetter, local) {
  if (store._wrappedGetters[type]) {
    console.error(("[vuex] duplicate getter key: " + type));
    return
  }
  store._wrappedGetters[type] = function wrappedGetter (store) {
    return rawGetter(
      local.state, // local state
      local.getters, // local getters
      store.state, // root state
      store.getters // root getters
    )
  };
}

function enableStrictMode (store) {
  store._vm.$watch(function () { return this._data.$$state }, function () {
    assert(store._committing, "Do not mutate vuex store state outside mutation handlers.");
  }, { deep: true, sync: true });
}

function getNestedState (state, path) {
  return path.length
    ? path.reduce(function (state, key) { return state[key]; }, state)
    : state
}

function unifyObjectStyle (type, payload, options) {
  if (isObject(type) && type.type) {
    options = payload;
    payload = type;
    type = type.type;
  }

  assert(typeof type === 'string', ("Expects string as the type, but found " + (typeof type) + "."));

  return { type: type, payload: payload, options: options }
}

function install (_Vue) {
  if (Vue) {
    console.error(
      '[vuex] already installed. Vue.use(Vuex) should be called only once.'
    );
    return
  }
  Vue = _Vue;
  applyMixin(Vue);
}

// auto install in dist mode
if (typeof window !== 'undefined' && window.Vue) {
  install(window.Vue);
}

var mapState = normalizeNamespace(function (namespace, states) {
  var res = {};
  normalizeMap(states).forEach(function (ref) {
    var key = ref.key;
    var val = ref.val;

    res[key] = function mappedState () {
      var state = this.$store.state;
      var getters = this.$store.getters;
      if (namespace) {
        var module = getModuleByNamespace(this.$store, 'mapState', namespace);
        if (!module) {
          return
        }
        state = module.context.state;
        getters = module.context.getters;
      }
      return typeof val === 'function'
        ? val.call(this, state, getters)
        : state[val]
    };
    // mark vuex getter for devtools
    res[key].vuex = true;
  });
  return res
});

var mapMutations = normalizeNamespace(function (namespace, mutations) {
  var res = {};
  normalizeMap(mutations).forEach(function (ref) {
    var key = ref.key;
    var val = ref.val;

    val = namespace + val;
    res[key] = function mappedMutation () {
      var args = [], len = arguments.length;
      while ( len-- ) args[ len ] = arguments[ len ];

      if (namespace && !getModuleByNamespace(this.$store, 'mapMutations', namespace)) {
        return
      }
      return this.$store.commit.apply(this.$store, [val].concat(args))
    };
  });
  return res
});

var mapGetters = normalizeNamespace(function (namespace, getters) {
  var res = {};
  normalizeMap(getters).forEach(function (ref) {
    var key = ref.key;
    var val = ref.val;

    val = namespace + val;
    res[key] = function mappedGetter () {
      if (namespace && !getModuleByNamespace(this.$store, 'mapGetters', namespace)) {
        return
      }
      if (!(val in this.$store.getters)) {
        console.error(("[vuex] unknown getter: " + val));
        return
      }
      return this.$store.getters[val]
    };
    // mark vuex getter for devtools
    res[key].vuex = true;
  });
  return res
});

var mapActions = normalizeNamespace(function (namespace, actions) {
  var res = {};
  normalizeMap(actions).forEach(function (ref) {
    var key = ref.key;
    var val = ref.val;

    val = namespace + val;
    res[key] = function mappedAction () {
      var args = [], len = arguments.length;
      while ( len-- ) args[ len ] = arguments[ len ];

      if (namespace && !getModuleByNamespace(this.$store, 'mapActions', namespace)) {
        return
      }
      return this.$store.dispatch.apply(this.$store, [val].concat(args))
    };
  });
  return res
});

function normalizeMap (map) {
  return Array.isArray(map)
    ? map.map(function (key) { return ({ key: key, val: key }); })
    : Object.keys(map).map(function (key) { return ({ key: key, val: map[key] }); })
}

function normalizeNamespace (fn) {
  return function (namespace, map) {
    if (typeof namespace !== 'string') {
      map = namespace;
      namespace = '';
    } else if (namespace.charAt(namespace.length - 1) !== '/') {
      namespace += '/';
    }
    return fn(namespace, map)
  }
}

function getModuleByNamespace (store, helper, namespace) {
  var module = store._modulesNamespaceMap[namespace];
  if (!module) {
    console.error(("[vuex] module namespace not found in " + helper + "(): " + namespace));
  }
  return module
}

var index_esm = {
  Store: Store,
  install: install,
  version: '2.3.0',
  mapState: mapState,
  mapMutations: mapMutations,
  mapGetters: mapGetters,
  mapActions: mapActions
};

/* harmony default export */ __webpack_exports__["default"] = (index_esm);


/***/ }),
/* 38 */
/***/ (function(module, exports, __webpack_require__) {

var Query, Vuex, ajax, computed, mounted, tree;

Vuex = __webpack_require__(37);

if (typeof window !== "undefined" && window !== null) {
  Vuex = Vuex.default;
}

({ Query } = __webpack_require__(1));

ajax = __webpack_require__(62)("24h", "sow/story", function () {
  return this.book_id;
});

tree = function (...keys) {
  var i, idx, len, make, name, o;
  o = {};
  make = function (name, at) {
    var key, list, state;
    key = `${name}_id`;
    list = `${name}s`;
    state = {
      [`${key}`]: {
        get: function () {
          return at < this.idx.length && this.idx.slice(0, +at + 1 || 9e9).join("-");
        }
      },
      [`${name}`]: {
        get: function () {
          this.read_at;
          return Query[list].find(this[key]);
        }
      }
    };
    return o = Object.assign({}, o, state);
  };
  for (idx = i = 0, len = keys.length; i < len; idx = ++i) {
    name = keys[idx];
    make(name, idx);
  }
  o.book.set = function ({ page_idxs, chat_id, part_id, part }) {
    var chat, hash, head, pages, params, query, tail;
    if (part_id) {
      if (part == null) {
        part = Query.parts.find(part_id);
      }
    }
    if (part) {
      idx = part.id;
    }
    if (chat_id) {
      chat = Query.chats.find(chat_id);
      part = chat.part;
      idx = chat_id;
    }
    if (!part) {
      return;
    }
    head = page_idxs[0], tail = page_idxs[page_idxs.length - 1];
    pages = head === tail ? `${1 + head}` : [1 + head, 1 + tail].join("-");
    ({ name, params, query, hash } = this.$route);
    params = Object.assign({}, params, { idx });
    query = Object.assign({}, query, { pages });
    return this.$router.replace({ name, params, query, hash });
  };
  o.idx = {
    get: function () {
      return this.$route.params.idx.split("-");
    },
    set: function (idx) {
      var hash, params, query;
      ({ name, params, query, hash } = this.$route);
      params = Object.assign({}, params, { idx });
      return this.$router.replace({ name, params, query, hash });
    }
  };
  return o;
};

mounted = function () {
  var chat_id;
  ({ chat_id } = this);
  return ajax.mounted.call(this).then(() => {
    if (chat_id) {
      return this.$nextTick(() => {
        return this.$store.commit("menu/focus", chat_id);
      });
    }
  });
};

computed = Object.assign({}, tree("folder", "book", "part", "phase", "chat"), ajax.computed, {
  pages: function () {
    return this.$route.query.pages || "1";
  },
  page_idxs: function () {
    var head, i, ref, results, tail;
    [head, tail] = `${this.pages}`.split("-").map(function (o) {
      return Number(o) - 1;
    });
    return function () {
      results = [];
      for (var i = head, ref = tail != null ? tail : head; head <= ref ? i <= ref : i >= ref; head <= ref ? i++ : i--) {
        results.push(i);
      }
      return results;
    }.apply(this);
  },
  page_ids: function () {
    return this.page_idxs.map(idx => {
      return `${this.part_id}-${idx}`;
    });
  },
  mentions: function () {
    var ref, ref1;
    this.read_at;
    return (ref = Query.chats.reduce) != null ? (ref1 = ref.mention_to) != null ? ref1[this.chat_id] : void 0 : void 0;
  },
  back: function () {
    return [this.chat_id || this.part_id, this.mode, this.pages].join(",");
  },
  hide_potof_ids: {
    get: function () {
      return this.$store.state.book.hide_potof_ids;
    },
    set: function (ids) {
      return this.$store.commit("book/hide_potof_ids", ids);
    }
  },
  menus: {
    get: function () {
      var key, ref, results, val;
      ref = this.$store.state.menu.set;
      results = [];
      for (key in ref) {
        val = ref[key];
        if (val) {
          results.push(key);
        }
      }
      return results;
    },
    set: function (menus) {
      return this.$store.commit("menu/mode", menus);
    }
  }
});

module.exports = { computed, mounted };

/***/ }),
/* 39 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {

var utils = __webpack_require__(9);
var normalizeHeaderName = __webpack_require__(116);

var DEFAULT_CONTENT_TYPE = {
  'Content-Type': 'application/x-www-form-urlencoded'
};

function setContentTypeIfUnset(headers, value) {
  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {
    headers['Content-Type'] = value;
  }
}

function getDefaultAdapter() {
  var adapter;
  if (typeof XMLHttpRequest !== 'undefined') {
    // For browsers use XHR adapter
    adapter = __webpack_require__(65);
  } else if (typeof process !== 'undefined') {
    // For node use HTTP adapter
    adapter = __webpack_require__(65);
  }
  return adapter;
}

var defaults = {
  adapter: getDefaultAdapter(),

  transformRequest: [function transformRequest(data, headers) {
    normalizeHeaderName(headers, 'Content-Type');
    if (utils.isFormData(data) ||
      utils.isArrayBuffer(data) ||
      utils.isBuffer(data) ||
      utils.isStream(data) ||
      utils.isFile(data) ||
      utils.isBlob(data)
    ) {
      return data;
    }
    if (utils.isArrayBufferView(data)) {
      return data.buffer;
    }
    if (utils.isURLSearchParams(data)) {
      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');
      return data.toString();
    }
    if (utils.isObject(data)) {
      setContentTypeIfUnset(headers, 'application/json;charset=utf-8');
      return JSON.stringify(data);
    }
    return data;
  }],

  transformResponse: [function transformResponse(data) {
    /*eslint no-param-reassign:0*/
    if (typeof data === 'string') {
      try {
        data = JSON.parse(data);
      } catch (e) { /* Ignore */ }
    }
    return data;
  }],

  timeout: 0,

  xsrfCookieName: 'XSRF-TOKEN',
  xsrfHeaderName: 'X-XSRF-TOKEN',

  maxContentLength: -1,

  validateStatus: function validateStatus(status) {
    return status >= 200 && status < 300;
  }
};

defaults.headers = {
  common: {
    'Accept': 'application/json, text/plain, */*'
  }
};

utils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {
  defaults.headers[method] = {};
});

utils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {
  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);
});

module.exports = defaults;

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(280)))

/***/ }),
/* 40 */
/***/ (function(module, exports, __webpack_require__) {

var Mem, OBJ, Query, _, query_parser, set_for;

_ = __webpack_require__(7);

Mem = __webpack_require__(12);

OBJ = function () {
  return new Object(null);
};

set_for = function (list) {
  var i, key, len, set;
  set = OBJ();
  for (i = 0, len = list.length; i < len; i++) {
    key = list[i];
    set[key] = true;
  }
  return set;
};

query_parser = function (base, req, cb) {
  if (!req) {
    return base;
  }
  return new Query(base, function () {
    var key, results, val;
    this._filters = base._filters.concat();
    switch (req && req.constructor) {
      case Object:
        results = [];
        for (key in req) {
          val = req[key];
          results.push(cb(this, key, val, _.property(key)));
        }
        return results;
        break;
      case Function:
      case Array:
      case String:
        return cb(this, null, req, function (o) {
          return o;
        });
      default:
        return console.log({ req });
    }
  });
};

//throw Error 'unimplemented'
module.exports = Query = function () {
  class Query {
    static build() {
      var $sort, _all_ids, _filters, _group;
      _all_ids = _group = null;
      _filters = [];
      $sort = {};
      return new Query({ _all_ids, _group, _filters, $sort }, function () {
        this.all = this;
        return this._memory = OBJ();
      });
    }

    constructor(base, tap) {
      this._step = 0;
      this._copy(base);
      tap.call(this);
    }

    _copy({
      all: all,
      _all_ids: _all_ids1,
      _group: _group1,
      _filters: _filters1,
      $sort: $sort1
    }) {
      this.all = all;
      this._all_ids = _all_ids1;
      this._group = _group1;
      this._filters = _filters1;
      this.$sort = $sort1;
    }

    in(req) {
      return query_parser(this, req, function (q, target, req, path) {
        var add, set;
        add = function (f) {
          return q._filters.push(f);
        };
        switch (req && req.constructor) {
          case Array:
            set = set_for(req);
            return add(function (o) {
              var i, key, len, ref;
              ref = path(o);
              for (i = 0, len = ref.length; i < len; i++) {
                key = ref[i];
                if (set[key]) {
                  return true;
                }
              }
              return false;
            });
          case RegExp:
            return add(function (o) {
              var i, len, ref, val;
              ref = path(o);
              for (i = 0, len = ref.length; i < len; i++) {
                val = ref[i];
                if (req.test(val)) {
                  return true;
                }
              }
              return false;
            });
          case null:
          case 0:
          case Boolean:
          case String:
          case Number:
            return add(function (o) {
              var ref;
              return -1 < ((ref = path(o)) != null ? ref.indexOf(req) : void 0);
            });
          default:
            console.log({ target, req, path });
            throw Error('unimplemented');
        }
      });
    }

    where(req) {
      return query_parser(this, req, function (q, target, req, path) {
        var add, set;
        add = function (f) {
          return q._filters.push(f);
        };
        switch (req && req.constructor) {
          case Function:
            return add(req);
          case Array:
            if ("_id" === target) {
              return q._all_ids = req;
            } else {
              set = set_for(req);
              return add(function (o) {
                return set[path(o)];
              });
            }
            break;
          case RegExp:
            return add(function (o) {
              return req.test(path(o));
            });
          case null:
          case 0:
          case Boolean:
          case String:
          case Number:
            if ("_id" === target) {
              return q._all_ids = [req];
            } else {
              return add(function (o) {
                return req === path(o);
              });
            }
            break;
          default:
            console.log({ target, req, path });
            throw Error('unimplemented');
        }
      });
    }

    search(text) {
      var item, list, regexp;
      if (!text) {
        return this;
      }
      list = function () {
        var i, len, ref, results;
        ref = text.split(/\s+/);
        results = [];
        for (i = 0, len = ref.length; i < len; i++) {
          item = ref[i];
          item = item.replace(/[-\/\\^$*+?.()|[\]{}]/g, '\\$&');
          if (!item.length) {
            continue;
          }
          results.push(`(${item})`);
        }
        return results;
      }();
      if (!list.length) {
        return this;
      }
      regexp = new RegExp(list.join("|"), "ig");
      return this.where(function (o) {
        return !o.search_words || regexp.test(o.search_words);
      });
    }

    shuffle() {
      return this.sort(Math.random);
    }

    sort(...sort) {
      var ref;
      if (_.isEqual(sort, (ref = this.$sort['_reduce.list']) != null ? ref.sort : void 0)) {
        return this;
      }
      return new Query(this, function () {
        var base1;
        this.$sort = _.cloneDeep(this.$sort);
        if ((base1 = this.$sort)['_reduce.list'] == null) {
          base1['_reduce.list'] = {};
        }
        return Object.assign(this.$sort['_reduce.list'], { sort });
      });
    }

    page(page_by) {
      var ref;
      if (_.isEqual(page_by, (ref = this.$sort['_reduce.list']) != null ? ref.page_by : void 0)) {
        return this;
      }
      return new Query(this, function () {
        var base1;
        this.$sort = _.cloneDeep(this.$sort);
        if ((base1 = this.$sort)['_reduce.list'] == null) {
          base1['_reduce.list'] = {};
        }
        return Object.assign(this.$sort['_reduce.list'], { page_by });
      });
    }

    find(...ids) {
      var i, id, len, o;
      for (i = 0, len = ids.length; i < len; i++) {
        id = ids[i];
        if (o = this.hash[id]) {
          if (o) {
            return o;
          }
        }
      }
      return null;
    }

    finds(ids) {
      var i, id, len, o, results;
      results = [];
      for (i = 0, len = ids.length; i < len; i++) {
        id = ids[i];
        if (o = this.hash[id]) {
          results.push(o);
        }
      }
      return results;
    }

    pluck() {
      return this.list.pluck(...arguments);
    }

  };

  Object.defineProperties(Query.prototype, {
    reduce: {
      get: function () {
        if (this._step < this.all._finder.step) {
          this.all._finder.calculate(this, this.all._memory);
        }
        return this._reduce;
      }
    },
    list: {
      get: function () {
        return this.reduce.list;
      }
    },
    hash: {
      get: function () {
        return this.reduce.hash;
      }
    },
    memory: {
      get: function () {
        return this.all._memory;
      }
    },
    ids: {
      get: function () {
        return Object.keys(this.hash);
      }
    }
  });

  return Query;
}();

/***/ }),
/* 41 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__(180), __esModule: true };

/***/ }),
/* 42 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__(183), __esModule: true };

/***/ }),
/* 43 */
/***/ (function(module, exports, __webpack_require__) {

// getting tag from 19.1.3.6 Object.prototype.toString()
var cof = __webpack_require__(25);
var TAG = __webpack_require__(6)('toStringTag');
// ES3 wrong here
var ARG = cof(function () { return arguments; }()) == 'Arguments';

// fallback for IE11 Script Access Denied error
var tryGet = function (it, key) {
  try {
    return it[key];
  } catch (e) { /* empty */ }
};

module.exports = function (it) {
  var O, T, B;
  return it === undefined ? 'Undefined' : it === null ? 'Null'
    // @@toStringTag case
    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T
    // builtinTag case
    : ARG ? cof(O)
    // ES3 arguments fallback
    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;
};


/***/ }),
/* 44 */
/***/ (function(module, exports) {

// 7.2.1 RequireObjectCoercible(argument)
module.exports = function (it) {
  if (it == undefined) throw TypeError("Can't call method on  " + it);
  return it;
};


/***/ }),
/* 45 */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(26);
var document = __webpack_require__(8).document;
// typeof document.createElement is 'object' in old IE
var is = isObject(document) && isObject(document.createElement);
module.exports = function (it) {
  return is ? document.createElement(it) : {};
};


/***/ }),
/* 46 */
/***/ (function(module, exports) {

// IE 8- don't enum bug keys
module.exports = (
  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'
).split(',');


/***/ }),
/* 47 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// 25.4.1.5 NewPromiseCapability(C)
var aFunction = __webpack_require__(28);

function PromiseCapability(C) {
  var resolve, reject;
  this.promise = new C(function ($$resolve, $$reject) {
    if (resolve !== undefined || reject !== undefined) throw TypeError('Bad Promise constructor');
    resolve = $$resolve;
    reject = $$reject;
  });
  this.resolve = aFunction(resolve);
  this.reject = aFunction(reject);
}

module.exports.f = function (C) {
  return new PromiseCapability(C);
};


/***/ }),
/* 48 */
/***/ (function(module, exports) {

exports.f = Object.getOwnPropertySymbols;


/***/ }),
/* 49 */
/***/ (function(module, exports, __webpack_require__) {

var shared = __webpack_require__(50)('keys');
var uid = __webpack_require__(34);
module.exports = function (key) {
  return shared[key] || (shared[key] = uid(key));
};


/***/ }),
/* 50 */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(8);
var SHARED = '__core-js_shared__';
var store = global[SHARED] || (global[SHARED] = {});
module.exports = function (key) {
  return store[key] || (store[key] = {});
};


/***/ }),
/* 51 */
/***/ (function(module, exports) {

// 7.1.4 ToInteger
var ceil = Math.ceil;
var floor = Math.floor;
module.exports = function (it) {
  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);
};


/***/ }),
/* 52 */
/***/ (function(module, exports, __webpack_require__) {

// 7.1.13 ToObject(argument)
var defined = __webpack_require__(44);
module.exports = function (it) {
  return Object(defined(it));
};


/***/ }),
/* 53 */
/***/ (function(module, exports, __webpack_require__) {

// 7.1.1 ToPrimitive(input [, PreferredType])
var isObject = __webpack_require__(26);
// instead of the ES6 spec version, we didn't implement @@toPrimitive case
// and the second argument - flag - preferred type is a string
module.exports = function (it, S) {
  if (!isObject(it)) return it;
  var fn, val;
  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;
  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
  throw TypeError("Can't convert object to primitive value");
};


/***/ }),
/* 54 */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(8);
var core = __webpack_require__(5);
var LIBRARY = __webpack_require__(30);
var wksExt = __webpack_require__(55);
var defineProperty = __webpack_require__(17).f;
module.exports = function (name) {
  var $Symbol = core.Symbol || (core.Symbol = LIBRARY ? {} : global.Symbol || {});
  if (name.charAt(0) != '_' && !(name in $Symbol)) defineProperty($Symbol, name, { value: wksExt.f(name) });
};


/***/ }),
/* 55 */
/***/ (function(module, exports, __webpack_require__) {

exports.f = __webpack_require__(6);


/***/ }),
/* 56 */,
/* 57 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _promise = __webpack_require__(24);

var _promise2 = _interopRequireDefault(_promise);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = function (fn) {
  return function () {
    var gen = fn.apply(this, arguments);
    return new _promise2.default(function (resolve, reject) {
      function step(key, arg) {
        try {
          var info = gen[key](arg);
          var value = info.value;
        } catch (error) {
          reject(error);
          return;
        }

        if (info.done) {
          resolve(value);
        } else {
          return _promise2.default.resolve(value).then(function (value) {
            step("next", value);
          }, function (err) {
            step("throw", err);
          });
        }
      }

      return step("next");
    });
  };
};

/***/ }),
/* 58 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _iterator = __webpack_require__(148);

var _iterator2 = _interopRequireDefault(_iterator);

var _symbol = __webpack_require__(147);

var _symbol2 = _interopRequireDefault(_symbol);

var _typeof = typeof _symbol2.default === "function" && typeof _iterator2.default === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof _symbol2.default === "function" && obj.constructor === _symbol2.default && obj !== _symbol2.default.prototype ? "symbol" : typeof obj; };

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = typeof _symbol2.default === "function" && _typeof(_iterator2.default) === "symbol" ? function (obj) {
  return typeof obj === "undefined" ? "undefined" : _typeof(obj);
} : function (obj) {
  return obj && typeof _symbol2.default === "function" && obj.constructor === _symbol2.default && obj !== _symbol2.default.prototype ? "symbol" : typeof obj === "undefined" ? "undefined" : _typeof(obj);
};

/***/ }),
/* 59 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(281);


/***/ }),
/* 60 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * vue-meta v1.1.0
 * (c) 2017 Declan de Wet
 * @license MIT
 */
(function (global, factory) {
	 true ? module.exports = factory() :
	typeof define === 'function' && define.amd ? define(factory) :
	(global.VueMeta = factory());
}(this, (function () { 'use strict';

/*
object-assign
(c) Sindre Sorhus
@license MIT
*/

/* eslint-disable no-unused-vars */
var getOwnPropertySymbols = Object.getOwnPropertySymbols;
var hasOwnProperty = Object.prototype.hasOwnProperty;
var propIsEnumerable = Object.prototype.propertyIsEnumerable;

function toObject(val) {
	if (val === null || val === undefined) {
		throw new TypeError('Object.assign cannot be called with null or undefined');
	}

	return Object(val);
}

function shouldUseNative() {
	try {
		if (!Object.assign) {
			return false;
		}

		// Detect buggy property enumeration order in older V8 versions.

		// https://bugs.chromium.org/p/v8/issues/detail?id=4118
		var test1 = new String('abc');  // eslint-disable-line no-new-wrappers
		test1[5] = 'de';
		if (Object.getOwnPropertyNames(test1)[0] === '5') {
			return false;
		}

		// https://bugs.chromium.org/p/v8/issues/detail?id=3056
		var test2 = {};
		for (var i = 0; i < 10; i++) {
			test2['_' + String.fromCharCode(i)] = i;
		}
		var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
			return test2[n];
		});
		if (order2.join('') !== '0123456789') {
			return false;
		}

		// https://bugs.chromium.org/p/v8/issues/detail?id=3056
		var test3 = {};
		'abcdefghijklmnopqrst'.split('').forEach(function (letter) {
			test3[letter] = letter;
		});
		if (Object.keys(Object.assign({}, test3)).join('') !==
				'abcdefghijklmnopqrst') {
			return false;
		}

		return true;
	} catch (err) {
		// We don't expect any of the above to throw, but better to be safe.
		return false;
	}
}

var index = shouldUseNative() ? Object.assign : function (target, source) {
	var arguments$1 = arguments;

	var from;
	var to = toObject(target);
	var symbols;

	for (var s = 1; s < arguments.length; s++) {
		from = Object(arguments$1[s]);

		for (var key in from) {
			if (hasOwnProperty.call(from, key)) {
				to[key] = from[key];
			}
		}

		if (getOwnPropertySymbols) {
			symbols = getOwnPropertySymbols(from);
			for (var i = 0; i < symbols.length; i++) {
				if (propIsEnumerable.call(from, symbols[i])) {
					to[symbols[i]] = from[symbols[i]];
				}
			}
		}
	}

	return to;
};

var index$2 = function isMergeableObject(value) {
	return isNonNullObject(value) && isNotSpecial(value)
};

function isNonNullObject(value) {
	return !!value && typeof value === 'object'
}

function isNotSpecial(value) {
	var stringValue = Object.prototype.toString.call(value);

	return stringValue !== '[object RegExp]'
		&& stringValue !== '[object Date]'
}

function emptyTarget(val) {
    return Array.isArray(val) ? [] : {}
}

function cloneIfNecessary(value, optionsArgument) {
    var clone = optionsArgument && optionsArgument.clone === true;
    return (clone && index$2(value)) ? deepmerge(emptyTarget(value), value, optionsArgument) : value
}

function defaultArrayMerge(target, source, optionsArgument) {
    var destination = target.slice();
    source.forEach(function(e, i) {
        if (typeof destination[i] === 'undefined') {
            destination[i] = cloneIfNecessary(e, optionsArgument);
        } else if (index$2(e)) {
            destination[i] = deepmerge(target[i], e, optionsArgument);
        } else if (target.indexOf(e) === -1) {
            destination.push(cloneIfNecessary(e, optionsArgument));
        }
    });
    return destination
}

function mergeObject(target, source, optionsArgument) {
    var destination = {};
    if (index$2(target)) {
        Object.keys(target).forEach(function(key) {
            destination[key] = cloneIfNecessary(target[key], optionsArgument);
        });
    }
    Object.keys(source).forEach(function(key) {
        if (!index$2(source[key]) || !target[key]) {
            destination[key] = cloneIfNecessary(source[key], optionsArgument);
        } else {
            destination[key] = deepmerge(target[key], source[key], optionsArgument);
        }
    });
    return destination
}

function deepmerge(target, source, optionsArgument) {
    var sourceIsArray = Array.isArray(source);
    var targetIsArray = Array.isArray(target);
    var options = optionsArgument || { arrayMerge: defaultArrayMerge };
    var sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;

    if (!sourceAndTargetTypesMatch) {
        return cloneIfNecessary(source, optionsArgument)
    } else if (sourceIsArray) {
        var arrayMerge = options.arrayMerge || defaultArrayMerge;
        return arrayMerge(target, source, optionsArgument)
    } else {
        return mergeObject(target, source, optionsArgument)
    }
}

deepmerge.all = function deepmergeAll(array, optionsArgument) {
    if (!Array.isArray(array) || array.length < 2) {
        throw new Error('first argument should be an array with at least two elements')
    }

    // we are sure there are at least 2 values, so it is safe to have no initial value
    return array.reduce(function(prev, next) {
        return deepmerge(prev, next, optionsArgument)
    })
};

var index$1 = deepmerge;

/**
 * lodash (Custom Build) <https://lodash.com/>
 * Build: `lodash modularize exports="npm" -o ./`
 * Copyright jQuery Foundation and other contributors <https://jquery.org/>
 * Released under MIT license <https://lodash.com/license>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 */

/** `Object#toString` result references. */
var objectTag = '[object Object]';

/**
 * Checks if `value` is a host object in IE < 9.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a host object, else `false`.
 */
function isHostObject(value) {
  // Many host objects are `Object` objects that can coerce to strings
  // despite having improperly defined `toString` methods.
  var result = false;
  if (value != null && typeof value.toString != 'function') {
    try {
      result = !!(value + '');
    } catch (e) {}
  }
  return result;
}

/**
 * Creates a unary function that invokes `func` with its argument transformed.
 *
 * @private
 * @param {Function} func The function to wrap.
 * @param {Function} transform The argument transform.
 * @returns {Function} Returns the new function.
 */
function overArg(func, transform) {
  return function(arg) {
    return func(transform(arg));
  };
}

/** Used for built-in method references. */
var funcProto = Function.prototype;
var objectProto = Object.prototype;

/** Used to resolve the decompiled source of functions. */
var funcToString = funcProto.toString;

/** Used to check objects for own properties. */
var hasOwnProperty$1 = objectProto.hasOwnProperty;

/** Used to infer the `Object` constructor. */
var objectCtorString = funcToString.call(Object);

/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */
var objectToString = objectProto.toString;

/** Built-in value references. */
var getPrototype = overArg(Object.getPrototypeOf, Object);

/**
 * Checks if `value` is object-like. A value is object-like if it's not `null`
 * and has a `typeof` result of "object".
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
 * @example
 *
 * _.isObjectLike({});
 * // => true
 *
 * _.isObjectLike([1, 2, 3]);
 * // => true
 *
 * _.isObjectLike(_.noop);
 * // => false
 *
 * _.isObjectLike(null);
 * // => false
 */
function isObjectLike(value) {
  return !!value && typeof value == 'object';
}

/**
 * Checks if `value` is a plain object, that is, an object created by the
 * `Object` constructor or one with a `[[Prototype]]` of `null`.
 *
 * @static
 * @memberOf _
 * @since 0.8.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 * }
 *
 * _.isPlainObject(new Foo);
 * // => false
 *
 * _.isPlainObject([1, 2, 3]);
 * // => false
 *
 * _.isPlainObject({ 'x': 0, 'y': 0 });
 * // => true
 *
 * _.isPlainObject(Object.create(null));
 * // => true
 */
function isPlainObject(value) {
  if (!isObjectLike(value) ||
      objectToString.call(value) != objectTag || isHostObject(value)) {
    return false;
  }
  var proto = getPrototype(value);
  if (proto === null) {
    return true;
  }
  var Ctor = hasOwnProperty$1.call(proto, 'constructor') && proto.constructor;
  return (typeof Ctor == 'function' &&
    Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString);
}

var index$2$1 = isPlainObject;

/**
 * checks if passed argument is an array
 * @param  {any}  arr - the object to check
 * @return {Boolean} - true if `arr` is an array
 */
function isArray (arr) {
  return Array.isArray
    ? Array.isArray(arr)
    : Object.prototype.toString.call(arr) === '[object Array]'
}

/**
 * Returns the `opts.option` $option value of the given `opts.component`.
 * If methods are encountered, they will be bound to the component context.
 * If `opts.deep` is true, will recursively merge all child component
 * `opts.option` $option values into the returned result.
 *
 * @param  {Object} opts - options
 * @param  {Object} opts.component - Vue component to fetch option data from
 * @param  {String} opts.option - what option to look for
 * @param  {Boolean} opts.deep - look for data in child components as well?
 * @param  {Function} opts.arrayMerge - how should arrays be merged?
 * @param  {Object} [result={}] - result so far
 * @return {Object} result - final aggregated result
 */
function getComponentOption (opts, result) {
  if ( result === void 0 ) result = {};

  var component = opts.component;
  var option = opts.option;
  var deep = opts.deep;
  var arrayMerge = opts.arrayMerge;
  var $options = component.$options;

  if (component._inactive) { return result }

  // only collect option data if it exists
  if (typeof $options[option] !== 'undefined' && $options[option] !== null) {
    var data = $options[option];

    // if option is a function, replace it with it's result
    if (typeof data === 'function') {
      data = data.call(component);
    }

    if (typeof data === 'object') {
      // merge with existing options
      result = index$1(result, data, {
        clone: true,
        arrayMerge: arrayMerge
      });
    } else {
      result = data;
    }
  }

  // collect & aggregate child options if deep = true
  if (deep && component.$children.length) {
    component.$children.forEach(function (childComponent) {
      result = getComponentOption({
        component: childComponent,
        option: option,
        deep: deep,
        arrayMerge: arrayMerge
      }, result);
    });
  }

  return result
}

var escapeHTML = function (str) { return typeof window === 'undefined'
  // server-side escape sequence
  ? String(str)
    .replace(/&/g, '&amp;')
    .replace(/</g, '&lt;')
    .replace(/>/g, '&gt;')
    .replace(/"/g, '&quot;')
    .replace(/'/g, '&#x27;')
  // client-side escape sequence
  : String(str)
    .replace(/&/g, '\u0026')
    .replace(/</g, '\u003c')
    .replace(/>/g, '\u003e')
    .replace(/"/g, '\u0022')
    .replace(/'/g, '\u0027'); };

function _getMetaInfo (options) {
  if ( options === void 0 ) options = {};

  var keyName = options.keyName;
  var tagIDKeyName = options.tagIDKeyName;
  /**
   * Returns the correct meta info for the given component
   * (child components will overwrite parent meta info)
   *
   * @param  {Object} component - the Vue instance to get meta info from
   * @return {Object} - returned meta info
   */
  return function getMetaInfo (component) {
    // set some sane defaults
    var defaultInfo = {
      title: '',
      titleChunk: '',
      titleTemplate: '%s',
      htmlAttrs: {},
      bodyAttrs: {},
      headAttrs: {},
      meta: [],
      base: [],
      link: [],
      style: [],
      script: [],
      noscript: [],
      __dangerouslyDisableSanitizers: []
    };

    // collect & aggregate all metaInfo $options
    var info = getComponentOption({
      component: component,
      option: keyName,
      deep: true,
      arrayMerge: function arrayMerge (target, source) {
        // we concat the arrays without merging objects contained therein,
        // but we check for a `vmid` property on each object in the array
        // using an O(1) lookup associative array exploit
        // note the use of "for in" - we are looping through arrays here, not
        // plain objects
        var destination = [];
        for (var targetIndex in target) {
          var targetItem = target[targetIndex];
          var shared = false;
          for (var sourceIndex in source) {
            var sourceItem = source[sourceIndex];
            if (targetItem[tagIDKeyName] && targetItem[tagIDKeyName] === sourceItem[tagIDKeyName]) {
              shared = true;
              break
            }
          }
          if (!shared) {
            destination.push(targetItem);
          }
        }

        return destination.concat(source)
      }
    });

    // backup the title chunk in case user wants access to it
    if (info.title) {
      info.titleChunk = info.title;
    }

    // replace title with populated template
    if (info.titleTemplate) {
      info.title = info.titleTemplate.replace(/%s/g, info.titleChunk);
    }

    // convert base tag to an array so it can be handled the same way
    // as the other tags
    if (info.base) {
      info.base = Object.keys(info.base).length ? [info.base] : [];
    }

    // sanitizes potentially dangerous characters
    var escape = function (info) { return Object.keys(info).reduce(function (escaped, key) {
      var ref = info.__dangerouslyDisableSanitizers;
      var isDisabled = ref && ref.indexOf(key) > -1;
      var val = info[key];
      escaped[key] = val;
      if (key === '__dangerouslyDisableSanitizers') {
        return escaped
      }
      if (!isDisabled) {
        if (typeof val === 'string') {
          escaped[key] = escapeHTML(val);
        } else if (index$2$1(val)) {
          escaped[key] = escape(val);
        } else if (isArray(val)) {
          escaped[key] = val.map(escape);
        } else {
          escaped[key] = val;
        }
      } else {
        escaped[key] = val;
      }

      return escaped
    }, {}); };

    // merge with defaults
    info = index$1(defaultInfo, info);

    // begin sanitization
    info = escape(info);

    return info
  }
}

function _titleGenerator (options) {
  if ( options === void 0 ) options = {};

  var attribute = options.attribute;

  /**
   * Generates title output for the server
   *
   * @param  {'title'} type - the string "title"
   * @param  {String} data - the title text
   * @return {Object} - the title generator
   */
  return function titleGenerator (type, data) {
    return {
      text: function text () {
        return ("<" + type + " " + attribute + "=\"true\">" + data + "</" + type + ">")
      }
    }
  }
}

function _attrsGenerator (options) {
  if ( options === void 0 ) options = {};

  var attribute = options.attribute;

  /**
   * Generates tag attributes for use on the server.
   *
   * @param  {('bodyAttrs'|'htmlAttrs'|'headAttrs')} type - the type of attributes to generate
   * @param  {Object} data - the attributes to generate
   * @return {Object} - the attribute generator
   */
  return function attrsGenerator (type, data) {
    return {
      text: function text () {
        var attributeStr = '';
        var watchedAttrs = [];
        for (var attr in data) {
          if (data.hasOwnProperty(attr)) {
            watchedAttrs.push(attr);
            attributeStr += (typeof data[attr] !== 'undefined'
                ? (attr + "=\"" + (data[attr]) + "\"")
                : attr) + " ";
          }
        }
        attributeStr += attribute + "=\"" + (watchedAttrs.join(',')) + "\"";
        return attributeStr.trim()
      }
    }
  }
}

function _tagGenerator (options) {
  if ( options === void 0 ) options = {};

  var attribute = options.attribute;

  /**
   * Generates meta, base, link, style, script, noscript tags for use on the server
   *
   * @param  {('meta'|'base'|'link'|'style'|'script'|'noscript')} the name of the tag
   * @param  {(Array<Object>|Object)} tags - an array of tag objects or a single object in case of base
   * @return {Object} - the tag generator
   */
  return function tagGenerator (type, tags) {
    return {
      text: function text () {
        // build a string containing all tags of this type
        return tags.reduce(function (tagsStr, tag) {
          // build a string containing all attributes of this tag
          var attrs = Object.keys(tag).reduce(function (attrsStr, attr) {
            switch (attr) {
              // these attributes are treated as children on the tag
              case 'innerHTML':
              case 'cssText':
              case 'once':
                return attrsStr
              // these form the attribute list for this tag
              default:
                if (attr === options.tagIDKeyName) {
                  return (attrsStr + " data-" + attr + "=\"" + (tag[attr]) + "\"")
                }
                return typeof tag[attr] === 'undefined'
                  ? (attrsStr + " " + attr)
                  : (attrsStr + " " + attr + "=\"" + (tag[attr]) + "\"")
            }
          }, '').trim();

          // grab child content from one of these attributes, if possible
          var content = tag.innerHTML || tag.cssText || '';

          // these tag types will have content inserted
          var closed = ['noscript', 'script', 'style'].indexOf(type) === -1;

          // generate tag exactly without any other redundance attribute
          var observeTag = tag.once
            ? ''
            : (attribute + "=\"true\" ");

          // the final string for this specific tag
          return closed
            ? (tagsStr + "<" + type + " " + observeTag + attrs + "/>")
            : (tagsStr + "<" + type + " " + observeTag + attrs + ">" + content + "</" + type + ">")
        }, '')
      }
    }
  }
}

function _generateServerInjector (options) {
  if ( options === void 0 ) options = {};

  /**
   * Converts a meta info property to one that can be stringified on the server
   *
   * @param  {String} type - the type of data to convert
   * @param  {(String|Object|Array<Object>)} data - the data value
   * @return {Object} - the new injector
   */
  return function generateServerInjector (type, data) {
    switch (type) {
      case 'title':
        return _titleGenerator(options)(type, data)
      case 'htmlAttrs':
      case 'bodyAttrs':
      case 'headAttrs':
        return _attrsGenerator(options)(type, data)
      default:
        return _tagGenerator(options)(type, data)
    }
  }
}

function _inject (options) {
  if ( options === void 0 ) options = {};

  /**
   * Converts the state of the meta info object such that each item
   * can be compiled to a tag string on the server
   *
   * @this {Object} - Vue instance - ideally the root component
   * @return {Object} - server meta info with `toString` methods
   */
  return function inject () {
    // get meta info with sensible defaults
    var info = _getMetaInfo(options)(this.$root);

    // generate server injectors
    for (var key in info) {
      if (info.hasOwnProperty(key) && key !== 'titleTemplate' && key !== 'titleChunk') {
        info[key] = _generateServerInjector(options)(key, info[key]);
      }
    }

    return info
  }
}

function _updateTitle () {
  /**
   * updates the document title
   *
   * @param  {String} title - the new title of the document
   */
  return function updateTitle (title) {
    if ( title === void 0 ) title = document.title;

    document.title = title;
  }
}

function _updateTagAttributes (options) {
  if ( options === void 0 ) options = {};

  var attribute = options.attribute;

  /**
   * updates the document's html tag attributes
   *
   * @param  {Object} attrs - the new document html attributes
   * @param  {HTMLElement} tag - the HTMLElment tag to update with new attrs
   */
  return function updateTagAttributes (attrs, tag) {
    var vueMetaAttrString = tag.getAttribute(attribute);
    var vueMetaAttrs = vueMetaAttrString ? vueMetaAttrString.split(',') : [];
    var toRemove = [].concat(vueMetaAttrs);
    for (var attr in attrs) {
      if (attrs.hasOwnProperty(attr)) {
        var val = attrs[attr] || '';
        tag.setAttribute(attr, val);
        if (vueMetaAttrs.indexOf(attr) === -1) {
          vueMetaAttrs.push(attr);
        }
        var saveIndex = toRemove.indexOf(attr);
        if (saveIndex !== -1) {
          toRemove.splice(saveIndex, 1);
        }
      }
    }
    var i = toRemove.length - 1;
    for (; i >= 0; i--) {
      tag.removeAttribute(toRemove[i]);
    }
    if (vueMetaAttrs.length === toRemove.length) {
      tag.removeAttribute(attribute);
    } else {
      tag.setAttribute(attribute, vueMetaAttrs.join(','));
    }
  }
}

// borrow the slice method
var toArray = Function.prototype.call.bind(Array.prototype.slice);

function _updateTags (options) {
  if ( options === void 0 ) options = {};

  var attribute = options.attribute;

  /**
   * Updates meta tags inside <head> on the client. Borrowed from `react-helmet`:
   * https://github.com/nfl/react-helmet/blob/004d448f8de5f823d10f838b02317521180f34da/src/Helmet.js#L195-L245
   *
   * @param  {('meta'|'base'|'link'|'style'|'script'|'noscript')} type - the name of the tag
   * @param  {(Array<Object>|Object)} tags - an array of tag objects or a single object in case of base
   * @return {Object} - a representation of what tags changed
   */
  return function updateTags (type, tags, headTag) {
    var nodes = headTag.querySelectorAll((type + "[" + attribute + "]"));
    var oldTags = toArray(nodes);
    var newTags = [];
    var indexToDelete;

    if (tags.length > 1) {
      // remove duplicates that could have been found by merging tags
      // which include a mixin with metaInfo and that mixin is used
      // by multiple components on the same page
      var found = [];
      tags = tags.map(function (x) {
        var k = JSON.stringify(x);
        if (found.indexOf(k) < 0) {
          found.push(k);
          return x
        }
      }).filter(function (x) { return x; });
    }

    if (tags && tags.length) {
      tags.forEach(function (tag) {
        var newElement = document.createElement(type);

        for (var attr in tag) {
          if (tag.hasOwnProperty(attr)) {
            if (attr === 'innerHTML') {
              newElement.innerHTML = tag.innerHTML;
            } else if (attr === 'cssText') {
              if (newElement.styleSheet) {
                newElement.styleSheet.cssText = tag.cssText;
              } else {
                newElement.appendChild(document.createTextNode(tag.cssText));
              }
            } else if (attr === options.tagIDKeyName) {
              var _attr = "data-" + attr;
              var value = (typeof tag[attr] === 'undefined') ? '' : tag[attr];
              newElement.setAttribute(_attr, value);
            } else {
              var value$1 = (typeof tag[attr] === 'undefined') ? '' : tag[attr];
              newElement.setAttribute(attr, value$1);
            }
          }
        }

        newElement.setAttribute(attribute, 'true');

        // Remove a duplicate tag from domTagstoRemove, so it isn't cleared.
        if (oldTags.some(function (existingTag, index) {
          indexToDelete = index;
          return newElement.isEqualNode(existingTag)
        })) {
          oldTags.splice(indexToDelete, 1);
        } else {
          newTags.push(newElement);
        }
      });
    }

    oldTags.forEach(function (tag) { return tag.parentNode.removeChild(tag); });
    newTags.forEach(function (tag) { return headTag.appendChild(tag); });

    return { oldTags: oldTags, newTags: newTags }
  }
}

function _updateClientMetaInfo (options) {
  if ( options === void 0 ) options = {};

  var ssrAttribute = options.ssrAttribute;

  /**
   * Performs client-side updates when new meta info is received
   *
   * @param  {Object} newInfo - the meta info to update to
   */
  return function updateClientMetaInfo (newInfo) {
    var htmlTag = document.getElementsByTagName('html')[0];
    // if this is not a server render, then update
    if (htmlTag.getAttribute(ssrAttribute) === null) {
      // initialize tracked changes
      var addedTags = {};
      var removedTags = {};

      Object.keys(newInfo).forEach(function (key) {
        switch (key) {
          // update the title
          case 'title':
            _updateTitle(options)(newInfo.title);
            break
          // update attributes
          case 'htmlAttrs':
            _updateTagAttributes(options)(newInfo[key], htmlTag);
            break
          case 'bodyAttrs':
            _updateTagAttributes(options)(newInfo[key], document.getElementsByTagName('body')[0]);
            break
          case 'headAttrs':
            _updateTagAttributes(options)(newInfo[key], document.getElementsByTagName('head')[0]);
            break
          // ignore these
          case 'titleChunk':
          case 'titleTemplate':
          case 'changed':
          case '__dangerouslyDisableSanitizers':
            break
          // catch-all update tags
          default:
            var ref = _updateTags(options)(key, newInfo[key], document.getElementsByTagName('head')[0]);
        var oldTags = ref.oldTags;
        var newTags = ref.newTags;
            if (newTags.length) {
              addedTags[key] = newTags;
              removedTags[key] = oldTags;
            }
        }
      });

      // emit "event" with new info
      if (typeof newInfo.changed === 'function') {
        newInfo.changed.call(this, newInfo, addedTags, removedTags);
      }
    } else {
      // remove the server render attribute so we can update on changes
      htmlTag.removeAttribute(ssrAttribute);
    }
  }
}

function _refresh (options) {
  if ( options === void 0 ) options = {};

  /**
   * When called, will update the current meta info with new meta info.
   * Useful when updating meta info as the result of an asynchronous
   * action that resolves after the initial render takes place.
   *
   * Credit to [Sébastien Chopin](https://github.com/Atinux) for the suggestion
   * to implement this method.
   *
   * @return {Object} - new meta info
   */
  return function refresh () {
    var info = _getMetaInfo(options)(this.$root);
    _updateClientMetaInfo(options).call(this, info);
    return info
  }
}

function _$meta (options) {
  if ( options === void 0 ) options = {};

  /**
   * Returns an injector for server-side rendering.
   * @this {Object} - the Vue instance (a root component)
   * @return {Object} - injector
   */
  return function $meta () {
    return {
      inject: _inject(options).bind(this),
      refresh: _refresh(options).bind(this)
    }
  }
}

// fallback to timers if rAF not present
var stopUpdate = (typeof window !== 'undefined' ? window.cancelAnimationFrame : null) || clearTimeout;
var startUpdate = (typeof window !== 'undefined' ? window.requestAnimationFrame : null) || (function (cb) { return setTimeout(cb, 0); });

/**
 * Performs a batched update. Uses requestAnimationFrame to prevent
 * calling a function too many times in quick succession.
 * You need to pass it an ID (which can initially be `null`),
 * but be sure to overwrite that ID with the return value of batchUpdate.
 *
 * @param  {(null|Number)} id - the ID of this update
 * @param  {Function} callback - the update to perform
 * @return {Number} id - a new ID
 */
function batchUpdate (id, callback) {
  stopUpdate(id);
  return startUpdate(function () {
    id = null;
    callback();
  })
}

/**
 * These are constant variables used throughout the application.
 */

// This is the name of the component option that contains all the information that
// gets converted to the various meta tags & attributes for the page.
var VUE_META_KEY_NAME = 'metaInfo';

// This is the attribute vue-meta augments on elements to know which it should
// manage and which it should ignore.
var VUE_META_ATTRIBUTE = 'data-vue-meta';

// This is the attribute that goes on the `html` tag to inform `vue-meta`
// that the server has already generated the meta tags for the initial render.
var VUE_META_SERVER_RENDERED_ATTRIBUTE = 'data-vue-meta-server-rendered';

// This is the property that tells vue-meta to overwrite (instead of append)
// an item in a tag list. For example, if you have two `meta` tag list items
// that both have `vmid` of "description", then vue-meta will overwrite the
// shallowest one with the deepest one.
var VUE_META_TAG_LIST_ID_KEY_NAME = 'vmid';

// automatic install
if (typeof Vue !== 'undefined') {
  Vue.use(VueMeta);
}

/**
 * Plugin install function.
 * @param {Function} Vue - the Vue constructor.
 */
function VueMeta (Vue, options) {
  if ( options === void 0 ) options = {};

  // set some default options
  var defaultOptions = {
    keyName: VUE_META_KEY_NAME,
    attribute: VUE_META_ATTRIBUTE,
    ssrAttribute: VUE_META_SERVER_RENDERED_ATTRIBUTE,
    tagIDKeyName: VUE_META_TAG_LIST_ID_KEY_NAME
  };
  // combine options
  options = index(defaultOptions, options);

  // bind the $meta method to this component instance
  Vue.prototype.$meta = _$meta(options);

  // store an id to keep track of DOM updates
  var batchID = null;

  // watch for client side component updates
  Vue.mixin({
    beforeCreate: function beforeCreate () {
      // Add a marker to know if it uses metaInfo
      if (typeof this.$options[options.keyName] !== 'undefined') {
        this._hasMetaInfo = true;
      }
      // coerce function-style metaInfo to a computed prop so we can observe
      // it on creation
      if (typeof this.$options[options.keyName] === 'function') {
        if (typeof this.$options.computed === 'undefined') {
          this.$options.computed = {};
        }
        this.$options.computed.$metaInfo = this.$options[options.keyName];
      }
    },
    created: function created () {
      var this$1 = this;

      // if computed $metaInfo exists, watch it for updates & trigger a refresh
      // when it changes (i.e. automatically handle async actions that affect metaInfo)
      // credit for this suggestion goes to [Sébastien Chopin](https://github.com/Atinux)
      if (this.$metaInfo) {
        this.$watch('$metaInfo', function () {
          // batch potential DOM updates to prevent extraneous re-rendering
          batchID = batchUpdate(batchID, function () { return this$1.$meta().refresh(); });
        });
      }
    },
    activated: function activated () {
      var this$1 = this;

      if (this._hasMetaInfo) {
        // batch potential DOM updates to prevent extraneous re-rendering
        batchID = batchUpdate(batchID, function () { return this$1.$meta().refresh(); });
      }
    },
    deactivated: function deactivated () {
      var this$1 = this;

      if (this._hasMetaInfo) {
        // batch potential DOM updates to prevent extraneous re-rendering
        batchID = batchUpdate(batchID, function () { return this$1.$meta().refresh(); });
      }
    },
    beforeMount: function beforeMount () {
      var this$1 = this;

      // batch potential DOM updates to prevent extraneous re-rendering
      if (this._hasMetaInfo) {
        batchID = batchUpdate(batchID, function () { return this$1.$meta().refresh(); });
      }
    },
    destroyed: function destroyed () {
      var this$1 = this;

      // do not trigger refresh on the server side
      if (this.$isServer) { return }
      // re-render meta data when returning from a child component to parent
      if (this._hasMetaInfo) {
        // Wait that element is hidden before refreshing meta tags (to support animations)
        var interval = setInterval(function () {
          if (this$1.$el.offsetParent !== null) { return }
          clearInterval(interval);
          batchID = batchUpdate(batchID, function () { return this$1.$meta().refresh(); });
        }, 50);
      }
    }
  });
}

var version = "1.1.0";

VueMeta.version = version;

return VueMeta;

})));


/***/ }),
/* 61 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/**
  * vue-router v2.7.0
  * (c) 2017 Evan You
  * @license MIT
  */
/*  */

function assert (condition, message) {
  if (!condition) {
    throw new Error(("[vue-router] " + message))
  }
}

function warn (condition, message) {
  if (false) {
    typeof console !== 'undefined' && console.warn(("[vue-router] " + message));
  }
}

function isError (err) {
  return Object.prototype.toString.call(err).indexOf('Error') > -1
}

var View = {
  name: 'router-view',
  functional: true,
  props: {
    name: {
      type: String,
      default: 'default'
    }
  },
  render: function render (_, ref) {
    var props = ref.props;
    var children = ref.children;
    var parent = ref.parent;
    var data = ref.data;

    data.routerView = true;

    // directly use parent context's createElement() function
    // so that components rendered by router-view can resolve named slots
    var h = parent.$createElement;
    var name = props.name;
    var route = parent.$route;
    var cache = parent._routerViewCache || (parent._routerViewCache = {});

    // determine current view depth, also check to see if the tree
    // has been toggled inactive but kept-alive.
    var depth = 0;
    var inactive = false;
    while (parent && parent._routerRoot !== parent) {
      if (parent.$vnode && parent.$vnode.data.routerView) {
        depth++;
      }
      if (parent._inactive) {
        inactive = true;
      }
      parent = parent.$parent;
    }
    data.routerViewDepth = depth;

    // render previous view if the tree is inactive and kept-alive
    if (inactive) {
      return h(cache[name], data, children)
    }

    var matched = route.matched[depth];
    // render empty node if no matched route
    if (!matched) {
      cache[name] = null;
      return h()
    }

    var component = cache[name] = matched.components[name];

    // attach instance registration hook
    // this will be called in the instance's injected lifecycle hooks
    data.registerRouteInstance = function (vm, val) {
      // val could be undefined for unregistration
      var current = matched.instances[name];
      if (
        (val && current !== vm) ||
        (!val && current === vm)
      ) {
        matched.instances[name] = val;
      }
    }

    // also regiseter instance in prepatch hook
    // in case the same component instance is reused across different routes
    ;(data.hook || (data.hook = {})).prepatch = function (_, vnode) {
      matched.instances[name] = vnode.componentInstance;
    };

    // resolve props
    data.props = resolveProps(route, matched.props && matched.props[name]);

    return h(component, data, children)
  }
};

function resolveProps (route, config) {
  switch (typeof config) {
    case 'undefined':
      return
    case 'object':
      return config
    case 'function':
      return config(route)
    case 'boolean':
      return config ? route.params : undefined
    default:
      if (false) {
        warn(
          false,
          "props in \"" + (route.path) + "\" is a " + (typeof config) + ", " +
          "expecting an object, function or boolean."
        );
      }
  }
}

/*  */

var encodeReserveRE = /[!'()*]/g;
var encodeReserveReplacer = function (c) { return '%' + c.charCodeAt(0).toString(16); };
var commaRE = /%2C/g;

// fixed encodeURIComponent which is more conformant to RFC3986:
// - escapes [!'()*]
// - preserve commas
var encode = function (str) { return encodeURIComponent(str)
  .replace(encodeReserveRE, encodeReserveReplacer)
  .replace(commaRE, ','); };

var decode = decodeURIComponent;

function resolveQuery (
  query,
  extraQuery,
  _parseQuery
) {
  if ( extraQuery === void 0 ) extraQuery = {};

  var parse = _parseQuery || parseQuery;
  var parsedQuery;
  try {
    parsedQuery = parse(query || '');
  } catch (e) {
    "production" !== 'production' && warn(false, e.message);
    parsedQuery = {};
  }
  for (var key in extraQuery) {
    var val = extraQuery[key];
    parsedQuery[key] = Array.isArray(val) ? val.slice() : val;
  }
  return parsedQuery
}

function parseQuery (query) {
  var res = {};

  query = query.trim().replace(/^(\?|#|&)/, '');

  if (!query) {
    return res
  }

  query.split('&').forEach(function (param) {
    var parts = param.replace(/\+/g, ' ').split('=');
    var key = decode(parts.shift());
    var val = parts.length > 0
      ? decode(parts.join('='))
      : null;

    if (res[key] === undefined) {
      res[key] = val;
    } else if (Array.isArray(res[key])) {
      res[key].push(val);
    } else {
      res[key] = [res[key], val];
    }
  });

  return res
}

function stringifyQuery (obj) {
  var res = obj ? Object.keys(obj).map(function (key) {
    var val = obj[key];

    if (val === undefined) {
      return ''
    }

    if (val === null) {
      return encode(key)
    }

    if (Array.isArray(val)) {
      var result = [];
      val.forEach(function (val2) {
        if (val2 === undefined) {
          return
        }
        if (val2 === null) {
          result.push(encode(key));
        } else {
          result.push(encode(key) + '=' + encode(val2));
        }
      });
      return result.join('&')
    }

    return encode(key) + '=' + encode(val)
  }).filter(function (x) { return x.length > 0; }).join('&') : null;
  return res ? ("?" + res) : ''
}

/*  */


var trailingSlashRE = /\/?$/;

function createRoute (
  record,
  location,
  redirectedFrom,
  router
) {
  var stringifyQuery$$1 = router && router.options.stringifyQuery;
  var route = {
    name: location.name || (record && record.name),
    meta: (record && record.meta) || {},
    path: location.path || '/',
    hash: location.hash || '',
    query: location.query || {},
    params: location.params || {},
    fullPath: getFullPath(location, stringifyQuery$$1),
    matched: record ? formatMatch(record) : []
  };
  if (redirectedFrom) {
    route.redirectedFrom = getFullPath(redirectedFrom, stringifyQuery$$1);
  }
  return Object.freeze(route)
}

// the starting route that represents the initial state
var START = createRoute(null, {
  path: '/'
});

function formatMatch (record) {
  var res = [];
  while (record) {
    res.unshift(record);
    record = record.parent;
  }
  return res
}

function getFullPath (
  ref,
  _stringifyQuery
) {
  var path = ref.path;
  var query = ref.query; if ( query === void 0 ) query = {};
  var hash = ref.hash; if ( hash === void 0 ) hash = '';

  var stringify = _stringifyQuery || stringifyQuery;
  return (path || '/') + stringify(query) + hash
}

function isSameRoute (a, b) {
  if (b === START) {
    return a === b
  } else if (!b) {
    return false
  } else if (a.path && b.path) {
    return (
      a.path.replace(trailingSlashRE, '') === b.path.replace(trailingSlashRE, '') &&
      a.hash === b.hash &&
      isObjectEqual(a.query, b.query)
    )
  } else if (a.name && b.name) {
    return (
      a.name === b.name &&
      a.hash === b.hash &&
      isObjectEqual(a.query, b.query) &&
      isObjectEqual(a.params, b.params)
    )
  } else {
    return false
  }
}

function isObjectEqual (a, b) {
  if ( a === void 0 ) a = {};
  if ( b === void 0 ) b = {};

  var aKeys = Object.keys(a);
  var bKeys = Object.keys(b);
  if (aKeys.length !== bKeys.length) {
    return false
  }
  return aKeys.every(function (key) {
    var aVal = a[key];
    var bVal = b[key];
    // check nested equality
    if (typeof aVal === 'object' && typeof bVal === 'object') {
      return isObjectEqual(aVal, bVal)
    }
    return String(aVal) === String(bVal)
  })
}

function isIncludedRoute (current, target) {
  return (
    current.path.replace(trailingSlashRE, '/').indexOf(
      target.path.replace(trailingSlashRE, '/')
    ) === 0 &&
    (!target.hash || current.hash === target.hash) &&
    queryIncludes(current.query, target.query)
  )
}

function queryIncludes (current, target) {
  for (var key in target) {
    if (!(key in current)) {
      return false
    }
  }
  return true
}

/*  */

// work around weird flow bug
var toTypes = [String, Object];
var eventTypes = [String, Array];

var Link = {
  name: 'router-link',
  props: {
    to: {
      type: toTypes,
      required: true
    },
    tag: {
      type: String,
      default: 'a'
    },
    exact: Boolean,
    append: Boolean,
    replace: Boolean,
    activeClass: String,
    exactActiveClass: String,
    event: {
      type: eventTypes,
      default: 'click'
    }
  },
  render: function render (h) {
    var this$1 = this;

    var router = this.$router;
    var current = this.$route;
    var ref = router.resolve(this.to, current, this.append);
    var location = ref.location;
    var route = ref.route;
    var href = ref.href;

    var classes = {};
    var globalActiveClass = router.options.linkActiveClass;
    var globalExactActiveClass = router.options.linkExactActiveClass;
    // Support global empty active class
    var activeClassFallback = globalActiveClass == null
            ? 'router-link-active'
            : globalActiveClass;
    var exactActiveClassFallback = globalExactActiveClass == null
            ? 'router-link-exact-active'
            : globalExactActiveClass;
    var activeClass = this.activeClass == null
            ? activeClassFallback
            : this.activeClass;
    var exactActiveClass = this.exactActiveClass == null
            ? exactActiveClassFallback
            : this.exactActiveClass;
    var compareTarget = location.path
      ? createRoute(null, location, null, router)
      : route;

    classes[exactActiveClass] = isSameRoute(current, compareTarget);
    classes[activeClass] = this.exact
      ? classes[exactActiveClass]
      : isIncludedRoute(current, compareTarget);

    var handler = function (e) {
      if (guardEvent(e)) {
        if (this$1.replace) {
          router.replace(location);
        } else {
          router.push(location);
        }
      }
    };

    var on = { click: guardEvent };
    if (Array.isArray(this.event)) {
      this.event.forEach(function (e) { on[e] = handler; });
    } else {
      on[this.event] = handler;
    }

    var data = {
      class: classes
    };

    if (this.tag === 'a') {
      data.on = on;
      data.attrs = { href: href };
    } else {
      // find the first <a> child and apply listener and href
      var a = findAnchor(this.$slots.default);
      if (a) {
        // in case the <a> is a static node
        a.isStatic = false;
        var extend = _Vue.util.extend;
        var aData = a.data = extend({}, a.data);
        aData.on = on;
        var aAttrs = a.data.attrs = extend({}, a.data.attrs);
        aAttrs.href = href;
      } else {
        // doesn't have <a> child, apply listener to self
        data.on = on;
      }
    }

    return h(this.tag, data, this.$slots.default)
  }
};

function guardEvent (e) {
  // don't redirect with control keys
  if (e.metaKey || e.altKey || e.ctrlKey || e.shiftKey) { return }
  // don't redirect when preventDefault called
  if (e.defaultPrevented) { return }
  // don't redirect on right click
  if (e.button !== undefined && e.button !== 0) { return }
  // don't redirect if `target="_blank"`
  if (e.currentTarget && e.currentTarget.getAttribute) {
    var target = e.currentTarget.getAttribute('target');
    if (/\b_blank\b/i.test(target)) { return }
  }
  // this may be a Weex event which doesn't have this method
  if (e.preventDefault) {
    e.preventDefault();
  }
  return true
}

function findAnchor (children) {
  if (children) {
    var child;
    for (var i = 0; i < children.length; i++) {
      child = children[i];
      if (child.tag === 'a') {
        return child
      }
      if (child.children && (child = findAnchor(child.children))) {
        return child
      }
    }
  }
}

var _Vue;

function install (Vue) {
  if (install.installed) { return }
  install.installed = true;

  _Vue = Vue;

  var isDef = function (v) { return v !== undefined; };

  var registerInstance = function (vm, callVal) {
    var i = vm.$options._parentVnode;
    if (isDef(i) && isDef(i = i.data) && isDef(i = i.registerRouteInstance)) {
      i(vm, callVal);
    }
  };

  Vue.mixin({
    beforeCreate: function beforeCreate () {
      if (isDef(this.$options.router)) {
        this._routerRoot = this;
        this._router = this.$options.router;
        this._router.init(this);
        Vue.util.defineReactive(this, '_route', this._router.history.current);
      } else {
        this._routerRoot = (this.$parent && this.$parent._routerRoot) || this;
      }
      registerInstance(this, this);
    },
    destroyed: function destroyed () {
      registerInstance(this);
    }
  });

  Object.defineProperty(Vue.prototype, '$router', {
    get: function get () { return this._routerRoot._router }
  });

  Object.defineProperty(Vue.prototype, '$route', {
    get: function get () { return this._routerRoot._route }
  });

  Vue.component('router-view', View);
  Vue.component('router-link', Link);

  var strats = Vue.config.optionMergeStrategies;
  // use the same hook merging strategy for route hooks
  strats.beforeRouteEnter = strats.beforeRouteLeave = strats.beforeRouteUpdate = strats.created;
}

/*  */

var inBrowser = typeof window !== 'undefined';

/*  */

function resolvePath (
  relative,
  base,
  append
) {
  var firstChar = relative.charAt(0);
  if (firstChar === '/') {
    return relative
  }

  if (firstChar === '?' || firstChar === '#') {
    return base + relative
  }

  var stack = base.split('/');

  // remove trailing segment if:
  // - not appending
  // - appending to trailing slash (last segment is empty)
  if (!append || !stack[stack.length - 1]) {
    stack.pop();
  }

  // resolve relative path
  var segments = relative.replace(/^\//, '').split('/');
  for (var i = 0; i < segments.length; i++) {
    var segment = segments[i];
    if (segment === '..') {
      stack.pop();
    } else if (segment !== '.') {
      stack.push(segment);
    }
  }

  // ensure leading slash
  if (stack[0] !== '') {
    stack.unshift('');
  }

  return stack.join('/')
}

function parsePath (path) {
  var hash = '';
  var query = '';

  var hashIndex = path.indexOf('#');
  if (hashIndex >= 0) {
    hash = path.slice(hashIndex);
    path = path.slice(0, hashIndex);
  }

  var queryIndex = path.indexOf('?');
  if (queryIndex >= 0) {
    query = path.slice(queryIndex + 1);
    path = path.slice(0, queryIndex);
  }

  return {
    path: path,
    query: query,
    hash: hash
  }
}

function cleanPath (path) {
  return path.replace(/\/\//g, '/')
}

var index$1 = Array.isArray || function (arr) {
  return Object.prototype.toString.call(arr) == '[object Array]';
};

/**
 * Expose `pathToRegexp`.
 */
var index = pathToRegexp;
var parse_1 = parse;
var compile_1 = compile;
var tokensToFunction_1 = tokensToFunction;
var tokensToRegExp_1 = tokensToRegExp;

/**
 * The main path matching regexp utility.
 *
 * @type {RegExp}
 */
var PATH_REGEXP = new RegExp([
  // Match escaped characters that would otherwise appear in future matches.
  // This allows the user to escape special characters that won't transform.
  '(\\\\.)',
  // Match Express-style parameters and un-named parameters with a prefix
  // and optional suffixes. Matches appear as:
  //
  // "/:test(\\d+)?" => ["/", "test", "\d+", undefined, "?", undefined]
  // "/route(\\d+)"  => [undefined, undefined, undefined, "\d+", undefined, undefined]
  // "/*"            => ["/", undefined, undefined, undefined, undefined, "*"]
  '([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))'
].join('|'), 'g');

/**
 * Parse a string for the raw tokens.
 *
 * @param  {string}  str
 * @param  {Object=} options
 * @return {!Array}
 */
function parse (str, options) {
  var tokens = [];
  var key = 0;
  var index = 0;
  var path = '';
  var defaultDelimiter = options && options.delimiter || '/';
  var res;

  while ((res = PATH_REGEXP.exec(str)) != null) {
    var m = res[0];
    var escaped = res[1];
    var offset = res.index;
    path += str.slice(index, offset);
    index = offset + m.length;

    // Ignore already escaped sequences.
    if (escaped) {
      path += escaped[1];
      continue
    }

    var next = str[index];
    var prefix = res[2];
    var name = res[3];
    var capture = res[4];
    var group = res[5];
    var modifier = res[6];
    var asterisk = res[7];

    // Push the current path onto the tokens.
    if (path) {
      tokens.push(path);
      path = '';
    }

    var partial = prefix != null && next != null && next !== prefix;
    var repeat = modifier === '+' || modifier === '*';
    var optional = modifier === '?' || modifier === '*';
    var delimiter = res[2] || defaultDelimiter;
    var pattern = capture || group;

    tokens.push({
      name: name || key++,
      prefix: prefix || '',
      delimiter: delimiter,
      optional: optional,
      repeat: repeat,
      partial: partial,
      asterisk: !!asterisk,
      pattern: pattern ? escapeGroup(pattern) : (asterisk ? '.*' : '[^' + escapeString(delimiter) + ']+?')
    });
  }

  // Match any characters still remaining.
  if (index < str.length) {
    path += str.substr(index);
  }

  // If the path exists, push it onto the end.
  if (path) {
    tokens.push(path);
  }

  return tokens
}

/**
 * Compile a string to a template function for the path.
 *
 * @param  {string}             str
 * @param  {Object=}            options
 * @return {!function(Object=, Object=)}
 */
function compile (str, options) {
  return tokensToFunction(parse(str, options))
}

/**
 * Prettier encoding of URI path segments.
 *
 * @param  {string}
 * @return {string}
 */
function encodeURIComponentPretty (str) {
  return encodeURI(str).replace(/[\/?#]/g, function (c) {
    return '%' + c.charCodeAt(0).toString(16).toUpperCase()
  })
}

/**
 * Encode the asterisk parameter. Similar to `pretty`, but allows slashes.
 *
 * @param  {string}
 * @return {string}
 */
function encodeAsterisk (str) {
  return encodeURI(str).replace(/[?#]/g, function (c) {
    return '%' + c.charCodeAt(0).toString(16).toUpperCase()
  })
}

/**
 * Expose a method for transforming tokens into the path function.
 */
function tokensToFunction (tokens) {
  // Compile all the tokens into regexps.
  var matches = new Array(tokens.length);

  // Compile all the patterns before compilation.
  for (var i = 0; i < tokens.length; i++) {
    if (typeof tokens[i] === 'object') {
      matches[i] = new RegExp('^(?:' + tokens[i].pattern + ')$');
    }
  }

  return function (obj, opts) {
    var path = '';
    var data = obj || {};
    var options = opts || {};
    var encode = options.pretty ? encodeURIComponentPretty : encodeURIComponent;

    for (var i = 0; i < tokens.length; i++) {
      var token = tokens[i];

      if (typeof token === 'string') {
        path += token;

        continue
      }

      var value = data[token.name];
      var segment;

      if (value == null) {
        if (token.optional) {
          // Prepend partial segment prefixes.
          if (token.partial) {
            path += token.prefix;
          }

          continue
        } else {
          throw new TypeError('Expected "' + token.name + '" to be defined')
        }
      }

      if (index$1(value)) {
        if (!token.repeat) {
          throw new TypeError('Expected "' + token.name + '" to not repeat, but received `' + JSON.stringify(value) + '`')
        }

        if (value.length === 0) {
          if (token.optional) {
            continue
          } else {
            throw new TypeError('Expected "' + token.name + '" to not be empty')
          }
        }

        for (var j = 0; j < value.length; j++) {
          segment = encode(value[j]);

          if (!matches[i].test(segment)) {
            throw new TypeError('Expected all "' + token.name + '" to match "' + token.pattern + '", but received `' + JSON.stringify(segment) + '`')
          }

          path += (j === 0 ? token.prefix : token.delimiter) + segment;
        }

        continue
      }

      segment = token.asterisk ? encodeAsterisk(value) : encode(value);

      if (!matches[i].test(segment)) {
        throw new TypeError('Expected "' + token.name + '" to match "' + token.pattern + '", but received "' + segment + '"')
      }

      path += token.prefix + segment;
    }

    return path
  }
}

/**
 * Escape a regular expression string.
 *
 * @param  {string} str
 * @return {string}
 */
function escapeString (str) {
  return str.replace(/([.+*?=^!:${}()[\]|\/\\])/g, '\\$1')
}

/**
 * Escape the capturing group by escaping special characters and meaning.
 *
 * @param  {string} group
 * @return {string}
 */
function escapeGroup (group) {
  return group.replace(/([=!:$\/()])/g, '\\$1')
}

/**
 * Attach the keys as a property of the regexp.
 *
 * @param  {!RegExp} re
 * @param  {Array}   keys
 * @return {!RegExp}
 */
function attachKeys (re, keys) {
  re.keys = keys;
  return re
}

/**
 * Get the flags for a regexp from the options.
 *
 * @param  {Object} options
 * @return {string}
 */
function flags (options) {
  return options.sensitive ? '' : 'i'
}

/**
 * Pull out keys from a regexp.
 *
 * @param  {!RegExp} path
 * @param  {!Array}  keys
 * @return {!RegExp}
 */
function regexpToRegexp (path, keys) {
  // Use a negative lookahead to match only capturing groups.
  var groups = path.source.match(/\((?!\?)/g);

  if (groups) {
    for (var i = 0; i < groups.length; i++) {
      keys.push({
        name: i,
        prefix: null,
        delimiter: null,
        optional: false,
        repeat: false,
        partial: false,
        asterisk: false,
        pattern: null
      });
    }
  }

  return attachKeys(path, keys)
}

/**
 * Transform an array into a regexp.
 *
 * @param  {!Array}  path
 * @param  {Array}   keys
 * @param  {!Object} options
 * @return {!RegExp}
 */
function arrayToRegexp (path, keys, options) {
  var parts = [];

  for (var i = 0; i < path.length; i++) {
    parts.push(pathToRegexp(path[i], keys, options).source);
  }

  var regexp = new RegExp('(?:' + parts.join('|') + ')', flags(options));

  return attachKeys(regexp, keys)
}

/**
 * Create a path regexp from string input.
 *
 * @param  {string}  path
 * @param  {!Array}  keys
 * @param  {!Object} options
 * @return {!RegExp}
 */
function stringToRegexp (path, keys, options) {
  return tokensToRegExp(parse(path, options), keys, options)
}

/**
 * Expose a function for taking tokens and returning a RegExp.
 *
 * @param  {!Array}          tokens
 * @param  {(Array|Object)=} keys
 * @param  {Object=}         options
 * @return {!RegExp}
 */
function tokensToRegExp (tokens, keys, options) {
  if (!index$1(keys)) {
    options = /** @type {!Object} */ (keys || options);
    keys = [];
  }

  options = options || {};

  var strict = options.strict;
  var end = options.end !== false;
  var route = '';

  // Iterate over the tokens and create our regexp string.
  for (var i = 0; i < tokens.length; i++) {
    var token = tokens[i];

    if (typeof token === 'string') {
      route += escapeString(token);
    } else {
      var prefix = escapeString(token.prefix);
      var capture = '(?:' + token.pattern + ')';

      keys.push(token);

      if (token.repeat) {
        capture += '(?:' + prefix + capture + ')*';
      }

      if (token.optional) {
        if (!token.partial) {
          capture = '(?:' + prefix + '(' + capture + '))?';
        } else {
          capture = prefix + '(' + capture + ')?';
        }
      } else {
        capture = prefix + '(' + capture + ')';
      }

      route += capture;
    }
  }

  var delimiter = escapeString(options.delimiter || '/');
  var endsWithDelimiter = route.slice(-delimiter.length) === delimiter;

  // In non-strict mode we allow a slash at the end of match. If the path to
  // match already ends with a slash, we remove it for consistency. The slash
  // is valid at the end of a path match, not in the middle. This is important
  // in non-ending mode, where "/test/" shouldn't match "/test//route".
  if (!strict) {
    route = (endsWithDelimiter ? route.slice(0, -delimiter.length) : route) + '(?:' + delimiter + '(?=$))?';
  }

  if (end) {
    route += '$';
  } else {
    // In non-ending mode, we need the capturing groups to match as much as
    // possible by using a positive lookahead to the end or next path segment.
    route += strict && endsWithDelimiter ? '' : '(?=' + delimiter + '|$)';
  }

  return attachKeys(new RegExp('^' + route, flags(options)), keys)
}

/**
 * Normalize the given path string, returning a regular expression.
 *
 * An empty array can be passed in for the keys, which will hold the
 * placeholder key descriptions. For example, using `/user/:id`, `keys` will
 * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.
 *
 * @param  {(string|RegExp|Array)} path
 * @param  {(Array|Object)=}       keys
 * @param  {Object=}               options
 * @return {!RegExp}
 */
function pathToRegexp (path, keys, options) {
  if (!index$1(keys)) {
    options = /** @type {!Object} */ (keys || options);
    keys = [];
  }

  options = options || {};

  if (path instanceof RegExp) {
    return regexpToRegexp(path, /** @type {!Array} */ (keys))
  }

  if (index$1(path)) {
    return arrayToRegexp(/** @type {!Array} */ (path), /** @type {!Array} */ (keys), options)
  }

  return stringToRegexp(/** @type {string} */ (path), /** @type {!Array} */ (keys), options)
}

index.parse = parse_1;
index.compile = compile_1;
index.tokensToFunction = tokensToFunction_1;
index.tokensToRegExp = tokensToRegExp_1;

/*  */

var regexpCompileCache = Object.create(null);

function fillParams (
  path,
  params,
  routeMsg
) {
  try {
    var filler =
      regexpCompileCache[path] ||
      (regexpCompileCache[path] = index.compile(path));
    return filler(params || {}, { pretty: true })
  } catch (e) {
    if (false) {
      warn(false, ("missing param for " + routeMsg + ": " + (e.message)));
    }
    return ''
  }
}

/*  */

function createRouteMap (
  routes,
  oldPathList,
  oldPathMap,
  oldNameMap
) {
  // the path list is used to control path matching priority
  var pathList = oldPathList || [];
  var pathMap = oldPathMap || Object.create(null);
  var nameMap = oldNameMap || Object.create(null);

  routes.forEach(function (route) {
    addRouteRecord(pathList, pathMap, nameMap, route);
  });

  // ensure wildcard routes are always at the end
  for (var i = 0, l = pathList.length; i < l; i++) {
    if (pathList[i] === '*') {
      pathList.push(pathList.splice(i, 1)[0]);
      l--;
      i--;
    }
  }

  return {
    pathList: pathList,
    pathMap: pathMap,
    nameMap: nameMap
  }
}

function addRouteRecord (
  pathList,
  pathMap,
  nameMap,
  route,
  parent,
  matchAs
) {
  var path = route.path;
  var name = route.name;
  if (false) {
    assert(path != null, "\"path\" is required in a route configuration.");
    assert(
      typeof route.component !== 'string',
      "route config \"component\" for path: " + (String(path || name)) + " cannot be a " +
      "string id. Use an actual component instead."
    );
  }

  var normalizedPath = normalizePath(path, parent);
  var pathToRegexpOptions = route.pathToRegexpOptions || {};

  if (typeof route.caseSensitive === 'boolean') {
    pathToRegexpOptions.sensitive = route.caseSensitive;
  }

  var record = {
    path: normalizedPath,
    regex: compileRouteRegex(normalizedPath, pathToRegexpOptions),
    components: route.components || { default: route.component },
    instances: {},
    name: name,
    parent: parent,
    matchAs: matchAs,
    redirect: route.redirect,
    beforeEnter: route.beforeEnter,
    meta: route.meta || {},
    props: route.props == null
      ? {}
      : route.components
        ? route.props
        : { default: route.props }
  };

  if (route.children) {
    // Warn if route is named, does not redirect and has a default child route.
    // If users navigate to this route by name, the default child will
    // not be rendered (GH Issue #629)
    if (false) {
      if (route.name && !route.redirect && route.children.some(function (child) { return /^\/?$/.test(child.path); })) {
        warn(
          false,
          "Named Route '" + (route.name) + "' has a default child route. " +
          "When navigating to this named route (:to=\"{name: '" + (route.name) + "'\"), " +
          "the default child route will not be rendered. Remove the name from " +
          "this route and use the name of the default child route for named " +
          "links instead."
        );
      }
    }
    route.children.forEach(function (child) {
      var childMatchAs = matchAs
        ? cleanPath((matchAs + "/" + (child.path)))
        : undefined;
      addRouteRecord(pathList, pathMap, nameMap, child, record, childMatchAs);
    });
  }

  if (route.alias !== undefined) {
    var aliases = Array.isArray(route.alias)
      ? route.alias
      : [route.alias];

    aliases.forEach(function (alias) {
      var aliasRoute = {
        path: alias,
        children: route.children
      };
      addRouteRecord(
        pathList,
        pathMap,
        nameMap,
        aliasRoute,
        parent,
        record.path || '/' // matchAs
      );
    });
  }

  if (!pathMap[record.path]) {
    pathList.push(record.path);
    pathMap[record.path] = record;
  }

  if (name) {
    if (!nameMap[name]) {
      nameMap[name] = record;
    } else if (false) {
      warn(
        false,
        "Duplicate named routes definition: " +
        "{ name: \"" + name + "\", path: \"" + (record.path) + "\" }"
      );
    }
  }
}

function compileRouteRegex (path, pathToRegexpOptions) {
  var regex = index(path, [], pathToRegexpOptions);
  if (false) {
    var keys = {};
    regex.keys.forEach(function (key) {
      warn(!keys[key.name], ("Duplicate param keys in route with path: \"" + path + "\""));
      keys[key.name] = true;
    });
  }
  return regex
}

function normalizePath (path, parent) {
  path = path.replace(/\/$/, '');
  if (path[0] === '/') { return path }
  if (parent == null) { return path }
  return cleanPath(((parent.path) + "/" + path))
}

/*  */


function normalizeLocation (
  raw,
  current,
  append,
  router
) {
  var next = typeof raw === 'string' ? { path: raw } : raw;
  // named target
  if (next.name || next._normalized) {
    return next
  }

  // relative params
  if (!next.path && next.params && current) {
    next = assign({}, next);
    next._normalized = true;
    var params = assign(assign({}, current.params), next.params);
    if (current.name) {
      next.name = current.name;
      next.params = params;
    } else if (current.matched.length) {
      var rawPath = current.matched[current.matched.length - 1].path;
      next.path = fillParams(rawPath, params, ("path " + (current.path)));
    } else if (false) {
      warn(false, "relative params navigation requires a current route.");
    }
    return next
  }

  var parsedPath = parsePath(next.path || '');
  var basePath = (current && current.path) || '/';
  var path = parsedPath.path
    ? resolvePath(parsedPath.path, basePath, append || next.append)
    : basePath;

  var query = resolveQuery(
    parsedPath.query,
    next.query,
    router && router.options.parseQuery
  );

  var hash = next.hash || parsedPath.hash;
  if (hash && hash.charAt(0) !== '#') {
    hash = "#" + hash;
  }

  return {
    _normalized: true,
    path: path,
    query: query,
    hash: hash
  }
}

function assign (a, b) {
  for (var key in b) {
    a[key] = b[key];
  }
  return a
}

/*  */


function createMatcher (
  routes,
  router
) {
  var ref = createRouteMap(routes);
  var pathList = ref.pathList;
  var pathMap = ref.pathMap;
  var nameMap = ref.nameMap;

  function addRoutes (routes) {
    createRouteMap(routes, pathList, pathMap, nameMap);
  }

  function match (
    raw,
    currentRoute,
    redirectedFrom
  ) {
    var location = normalizeLocation(raw, currentRoute, false, router);
    var name = location.name;

    if (name) {
      var record = nameMap[name];
      if (false) {
        warn(record, ("Route with name '" + name + "' does not exist"));
      }
      if (!record) { return _createRoute(null, location) }
      var paramNames = record.regex.keys
        .filter(function (key) { return !key.optional; })
        .map(function (key) { return key.name; });

      if (typeof location.params !== 'object') {
        location.params = {};
      }

      if (currentRoute && typeof currentRoute.params === 'object') {
        for (var key in currentRoute.params) {
          if (!(key in location.params) && paramNames.indexOf(key) > -1) {
            location.params[key] = currentRoute.params[key];
          }
        }
      }

      if (record) {
        location.path = fillParams(record.path, location.params, ("named route \"" + name + "\""));
        return _createRoute(record, location, redirectedFrom)
      }
    } else if (location.path) {
      location.params = {};
      for (var i = 0; i < pathList.length; i++) {
        var path = pathList[i];
        var record$1 = pathMap[path];
        if (matchRoute(record$1.regex, location.path, location.params)) {
          return _createRoute(record$1, location, redirectedFrom)
        }
      }
    }
    // no match
    return _createRoute(null, location)
  }

  function redirect (
    record,
    location
  ) {
    var originalRedirect = record.redirect;
    var redirect = typeof originalRedirect === 'function'
        ? originalRedirect(createRoute(record, location, null, router))
        : originalRedirect;

    if (typeof redirect === 'string') {
      redirect = { path: redirect };
    }

    if (!redirect || typeof redirect !== 'object') {
      if (false) {
        warn(
          false, ("invalid redirect option: " + (JSON.stringify(redirect)))
        );
      }
      return _createRoute(null, location)
    }

    var re = redirect;
    var name = re.name;
    var path = re.path;
    var query = location.query;
    var hash = location.hash;
    var params = location.params;
    query = re.hasOwnProperty('query') ? re.query : query;
    hash = re.hasOwnProperty('hash') ? re.hash : hash;
    params = re.hasOwnProperty('params') ? re.params : params;

    if (name) {
      // resolved named direct
      var targetRecord = nameMap[name];
      if (false) {
        assert(targetRecord, ("redirect failed: named route \"" + name + "\" not found."));
      }
      return match({
        _normalized: true,
        name: name,
        query: query,
        hash: hash,
        params: params
      }, undefined, location)
    } else if (path) {
      // 1. resolve relative redirect
      var rawPath = resolveRecordPath(path, record);
      // 2. resolve params
      var resolvedPath = fillParams(rawPath, params, ("redirect route with path \"" + rawPath + "\""));
      // 3. rematch with existing query and hash
      return match({
        _normalized: true,
        path: resolvedPath,
        query: query,
        hash: hash
      }, undefined, location)
    } else {
      if (false) {
        warn(false, ("invalid redirect option: " + (JSON.stringify(redirect))));
      }
      return _createRoute(null, location)
    }
  }

  function alias (
    record,
    location,
    matchAs
  ) {
    var aliasedPath = fillParams(matchAs, location.params, ("aliased route with path \"" + matchAs + "\""));
    var aliasedMatch = match({
      _normalized: true,
      path: aliasedPath
    });
    if (aliasedMatch) {
      var matched = aliasedMatch.matched;
      var aliasedRecord = matched[matched.length - 1];
      location.params = aliasedMatch.params;
      return _createRoute(aliasedRecord, location)
    }
    return _createRoute(null, location)
  }

  function _createRoute (
    record,
    location,
    redirectedFrom
  ) {
    if (record && record.redirect) {
      return redirect(record, redirectedFrom || location)
    }
    if (record && record.matchAs) {
      return alias(record, location, record.matchAs)
    }
    return createRoute(record, location, redirectedFrom, router)
  }

  return {
    match: match,
    addRoutes: addRoutes
  }
}

function matchRoute (
  regex,
  path,
  params
) {
  var m = path.match(regex);

  if (!m) {
    return false
  } else if (!params) {
    return true
  }

  for (var i = 1, len = m.length; i < len; ++i) {
    var key = regex.keys[i - 1];
    var val = typeof m[i] === 'string' ? decodeURIComponent(m[i]) : m[i];
    if (key) {
      params[key.name] = val;
    }
  }

  return true
}

function resolveRecordPath (path, record) {
  return resolvePath(path, record.parent ? record.parent.path : '/', true)
}

/*  */


var positionStore = Object.create(null);

function setupScroll () {
  window.addEventListener('popstate', function (e) {
    saveScrollPosition();
    if (e.state && e.state.key) {
      setStateKey(e.state.key);
    }
  });
}

function handleScroll (
  router,
  to,
  from,
  isPop
) {
  if (!router.app) {
    return
  }

  var behavior = router.options.scrollBehavior;
  if (!behavior) {
    return
  }

  if (false) {
    assert(typeof behavior === 'function', "scrollBehavior must be a function");
  }

  // wait until re-render finishes before scrolling
  router.app.$nextTick(function () {
    var position = getScrollPosition();
    var shouldScroll = behavior(to, from, isPop ? position : null);
    if (!shouldScroll) {
      return
    }
    var isObject = typeof shouldScroll === 'object';
    if (isObject && typeof shouldScroll.selector === 'string') {
      var el = document.querySelector(shouldScroll.selector);
      if (el) {
        var offset = shouldScroll.offset && typeof shouldScroll.offset === 'object' ? shouldScroll.offset : {};
        offset = normalizeOffset(offset);
        position = getElementPosition(el, offset);
      } else if (isValidPosition(shouldScroll)) {
        position = normalizePosition(shouldScroll);
      }
    } else if (isObject && isValidPosition(shouldScroll)) {
      position = normalizePosition(shouldScroll);
    }

    if (position) {
      window.scrollTo(position.x, position.y);
    }
  });
}

function saveScrollPosition () {
  var key = getStateKey();
  if (key) {
    positionStore[key] = {
      x: window.pageXOffset,
      y: window.pageYOffset
    };
  }
}

function getScrollPosition () {
  var key = getStateKey();
  if (key) {
    return positionStore[key]
  }
}

function getElementPosition (el, offset) {
  var docEl = document.documentElement;
  var docRect = docEl.getBoundingClientRect();
  var elRect = el.getBoundingClientRect();
  return {
    x: elRect.left - docRect.left - offset.x,
    y: elRect.top - docRect.top - offset.y
  }
}

function isValidPosition (obj) {
  return isNumber(obj.x) || isNumber(obj.y)
}

function normalizePosition (obj) {
  return {
    x: isNumber(obj.x) ? obj.x : window.pageXOffset,
    y: isNumber(obj.y) ? obj.y : window.pageYOffset
  }
}

function normalizeOffset (obj) {
  return {
    x: isNumber(obj.x) ? obj.x : 0,
    y: isNumber(obj.y) ? obj.y : 0
  }
}

function isNumber (v) {
  return typeof v === 'number'
}

/*  */

var supportsPushState = inBrowser && (function () {
  var ua = window.navigator.userAgent;

  if (
    (ua.indexOf('Android 2.') !== -1 || ua.indexOf('Android 4.0') !== -1) &&
    ua.indexOf('Mobile Safari') !== -1 &&
    ua.indexOf('Chrome') === -1 &&
    ua.indexOf('Windows Phone') === -1
  ) {
    return false
  }

  return window.history && 'pushState' in window.history
})();

// use User Timing api (if present) for more accurate key precision
var Time = inBrowser && window.performance && window.performance.now
  ? window.performance
  : Date;

var _key = genKey();

function genKey () {
  return Time.now().toFixed(3)
}

function getStateKey () {
  return _key
}

function setStateKey (key) {
  _key = key;
}

function pushState (url, replace) {
  saveScrollPosition();
  // try...catch the pushState call to get around Safari
  // DOM Exception 18 where it limits to 100 pushState calls
  var history = window.history;
  try {
    if (replace) {
      history.replaceState({ key: _key }, '', url);
    } else {
      _key = genKey();
      history.pushState({ key: _key }, '', url);
    }
  } catch (e) {
    window.location[replace ? 'replace' : 'assign'](url);
  }
}

function replaceState (url) {
  pushState(url, true);
}

/*  */

function runQueue (queue, fn, cb) {
  var step = function (index) {
    if (index >= queue.length) {
      cb();
    } else {
      if (queue[index]) {
        fn(queue[index], function () {
          step(index + 1);
        });
      } else {
        step(index + 1);
      }
    }
  };
  step(0);
}

/*  */

function resolveAsyncComponents (matched) {
  return function (to, from, next) {
    var hasAsync = false;
    var pending = 0;
    var error = null;

    flatMapComponents(matched, function (def, _, match, key) {
      // if it's a function and doesn't have cid attached,
      // assume it's an async component resolve function.
      // we are not using Vue's default async resolving mechanism because
      // we want to halt the navigation until the incoming component has been
      // resolved.
      if (typeof def === 'function' && def.cid === undefined) {
        hasAsync = true;
        pending++;

        var resolve = once(function (resolvedDef) {
          if (resolvedDef.__esModule && resolvedDef.default) {
            resolvedDef = resolvedDef.default;
          }
          // save resolved on async factory in case it's used elsewhere
          def.resolved = typeof resolvedDef === 'function'
            ? resolvedDef
            : _Vue.extend(resolvedDef);
          match.components[key] = resolvedDef;
          pending--;
          if (pending <= 0) {
            next();
          }
        });

        var reject = once(function (reason) {
          var msg = "Failed to resolve async component " + key + ": " + reason;
          "production" !== 'production' && warn(false, msg);
          if (!error) {
            error = isError(reason)
              ? reason
              : new Error(msg);
            next(error);
          }
        });

        var res;
        try {
          res = def(resolve, reject);
        } catch (e) {
          reject(e);
        }
        if (res) {
          if (typeof res.then === 'function') {
            res.then(resolve, reject);
          } else {
            // new syntax in Vue 2.3
            var comp = res.component;
            if (comp && typeof comp.then === 'function') {
              comp.then(resolve, reject);
            }
          }
        }
      }
    });

    if (!hasAsync) { next(); }
  }
}

function flatMapComponents (
  matched,
  fn
) {
  return flatten(matched.map(function (m) {
    return Object.keys(m.components).map(function (key) { return fn(
      m.components[key],
      m.instances[key],
      m, key
    ); })
  }))
}

function flatten (arr) {
  return Array.prototype.concat.apply([], arr)
}

// in Webpack 2, require.ensure now also returns a Promise
// so the resolve/reject functions may get called an extra time
// if the user uses an arrow function shorthand that happens to
// return that Promise.
function once (fn) {
  var called = false;
  return function () {
    var args = [], len = arguments.length;
    while ( len-- ) args[ len ] = arguments[ len ];

    if (called) { return }
    called = true;
    return fn.apply(this, args)
  }
}

/*  */

var History = function History (router, base) {
  this.router = router;
  this.base = normalizeBase(base);
  // start with a route object that stands for "nowhere"
  this.current = START;
  this.pending = null;
  this.ready = false;
  this.readyCbs = [];
  this.readyErrorCbs = [];
  this.errorCbs = [];
};

History.prototype.listen = function listen (cb) {
  this.cb = cb;
};

History.prototype.onReady = function onReady (cb, errorCb) {
  if (this.ready) {
    cb();
  } else {
    this.readyCbs.push(cb);
    if (errorCb) {
      this.readyErrorCbs.push(errorCb);
    }
  }
};

History.prototype.onError = function onError (errorCb) {
  this.errorCbs.push(errorCb);
};

History.prototype.transitionTo = function transitionTo (location, onComplete, onAbort) {
    var this$1 = this;

  var route = this.router.match(location, this.current);
  this.confirmTransition(route, function () {
    this$1.updateRoute(route);
    onComplete && onComplete(route);
    this$1.ensureURL();

    // fire ready cbs once
    if (!this$1.ready) {
      this$1.ready = true;
      this$1.readyCbs.forEach(function (cb) { cb(route); });
    }
  }, function (err) {
    if (onAbort) {
      onAbort(err);
    }
    if (err && !this$1.ready) {
      this$1.ready = true;
      this$1.readyErrorCbs.forEach(function (cb) { cb(err); });
    }
  });
};

History.prototype.confirmTransition = function confirmTransition (route, onComplete, onAbort) {
    var this$1 = this;

  var current = this.current;
  var abort = function (err) {
    if (isError(err)) {
      if (this$1.errorCbs.length) {
        this$1.errorCbs.forEach(function (cb) { cb(err); });
      } else {
        warn(false, 'uncaught error during route navigation:');
        console.error(err);
      }
    }
    onAbort && onAbort(err);
  };
  if (
    isSameRoute(route, current) &&
    // in the case the route map has been dynamically appended to
    route.matched.length === current.matched.length
  ) {
    this.ensureURL();
    return abort()
  }

  var ref = resolveQueue(this.current.matched, route.matched);
    var updated = ref.updated;
    var deactivated = ref.deactivated;
    var activated = ref.activated;

  var queue = [].concat(
    // in-component leave guards
    extractLeaveGuards(deactivated),
    // global before hooks
    this.router.beforeHooks,
    // in-component update hooks
    extractUpdateHooks(updated),
    // in-config enter guards
    activated.map(function (m) { return m.beforeEnter; }),
    // async components
    resolveAsyncComponents(activated)
  );

  this.pending = route;
  var iterator = function (hook, next) {
    if (this$1.pending !== route) {
      return abort()
    }
    try {
      hook(route, current, function (to) {
        if (to === false || isError(to)) {
          // next(false) -> abort navigation, ensure current URL
          this$1.ensureURL(true);
          abort(to);
        } else if (
          typeof to === 'string' ||
          (typeof to === 'object' && (
            typeof to.path === 'string' ||
            typeof to.name === 'string'
          ))
        ) {
          // next('/') or next({ path: '/' }) -> redirect
          abort();
          if (typeof to === 'object' && to.replace) {
            this$1.replace(to);
          } else {
            this$1.push(to);
          }
        } else {
          // confirm transition and pass on the value
          next(to);
        }
      });
    } catch (e) {
      abort(e);
    }
  };

  runQueue(queue, iterator, function () {
    var postEnterCbs = [];
    var isValid = function () { return this$1.current === route; };
    // wait until async components are resolved before
    // extracting in-component enter guards
    var enterGuards = extractEnterGuards(activated, postEnterCbs, isValid);
    var queue = enterGuards.concat(this$1.router.resolveHooks);
    runQueue(queue, iterator, function () {
      if (this$1.pending !== route) {
        return abort()
      }
      this$1.pending = null;
      onComplete(route);
      if (this$1.router.app) {
        this$1.router.app.$nextTick(function () {
          postEnterCbs.forEach(function (cb) { cb(); });
        });
      }
    });
  });
};

History.prototype.updateRoute = function updateRoute (route) {
  var prev = this.current;
  this.current = route;
  this.cb && this.cb(route);
  this.router.afterHooks.forEach(function (hook) {
    hook && hook(route, prev);
  });
};

function normalizeBase (base) {
  if (!base) {
    if (inBrowser) {
      // respect <base> tag
      var baseEl = document.querySelector('base');
      base = (baseEl && baseEl.getAttribute('href')) || '/';
      // strip full URL origin
      base = base.replace(/^https?:\/\/[^\/]+/, '');
    } else {
      base = '/';
    }
  }
  // make sure there's the starting slash
  if (base.charAt(0) !== '/') {
    base = '/' + base;
  }
  // remove trailing slash
  return base.replace(/\/$/, '')
}

function resolveQueue (
  current,
  next
) {
  var i;
  var max = Math.max(current.length, next.length);
  for (i = 0; i < max; i++) {
    if (current[i] !== next[i]) {
      break
    }
  }
  return {
    updated: next.slice(0, i),
    activated: next.slice(i),
    deactivated: current.slice(i)
  }
}

function extractGuards (
  records,
  name,
  bind,
  reverse
) {
  var guards = flatMapComponents(records, function (def, instance, match, key) {
    var guard = extractGuard(def, name);
    if (guard) {
      return Array.isArray(guard)
        ? guard.map(function (guard) { return bind(guard, instance, match, key); })
        : bind(guard, instance, match, key)
    }
  });
  return flatten(reverse ? guards.reverse() : guards)
}

function extractGuard (
  def,
  key
) {
  if (typeof def !== 'function') {
    // extend now so that global mixins are applied.
    def = _Vue.extend(def);
  }
  return def.options[key]
}

function extractLeaveGuards (deactivated) {
  return extractGuards(deactivated, 'beforeRouteLeave', bindGuard, true)
}

function extractUpdateHooks (updated) {
  return extractGuards(updated, 'beforeRouteUpdate', bindGuard)
}

function bindGuard (guard, instance) {
  if (instance) {
    return function boundRouteGuard () {
      return guard.apply(instance, arguments)
    }
  }
}

function extractEnterGuards (
  activated,
  cbs,
  isValid
) {
  return extractGuards(activated, 'beforeRouteEnter', function (guard, _, match, key) {
    return bindEnterGuard(guard, match, key, cbs, isValid)
  })
}

function bindEnterGuard (
  guard,
  match,
  key,
  cbs,
  isValid
) {
  return function routeEnterGuard (to, from, next) {
    return guard(to, from, function (cb) {
      next(cb);
      if (typeof cb === 'function') {
        cbs.push(function () {
          // #750
          // if a router-view is wrapped with an out-in transition,
          // the instance may not have been registered at this time.
          // we will need to poll for registration until current route
          // is no longer valid.
          poll(cb, match.instances, key, isValid);
        });
      }
    })
  }
}

function poll (
  cb, // somehow flow cannot infer this is a function
  instances,
  key,
  isValid
) {
  if (instances[key]) {
    cb(instances[key]);
  } else if (isValid()) {
    setTimeout(function () {
      poll(cb, instances, key, isValid);
    }, 16);
  }
}

/*  */


var HTML5History = (function (History$$1) {
  function HTML5History (router, base) {
    var this$1 = this;

    History$$1.call(this, router, base);

    var expectScroll = router.options.scrollBehavior;

    if (expectScroll) {
      setupScroll();
    }

    window.addEventListener('popstate', function (e) {
      var current = this$1.current;
      this$1.transitionTo(getLocation(this$1.base), function (route) {
        if (expectScroll) {
          handleScroll(router, route, current, true);
        }
      });
    });
  }

  if ( History$$1 ) HTML5History.__proto__ = History$$1;
  HTML5History.prototype = Object.create( History$$1 && History$$1.prototype );
  HTML5History.prototype.constructor = HTML5History;

  HTML5History.prototype.go = function go (n) {
    window.history.go(n);
  };

  HTML5History.prototype.push = function push (location, onComplete, onAbort) {
    var this$1 = this;

    var ref = this;
    var fromRoute = ref.current;
    this.transitionTo(location, function (route) {
      pushState(cleanPath(this$1.base + route.fullPath));
      handleScroll(this$1.router, route, fromRoute, false);
      onComplete && onComplete(route);
    }, onAbort);
  };

  HTML5History.prototype.replace = function replace (location, onComplete, onAbort) {
    var this$1 = this;

    var ref = this;
    var fromRoute = ref.current;
    this.transitionTo(location, function (route) {
      replaceState(cleanPath(this$1.base + route.fullPath));
      handleScroll(this$1.router, route, fromRoute, false);
      onComplete && onComplete(route);
    }, onAbort);
  };

  HTML5History.prototype.ensureURL = function ensureURL (push) {
    if (getLocation(this.base) !== this.current.fullPath) {
      var current = cleanPath(this.base + this.current.fullPath);
      push ? pushState(current) : replaceState(current);
    }
  };

  HTML5History.prototype.getCurrentLocation = function getCurrentLocation () {
    return getLocation(this.base)
  };

  return HTML5History;
}(History));

function getLocation (base) {
  var path = window.location.pathname;
  if (base && path.indexOf(base) === 0) {
    path = path.slice(base.length);
  }
  return (path || '/') + window.location.search + window.location.hash
}

/*  */


var HashHistory = (function (History$$1) {
  function HashHistory (router, base, fallback) {
    History$$1.call(this, router, base);
    // check history fallback deeplinking
    if (fallback && checkFallback(this.base)) {
      return
    }
    ensureSlash();
  }

  if ( History$$1 ) HashHistory.__proto__ = History$$1;
  HashHistory.prototype = Object.create( History$$1 && History$$1.prototype );
  HashHistory.prototype.constructor = HashHistory;

  // this is delayed until the app mounts
  // to avoid the hashchange listener being fired too early
  HashHistory.prototype.setupListeners = function setupListeners () {
    var this$1 = this;

    window.addEventListener('hashchange', function () {
      if (!ensureSlash()) {
        return
      }
      this$1.transitionTo(getHash(), function (route) {
        replaceHash(route.fullPath);
      });
    });
  };

  HashHistory.prototype.push = function push (location, onComplete, onAbort) {
    this.transitionTo(location, function (route) {
      pushHash(route.fullPath);
      onComplete && onComplete(route);
    }, onAbort);
  };

  HashHistory.prototype.replace = function replace (location, onComplete, onAbort) {
    this.transitionTo(location, function (route) {
      replaceHash(route.fullPath);
      onComplete && onComplete(route);
    }, onAbort);
  };

  HashHistory.prototype.go = function go (n) {
    window.history.go(n);
  };

  HashHistory.prototype.ensureURL = function ensureURL (push) {
    var current = this.current.fullPath;
    if (getHash() !== current) {
      push ? pushHash(current) : replaceHash(current);
    }
  };

  HashHistory.prototype.getCurrentLocation = function getCurrentLocation () {
    return getHash()
  };

  return HashHistory;
}(History));

function checkFallback (base) {
  var location = getLocation(base);
  if (!/^\/#/.test(location)) {
    window.location.replace(
      cleanPath(base + '/#' + location)
    );
    return true
  }
}

function ensureSlash () {
  var path = getHash();
  if (path.charAt(0) === '/') {
    return true
  }
  replaceHash('/' + path);
  return false
}

function getHash () {
  // We can't use window.location.hash here because it's not
  // consistent across browsers - Firefox will pre-decode it!
  var href = window.location.href;
  var index = href.indexOf('#');
  return index === -1 ? '' : href.slice(index + 1)
}

function pushHash (path) {
  window.location.hash = path;
}

function replaceHash (path) {
  var href = window.location.href;
  var i = href.indexOf('#');
  var base = i >= 0 ? href.slice(0, i) : href;
  window.location.replace((base + "#" + path));
}

/*  */


var AbstractHistory = (function (History$$1) {
  function AbstractHistory (router, base) {
    History$$1.call(this, router, base);
    this.stack = [];
    this.index = -1;
  }

  if ( History$$1 ) AbstractHistory.__proto__ = History$$1;
  AbstractHistory.prototype = Object.create( History$$1 && History$$1.prototype );
  AbstractHistory.prototype.constructor = AbstractHistory;

  AbstractHistory.prototype.push = function push (location, onComplete, onAbort) {
    var this$1 = this;

    this.transitionTo(location, function (route) {
      this$1.stack = this$1.stack.slice(0, this$1.index + 1).concat(route);
      this$1.index++;
      onComplete && onComplete(route);
    }, onAbort);
  };

  AbstractHistory.prototype.replace = function replace (location, onComplete, onAbort) {
    var this$1 = this;

    this.transitionTo(location, function (route) {
      this$1.stack = this$1.stack.slice(0, this$1.index).concat(route);
      onComplete && onComplete(route);
    }, onAbort);
  };

  AbstractHistory.prototype.go = function go (n) {
    var this$1 = this;

    var targetIndex = this.index + n;
    if (targetIndex < 0 || targetIndex >= this.stack.length) {
      return
    }
    var route = this.stack[targetIndex];
    this.confirmTransition(route, function () {
      this$1.index = targetIndex;
      this$1.updateRoute(route);
    });
  };

  AbstractHistory.prototype.getCurrentLocation = function getCurrentLocation () {
    var current = this.stack[this.stack.length - 1];
    return current ? current.fullPath : '/'
  };

  AbstractHistory.prototype.ensureURL = function ensureURL () {
    // noop
  };

  return AbstractHistory;
}(History));

/*  */

var VueRouter = function VueRouter (options) {
  if ( options === void 0 ) options = {};

  this.app = null;
  this.apps = [];
  this.options = options;
  this.beforeHooks = [];
  this.resolveHooks = [];
  this.afterHooks = [];
  this.matcher = createMatcher(options.routes || [], this);

  var mode = options.mode || 'hash';
  this.fallback = mode === 'history' && !supportsPushState && options.fallback !== false;
  if (this.fallback) {
    mode = 'hash';
  }
  if (!inBrowser) {
    mode = 'abstract';
  }
  this.mode = mode;

  switch (mode) {
    case 'history':
      this.history = new HTML5History(this, options.base);
      break
    case 'hash':
      this.history = new HashHistory(this, options.base, this.fallback);
      break
    case 'abstract':
      this.history = new AbstractHistory(this, options.base);
      break
    default:
      if (false) {
        assert(false, ("invalid mode: " + mode));
      }
  }
};

var prototypeAccessors = { currentRoute: {} };

VueRouter.prototype.match = function match (
  raw,
  current,
  redirectedFrom
) {
  return this.matcher.match(raw, current, redirectedFrom)
};

prototypeAccessors.currentRoute.get = function () {
  return this.history && this.history.current
};

VueRouter.prototype.init = function init (app /* Vue component instance */) {
    var this$1 = this;

  "production" !== 'production' && assert(
    install.installed,
    "not installed. Make sure to call `Vue.use(VueRouter)` " +
    "before creating root instance."
  );

  this.apps.push(app);

  // main app already initialized.
  if (this.app) {
    return
  }

  this.app = app;

  var history = this.history;

  if (history instanceof HTML5History) {
    history.transitionTo(history.getCurrentLocation());
  } else if (history instanceof HashHistory) {
    var setupHashListener = function () {
      history.setupListeners();
    };
    history.transitionTo(
      history.getCurrentLocation(),
      setupHashListener,
      setupHashListener
    );
  }

  history.listen(function (route) {
    this$1.apps.forEach(function (app) {
      app._route = route;
    });
  });
};

VueRouter.prototype.beforeEach = function beforeEach (fn) {
  return registerHook(this.beforeHooks, fn)
};

VueRouter.prototype.beforeResolve = function beforeResolve (fn) {
  return registerHook(this.resolveHooks, fn)
};

VueRouter.prototype.afterEach = function afterEach (fn) {
  return registerHook(this.afterHooks, fn)
};

VueRouter.prototype.onReady = function onReady (cb, errorCb) {
  this.history.onReady(cb, errorCb);
};

VueRouter.prototype.onError = function onError (errorCb) {
  this.history.onError(errorCb);
};

VueRouter.prototype.push = function push (location, onComplete, onAbort) {
  this.history.push(location, onComplete, onAbort);
};

VueRouter.prototype.replace = function replace (location, onComplete, onAbort) {
  this.history.replace(location, onComplete, onAbort);
};

VueRouter.prototype.go = function go (n) {
  this.history.go(n);
};

VueRouter.prototype.back = function back () {
  this.go(-1);
};

VueRouter.prototype.forward = function forward () {
  this.go(1);
};

VueRouter.prototype.getMatchedComponents = function getMatchedComponents (to) {
  var route = to
    ? to.matched
      ? to
      : this.resolve(to).route
    : this.currentRoute;
  if (!route) {
    return []
  }
  return [].concat.apply([], route.matched.map(function (m) {
    return Object.keys(m.components).map(function (key) {
      return m.components[key]
    })
  }))
};

VueRouter.prototype.resolve = function resolve (
  to,
  current,
  append
) {
  var location = normalizeLocation(
    to,
    current || this.history.current,
    append,
    this
  );
  var route = this.match(location, current);
  var fullPath = route.redirectedFrom || route.fullPath;
  var base = this.history.base;
  var href = createHref(base, fullPath, this.mode);
  return {
    location: location,
    route: route,
    href: href,
    // for backwards compat
    normalizedTo: location,
    resolved: route
  }
};

VueRouter.prototype.addRoutes = function addRoutes (routes) {
  this.matcher.addRoutes(routes);
  if (this.history.current !== START) {
    this.history.transitionTo(this.history.getCurrentLocation());
  }
};

Object.defineProperties( VueRouter.prototype, prototypeAccessors );

function registerHook (list, fn) {
  list.push(fn);
  return function () {
    var i = list.indexOf(fn);
    if (i > -1) { list.splice(i, 1); }
  }
}

function createHref (base, fullPath, mode) {
  var path = mode === 'hash' ? '#' + fullPath : fullPath;
  return base ? cleanPath(base + '/' + path) : path
}

VueRouter.install = install;
VueRouter.version = '2.7.0';

if (inBrowser && window.Vue) {
  window.Vue.use(VueRouter);
}

/* harmony default export */ __webpack_exports__["default"] = (VueRouter);


/***/ }),
/* 62 */
/***/ (function(module, exports) {

var base,
    slice = [].slice;

base = function (arg, name, calc) {
  var arg, capture, i, timeout;
  time_num = 2 <= arg.length ? slice.call(arg, 0, i = arg.length - 1) : (i = 0, []), time_tail = arg[i++];
  name = name;
  calc = calc;
  timeout = function () {
    switch (time_tail) {
      case "s":
        return 1000 * time_num;
      case "m":
        return 1000 * 60 * time_num;
      case "h":
        return 1000 * 3600 * time_num;
      case "d":
        return 1000 * 3600 * 24 * time_num;
    }
  }();
  capture = function (vue) {
    var key, payload, suffix;
    if (calc) {
      payload = calc.call(vue);
      suffix = JSON.stringify(payload);
    } else {
      payload = null;
      suffix = "";
    }
    key = name + suffix;
    return { payload, key, name };
  };
  return {
    mounted: function () {
      var commit, key, o, payload, read_at, ret, timer;
      ({ commit, timer, read_at } = base.root);
      ({ payload, key, name } = capture(this));
      o = {
        timer: {},
        read_at: {}
      };
      o.timer[key] = timeout;
      base.root.commit(base.arg.commit, o);
      if (Date.now() - timer[key] < read_at[key]) {
        return new Promise(function (ok) {
          return ok();
        });
      } else {
        ret = this.$store.dispatch(name, payload);
        if (ret.then != null) {
          return ret.then(function () {
            o.read_at[key] = Date.now();
            return base.root.commit(base.arg.commit, o);
          });
        } else {
          return ret;
        }
      }
    },
    computed: {
      read_at: function () {
        var key;
        ({ key } = capture(this));
        return this.$store.state.read_at[key];
      }
    }
  };
};

base.plugin = function (arg) {
  this.arg = arg;
  return function ({ commit, state }) {
    var read_at, timer;
    ({ timer, read_at } = state);
    return base.root = { commit, timer, read_at };
  };
};

module.exports = base;

/***/ }),
/* 63 */
/***/ (function(module, exports, __webpack_require__) {

var Vue, ctx, element, fname, i, lang, len, locale, name, ref;

Vue = __webpack_require__(4);

if (typeof window !== "undefined" && window !== null) {
  Vue = Vue.default;
}

ctx = __webpack_require__(100);

ref = ctx.keys();
for (i = 0, len = ref.length; i < len; i++) {
  fname = ref[i];
  name = fname.slice(2, -4);
  Vue.component(name, ctx(fname));
}

element = function (module) {
  module = module.default;
  return Vue.component(module.name, module);
};

// ElementUI section #####

lang = __webpack_require__(253);

locale = __webpack_require__(252);

locale.use(lang);

element(__webpack_require__(255));

/***/ }),
/* 64 */
/***/ (function(module, exports) {

if (typeof window !== "undefined" && window !== null) {
  window.env = __NUXT__.state.env;
}

module.exports = {
  adjust: function () {
    var height, horizon, my_btm, my_top, rect, top;
    ({ top, horizon, height } = this.$store.state.menu);
    if (typeof window !== "undefined" && window !== null && this.$el != null) {
      rect = this.$el.getBoundingClientRect();
      my_top = rect.top;
      my_btm = rect.height + my_top + 6;
      switch (false) {
        case !(0 < my_btm && my_btm < horizon):
          return "head";
        case !(my_top < horizon && horizon < my_btm):
          return "focus";
        case !(horizon < my_top && my_top < height):
          return "tail";
        default:
          return null;
      }
    } else {
      return null;
    }
  }
};

/***/ }),
/* 65 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(9);
var settle = __webpack_require__(108);
var buildURL = __webpack_require__(111);
var parseHeaders = __webpack_require__(117);
var isURLSameOrigin = __webpack_require__(115);
var createError = __webpack_require__(68);
var btoa = (typeof window !== 'undefined' && window.btoa && window.btoa.bind(window)) || __webpack_require__(110);

module.exports = function xhrAdapter(config) {
  return new Promise(function dispatchXhrRequest(resolve, reject) {
    var requestData = config.data;
    var requestHeaders = config.headers;

    if (utils.isFormData(requestData)) {
      delete requestHeaders['Content-Type']; // Let the browser set it
    }

    var request = new XMLHttpRequest();
    var loadEvent = 'onreadystatechange';
    var xDomain = false;

    // For IE 8/9 CORS support
    // Only supports POST and GET calls and doesn't returns the response headers.
    // DON'T do this for testing b/c XMLHttpRequest is mocked, not XDomainRequest.
    if ("production" !== 'test' &&
        typeof window !== 'undefined' &&
        window.XDomainRequest && !('withCredentials' in request) &&
        !isURLSameOrigin(config.url)) {
      request = new window.XDomainRequest();
      loadEvent = 'onload';
      xDomain = true;
      request.onprogress = function handleProgress() {};
      request.ontimeout = function handleTimeout() {};
    }

    // HTTP basic authentication
    if (config.auth) {
      var username = config.auth.username || '';
      var password = config.auth.password || '';
      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);
    }

    request.open(config.method.toUpperCase(), buildURL(config.url, config.params, config.paramsSerializer), true);

    // Set the request timeout in MS
    request.timeout = config.timeout;

    // Listen for ready state
    request[loadEvent] = function handleLoad() {
      if (!request || (request.readyState !== 4 && !xDomain)) {
        return;
      }

      // The request errored out and we didn't get a response, this will be
      // handled by onerror instead
      // With one exception: request that using file: protocol, most browsers
      // will return status as 0 even though it's a successful request
      if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {
        return;
      }

      // Prepare the response
      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;
      var responseData = !config.responseType || config.responseType === 'text' ? request.responseText : request.response;
      var response = {
        data: responseData,
        // IE sends 1223 instead of 204 (https://github.com/mzabriskie/axios/issues/201)
        status: request.status === 1223 ? 204 : request.status,
        statusText: request.status === 1223 ? 'No Content' : request.statusText,
        headers: responseHeaders,
        config: config,
        request: request
      };

      settle(resolve, reject, response);

      // Clean up request
      request = null;
    };

    // Handle low level network errors
    request.onerror = function handleError() {
      // Real errors are hidden from us by the browser
      // onerror should only fire if it's a network error
      reject(createError('Network Error', config, null, request));

      // Clean up request
      request = null;
    };

    // Handle timeout
    request.ontimeout = function handleTimeout() {
      reject(createError('timeout of ' + config.timeout + 'ms exceeded', config, 'ECONNABORTED',
        request));

      // Clean up request
      request = null;
    };

    // Add xsrf header
    // This is only done if running in a standard browser environment.
    // Specifically not if we're in a web worker, or react-native.
    if (utils.isStandardBrowserEnv()) {
      var cookies = __webpack_require__(113);

      // Add xsrf header
      var xsrfValue = (config.withCredentials || isURLSameOrigin(config.url)) && config.xsrfCookieName ?
          cookies.read(config.xsrfCookieName) :
          undefined;

      if (xsrfValue) {
        requestHeaders[config.xsrfHeaderName] = xsrfValue;
      }
    }

    // Add headers to the request
    if ('setRequestHeader' in request) {
      utils.forEach(requestHeaders, function setRequestHeader(val, key) {
        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {
          // Remove Content-Type if data is undefined
          delete requestHeaders[key];
        } else {
          // Otherwise add header to the request
          request.setRequestHeader(key, val);
        }
      });
    }

    // Add withCredentials to request if needed
    if (config.withCredentials) {
      request.withCredentials = true;
    }

    // Add responseType to request if needed
    if (config.responseType) {
      try {
        request.responseType = config.responseType;
      } catch (e) {
        // Expected DOMException thrown by browsers not compatible XMLHttpRequest Level 2.
        // But, this can be suppressed for 'json' type as it can be parsed by default 'transformResponse' function.
        if (config.responseType !== 'json') {
          throw e;
        }
      }
    }

    // Handle progress if needed
    if (typeof config.onDownloadProgress === 'function') {
      request.addEventListener('progress', config.onDownloadProgress);
    }

    // Not all browsers support upload events
    if (typeof config.onUploadProgress === 'function' && request.upload) {
      request.upload.addEventListener('progress', config.onUploadProgress);
    }

    if (config.cancelToken) {
      // Handle cancellation
      config.cancelToken.promise.then(function onCanceled(cancel) {
        if (!request) {
          return;
        }

        request.abort();
        reject(cancel);
        // Clean up request
        request = null;
      });
    }

    if (requestData === undefined) {
      requestData = null;
    }

    // Send the request
    request.send(requestData);
  });
};


/***/ }),
/* 66 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * A `Cancel` is an object that is thrown when an operation is canceled.
 *
 * @class
 * @param {string=} message The message.
 */
function Cancel(message) {
  this.message = message;
}

Cancel.prototype.toString = function toString() {
  return 'Cancel' + (this.message ? ': ' + this.message : '');
};

Cancel.prototype.__CANCEL__ = true;

module.exports = Cancel;


/***/ }),
/* 67 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = function isCancel(value) {
  return !!(value && value.__CANCEL__);
};


/***/ }),
/* 68 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var enhanceError = __webpack_require__(107);

/**
 * Create an Error with the specified message, config, error code, request and response.
 *
 * @param {string} message The error message.
 * @param {Object} config The config.
 * @param {string} [code] The error code (for example, 'ECONNABORTED').
 * @param {Object} [request] The request.
 * @param {Object} [response] The response.
 * @returns {Error} The created error.
 */
module.exports = function createError(message, config, code, request, response) {
  var error = new Error(message);
  return enhanceError(error, config, code, request, response);
};


/***/ }),
/* 69 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = function bind(fn, thisArg) {
  return function wrap() {
    var args = new Array(arguments.length);
    for (var i = 0; i < args.length; i++) {
      args[i] = arguments[i];
    }
    return fn.apply(thisArg, args);
  };
};


/***/ }),
/* 70 */
/***/ (function(module, exports, __webpack_require__) {

var $step, Finder, Format, OBJ, Query, _, each, validate;

_ = __webpack_require__(7);

({ Query, Format } = __webpack_require__(12));

OBJ = function () {
  return new Object(null);
};

each = function (from, process) {
  var i, id, item, len;
  switch (from != null ? from.constructor : void 0) {
    case Array:
      for (i = 0, len = from.length; i < len; i++) {
        item = from[i];
        process(item);
      }
      break;
    case Object:
      for (id in from) {
        item = from[id];
        item._id = id;
        process(item);
      }
  }
};

validate = function (item, chklist) {
  var chk, i, len;
  if (!(item && chklist)) {
    return false;
  }
  for (i = 0, len = chklist.length; i < len; i++) {
    chk = chklist[i];
    if (!chk(item)) {
      return false;
    }
  }
  return true;
};

$step = 0;

module.exports = Finder = class Finder {
  constructor(name) {
    this.name = name;
    this.step = ++$step;
  }

  calculate(query, memory) {
    var cache;
    cache = _.cloneDeep(this.format);
    this.reduce(this.map, cache, query, memory);
  }

  reduce(map, cache, query, memory) {
    var $group, a, cmd, i, id, item, j, len, len1, o, path, paths, ref, ref1, ref2, results;
    query._step = ++$step;
    paths = {
      _reduce: {
        list: [],
        hash: {}
      }
    };
    delete query._reduce;
    ref1 = (ref = query._all_ids) != null ? ref : Object.keys(memory);
    for (i = 0, len = ref1.length; i < len; i++) {
      id = ref1[i];
      if (!(o = memory[id])) {
        continue;
      }
      ({ item, $group } = o);
      if (!validate(item, query._filters)) {
        continue;
      }
      for (j = 0, len1 = $group.length; j < len1; j++) {
        [path, a] = $group[j];
        o = paths[path] = cache[path];
        map.reduce(item, o, a);
      }
    }
    for (path in paths) {
      o = paths[path];
      map.finish(o, query, this.set);
      _.set(query, path, o);
    }
    ref2 = query.$sort;
    results = [];
    for (path in ref2) {
      cmd = ref2[path];
      if (!(o = _.get(query, path))) {
        continue;
      }
      o = map.order(o, cmd, this.set);
      results.push(_.set(query, path, o));
    }
    return results;
  }

  clear_cache(all) {
    this.step = ++$step;
  }

  remove(all, from) {
    var _memory;
    ({ _memory } = all);
    return each(from, item => {
      var old;
      old = _memory[item.id];
      if (old != null) {
        this.model.delete(old.item);
        delete _memory[item.id];
      }
    });
  }

  reset(all, from, parent) {
    var _memory, item, key, news, old, results;
    ({ _memory } = all);
    all._memory = news = OBJ();
    this.merge(all, from, parent);
    results = [];
    for (key in _memory) {
      old = _memory[key];
      item = news[key];
      if (item != null) {
        results.push(this.model.update(item, old.item));
      } else {
        results.push(this.model.delete(old));
      }
    }
    return results;
  }

  merge(all, from, parent) {
    var _memory;
    ({ _memory } = all);
    return each(from, item => {
      var o, old;
      o = this.map.$deploy(this.model, this.format, all, item, parent);
      old = _memory[item.id];
      _memory[item.id] = o;
      if (old != null) {
        this.model.update(item, old.item);
      } else {
        this.model.create(item);
        this.model.rowid++;
      }
    });
  }

};

/***/ }),
/* 71 */
/***/ (function(module, exports, __webpack_require__) {

var Map,
    Query,
    _,
    slice = [].slice;

_ = __webpack_require__(7);

({ Query } = __webpack_require__(12));

module.exports = Map = class Map {
  static bless(o) {
    o.__proto__ = this.prototype;
    return o;
  }

  static $deploy(model, format, all, item, parent) {
    var emit, o;
    o = {
      item,
      $group: []
    };
    model.$deploy(item, parent);
    emit = (...keys) => {
      var cmd, i, map, path, ref;
      ref = keys, keys = 2 <= ref.length ? slice.call(ref, 0, i = ref.length - 1) : (i = 0, []), cmd = ref[i++];
      path = ["_reduce", ...keys].join('.');
      o.$group.push([path, cmd]);
      map = format[path] != null ? format[path] : format[path] = this.bless({});
      return this.init(map, cmd);
    };
    emit({
      list: item,
      set: item.id
    });
    model.map_reduce(item, emit);
    emit = function (...keys) {
      var cmd, i, path, ref;
      ref = keys, keys = 2 <= ref.length ? slice.call(ref, 0, i = ref.length - 1) : (i = 0, []), cmd = ref[i++];
      path = ["_reduce", ...keys].join('.');
      return all.$sort[path] = cmd;
    };
    model.order(item, emit);
    return o;
  }

  static init(o, map) {
    if (map.id) {
      o.id = map.id;
    }
    if (map.list) {
      o.list = [];
    }
    if (map.count) {
      o.count = 0;
    }
    if (map.all) {
      o.all = 0;
    }
    if (map.set) {
      return o.hash = {};
    }
  }

  static order(from, map, set) {
    var a, counts, groups, i, id, idx, j, key, len, len1, o, oo, per, val;
    o = from;
    if (Object === from.constructor) {
      if (map.belongs_to) {
        for (id in from) {
          val = from[id];
          val.__proto__ = Query[map.belongs_to].find(id);
        }
      } else {
        for (id in from) {
          val = from[id];
          val.id = id;
        }
      }
    } else {
      if (map.belongs_to) {
        o = from.map(function (val) {
          return Query[map.belongs_to].find(val.id);
        });
      }
    }
    if (map.sort) {
      o = _.orderBy(o, ...map.sort);
    }
    if (map.get) {
      o = o.map(function (val) {
        return _.get(val, map.get);
      });
    }
    if (per = map.page_by) {
      idx = 0;
      groups = Object.values(_.groupBy(o, function (o) {
        return Math.floor(idx++ / per);
      }));
      groups.all = idx;
      o = groups;
      for (i = 0, len = groups.length; i < len; i++) {
        a = groups[i];
        a.__proto__ = set.prototype;
      }
    }
    if (map.index) {
      counts = [];
      for (key in o) {
        oo = o[key];
        idx = _.get(oo, map.index);
        if (counts[idx] == null) {
          counts[idx] = [];
        }
        counts[idx].push(oo);
      }
      o = counts;
      for (j = 0, len1 = o.length; j < len1; j++) {
        a = o[j];
        if (a) {
          a.__proto__ = set.prototype;
        }
      }
    }
    o.from = from;
    o.__proto__ = set.prototype;
    return o;
  }

  static finish(o, query, set) {
    if (o.hash) {
      o.set = Object.keys(o.hash);
    }
    if (o.all != null && o.count) {
      return o.avg = o.all / o.count;
    }
  }

  static reduce(item, o, map) {
    if (map.count) {
      o.count += map.count;
    }
    if (map.all) {
      o.all += map.all;
    }
    if (map.list) {
      o.list.push(map.list);
    }
    if (map.set) {
      o.hash[map.set] = item;
    }
    if (map.max) {
      if (!(map.max <= o.max)) {
        o.max_is = item;
        o.max = map.max;
      }
    }
    if (map.min) {
      if (!(o.min <= map.min)) {
        o.min_is = item;
        return o.min = map.min;
      }
    }
  }

};

/***/ }),
/* 72 */
/***/ (function(module, exports, __webpack_require__) {

var Mem, Model, _;

_ = __webpack_require__(7);

Mem = __webpack_require__(12);

module.exports = Model = function () {
  class Model {
    static bless(o) {
      o.__proto__ = this.prototype;
      return o;
    }

    static $deploy(item, parent) {
      var deploy, i, len, ref;
      this.bless(item);
      Object.assign(item, parent);
      ref = this.$name.deploys;
      for (i = 0, len = ref.length; i < len; i++) {
        deploy = ref[i];
        deploy.call(item, this);
      }
      this.deploy.call(item, this);
      if (!item.id) {
        throw new Error(`detect bad data: ${JSON.stringify(item)}`);
      }
    }

    static deploy(m) {
      if (!this._id) {
        return this._id = this[m.id];
      }
    }

    static update(item, old) {}

    static create(item) {}

    static delete(old) {}

    static map_reduce(item, emit) {
      return void 0;
    }

    static order(reduce, emit) {
      return void 0;
    }

  };

  Model.rowid = 0;

  Model.aggregate = [function (o, idx) {}];

  return Model;
}();

/***/ }),
/* 73 */
/***/ (function(module, exports, __webpack_require__) {

var Mem, OBJ, Query, Set, _, depends, f_clear, f_item, f_merge, f_remove, f_reset;

_ = __webpack_require__(7);

Mem = __webpack_require__(12);

Query = __webpack_require__(40);

OBJ = function () {
  return new Object(null);
};

f_reset = function (list, parent) {
  depends(this.$name);
  return this.all._finder.reset(this.all, list, parent);
};

f_merge = function (list, parent) {
  depends(this.$name);
  return this.all._finder.merge(this.all, list, parent);
};

f_remove = function (list) {
  depends(this.$name);
  return this.all._finder.remove(this.all, list);
};

f_item = function (cb) {
  return function (item, parent) {
    return cb.call(this, [item], parent);
  };
};

f_clear = function () {
  return this.all._finder.clear_cach(this.all);
};

depends = function (name) {
  var f, i, len, ref;
  ref = name.depends;
  for (i = 0, len = ref.length; i < len; i++) {
    f = ref[i];
    f();
  }
};

module.exports = Set = function () {
  class Set extends Array {
    static $deploy(map, model, item, parent) {}

    static bless(list) {
      var ids;
      ids = list.map(function (o) {
        return o.id;
      });
      list.__proto__ = this.prototype;
      list.all = this.all;
      list.$name = this.$name;
      list.query = new Query(this.all, function () {
        this._all_ids = ids;
        return this._memory = OBJ();
      });
      return list;
    }

    static find(id) {
      return _memory[id].item;
    }

    static form(id) {
      var base;
      return (base = _memory[id]).form != null ? base.form : base.form = function () {
        var o;
        // TODO
        o = _.cloneDeep(this.find(id));
        return o.__proto__ = Form.prototype;
      }();
    }

    sort(...sort) {
      var o;
      o = _.orderBy(this, ...sort);
      o.__proto__ = this.__proto__;
      return o;
    }

    group_by(cb) {
      var key, o, oo;
      o = _.groupBy(this, cb);
      for (key in o) {
        oo = o[key];
        oo.__proto__ = this.__proto__;
      }
      return o;
    }

    page_by(per) {
      var idx;
      idx = 0;
      return Object.values(this.group_by(function (o) {
        return Math.floor(idx++ / per);
      }));
    }

    where(req) {
      return this.query.where(req);
    }

    in(req) {
      return this.query.in(req);
    }

    update(item, old) {}

    create(item) {}

    delete(old) {}

  };

  Set.prototype.set = f_reset;

  Set.prototype.reset = f_reset;

  Set.prototype.merge = f_merge;

  Set.prototype.add = f_item(f_merge);

  Set.prototype.append = f_item(f_merge);

  Set.prototype.reject = f_remove;

  Set.prototype.del = f_item(f_remove);

  Set.prototype.remove = f_item(f_remove);

  Set.prototype.clear_cache = f_clear;

  Set.prototype.refresh = f_clear;

  Set.prototype.rehash = f_clear;

  return Set;
}();

/***/ }),
/* 74 */,
/* 75 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _assign = __webpack_require__(42);

var _assign2 = _interopRequireDefault(_assign);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = _assign2.default || function (target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];

    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }

  return target;
};

/***/ }),
/* 76 */
/***/ (function(module, exports, __webpack_require__) {

var document = __webpack_require__(8).document;
module.exports = document && document.documentElement;


/***/ }),
/* 77 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = !__webpack_require__(13) && !__webpack_require__(21)(function () {
  return Object.defineProperty(__webpack_require__(45)('div'), 'a', { get: function () { return 7; } }).a != 7;
});


/***/ }),
/* 78 */
/***/ (function(module, exports, __webpack_require__) {

// fallback for non-array-like ES3 and non-enumerable old V8 strings
var cof = __webpack_require__(25);
// eslint-disable-next-line no-prototype-builtins
module.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {
  return cof(it) == 'String' ? it.split('') : Object(it);
};


/***/ }),
/* 79 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var LIBRARY = __webpack_require__(30);
var $export = __webpack_require__(14);
var redefine = __webpack_require__(85);
var hide = __webpack_require__(16);
var has = __webpack_require__(15);
var Iterators = __webpack_require__(22);
var $iterCreate = __webpack_require__(197);
var setToStringTag = __webpack_require__(33);
var getPrototypeOf = __webpack_require__(207);
var ITERATOR = __webpack_require__(6)('iterator');
var BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`
var FF_ITERATOR = '@@iterator';
var KEYS = 'keys';
var VALUES = 'values';

var returnThis = function () { return this; };

module.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {
  $iterCreate(Constructor, NAME, next);
  var getMethod = function (kind) {
    if (!BUGGY && kind in proto) return proto[kind];
    switch (kind) {
      case KEYS: return function keys() { return new Constructor(this, kind); };
      case VALUES: return function values() { return new Constructor(this, kind); };
    } return function entries() { return new Constructor(this, kind); };
  };
  var TAG = NAME + ' Iterator';
  var DEF_VALUES = DEFAULT == VALUES;
  var VALUES_BUG = false;
  var proto = Base.prototype;
  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];
  var $default = $native || getMethod(DEFAULT);
  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;
  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;
  var methods, key, IteratorPrototype;
  // Fix native
  if ($anyNative) {
    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));
    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {
      // Set @@toStringTag to native iterators
      setToStringTag(IteratorPrototype, TAG, true);
      // fix for some old engines
      if (!LIBRARY && !has(IteratorPrototype, ITERATOR)) hide(IteratorPrototype, ITERATOR, returnThis);
    }
  }
  // fix Array#{values, @@iterator}.name in V8 / FF
  if (DEF_VALUES && $native && $native.name !== VALUES) {
    VALUES_BUG = true;
    $default = function values() { return $native.call(this); };
  }
  // Define iterator
  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {
    hide(proto, ITERATOR, $default);
  }
  // Plug for library
  Iterators[NAME] = $default;
  Iterators[TAG] = returnThis;
  if (DEFAULT) {
    methods = {
      values: DEF_VALUES ? $default : getMethod(VALUES),
      keys: IS_SET ? $default : getMethod(KEYS),
      entries: $entries
    };
    if (FORCED) for (key in methods) {
      if (!(key in proto)) redefine(proto, key, methods[key]);
    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);
  }
  return methods;
};


/***/ }),
/* 80 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
var anObject = __webpack_require__(11);
var dPs = __webpack_require__(204);
var enumBugKeys = __webpack_require__(46);
var IE_PROTO = __webpack_require__(49)('IE_PROTO');
var Empty = function () { /* empty */ };
var PROTOTYPE = 'prototype';

// Create object with fake `null` prototype: use iframe Object with cleared prototype
var createDict = function () {
  // Thrash, waste and sodomy: IE GC bug
  var iframe = __webpack_require__(45)('iframe');
  var i = enumBugKeys.length;
  var lt = '<';
  var gt = '>';
  var iframeDocument;
  iframe.style.display = 'none';
  __webpack_require__(76).appendChild(iframe);
  iframe.src = 'javascript:'; // eslint-disable-line no-script-url
  // createDict = iframe.contentWindow.Object;
  // html.removeChild(iframe);
  iframeDocument = iframe.contentWindow.document;
  iframeDocument.open();
  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);
  iframeDocument.close();
  createDict = iframeDocument.F;
  while (i--) delete createDict[PROTOTYPE][enumBugKeys[i]];
  return createDict();
};

module.exports = Object.create || function create(O, Properties) {
  var result;
  if (O !== null) {
    Empty[PROTOTYPE] = anObject(O);
    result = new Empty();
    Empty[PROTOTYPE] = null;
    // add "__proto__" for Object.getPrototypeOf polyfill
    result[IE_PROTO] = O;
  } else result = createDict();
  return Properties === undefined ? result : dPs(result, Properties);
};


/***/ }),
/* 81 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)
var $keys = __webpack_require__(82);
var hiddenKeys = __webpack_require__(46).concat('length', 'prototype');

exports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {
  return $keys(O, hiddenKeys);
};


/***/ }),
/* 82 */
/***/ (function(module, exports, __webpack_require__) {

var has = __webpack_require__(15);
var toIObject = __webpack_require__(18);
var arrayIndexOf = __webpack_require__(190)(false);
var IE_PROTO = __webpack_require__(49)('IE_PROTO');

module.exports = function (object, names) {
  var O = toIObject(object);
  var i = 0;
  var result = [];
  var key;
  for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);
  // Don't enum bug & hidden keys
  while (names.length > i) if (has(O, key = names[i++])) {
    ~arrayIndexOf(result, key) || result.push(key);
  }
  return result;
};


/***/ }),
/* 83 */
/***/ (function(module, exports) {

module.exports = function (exec) {
  try {
    return { e: false, v: exec() };
  } catch (e) {
    return { e: true, v: e };
  }
};


/***/ }),
/* 84 */
/***/ (function(module, exports, __webpack_require__) {

var newPromiseCapability = __webpack_require__(47);

module.exports = function (C, x) {
  var promiseCapability = newPromiseCapability.f(C);
  var resolve = promiseCapability.resolve;
  resolve(x);
  return promiseCapability.promise;
};


/***/ }),
/* 85 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(16);


/***/ }),
/* 86 */
/***/ (function(module, exports, __webpack_require__) {

// 7.3.20 SpeciesConstructor(O, defaultConstructor)
var anObject = __webpack_require__(11);
var aFunction = __webpack_require__(28);
var SPECIES = __webpack_require__(6)('species');
module.exports = function (O, D) {
  var C = anObject(O).constructor;
  var S;
  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? D : aFunction(S);
};


/***/ }),
/* 87 */
/***/ (function(module, exports, __webpack_require__) {

var ctx = __webpack_require__(29);
var invoke = __webpack_require__(193);
var html = __webpack_require__(76);
var cel = __webpack_require__(45);
var global = __webpack_require__(8);
var process = global.process;
var setTask = global.setImmediate;
var clearTask = global.clearImmediate;
var MessageChannel = global.MessageChannel;
var Dispatch = global.Dispatch;
var counter = 0;
var queue = {};
var ONREADYSTATECHANGE = 'onreadystatechange';
var defer, channel, port;
var run = function () {
  var id = +this;
  // eslint-disable-next-line no-prototype-builtins
  if (queue.hasOwnProperty(id)) {
    var fn = queue[id];
    delete queue[id];
    fn();
  }
};
var listener = function (event) {
  run.call(event.data);
};
// Node.js 0.9+ & IE10+ has setImmediate, otherwise:
if (!setTask || !clearTask) {
  setTask = function setImmediate(fn) {
    var args = [];
    var i = 1;
    while (arguments.length > i) args.push(arguments[i++]);
    queue[++counter] = function () {
      // eslint-disable-next-line no-new-func
      invoke(typeof fn == 'function' ? fn : Function(fn), args);
    };
    defer(counter);
    return counter;
  };
  clearTask = function clearImmediate(id) {
    delete queue[id];
  };
  // Node.js 0.8-
  if (__webpack_require__(25)(process) == 'process') {
    defer = function (id) {
      process.nextTick(ctx(run, id, 1));
    };
  // Sphere (JS game engine) Dispatch API
  } else if (Dispatch && Dispatch.now) {
    defer = function (id) {
      Dispatch.now(ctx(run, id, 1));
    };
  // Browsers with MessageChannel, includes WebWorkers
  } else if (MessageChannel) {
    channel = new MessageChannel();
    port = channel.port2;
    channel.port1.onmessage = listener;
    defer = ctx(port.postMessage, port, 1);
  // Browsers with postMessage, skip WebWorkers
  // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'
  } else if (global.addEventListener && typeof postMessage == 'function' && !global.importScripts) {
    defer = function (id) {
      global.postMessage(id + '', '*');
    };
    global.addEventListener('message', listener, false);
  // IE8-
  } else if (ONREADYSTATECHANGE in cel('script')) {
    defer = function (id) {
      html.appendChild(cel('script'))[ONREADYSTATECHANGE] = function () {
        html.removeChild(this);
        run.call(id);
      };
    };
  // Rest old browsers
  } else {
    defer = function (id) {
      setTimeout(ctx(run, id, 1), 0);
    };
  }
}
module.exports = {
  set: setTask,
  clear: clearTask
};


/***/ }),
/* 88 */
/***/ (function(module, exports, __webpack_require__) {

// 7.1.15 ToLength
var toInteger = __webpack_require__(51);
var min = Math.min;
module.exports = function (it) {
  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991
};


/***/ }),
/* 89 */
/***/ (function(module, exports, __webpack_require__) {

var classof = __webpack_require__(43);
var ITERATOR = __webpack_require__(6)('iterator');
var Iterators = __webpack_require__(22);
module.exports = __webpack_require__(5).getIteratorMethod = function (it) {
  if (it != undefined) return it[ITERATOR]
    || it['@@iterator']
    || Iterators[classof(it)];
};


/***/ }),
/* 90 */
/***/ (function(module, exports) {



/***/ }),
/* 91 */
/***/ (function(module, exports, __webpack_require__) {

var Component = __webpack_require__(0)(
  /* script */
  __webpack_require__(169),
  /* template */
  null,
  /* styles */
  null,
  /* scopeId */
  null,
  /* moduleIdentifier (server only) */
  null
)

module.exports = Component.exports


/***/ }),
/* 92 */,
/* 93 */
/***/ (function(module, exports) {

module.exports = function(module) {
	if(!module.webpackPolyfill) {
		module.deprecate = function() {};
		module.paths = [];
		// module.parent = undefined by default
		if(!module.children) module.children = [];
		Object.defineProperty(module, "loaded", {
			enumerable: true,
			get: function() {
				return module.l;
			}
		});
		Object.defineProperty(module, "id", {
			enumerable: true,
			get: function() {
				return module.i;
			}
		});
		module.webpackPolyfill = 1;
	}
	return module;
};


/***/ }),
/* 94 */,
/* 95 */,
/* 96 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * vee-validate v2.0.0-rc.13
 * (c) 2017 Abdelrahman Awad
 * @license MIT
 */
(function (global, factory) {
	 true ? module.exports = factory() :
	typeof define === 'function' && define.amd ? define(factory) :
	(global.VeeValidate = factory());
}(this, (function () { 'use strict';

/**
 * Some Alpha Regex helpers.
 * https://github.com/chriso/validator.js/blob/master/src/lib/alpha.js
 */

var alpha$1 = {
  en: /^[A-Z]*$/i,
  cs: /^[A-ZÁČĎÉĚÍŇÓŘŠŤÚŮÝŽ]*$/i,
  da: /^[A-ZÆØÅ]*$/i,
  de: /^[A-ZÄÖÜß]*$/i,
  es: /^[A-ZÁÉÍÑÓÚÜ]*$/i,
  fr: /^[A-ZÀÂÆÇÉÈÊËÏÎÔŒÙÛÜŸ]*$/i,
  lt: /^[A-ZĄČĘĖĮŠŲŪŽ]*$/i,
  nl: /^[A-ZÉËÏÓÖÜ]*$/i,
  hu: /^[A-ZÁÉÍÓÖŐÚÜŰ]*$/i,
  pl: /^[A-ZĄĆĘŚŁŃÓŻŹ]*$/i,
  pt: /^[A-ZÃÁÀÂÇÉÊÍÕÓÔÚÜ]*$/i,
  ru: /^[А-ЯЁ]*$/i,
  sk: /^[A-ZÁÄČĎÉÍĹĽŇÓŔŠŤÚÝŽ]*$/i,
  sr: /^[A-ZČĆŽŠĐ]*$/i,
  tr: /^[A-ZÇĞİıÖŞÜ]*$/i,
  uk: /^[А-ЩЬЮЯЄІЇҐ]*$/i,
  ar: /^[ءآأؤإئابةتثجحخدذرزسشصضطظعغفقكلمنهوىيًٌٍَُِّْٰ]*$/
};

var alphaSpaces = {
  en: /^[A-Z\s]*$/i,
  cs: /^[A-ZÁČĎÉĚÍŇÓŘŠŤÚŮÝŽ\s]*$/i,
  da: /^[A-ZÆØÅ\s]*$/i,
  de: /^[A-ZÄÖÜß\s]*$/i,
  es: /^[A-ZÁÉÍÑÓÚÜ\s]*$/i,
  fr: /^[A-ZÀÂÆÇÉÈÊËÏÎÔŒÙÛÜŸ\s]*$/i,
  lt: /^[A-ZĄČĘĖĮŠŲŪŽ\s]*$/i,
  nl: /^[A-ZÉËÏÓÖÜ\s]*$/i,
  hu: /^[A-ZÁÉÍÓÖŐÚÜŰ\s]*$/i,
  pl: /^[A-ZĄĆĘŚŁŃÓŻŹ\s]*$/i,
  pt: /^[A-ZÃÁÀÂÇÉÊÍÕÓÔÚÜ\s]*$/i,
  ru: /^[А-ЯЁ\s]*$/i,
  sk: /^[A-ZÁÄČĎÉÍĹĽŇÓŔŠŤÚÝŽ\s]*$/i,
  sr: /^[A-ZČĆŽŠĐ\s]*$/i,
  tr: /^[A-ZÇĞİıÖŞÜ\s]*$/i,
  uk: /^[А-ЩЬЮЯЄІЇҐ\s]*$/i,
  ar: /^[ءآأؤإئابةتثجحخدذرزسشصضطظعغفقكلمنهوىيًٌٍَُِّْٰ\s]*$/
};

var alphanumeric = {
  en: /^[0-9A-Z]*$/i,
  cs: /^[0-9A-ZÁČĎÉĚÍŇÓŘŠŤÚŮÝŽ]*$/i,
  da: /^[0-9A-ZÆØÅ]$/i,
  de: /^[0-9A-ZÄÖÜß]*$/i,
  es: /^[0-9A-ZÁÉÍÑÓÚÜ]*$/i,
  fr: /^[0-9A-ZÀÂÆÇÉÈÊËÏÎÔŒÙÛÜŸ]*$/i,
  lt: /^[0-9A-ZĄČĘĖĮŠŲŪŽ]*$/i,
  hu: /^[0-9A-ZÁÉÍÓÖŐÚÜŰ]*$/i,
  nl: /^[0-9A-ZÉËÏÓÖÜ]*$/i,
  pl: /^[0-9A-ZĄĆĘŚŁŃÓŻŹ]*$/i,
  pt: /^[0-9A-ZÃÁÀÂÇÉÊÍÕÓÔÚÜ]*$/i,
  ru: /^[0-9А-ЯЁ]*$/i,
  sk: /^[0-9A-ZÁÄČĎÉÍĹĽŇÓŔŠŤÚÝŽ]*$/i,
  sr: /^[0-9A-ZČĆŽŠĐ]*$/i,
  tr: /^[0-9A-ZÇĞİıÖŞÜ]*$/i,
  uk: /^[0-9А-ЩЬЮЯЄІЇҐ]*$/i,
  ar: /^[٠١٢٣٤٥٦٧٨٩0-9ءآأؤإئابةتثجحخدذرزسشصضطظعغفقكلمنهوىيًٌٍَُِّْٰ]*$/
};

var alphaDash = {
  en: /^[0-9A-Z_-]*$/i,
  cs: /^[0-9A-ZÁČĎÉĚÍŇÓŘŠŤÚŮÝŽ_-]*$/i,
  da: /^[0-9A-ZÆØÅ_-]*$/i,
  de: /^[0-9A-ZÄÖÜß_-]*$/i,
  es: /^[0-9A-ZÁÉÍÑÓÚÜ_-]*$/i,
  fr: /^[0-9A-ZÀÂÆÇÉÈÊËÏÎÔŒÙÛÜŸ_-]*$/i,
  lt: /^[0-9A-ZĄČĘĖĮŠŲŪŽ_-]*$/i,
  nl: /^[0-9A-ZÉËÏÓÖÜ_-]*$/i,
  hu: /^[0-9A-ZÁÉÍÓÖŐÚÜŰ_-]*$/i,
  pl: /^[0-9A-ZĄĆĘŚŁŃÓŻŹ_-]*$/i,
  pt: /^[0-9A-ZÃÁÀÂÇÉÊÍÕÓÔÚÜ_-]*$/i,
  ru: /^[0-9А-ЯЁ_-]*$/i,
  sk: /^[0-9A-ZÁÄČĎÉÍĹĽŇÓŔŠŤÚÝŽ_-]*$/i,
  sr: /^[0-9A-ZČĆŽŠĐ_-]*$/i,
  tr: /^[0-9A-ZÇĞİıÖŞÜ_-]*$/i,
  uk: /^[0-9А-ЩЬЮЯЄІЇҐ_-]*$/i,
  ar: /^[٠١٢٣٤٥٦٧٨٩0-9ءآأؤإئابةتثجحخدذرزسشصضطظعغفقكلمنهوىيًٌٍَُِّْٰ_-]*$/
};

var validate = function (value, ref) {
  if ( ref === void 0 ) ref = [null];
  var locale = ref[0];

  if (Array.isArray(value)) {
    return value.every(function (val) { return validate(val, [locale]); });
  }

  // Match at least one locale.
  if (! locale) {
    return Object.keys(alpha$1).some(function (loc) { return alpha$1[loc].test(value); });
  }

  return (alpha$1[locale] || alpha$1.en).test(value);
};

var validate$1 = function (value, ref) {
  if ( ref === void 0 ) ref = [null];
  var locale = ref[0];

  if (Array.isArray(value)) {
    return value.every(function (val) { return validate$1(val, [locale]); });
  }

  // Match at least one locale.
  if (! locale) {
    return Object.keys(alphaDash).some(function (loc) { return alphaDash[loc].test(value); });
  }

  return (alphaDash[locale] || alphaDash.en).test(value);
};

var validate$2 = function (value, ref) {
  if ( ref === void 0 ) ref = [null];
  var locale = ref[0];

  if (Array.isArray(value)) {
    return value.every(function (val) { return validate$2(val, [locale]); });
  }

  // Match at least one locale.
  if (! locale) {
    return Object.keys(alphanumeric).some(function (loc) { return alphanumeric[loc].test(value); });
  }

  return (alphanumeric[locale] || alphanumeric.en).test(value);
};

var validate$3 = function (value, ref) {
  if ( ref === void 0 ) ref = [null];
  var locale = ref[0];

  if (Array.isArray(value)) {
    return value.every(function (val) { return validate$3(val, [locale]); });
  }

  // Match at least one locale.
  if (! locale) {
    return Object.keys(alphaSpaces).some(function (loc) { return alphaSpaces[loc].test(value); });
  }

  return (alphaSpaces[locale] || alphaSpaces.en).test(value);
};

var validate$4 = function (value, ref) {
  var min = ref[0];
  var max = ref[1];

  if (Array.isArray(value)) {
    return value.every(function (val) { return validate$4(val, [min, max]); });
  }

  return Number(min) <= value && Number(max) >= value;
};

var confirmed = function (value, other) { return String(value) === String(other); };

function unwrapExports (x) {
	return x && x.__esModule ? x['default'] : x;
}

function createCommonjsModule(fn, module) {
	return module = { exports: {} }, fn(module, module.exports), module.exports;
}

var assertString_1 = createCommonjsModule(function (module, exports) {
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = assertString;
function assertString(input) {
  var isString = typeof input === 'string' || input instanceof String;

  if (!isString) {
    throw new TypeError('This library (validator.js) validates strings only');
  }
}
module.exports = exports['default'];
});

var isCreditCard_1 = createCommonjsModule(function (module, exports) {
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isCreditCard;



var _assertString2 = _interopRequireDefault(assertString_1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* eslint-disable max-len */
var creditCard = /^(?:4[0-9]{12}(?:[0-9]{3})?|5[1-5][0-9]{14}|(222[1-9]|22[3-9][0-9]|2[3-6][0-9]{2}|27[01][0-9]|2720)[0-9]{12}|6(?:011|5[0-9][0-9])[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35\d{3})\d{11}|62[0-9]{14})$/;
/* eslint-enable max-len */

function isCreditCard(str) {
  (0, _assertString2.default)(str);
  var sanitized = str.replace(/[- ]+/g, '');
  if (!creditCard.test(sanitized)) {
    return false;
  }
  var sum = 0;
  var digit = void 0;
  var tmpNum = void 0;
  var shouldDouble = void 0;
  for (var i = sanitized.length - 1; i >= 0; i--) {
    digit = sanitized.substring(i, i + 1);
    tmpNum = parseInt(digit, 10);
    if (shouldDouble) {
      tmpNum *= 2;
      if (tmpNum >= 10) {
        sum += tmpNum % 10 + 1;
      } else {
        sum += tmpNum;
      }
    } else {
      sum += tmpNum;
    }
    shouldDouble = !shouldDouble;
  }
  return !!(sum % 10 === 0 ? sanitized : false);
}
module.exports = exports['default'];
});

var isCreditCard = unwrapExports(isCreditCard_1);

var credit_card = function (value) { return isCreditCard(String(value)); };

var validate$5 = function (value, params) {
  var decimals = Array.isArray(params) ? (params[0] || '*') : '*';
  if (Array.isArray(value)) {
    return value.every(function (val) { return validate$5(val, params); });
  }

  if (value === null || value === undefined || value === '') {
    return true;
  }

  // if is 0.
  if (Number(decimals) === 0) {
    return /^-?\d*$/.test(value);
  }

  var regexPart = decimals === '*' ? '+' : ("{1," + decimals + "}");
  var regex = new RegExp(("^-?\\d*(\\.\\d" + regexPart + ")?$"));

  if (! regex.test(value)) {
    return false;
  }

  var parsedValue = parseFloat(value);

  // eslint-disable-next-line
    return parsedValue === parsedValue;
};

var validate$6 = function (value, ref) {
  var length = ref[0];

  if (Array.isArray(value)) {
    return value.every(function (val) { return validate$6(val, [length]); });
  }
  var strVal = String(value);

  return /^[0-9]*$/.test(strVal) && strVal.length === Number(length);
};

var validateImage = function (file, width, height) {
  var URL = window.URL || window.webkitURL;
  return new Promise(function (resolve) {
    var image = new Image();
    image.onerror = function () { return resolve({ valid: false }); };
    image.onload = function () { return resolve({
      valid: image.width === Number(width) && image.height === Number(height)
    }); };

    image.src = URL.createObjectURL(file);
  });
};

var dimensions = function (files, ref) {
  var width = ref[0];
  var height = ref[1];

  var list = [];
  for (var i = 0; i < files.length; i++) {
    // if file is not an image, reject.
    if (! /\.(jpg|svg|jpeg|png|bmp|gif)$/i.test(files[i].name)) {
      return false;
    }

    list.push(files[i]);
  }

  return Promise.all(list.map(function (file) { return validateImage(file, width, height); }));
};

var merge_1 = createCommonjsModule(function (module, exports) {
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = merge;
function merge() {
  var obj = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  var defaults = arguments[1];

  for (var key in defaults) {
    if (typeof obj[key] === 'undefined') {
      obj[key] = defaults[key];
    }
  }
  return obj;
}
module.exports = exports['default'];
});

var isByteLength_1 = createCommonjsModule(function (module, exports) {
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

exports.default = isByteLength;



var _assertString2 = _interopRequireDefault(assertString_1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* eslint-disable prefer-rest-params */
function isByteLength(str, options) {
  (0, _assertString2.default)(str);
  var min = void 0;
  var max = void 0;
  if ((typeof options === 'undefined' ? 'undefined' : _typeof(options)) === 'object') {
    min = options.min || 0;
    max = options.max;
  } else {
    // backwards compatibility: isByteLength(str, min [, max])
    min = arguments[1];
    max = arguments[2];
  }
  var len = encodeURI(str).split(/%..|./).length - 1;
  return len >= min && (typeof max === 'undefined' || len <= max);
}
module.exports = exports['default'];
});

var isFQDN = createCommonjsModule(function (module, exports) {
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isFDQN;



var _assertString2 = _interopRequireDefault(assertString_1);



var _merge2 = _interopRequireDefault(merge_1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var default_fqdn_options = {
  require_tld: true,
  allow_underscores: false,
  allow_trailing_dot: false
};

function isFDQN(str, options) {
  (0, _assertString2.default)(str);
  options = (0, _merge2.default)(options, default_fqdn_options);

  /* Remove the optional trailing dot before checking validity */
  if (options.allow_trailing_dot && str[str.length - 1] === '.') {
    str = str.substring(0, str.length - 1);
  }
  var parts = str.split('.');
  if (options.require_tld) {
    var tld = parts.pop();
    if (!parts.length || !/^([a-z\u00a1-\uffff]{2,}|xn[a-z0-9-]{2,})$/i.test(tld)) {
      return false;
    }
    // disallow spaces
    if (/[\s\u2002-\u200B\u202F\u205F\u3000\uFEFF\uDB40\uDC20]/.test(tld)) {
      return false;
    }
  }
  for (var part, i = 0; i < parts.length; i++) {
    part = parts[i];
    if (options.allow_underscores) {
      part = part.replace(/_/g, '');
    }
    if (!/^[a-z\u00a1-\uffff0-9-]+$/i.test(part)) {
      return false;
    }
    // disallow full-width chars
    if (/[\uff01-\uff5e]/.test(part)) {
      return false;
    }
    if (part[0] === '-' || part[part.length - 1] === '-') {
      return false;
    }
  }
  return true;
}
module.exports = exports['default'];
});

var isEmail_1 = createCommonjsModule(function (module, exports) {
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isEmail;



var _assertString2 = _interopRequireDefault(assertString_1);



var _merge2 = _interopRequireDefault(merge_1);



var _isByteLength2 = _interopRequireDefault(isByteLength_1);



var _isFQDN2 = _interopRequireDefault(isFQDN);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var default_email_options = {
  allow_display_name: false,
  require_display_name: false,
  allow_utf8_local_part: true,
  require_tld: true
};

/* eslint-disable max-len */
/* eslint-disable no-control-regex */
var displayName = /^[a-z\d!#\$%&'\*\+\-\/=\?\^_`{\|}~\.\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+[a-z\d!#\$%&'\*\+\-\/=\?\^_`{\|}~\.\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF\s]*<(.+)>$/i;
var emailUserPart = /^[a-z\d!#\$%&'\*\+\-\/=\?\^_`{\|}~]+$/i;
var quotedEmailUser = /^([\s\x01-\x08\x0b\x0c\x0e-\x1f\x7f\x21\x23-\x5b\x5d-\x7e]|(\\[\x01-\x09\x0b\x0c\x0d-\x7f]))*$/i;
var emailUserUtf8Part = /^[a-z\d!#\$%&'\*\+\-\/=\?\^_`{\|}~\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+$/i;
var quotedEmailUserUtf8 = /^([\s\x01-\x08\x0b\x0c\x0e-\x1f\x7f\x21\x23-\x5b\x5d-\x7e\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]|(\\[\x01-\x09\x0b\x0c\x0d-\x7f\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]))*$/i;
/* eslint-enable max-len */
/* eslint-enable no-control-regex */

function isEmail(str, options) {
  (0, _assertString2.default)(str);
  options = (0, _merge2.default)(options, default_email_options);

  if (options.require_display_name || options.allow_display_name) {
    var display_email = str.match(displayName);
    if (display_email) {
      str = display_email[1];
    } else if (options.require_display_name) {
      return false;
    }
  }

  var parts = str.split('@');
  var domain = parts.pop();
  var user = parts.join('@');

  var lower_domain = domain.toLowerCase();
  if (lower_domain === 'gmail.com' || lower_domain === 'googlemail.com') {
    user = user.replace(/\./g, '').toLowerCase();
  }

  if (!(0, _isByteLength2.default)(user, { max: 64 }) || !(0, _isByteLength2.default)(domain, { max: 254 })) {
    return false;
  }

  if (!(0, _isFQDN2.default)(domain, { require_tld: options.require_tld })) {
    return false;
  }

  if (user[0] === '"') {
    user = user.slice(1, user.length - 1);
    return options.allow_utf8_local_part ? quotedEmailUserUtf8.test(user) : quotedEmailUser.test(user);
  }

  var pattern = options.allow_utf8_local_part ? emailUserUtf8Part : emailUserPart;

  var user_parts = user.split('.');
  for (var i = 0; i < user_parts.length; i++) {
    if (!pattern.test(user_parts[i])) {
      return false;
    }
  }

  return true;
}
module.exports = exports['default'];
});

var isEmail = unwrapExports(isEmail_1);

var validate$7 = function (value) {
  if (Array.isArray(value)) {
    return value.every(function (val) { return isEmail(String(val)); });
  }

  return isEmail(String(value));
};

var ext = function (files, extensions) {
  var regex = new RegExp((".(" + (extensions.join('|')) + ")$"), 'i');

  return files.every(function (file) { return regex.test(file.name); });
};

var image = function (files) { return files.every(function (file) { return /\.(jpg|svg|jpeg|png|bmp|gif)$/i.test(file.name); }
); };

var validate$8 = function (value, options) {
  if (Array.isArray(value)) {
    return value.every(function (val) { return validate$8(val, options); });
  }

  // eslint-disable-next-line
  return !! options.filter(function (option) { return option == value; }).length;
};

var isIP_1 = createCommonjsModule(function (module, exports) {
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isIP;



var _assertString2 = _interopRequireDefault(assertString_1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ipv4Maybe = /^(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})$/;
var ipv6Block = /^[0-9A-F]{1,4}$/i;

function isIP(str) {
  var version = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';

  (0, _assertString2.default)(str);
  version = String(version);
  if (!version) {
    return isIP(str, 4) || isIP(str, 6);
  } else if (version === '4') {
    if (!ipv4Maybe.test(str)) {
      return false;
    }
    var parts = str.split('.').sort(function (a, b) {
      return a - b;
    });
    return parts[3] <= 255;
  } else if (version === '6') {
    var blocks = str.split(':');
    var foundOmissionBlock = false; // marker to indicate ::

    // At least some OS accept the last 32 bits of an IPv6 address
    // (i.e. 2 of the blocks) in IPv4 notation, and RFC 3493 says
    // that '::ffff:a.b.c.d' is valid for IPv4-mapped IPv6 addresses,
    // and '::a.b.c.d' is deprecated, but also valid.
    var foundIPv4TransitionBlock = isIP(blocks[blocks.length - 1], 4);
    var expectedNumberOfBlocks = foundIPv4TransitionBlock ? 7 : 8;

    if (blocks.length > expectedNumberOfBlocks) {
      return false;
    }
    // initial or final ::
    if (str === '::') {
      return true;
    } else if (str.substr(0, 2) === '::') {
      blocks.shift();
      blocks.shift();
      foundOmissionBlock = true;
    } else if (str.substr(str.length - 2) === '::') {
      blocks.pop();
      blocks.pop();
      foundOmissionBlock = true;
    }

    for (var i = 0; i < blocks.length; ++i) {
      // test for a :: which can not be at the string start/end
      // since those cases have been handled above
      if (blocks[i] === '' && i > 0 && i < blocks.length - 1) {
        if (foundOmissionBlock) {
          return false; // multiple :: in address
        }
        foundOmissionBlock = true;
      } else if (foundIPv4TransitionBlock && i === blocks.length - 1) {
        // it has been checked before that the last
        // block is a valid IPv4 address
      } else if (!ipv6Block.test(blocks[i])) {
        return false;
      }
    }
    if (foundOmissionBlock) {
      return blocks.length >= 1;
    }
    return blocks.length === expectedNumberOfBlocks;
  }
  return false;
}
module.exports = exports['default'];
});

var isIP = unwrapExports(isIP_1);

var ip = function (value, ref) {
  if ( ref === void 0 ) ref = [4];
  var version = ref[0];

  if (Array.isArray(value)) {
    return value.every(function (val) { return isIP(val, [version]); });
  }

  return isIP(value, version);
};

var max = function (value, ref) {
  var length = ref[0];

  if (value === undefined || value === null) {
    return length >= 0;
  }

  return String(value).length <= length;
};

var max_value = function (value, ref) {
  var max = ref[0];

  if (Array.isArray(value) || value === null || value === undefined || value === '') {
    return false;
  }

  return Number(value) <= max;
};

var mimes = function (files, mimes) {
  var regex = new RegExp(((mimes.join('|').replace('*', '.+')) + "$"), 'i');

  return files.every(function (file) { return regex.test(file.type); });
};

var min = function (value, ref) {
  var length = ref[0];

  if (value === undefined || value === null) {
    return false;
  }
  return String(value).length >= length;
};

var min_value = function (value, ref) {
  var min = ref[0];

  if (Array.isArray(value) || value === null || value === undefined || value === '') {
    return false;
  }

  return Number(value) >= min;
};

var validate$9 = function (value, options) {
  if (Array.isArray(value)) {
    return value.every(function (val) { return validate$9(val, options); });
  }

  // eslint-disable-next-line
  return ! options.filter(function (option) { return option == value; }).length;
};

var numeric = function (value) {
  if (Array.isArray(value)) {
    return value.every(function (val) { return /^[0-9]+$/.test(String(val)); });
  }

  return /^[0-9]+$/.test(String(value));
};

var regex = function (value, ref) {
  var regex = ref[0];
  var flags = ref.slice(1);

  if (regex instanceof RegExp) {
    return regex.test(value);
  }

  return new RegExp(regex, flags).test(String(value));
};

var required = function (value, params) {
  if ( params === void 0 ) params = [false];

  if (Array.isArray(value)) {
    return !! value.length;
  }

  // incase a field considers `false` as an empty value like checkboxes.
  var invalidateFalse = params[0];
  if (value === false && invalidateFalse) {
    return false;
  }

  if (value === undefined || value === null) {
    return false;
  }

  return !! String(value).trim().length;
};

var size = function (files, ref) {
  var size = ref[0];

  if (isNaN(size)) {
    return false;
  }

  var nSize = Number(size) * 1024;
  for (var i = 0; i < files.length; i++) {
    if (files[i].size > nSize) {
      return false;
    }
  }

  return true;
};

var isURL_1 = createCommonjsModule(function (module, exports) {
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isURL;



var _assertString2 = _interopRequireDefault(assertString_1);



var _isFQDN2 = _interopRequireDefault(isFQDN);



var _isIP2 = _interopRequireDefault(isIP_1);



var _merge2 = _interopRequireDefault(merge_1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var default_url_options = {
  protocols: ['http', 'https', 'ftp'],
  require_tld: true,
  require_protocol: false,
  require_host: true,
  require_valid_protocol: true,
  allow_underscores: false,
  allow_trailing_dot: false,
  allow_protocol_relative_urls: false
};

var wrapped_ipv6 = /^\[([^\]]+)\](?::([0-9]+))?$/;

function isRegExp(obj) {
  return Object.prototype.toString.call(obj) === '[object RegExp]';
}

function checkHost(host, matches) {
  for (var i = 0; i < matches.length; i++) {
    var match = matches[i];
    if (host === match || isRegExp(match) && match.test(host)) {
      return true;
    }
  }
  return false;
}

function isURL(url, options) {
  (0, _assertString2.default)(url);
  if (!url || url.length >= 2083 || /[\s<>]/.test(url)) {
    return false;
  }
  if (url.indexOf('mailto:') === 0) {
    return false;
  }
  options = (0, _merge2.default)(options, default_url_options);
  var protocol = void 0,
      auth = void 0,
      host = void 0,
      hostname = void 0,
      port = void 0,
      port_str = void 0,
      split = void 0,
      ipv6 = void 0;

  split = url.split('#');
  url = split.shift();

  split = url.split('?');
  url = split.shift();

  split = url.split('://');
  if (split.length > 1) {
    protocol = split.shift();
    if (options.require_valid_protocol && options.protocols.indexOf(protocol) === -1) {
      return false;
    }
  } else if (options.require_protocol) {
    return false;
  } else if (options.allow_protocol_relative_urls && url.substr(0, 2) === '//') {
    split[0] = url.substr(2);
  }
  url = split.join('://');

  split = url.split('/');
  url = split.shift();

  if (url === '' && !options.require_host) {
    return true;
  }

  split = url.split('@');
  if (split.length > 1) {
    auth = split.shift();
    if (auth.indexOf(':') >= 0 && auth.split(':').length > 2) {
      return false;
    }
  }
  hostname = split.join('@');

  port_str = null;
  ipv6 = null;
  var ipv6_match = hostname.match(wrapped_ipv6);
  if (ipv6_match) {
    host = '';
    ipv6 = ipv6_match[1];
    port_str = ipv6_match[2] || null;
  } else {
    split = hostname.split(':');
    host = split.shift();
    if (split.length) {
      port_str = split.join(':');
    }
  }

  if (port_str !== null) {
    port = parseInt(port_str, 10);
    if (!/^[0-9]+$/.test(port_str) || port <= 0 || port > 65535) {
      return false;
    }
  }

  if (!(0, _isIP2.default)(host) && !(0, _isFQDN2.default)(host, options) && (!ipv6 || !(0, _isIP2.default)(ipv6, 6)) && host !== 'localhost') {
    return false;
  }

  host = host || ipv6;

  if (options.host_whitelist && !checkHost(host, options.host_whitelist)) {
    return false;
  }
  if (options.host_blacklist && checkHost(host, options.host_blacklist)) {
    return false;
  }

  return true;
}
module.exports = exports['default'];
});

var isURL = unwrapExports(isURL_1);

var url = function (value, ref) {
  if ( ref === void 0 ) ref = [true];
  var requireProtocol = ref[0];

  var options = { require_protocol: !!requireProtocol, allow_underscores: true };
  if (Array.isArray(value)) {
    return value.every(function (val) { return isURL(val, options); });
  }

  return isURL(value, options);
};

/* eslint-disable camelcase */
var Rules = {
  alpha_dash: validate$1,
  alpha_num: validate$2,
  alpha_spaces: validate$3,
  alpha: validate,
  between: validate$4,
  confirmed: confirmed,
  credit_card: credit_card,
  decimal: validate$5,
  digits: validate$6,
  dimensions: dimensions,
  email: validate$7,
  ext: ext,
  image: image,
  in: validate$8,
  ip: ip,
  max: max,
  max_value: max_value,
  mimes: mimes,
  min: min,
  min_value: min_value,
  not_in: validate$9,
  numeric: numeric,
  regex: regex,
  required: required,
  size: size,
  url: url
};

/**
 * Gets the data attribute. the name must be kebab-case.
 */
var getDataAttribute = function (el, name) { return el.getAttribute(("data-vv-" + name)); };

/**
 * Sets the data attribute.
 * @param {*} el
 * @param {String} name
 * @param {String} value
 */
var setDataAttribute = function (el, name, value) { return el.setAttribute(("data-vv-" + name), value); };

/**
 * Shallow object comparison.
 *
 * @param {*} lhs 
 * @param {*} rhs 
 * @return {Boolean}
 */
var isEqual = function (lhs, rhs) {
  if (lhs instanceof RegExp && rhs instanceof RegExp) {
    return isEqual(lhs.source, rhs.source) && isEqual(lhs.flags, rhs.flags);
  }

  // if both are objects, compare each key recursively.
  if (isObject(lhs) && isObject(rhs)) {
    return Object.keys(lhs).every(function (key) {
      return isEqual(lhs[key], rhs[key]);
    }) && Object.keys(rhs).every(function (key) {
      return isEqual(lhs[key], rhs[key]);
    });
  }

  return lhs === rhs;
};

/**
 * Determines the input field scope.
 */
var getScope = function (el) {
  var scope = getDataAttribute(el, 'scope');
  if (! scope && el.form) {
    scope = getDataAttribute(el.form, 'scope');
  }

  return scope || null;
};

/**
 * Gets the value in an object safely.
 * @param {String} propPath
 * @param {Object} target
 * @param {*} def
 */
var getPath = function (propPath, target, def) {
  if ( def === void 0 ) def = undefined;

  if (!propPath || !target) { return def; }
  var value = target;
  propPath.split('.').every(function (prop) {
    if (! Object.prototype.hasOwnProperty.call(value, prop) && value[prop] === undefined) {
      value = def;

      return false;
    }

    value = value[prop];

    return true;
  });

  return value;
};

/**
 * Checks if path exists within an object.
 *
 * @param {String} path
 * @param {Object} target
 */
var hasPath = function (path, target) {
  var obj = target;
  return path.split('.').every(function (prop) {
    if (! Object.prototype.hasOwnProperty.call(obj, prop)) {
      return false;
    }

    obj = obj[prop];

    return true;
  });
};

/**
 * @param {String} rule
 */
var parseRule = function (rule) {
  var params = [];
  var name = rule.split(':')[0];

  if (~rule.indexOf(':')) {
    params = rule.split(':').slice(1).join(':').split(',');
  }

  return { name: name, params: params };
};

/**
 * Normalizes the given rules expression.
 *
 * @param {Object|String} rules
 */
var normalizeRules = function (rules) {
  // if falsy value return an empty object.
  if (!rules) {
    return {};
  }

  var validations = {};
  if (isObject(rules)) {
    Object.keys(rules).forEach(function (rule) {
      var params = [];
      if (rules[rule] === true) {
        params = [];
      } else if (Array.isArray(rules[rule])) {
        params = rules[rule];
      } else {
        params = [rules[rule]];
      }

      if (rules[rule] !== false) {
        validations[rule] = params;
      }
    });

    return validations;
  }

  rules.split('|').forEach(function (rule) {
    var parsedRule = parseRule(rule);
    if (! parsedRule.name) {
      return;
    }

    validations[parsedRule.name] = parsedRule.params;
  });

  return validations;
};

/**
 * Debounces a function.
 */
var debounce = function (fn, wait, immediate) {
  if ( wait === void 0 ) wait = 0;
  if ( immediate === void 0 ) immediate = false;

  if (wait === 0) {
    return fn;
  }

  var timeout;

  return function () {
    var args = [], len = arguments.length;
    while ( len-- ) args[ len ] = arguments[ len ];

    var later = function () {
      timeout = null;
      if (!immediate) { fn.apply(void 0, args); }
    };
    /* istanbul ignore next */
    var callNow = immediate && !timeout;
    clearTimeout(timeout);
    timeout = setTimeout(later, wait);
    /* istanbul ignore next */
    if (callNow) { fn.apply(void 0, args); }
  };
};

/**
 * Emits a warning to the console.
 */
var warn = function (message) {
  console.warn(("[vee-validate] " + message)); // eslint-disable-line
};

/**
 * Creates a branded error object.
 * @param {String} message
 */
var createError = function (message) { return new Error(("[vee-validate] " + message)); };

/**
 * Checks if the value is an object.
 */
var isObject = function (object) { return object !== null && object && typeof object === 'object' && ! Array.isArray(object); };

/**
 * Checks if a function is callable.
 */
var isCallable = function (func) { return typeof func === 'function'; };

/**
 * Check if element has the css class on it.
 */
var hasClass = function (el, className) {
  if (el.classList) {
    return el.classList.contains(className);
  }

  return !!el.className.match(new RegExp(("(\\s|^)" + className + "(\\s|$)")));
};

/**
 * Adds the provided css className to the element.
 */
var addClass = function (el, className) {
  if (el.classList) {
    el.classList.add(className);
    return;
  }

  if (!hasClass(el, className)) {
    el.className += " " + className;
  }
};

/**
 * Remove the provided css className from the element.
 */
var removeClass = function (el, className) {
  if (el.classList) {
    el.classList.remove(className);
    return;
  }

  if (hasClass(el, className)) {
    var reg = new RegExp(("(\\s|^)" + className + "(\\s|$)"));
    el.className = el.className.replace(reg, ' ');
  }
};

/**
 * Adds or removes a class name on the input depending on the status flag.
 */
var toggleClass = function (el, className, status) {
  if (!el || !className) { return; }

  if (status) {
    return addClass(el, className);
  }

  removeClass(el, className);
};

/**
 * Converts an array-like object to array.
 * Simple polyfill for Array.from
 */
var toArray = function (arrayLike) {
  if (isCallable(Array.from)) {
    return Array.from(arrayLike);
  }

  var array = [];
  var length = arrayLike.length;
  for (var i = 0; i < length; i++) {
    array.push(arrayLike[i]);
  }

  return array;
};

/**
 * Assign polyfill from the mdn.
 * @param {Object} target
 * @return {Object}
 */
var assign = function (target) {
  var others = [], len = arguments.length - 1;
  while ( len-- > 0 ) others[ len ] = arguments[ len + 1 ];

  /* istanbul ignore else */
  if (isCallable(Object.assign)) {
    return Object.assign.apply(Object, [ target ].concat( others ));
  }

  /* istanbul ignore next */
  if (target == null) {
    throw new TypeError('Cannot convert undefined or null to object');
  }

  /* istanbul ignore next */
  var to = Object(target);
  /* istanbul ignore next */
  others.forEach(function (arg) {
    // Skip over if undefined or null
    if (arg != null) {
      Object.keys(arg).forEach(function (key) {
        to[key] = arg[key];
      });
    }
  });
  /* istanbul ignore next */
  return to;
};

/**
 * Generates a unique id.
 * @return {String}
 */
var uniqId = function () { return ("_" + (Math.random().toString(36).substr(2, 9))); };

/**
 * polyfills array.find
 * @param {Array} array
 * @param {Function} predicate
 */
var find = function (array, predicate) {
  if (isObject(array)) {
    array = toArray(array);
  }
  if (array.find) {
    return array.find(predicate);
  }
  var result;
  array.some(function (item) {
    if (predicate(item)) {
      result = item;
      return true;
    }

    return false;
  });

  return result;
};

var getInputEventName = function (el) {
  if (el && (el.tagName === 'SELECT' || ~['radio', 'checkbox', 'file'].indexOf(el.type))) {
    return 'change';
  }

  return 'input';
};

var ErrorBag = function ErrorBag () {
  this.items = [];
};

/**
   * Adds an error to the internal array.
   *
   * @param {Object} error The error object.
   */
ErrorBag.prototype.add = function add (error) {
  // handle old signature.
  if (arguments.length > 1) {
    error = {
      field: arguments[0],
      msg: arguments[1],
      rule: arguments[2],
      scope: arguments[3] || null
    };
  }

  error.scope = error.scope || null;
  this.items.push(error);
};

/**
 * Updates a field error with the new field scope.
 *
 * @param {String} id 
 * @param {Object} error 
 */
ErrorBag.prototype.update = function update (id, error) {
  var item = find(this.items, function (i) { return i.id === id; });
  if (!item) {
    return;
  }

  var idx = this.items.indexOf(item);
  this.items.splice(idx, 1);
  item.scope = error.scope;
  this.items.push(item);
};

/**
   * Gets all error messages from the internal array.
   *
   * @param {String} scope The Scope name, optional.
   * @return {Array} errors Array of all error messages.
   */
ErrorBag.prototype.all = function all (scope) {
  if (! scope) {
    return this.items.map(function (e) { return e.msg; });
  }

  return this.items.filter(function (e) { return e.scope === scope; }).map(function (e) { return e.msg; });
};

/**
   * Checks if there are any errors in the internal array.
   * @param {String} scope The Scope name, optional.
   * @return {boolean} result True if there was at least one error, false otherwise.
   */
ErrorBag.prototype.any = function any (scope) {
  if (! scope) {
    return !! this.items.length;
  }

  return !! this.items.filter(function (e) { return e.scope === scope; }).length;
};

/**
   * Removes all items from the internal array.
   *
   * @param {String} scope The Scope name, optional.
   */
ErrorBag.prototype.clear = function clear (scope) {
    var this$1 = this;

  if (! scope) {
    scope = null;
  }

  var removeCondition = function (e) { return e.scope === scope; };

  for (var i = 0; i < this.items.length; ++i) {
    if (removeCondition(this$1.items[i])) {
      this$1.items.splice(i, 1);
      --i;
    }
  }
};

/**
   * Collects errors into groups or for a specific field.
   *
   * @param{string} field The field name.
   * @param{string} scope The scope name.
   * @param {Boolean} map If it should map the errors to strings instead of objects.
   * @return {Array} errors The errors for the specified field.
   */
ErrorBag.prototype.collect = function collect (field, scope, map) {
    if ( map === void 0 ) map = true;

  if (! field) {
    var collection = {};
    this.items.forEach(function (e) {
      if (! collection[e.field]) {
        collection[e.field] = [];
      }

      collection[e.field].push(map ? e.msg : e);
    });

    return collection;
  }

  if (! scope) {
    return this.items.filter(function (e) { return e.field === field; }).map(function (e) { return (map ? e.msg : e); });
  }

  return this.items.filter(function (e) { return e.field === field && e.scope === scope; })
    .map(function (e) { return (map ? e.msg : e); });
};
/**
   * Gets the internal array length.
   *
   * @return {Number} length The internal array length.
   */
ErrorBag.prototype.count = function count () {
  return this.items.length;
};

/**
 * Finds and fetches the first error message for the specified field id.
 *
 * @param {String} id 
 */
ErrorBag.prototype.firstById = function firstById (id) {
  var error = find(this.items, function (i) { return i.id === id; });

  return error ? error.msg : null;
};

/**
   * Gets the first error message for a specific field.
   *
   * @param{string} field The field name.
   * @return {string|null} message The error message.
   */
ErrorBag.prototype.first = function first (field, scope) {
    var this$1 = this;
    if ( scope === void 0 ) scope = null;

  var selector = this._selector(field);
  var scoped = this._scope(field);

  if (scoped) {
    var result = this.first(scoped.name, scoped.scope);
    // if such result exist, return it. otherwise it could be a field.
    // with dot in its name.
    if (result) {
      return result;
    }
  }

  if (selector) {
    return this.firstByRule(selector.name, selector.rule, scope);
  }

  for (var i = 0; i < this.items.length; ++i) {
    if (this$1.items[i].field === field && (this$1.items[i].scope === scope)) {
      return this$1.items[i].msg;
    }
  }

  return null;
};

/**
   * Returns the first error rule for the specified field
   *
   * @param {string} field The specified field.
   * @return {string|null} First error rule on the specified field if one is found, otherwise null
   */
ErrorBag.prototype.firstRule = function firstRule (field, scope) {
  var errors = this.collect(field, scope, false);

  return (errors.length && errors[0].rule) || null;
};

/**
   * Checks if the internal array has at least one error for the specified field.
   *
   * @param{string} field The specified field.
   * @return {Boolean} result True if at least one error is found, false otherwise.
   */
ErrorBag.prototype.has = function has (field, scope) {
    if ( scope === void 0 ) scope = null;

  return !! this.first(field, scope);
};

/**
   * Gets the first error message for a specific field and a rule.
   * @param {String} name The name of the field.
   * @param {String} rule The name of the rule.
   * @param {String} scope The name of the scope (optional).
   */
ErrorBag.prototype.firstByRule = function firstByRule (name, rule, scope) {
  var error = this.collect(name, scope, false).filter(function (e) { return e.rule === rule; })[0];

  return (error && error.msg) || null;
};

/**
 * Removes errors by matching against the id.
 * @param {String} id 
 */
ErrorBag.prototype.removeById = function removeById (id) {
    var this$1 = this;

  for (var i = 0; i < this.items.length; ++i) {
    if (this$1.items[i].id === id) {
      this$1.items.splice(i, 1);
      --i;
    }
  }
};

/**
   * Removes all error messages associated with a specific field.
   *
   * @param{string} field The field which messages are to be removed.
   * @param {String} scope The Scope name, optional.
   */
ErrorBag.prototype.remove = function remove (field, scope) {
    var this$1 = this;

  var removeCondition = scope ? function (e) { return e.field === field && e.scope === scope; }
    : function (e) { return e.field === field && e.scope === null; };

  for (var i = 0; i < this.items.length; ++i) {
    if (removeCondition(this$1.items[i])) {
      this$1.items.splice(i, 1);
      --i;
    }
  }
};

/**
   * Get the field attributes if there's a rule selector.
   *
   * @param{string} field The specified field.
   * @return {Object|null}
   */
ErrorBag.prototype._selector = function _selector (field) {
  if (field.indexOf(':') > -1) {
    var ref = field.split(':');
      var name = ref[0];
      var rule = ref[1];

    return { name: name, rule: rule };
  }

  return null;
};

/**
   * Get the field scope if specified using dot notation.
   *
   * @param {string} field the specifie field.
   * @return {Object|null}
   */
ErrorBag.prototype._scope = function _scope (field) {
  if (field.indexOf('.') > -1) {
    var ref = field.split('.');
      var scope = ref[0];
      var name = ref[1];

    return { name: name, scope: scope };
  }

  return null;
};

var Dictionary = function Dictionary (dictionary) {
  if ( dictionary === void 0 ) dictionary = {};

  this.container = {};
  this.merge(dictionary);
};

Dictionary.prototype.hasLocale = function hasLocale (locale) {
  return !! this.container[locale];
};

Dictionary.prototype.setDateFormat = function setDateFormat (locale, format) {
  if (!this.container[locale]) {
    this.container[locale] = {};
  }

  this.container[locale].dateFormat = format;
};

Dictionary.prototype.getDateFormat = function getDateFormat (locale) {
  if (!this.container[locale]) {
    return undefined;
  }

  return this.container[locale].dateFormat;
};

Dictionary.prototype.getMessage = function getMessage (locale, key, fallback) {
  if (! this.hasMessage(locale, key)) {
    return fallback || this._getDefaultMessage(locale);
  }

  return this.container[locale].messages[key];
};

/**
 * Gets a specific message for field. fallsback to the rule message.
 *
 * @param {String} locale
 * @param {String} field
 * @param {String} key
 */
Dictionary.prototype.getFieldMessage = function getFieldMessage (locale, field, key) {
  if (! this.hasLocale(locale)) {
    return this.getMessage(locale, key);
  }

  var dict = this.container[locale].custom && this.container[locale].custom[field];
  if (! dict || ! dict[key]) {
    return this.getMessage(locale, key);
  }

  return dict[key];
};

Dictionary.prototype._getDefaultMessage = function _getDefaultMessage (locale) {
  if (this.hasMessage(locale, '_default')) {
    return this.container[locale].messages._default;
  }

  return this.container.en.messages._default;
};

Dictionary.prototype.getAttribute = function getAttribute (locale, key, fallback) {
    if ( fallback === void 0 ) fallback = '';

  if (! this.hasAttribute(locale, key)) {
    return fallback;
  }

  return this.container[locale].attributes[key];
};

Dictionary.prototype.hasMessage = function hasMessage (locale, key) {
  return !! (
    this.hasLocale(locale) &&
          this.container[locale].messages &&
          this.container[locale].messages[key]
  );
};

Dictionary.prototype.hasAttribute = function hasAttribute (locale, key) {
  return !! (
    this.hasLocale(locale) &&
          this.container[locale].attributes &&
          this.container[locale].attributes[key]
  );
};

Dictionary.prototype.merge = function merge (dictionary) {
  this._merge(this.container, dictionary);
};

Dictionary.prototype.setMessage = function setMessage (locale, key, message) {
  if (! this.hasLocale(locale)) {
    this.container[locale] = {
      messages: {},
      attributes: {}
    };
  }

  this.container[locale].messages[key] = message;
};

Dictionary.prototype.setAttribute = function setAttribute (locale, key, attribute) {
  if (! this.hasLocale(locale)) {
    this.container[locale] = {
      messages: {},
      attributes: {}
    };
  }

  this.container[locale].attributes[key] = attribute;
};

Dictionary.prototype._merge = function _merge (target, source) {
    var this$1 = this;

  if (! (isObject(target) && isObject(source))) {
    return target;
  }

  Object.keys(source).forEach(function (key) {
    if (isObject(source[key])) {
      if (! target[key]) {
        assign(target, ( obj = {}, obj[key] = {}, obj ));
          var obj;
      }

      this$1._merge(target[key], source[key]);
      return;
    }

    assign(target, ( obj$1 = {}, obj$1[key] = source[key], obj$1 ));
      var obj$1;
  });

  return target;
};

var messages = {
  _default: function (field) { return ("The " + field + " value is not valid."); },
  alpha_dash: function (field) { return ("The " + field + " field may contain alpha-numeric characters as well as dashes and underscores."); },
  alpha_num: function (field) { return ("The " + field + " field may only contain alpha-numeric characters."); },
  alpha_spaces: function (field) { return ("The " + field + " field may only contain alphabetic characters as well as spaces."); },
  alpha: function (field) { return ("The " + field + " field may only contain alphabetic characters."); },
  between: function (field, ref) {
    var min = ref[0];
    var max = ref[1];

    return ("The " + field + " field must be between " + min + " and " + max + ".");
},
  confirmed: function (field) { return ("The " + field + " confirmation does not match."); },
  credit_card: function (field) { return ("The " + field + " field is invalid."); },
  decimal: function (field, ref) {
    if ( ref === void 0 ) ref = ['*'];
    var decimals = ref[0];

    return ("The " + field + " field must be numeric and may contain " + (!decimals || decimals === '*' ? '' : decimals) + " decimal points.");
},
  digits: function (field, ref) {
    var length = ref[0];

    return ("The " + field + " field must be numeric and exactly contain " + length + " digits.");
},
  dimensions: function (field, ref) {
    var width = ref[0];
    var height = ref[1];

    return ("The " + field + " field must be " + width + " pixels by " + height + " pixels.");
},
  email: function (field) { return ("The " + field + " field must be a valid email."); },
  ext: function (field) { return ("The " + field + " field must be a valid file."); },
  image: function (field) { return ("The " + field + " field must be an image."); },
  in: function (field) { return ("The " + field + " field must be a valid value."); },
  ip: function (field) { return ("The " + field + " field must be a valid ip address."); },
  max: function (field, ref) {
    var length = ref[0];

    return ("The " + field + " field may not be greater than " + length + " characters.");
},
  max_value: function (field, ref) {
    var max = ref[0];

    return ("The " + field + " field must be " + max + " or less.");
},
  mimes: function (field) { return ("The " + field + " field must have a valid file type."); },
  min: function (field, ref) {
    var length = ref[0];

    return ("The " + field + " field must be at least " + length + " characters.");
},
  min_value: function (field, ref) {
    var min = ref[0];

    return ("The " + field + " field must be " + min + " or more.");
},
  not_in: function (field) { return ("The " + field + " field must be a valid value."); },
  numeric: function (field) { return ("The " + field + " field may only contain numeric characters."); },
  regex: function (field) { return ("The " + field + " field format is invalid."); },
  required: function (field) { return ("The " + field + " field is required."); },
  size: function (field, ref) {
    var size = ref[0];

    return ("The " + field + " field must be less than " + size + " KB.");
},
  url: function (field) { return ("The " + field + " field is not a valid URL."); }
};

/**
 * Generates the options required to construct a field.
 */
var Generator = function Generator () {};

Generator.generate = function generate (el, binding, vnode, options) {
    if ( options === void 0 ) options = {};

  var model = Generator.resolveModel(binding, vnode);

  return {
    name: Generator.resolveName(el, vnode),
    el: el,
    listen: !binding.modifiers.disable,
    scope: Generator.resolveScope(el, binding, vnode),
    vm: Generator.makeVM(vnode.context),
    expression: binding.value,
    component: vnode.child,
    classes: options.classes,
    classNames: options.classNames,
    getter: Generator.resolveGetter(el, vnode, model),
    events: Generator.resolveEvents(el, vnode) || options.events,
    model: model,
    delay: Generator.resolveDelay(el, vnode, options),
    rules: Generator.resolveRules(el, binding),
    initial: !!binding.modifiers.initial,
    alias: Generator.resolveAlias(el, vnode),
    validity: options.validity,
    aria: options.aria
  };
};

/**
 * 
 * @param {*} el 
 * @param {*} binding 
 */
Generator.resolveRules = function resolveRules (el, binding) {
  if (!binding || !binding.expression) {
    return getDataAttribute(el, 'rules');
  }

  if (typeof binding.value === 'string') {
    return binding.value;
  }

  if (~['string', 'object'].indexOf(typeof binding.value.rules)) {
    return binding.value.rules;
  }

  return binding.value;
};

/**
 * Creates a non-circular partial VM instance from a Vue instance.
 * @param {*} vm 
 */
Generator.makeVM = function makeVM (vm) {
  return {
    get $el () {
      return vm.$el;
    },
    get $refs () {
      return vm.$refs;
    },
    $watch: vm.$watch ? vm.$watch.bind(vm) : function () {},
    $validator: vm.$validator ? {
      errors: vm.$validator.errors,
      validate: vm.$validator.validate.bind(vm.$validator)
    } : null
  };
};

/**
 * Resolves the delay value.
 * @param {*} el
 * @param {*} vnode
 * @param {Object} options
 */
Generator.resolveDelay = function resolveDelay (el, vnode, options) {
    if ( options === void 0 ) options = {};

  return getDataAttribute(el, 'delay') || (vnode.child && vnode.child.$attrs && vnode.child.$attrs['data-vv-delay']) || options.delay;
};

/**
 * Resolves the alias for the field.
 * @param {*} el 
 * @param {*} vnode 
 */
Generator.resolveAlias = function resolveAlias (el, vnode) {
  return getDataAttribute(el, 'as') || (vnode.child && vnode.child.$attrs && vnode.child.$attrs['data-vv-as']) || el.title || null;
};

/**
 * Resolves the events to validate in response to.
 * @param {*} el
 * @param {*} vnode
 */
Generator.resolveEvents = function resolveEvents (el, vnode) {
  if (vnode.child) {
    return getDataAttribute(el, 'validate-on') || (vnode.child.$attrs && vnode.child.$attrs['data-vv-validate-on']);
  }

  return getDataAttribute(el, 'validate-on');
};

/**
 * Resolves the scope for the field.
 * @param {*} el
 * @param {*} binding
 */
Generator.resolveScope = function resolveScope (el, binding, vnode) {
    if ( vnode === void 0 ) vnode = {};

  var scope = null;
  if (isObject(binding.value)) {
    scope = binding.value.scope;
  }

  if (vnode.child && !scope) {
    scope = vnode.child.$attrs && vnode.child.$attrs['data-vv-scope'];
  }

  return scope || getScope(el);
};

/**
 * Checks if the node directives contains a v-model or a specified arg.
 * Args take priority over models.
 *
 * @return {Object}
 */
Generator.resolveModel = function resolveModel (binding, vnode) {
  if (binding.arg) {
    return binding.arg;
  }

  if (isObject(binding.value) && binding.value.arg) {
    return binding.value.arg;
  }

  var model = vnode.data.model || find(vnode.data.directives, function (d) { return d.name === 'model'; });
  if (!model) {
    return null;
  }

  var watchable = /^[a-z_]+[0-9]*(\w*\.[a-z_]\w*)*$/i.test(model.expression) && hasPath(model.expression, vnode.context);

  if (!watchable) {
    return null;
  }

  return model.expression;
};

/**
   * Resolves the field name to trigger validations.
   * @return {String} The field name.
   */
Generator.resolveName = function resolveName (el, vnode) {
  if (vnode.child) {
    return getDataAttribute(el, 'name') || (vnode.child.$attrs && (vnode.child.$attrs['data-vv-name'] || vnode.child.$attrs['name'])) || vnode.child.name;
  }

  return getDataAttribute(el, 'name') || el.name;
};

/**
 * Returns a value getter input type.
 */
Generator.resolveGetter = function resolveGetter (el, vnode, model) {
  if (model) {
    return function () {
      return getPath(model, vnode.context);
    };
  }

  if (vnode.child) {
    return function () {
      var path = getDataAttribute(el, 'value-path') || (vnode.child.$attrs && vnode.child.$attrs['data-vv-value-path']);
      if (path) {
        return getPath(path, vnode.child);
      }
      return vnode.child.value;
    };
  }

  switch (el.type) {
  case 'checkbox': return function () {
    var els = document.querySelectorAll(("input[name=\"" + (el.name) + "\"]"));

    els = toArray(els).filter(function (el) { return el.checked; });
    if (!els.length) { return undefined; }

    return els.map(function (checkbox) { return checkbox.value; });
  };
  case 'radio': return function () {
    var els = document.querySelectorAll(("input[name=\"" + (el.name) + "\"]"));
    var elm = find(els, function (el) { return el.checked; });

    return elm && elm.value;
  };
  case 'file': return function (context) {
    return toArray(el.files);
  };
  case 'select-multiple': return function () {
    return toArray(el.options).filter(function (opt) { return opt.selected; }).map(function (opt) { return opt.value; });
  };
  default: return function () {
    return el && el.value;
  };
  }
};

var DEFAULT_OPTIONS = {
  targetOf: null,
  initial: false,
  scope: null,
  listen: true,
  name: null,
  active: true,
  required: false,
  rules: {},
  vm: null,
  classes: false,
  validity: true,
  aria: true,
  events: 'input|blur',
  delay: 0,
  classNames: {
    touched: 'touched', // the control has been blurred
    untouched: 'untouched', // the control hasn't been blurred
    valid: 'valid', // model is valid
    invalid: 'invalid', // model is invalid
    pristine: 'pristine', // control has not been interacted with
    dirty: 'dirty' // control has been interacted with
  }
};

/**
 * Generates the default flags for the field.
 * @param {Object} options
 */
var generateFlags = function (options) { return ({
  untouched: true,
  touched: false,
  dirty: false,
  pristine: true,
  valid: null,
  invalid: null,
  validated: false,
  pending: false,
  required: !!options.rules.required
}); };

var Field = function Field (el, options) {
  if ( options === void 0 ) options = {};

  this.id = uniqId();
  this.el = el;
  this.updated = false;
  this.dependencies = [];
  this.watchers = [];
  this.events = [];
  this.rules = {};
  if (!this.isHeadless && !(this.targetOf || options.targetOf)) {
    setDataAttribute(this.el, 'id', this.id); // cache field id if it is independent and has a root element.
  }
  options = assign({}, DEFAULT_OPTIONS, options);
  this.validity = options.validity;
  this.aria = options.aria;
  this.flags = generateFlags(options);
  this.vm = options.vm || this.vm;
  this.component = options.component || this.component;
  this.update(options);
  this.updated = false;
};

var prototypeAccessors$1 = { isVue: {},validator: {},isRequired: {},isDisabled: {},isHeadless: {},displayName: {},value: {},rejectsFalse: {} };

prototypeAccessors$1.isVue.get = function () {
  return !!this.component;
};

prototypeAccessors$1.validator.get = function () {
  if (!this.vm || !this.vm.$validator) {
    warn('No validator instance detected.');
    return { validate: function () {} };
  }

  return this.vm.$validator;
};

prototypeAccessors$1.isRequired.get = function () {
  return !!this.rules.required;
};

prototypeAccessors$1.isDisabled.get = function () {
  return (this.isVue && this.component.disabled) || (this.el && this.el.disabled);
};

prototypeAccessors$1.isHeadless.get = function () {
  return !this.el;
};

/**
 * Gets the display name (user-friendly name).
 * @return {String}
 */
prototypeAccessors$1.displayName.get = function () {
  return this.alias;
};

/**
 * Gets the input value.
 * @return {*}
 */
prototypeAccessors$1.value.get = function () {
  if (!isCallable(this.getter)) {
    return undefined;
  }

  return this.getter();
};

/**
 * If the field rejects false as a valid value for the required rule. 
 */
prototypeAccessors$1.rejectsFalse.get = function () {
  if (this.isVue || this.isHeadless) {
    return false;
  }

  return this.el.type === 'checkbox';
};

/**
 * Determines if the instance matches the options provided.
 * @param {Object} options The matching options.
 */
Field.prototype.matches = function matches (options) {
  if (options.id) {
    return this.id === options.id;
  }

  if (options.name === undefined && options.scope === undefined) {
    return true;
  }

  if (options.scope === undefined) {
    return this.name === options.name;
  }

  if (options.name === undefined) {
    return this.scope === options.scope;
  }

  return options.name === this.name && options.scope === this.scope;
};

/**
 *
 * @param {Object} options
 */
Field.prototype.update = function update (options) {
  this.targetOf = options.targetOf || null;
  this.initial = options.initial || this.initial || false;

  // update errors scope if the field scope was changed.
  if (options.scope && options.scope !== this.scope && this.validator.errors && isCallable(this.validator.errors.update)) {
    this.validator.errors.update(this.id, { scope: options.scope });
  }
  this.scope = options.scope || this.scope || null;
  this.name = options.name || this.name || null;
  this.rules = options.rules !== undefined ? normalizeRules(options.rules) : this.rules;
  this.model = options.model || this.model;
  this.listen = options.listen !== undefined ? options.listen : this.listen;
  this.classes = options.classes || this.classes || false;
  this.classNames = options.classNames || this.classNames || DEFAULT_OPTIONS.classNames;
  this.alias = options.alias || this.alias;
  this.getter = isCallable(options.getter) ? options.getter : this.getter;
  this.delay = options.delay || this.delay || 0;
  this.events = typeof options.events === 'string' && options.events.length ? options.events.split('|') : this.events;
  this.updateDependencies();
  this.addActionListeners();

  // validate if it was validated before and field was updated and there was a rules mutation.
  if (this.flags.validated && options.rules && this.updated) {
    this.validator.validate(("#" + (this.id)));
  }

  this.updated = true;

  // no need to continue.
  if (this.isHeadless) {
    return;
  }

  this.updateClasses();
  this.addValueListeners();
  this.updateAriaAttrs();
};

/**
 * Determines if the field requires references to target fields.
*/
Field.prototype.updateDependencies = function updateDependencies () {
    var this$1 = this;

  // reset dependencies.
  this.dependencies.forEach(function (d) { return d.field.destroy(); });
  this.dependencies = [];

  // we get the selectors for each field.
  var fields = Object.keys(this.rules).reduce(function (prev, r) {
    if (r === 'confirmed') {
      prev.push({ selector: this$1.rules[r][0] || ((this$1.name) + "_confirmation"), name: r });
    } else if (/after|before/.test(r)) {
      prev.push({ selector: this$1.rules[r][0], name: r });
    }

    return prev;
  }, []);

  if (!fields.length || !this.vm || !this.vm.$el) { return; }

  // must be contained within the same component, so we use the vm root element constrain our dom search.
  fields.forEach(function (ref) {
      var selector = ref.selector;
      var name = ref.name;

    var el = null;
    // vue ref selector.
    if (selector[0] === '$') {
      el = this$1.vm.$refs[selector.slice(1)];
    } else {
      // try a query selection.
      el = this$1.vm.$el.querySelector(selector);
    }

    if (!el) {
      // try a name selector
      el = this$1.vm.$el.querySelector(("input[name=\"" + selector + "\"]"));
    }

    if (!el) {
      return;
    }

    var options = {
      vm: this$1.vm,
      classes: this$1.classes,
      classNames: this$1.classNames,
      delay: this$1.delay,
      scope: this$1.scope,
      events: this$1.events.join('|'),
      initial: this$1.initial,
      targetOf: this$1.id
    };

    // probably a component.
    if (isCallable(el.$watch)) {
      options.component = el;
      options.el = el.$el;
      options.getter = Generator.resolveGetter(el.$el, { child: el });
    } else {
      options.el = el;
      options.getter = Generator.resolveGetter(el, {});
    }

    this$1.dependencies.push({ name: name, field: new Field(options.el, options) });
  });
};

/**
 * Removes listeners.
 * @param {RegExp} tag
 */
Field.prototype.unwatch = function unwatch (tag) {
  if (!tag) {
    this.watchers.forEach(function (w) { return w.unwatch(); });
    this.watchers = [];
    return;
  }
  this.watchers.filter(function (w) { return tag.test(w.tag); }).forEach(function (w) { return w.unwatch(); });
  this.watchers = this.watchers.filter(function (w) { return !tag.test(w.tag); });
};

/**
 * Updates the element classes depending on each field flag status.
 */
Field.prototype.updateClasses = function updateClasses () {
  if (!this.classes) { return; }

  toggleClass(this.el, this.classNames.dirty, this.flags.dirty);
  toggleClass(this.el, this.classNames.pristine, this.flags.pristine);
  toggleClass(this.el, this.classNames.valid, !!this.flags.valid);
  toggleClass(this.el, this.classNames.invalid, !!this.flags.invalid);
  toggleClass(this.el, this.classNames.touched, this.flags.touched);
  toggleClass(this.el, this.classNames.untouched, this.flags.untouched);
};

/**
 * Adds the listeners required for automatic classes and some flags.
 */
Field.prototype.addActionListeners = function addActionListeners () {
    var this$1 = this;

  // remove previous listeners.
  this.unwatch(/class/);

  var onBlur = function () {
    this$1.flags.touched = true;
    this$1.flags.untouched = false;
    if (this$1.classes) {
      toggleClass(this$1.el, this$1.classNames.touched, true);
      toggleClass(this$1.el, this$1.classNames.untouched, false);
    }

    // only needed once.
    this$1.unwatch(/^class_blur$/);
  };

  var inputEvent = getInputEventName(this.el);
  var onInput = function () {
    this$1.flags.dirty = true;
    this$1.flags.pristine = false;
    if (this$1.classes) {
      toggleClass(this$1.el, this$1.classNames.pristine, false);
      toggleClass(this$1.el, this$1.classNames.dirty, true);
    }

    // only needed once.
    this$1.unwatch(/^class_input$/);
  };

  if (this.isVue && isCallable(this.component.$once)) {
    this.component.$once('input', onInput);
    this.component.$once('blur', onBlur);
    this.watchers.push({
      tag: 'class_input',
      unwatch: function () {
        this$1.component.$off('input', onInput);
      }
    });
    this.watchers.push({
      tag: 'class_blur',
      unwatch: function () {
        this$1.component.$off('blur', onBlur);
      }
    });
    return;
  }

  if (this.isHeadless) { return; }

  this.el.addEventListener(inputEvent, onInput);
  // Checkboxes and radio buttons on Mac don't emit blur naturally, so we listen on click instead.
  var blurEvent = ['radio', 'checkbox'].indexOf(this.el.type) === -1 ? 'blur' : 'click';
  this.el.addEventListener(blurEvent, onBlur);
  this.watchers.push({
    tag: 'class_input',
    unwatch: function () {
      this$1.el.removeEventListener(inputEvent, onInput);
    }
  });

  this.watchers.push({
    tag: 'class_blur',
    unwatch: function () {
      this$1.el.removeEventListener(blurEvent, onBlur);
    }
  });
};

/**
 * Adds the listeners required for validation.
 */
Field.prototype.addValueListeners = function addValueListeners () {
    var this$1 = this;

  this.unwatch(/^input_.+/);
  if (!this.listen) { return; }

  var fn = null;
  if (this.targetOf) {
    fn = function () {
      this$1.validator.validate(("#" + (this$1.targetOf)));
    };
  } else {
    fn = function () {
        var args = [], len = arguments.length;
        while ( len-- ) args[ len ] = arguments[ len ];

      if (args.length === 0 || (isCallable(Event) && args[0] instanceof Event)) {
        args[0] = this$1.value;
      }
      this$1.validator.validate(("#" + (this$1.id)), args[0]);
    };
  }
  var validate = debounce(fn, this.delay);

  var inputEvent = getInputEventName(this.el);
  // replace input event with suitable one.
  var events = this.events.map(function (e) {
    return e === 'input' ? inputEvent : e;
  });

  // if there is a watchable model and an on input validation is requested.
  if (this.model && events.indexOf(inputEvent) !== -1) {
    var unwatch = this.vm.$watch(this.model, validate);
    this.watchers.push({
      tag: 'input_model',
      unwatch: unwatch
    });
    // filter out input event as it is already handled by the watcher API.
    events = events.filter(function (e) { return e !== inputEvent; });
  }

  // Add events.
  events.forEach(function (e) {
    if (this$1.isVue) {
      this$1.component.$on(e, validate);
      this$1.watchers.push({
        tag: 'input_vue',
        unwatch: function () {
          this$1.component.$off(e, validate);
        }
      });
      return;
    }

    if (~['radio', 'checkbox'].indexOf(this$1.el.type)) {
      var els = document.querySelectorAll(("input[name=\"" + (this$1.el.name) + "\"]"));
      toArray(els).forEach(function (el) {
        el.addEventListener(e, validate);
        this$1.watchers.push({
          tag: 'input_native',
          unwatch: function () {
            el.removeEventListener(e, validate);
          }
        });
      });

      return;
    }

    this$1.el.addEventListener(e, validate);
    this$1.watchers.push({
      tag: 'input_native',
      unwatch: function () {
        this$1.el.removeEventListener(e, validate);
      }
    });
  });
};

/**
 * Updates aria attributes on the element.
 */
Field.prototype.updateAriaAttrs = function updateAriaAttrs () {
  if (!this.aria || this.isHeadless || !isCallable(this.el.setAttribute)) { return; }

  this.el.setAttribute('aria-required', this.isRequired ? 'true' : 'false');
  this.el.setAttribute('aria-invalid', this.flags.invalid ? 'true' : 'false');
};

/**
 * Updates the custom validity for the field.
 */
Field.prototype.updateCustomValidity = function updateCustomValidity () {
  if (!this.validity || this.isHeadless || !isCallable(this.el.setCustomValidity)) { return; }

  this.el.setCustomValidity(this.flags.valid ? '' : (this.validator.errors.firstById(this.id) || ''));
};

/**
 * Removes all listeners.
 */
Field.prototype.destroy = function destroy () {
  this.watchers.forEach(function (w) { return w.unwatch(); });
  this.watchers = [];
  this.dependencies.forEach(function (d) { return d.field.destroy(); });
  this.dependencies = [];
};

Object.defineProperties( Field.prototype, prototypeAccessors$1 );

var FieldBag = function FieldBag () {
  this.items = [];
};

var prototypeAccessors$2 = { length: {} };

/**
 * @return {Number} The current collection length.
 */
prototypeAccessors$2.length.get = function () {
  return this.items.length;
};

/**
 * Finds the first field that matches the provided matcher object.
 * @param {Object} matcher
 * @return {Field|undefined} The first matching item.
 */
FieldBag.prototype.find = function find$1 (matcher) {
  return find(this.items, function (item) { return item.matches(matcher); });
};

/**
 * @param {Object|Array} matcher
 * @return {Array} Array of matching field items.
 */
FieldBag.prototype.filter = function filter (matcher) {
  // multiple matchers to be tried.
  if (Array.isArray(matcher)) {
    return this.items.filter(function (item) { return matcher.some(function (m) { return item.matches(m); }); });
  }

  return this.items.filter(function (item) { return item.matches(matcher); });
};

/**
 * Maps the field items using the mapping function.
 *
 * @param {Function} mapper
 */
FieldBag.prototype.map = function map (mapper) {
  return this.items.map(mapper);
};

/**
 * Finds and removes the first field that matches the provided matcher object, returns the removed item.
 * @param {Object|Field} matcher
 * @return {Field|null}
 */
FieldBag.prototype.remove = function remove (matcher) {
  var item = null;
  if (matcher instanceof Field) {
    item = matcher;
  } else {
    item = this.find(matcher);
  }

  if (!item) { return null; }

  var index = this.items.indexOf(item);
  this.items.splice(index, 1);

  return item;
};

/**
 * Adds a field item to the list.
 *
 * @param {Field} item
 */
FieldBag.prototype.push = function push (item) {
  if (! (item instanceof Field)) {
    throw createError('FieldBag only accepts instances of Field that has an id defined.');
  }

  if (!item.id) {
    throw createError('Field id must be defined.');
  }

  if (this.find({ id: item.id })) {
    throw createError(("Field with id " + (item.id) + " is already added."));
  }

  this.items.push(item);
};

Object.defineProperties( FieldBag.prototype, prototypeAccessors$2 );

var after = function (moment) { return function (value, ref) {
  var other = ref[0];
  var inclusion = ref[1];
  var format = ref[2];

  if (typeof format === 'undefined') {
    format = inclusion;
    inclusion = false;
  }

  var dateValue = moment(value, format, true);
  var otherValue = moment(other, format, true);

  // if either is not valid.
  if (! dateValue.isValid() || ! otherValue.isValid()) {
    return false;
  }

  return dateValue.isAfter(otherValue) || (inclusion && dateValue.isSame(otherValue));
}; };

var before = function (moment) { return function (value, ref) {
  var other = ref[0];
  var inclusion = ref[1];
  var format = ref[2];

  if (typeof format === 'undefined') {
    format = inclusion;
    inclusion = false;
  }
  var dateValue = moment(value, format, true);
  var otherValue = moment(other, format, true);

  // if either is not valid.
  if (! dateValue.isValid() || ! otherValue.isValid()) {
    return false;
  }

  return dateValue.isBefore(otherValue) || (inclusion && dateValue.isSame(otherValue));
}; };

var date_format = function (moment) { return function (value, ref) {
	var format = ref[0];

	return moment(value, format, true).isValid();
 }	};

var date_between = function (moment) { return function (value, params) {
  var min;
  var max;
  var format;
  var inclusivity = '()';

  if (params.length > 3) {
    var assign;
    (assign = params, min = assign[0], max = assign[1], inclusivity = assign[2], format = assign[3]);
  } else {
    var assign$1;
    (assign$1 = params, min = assign$1[0], max = assign$1[1], format = assign$1[2]);
  }

  var minDate = moment(min, format, true);
  var maxDate = moment(max, format, true);
  var dateVal = moment(value, format, true);

  if (! (minDate.isValid() && maxDate.isValid() && dateVal.isValid())) {
    return false;
  }

  return dateVal.isBetween(minDate, maxDate, 'days', inclusivity);
}; };

var messages$1 = {
  after: function (field, ref) {
    var target = ref[0];
    var inclusion = ref[1];

    return ("The " + field + " must be after " + (inclusion ? 'or equal to ' : '') + target + ".");
},
  before: function (field, ref) {
    var target = ref[0];
    var inclusion = ref[1];

    return ("The " + field + " must be before " + (inclusion ? 'or equal to ' : '') + target + ".");
},
  date_between: function (field, ref) {
    var min = ref[0];
    var max = ref[1];

    return ("The " + field + " must be between " + min + " and " + max + ".");
},
  date_format: function (field, ref) {
    var format = ref[0];

    return ("The " + field + " must be in the format " + format + ".");
}
};

var date = {
  make: function (moment) { return ({
    date_format: date_format(moment),
    after: after(moment),
    before: before(moment),
    date_between: date_between(moment)
  }); },
  messages: messages$1,
  installed: false
};

var LOCALE = 'en';
var STRICT_MODE = true;
var DICTIONARY = new Dictionary({
  en: {
    messages: messages,
    attributes: {},
    custom: {}
  }
});

var Validator = function Validator (validations, options) {
  var this$1 = this;
  if ( options === void 0 ) options = { vm: null, fastExit: true };

  this.strict = STRICT_MODE;
  this.errors = new ErrorBag();
  this.fields = new FieldBag();
  this.fieldBag = {};
  this._createFields(validations);
  this.paused = false;
  this.fastExit = options.fastExit || false;
  this.ownerId = options.vm && options.vm._uid;
  // create it statically since we don't need constant access to the vm.
  this.clean = options.vm && isCallable(options.vm.$nextTick) ? function () {
    options.vm.$nextTick(function () {
      this$1.errors.clear();
    });
  } : function () {
    this$1.errors.clear();
  };

  // if momentjs is present, install the validators.
  if (typeof moment === 'function') {
    // eslint-disable-next-line
    this.installDateTimeValidators(moment);
  }
};

var prototypeAccessors = { dictionary: {},locale: {},rules: {} };
var staticAccessors = { dictionary: {},rules: {} };

/**
 * @return {Dictionary}
 */
prototypeAccessors.dictionary.get = function () {
  return DICTIONARY;
};

/**
 * @return {Dictionary}
 */
staticAccessors.dictionary.get = function () {
  return DICTIONARY;
};

/**
 * @return {String}
 */
prototypeAccessors.locale.get = function () {
  return LOCALE;
};

/**
 * @return {Object}
 */
prototypeAccessors.rules.get = function () {
  return Rules;
};

/**
 * @return {Object}
 */
staticAccessors.rules.get = function () {
  return Rules;
};

/**
 * Merges a validator object into the Rules and Messages.
 *
 * @param{string} name The name of the validator.
 * @param{function|object} validator The validator object.
 */
Validator._merge = function _merge (name, validator) {
  if (isCallable(validator)) {
    Rules[name] = validator;
    return;
  }

  Rules[name] = validator.validate;
  if (isCallable(validator.getMessage)) {
    DICTIONARY.setMessage(LOCALE, name, validator.getMessage);
  }

  if (validator.messages) {
    DICTIONARY.merge(
      Object.keys(validator.messages).reduce(function (prev, curr) {
        var dict = prev;
        dict[curr] = {
          messages: ( obj = {}, obj[name] = validator.messages[curr], obj )
        };
          var obj;

        return dict;
      }, {})
    );
  }
};

/**
 * Guards from extnsion violations.
 *
 * @param{string} name name of the validation rule.
 * @param{object} validator a validation rule object.
 */
Validator._guardExtend = function _guardExtend (name, validator) {
  if (isCallable(validator)) {
    return;
  }

  if (! isCallable(validator.validate)) {
    throw createError(
      // eslint-disable-next-line
      ("Extension Error: The validator '" + name + "' must be a function or have a 'validate' method.")
    );
  }

  if (! isCallable(validator.getMessage) && ! isObject(validator.messages)) {
    throw createError(
      // eslint-disable-next-line
      ("Extension Error: The validator '" + name + "' must have a 'getMessage' method or have a 'messages' object.")
    );
  }
};

/**
 * Static constructor.
 *
 * @param{object} validations The validations object.
 * @return {Validator} validator A validator object.
 */
Validator.create = function create (validations, options) {
  return new Validator(validations, options);
};

/**
 * Adds a custom validator to the list of validation rules.
 *
 * @param{string} name The name of the validator.
 * @param{object|function} validator The validator object/function.
 */
Validator.extend = function extend (name, validator) {
  Validator._guardExtend(name, validator);
  Validator._merge(name, validator);
};

/**
 * Installs the datetime validators and the messages.
 */
Validator.installDateTimeValidators = function installDateTimeValidators (moment) {
  if (typeof moment !== 'function') {
    warn('To use the date-time validators you must provide moment reference.');

    return false;
  }

  if (date.installed) {
    return true;
  }

  var validators = date.make(moment);
  Object.keys(validators).forEach(function (name) {
    Validator.extend(name, validators[name]);
  });

  Validator.updateDictionary({
    en: {
      messages: date.messages
    }
  });
  date.installed = true;

  return true;
};

/**
 * Removes a rule from the list of validators.
 * @param {String} name The name of the validator/rule.
 */
Validator.remove = function remove (name) {
  delete Rules[name];
};

/**
 * Sets the default locale for all validators.
 *
 * @param {String} language The locale id.
 */
Validator.setLocale = function setLocale (language) {
    if ( language === void 0 ) language = 'en';

  /* istanbul ignore if */
  if (! DICTIONARY.hasLocale(language)) {
    // eslint-disable-next-line
    warn('You are setting the validator locale to a locale that is not defined in the dicitionary. English messages may still be generated.');
  }

  LOCALE = language;
};

/**
 * Sets the operating mode for all newly created validators.
 * strictMode = true: Values without a rule are invalid and cause failure.
 * strictMode = false: Values without a rule are valid and are skipped.
 * @param {Boolean} strictMode.
 */
Validator.setStrictMode = function setStrictMode (strictMode) {
    if ( strictMode === void 0 ) strictMode = true;

  STRICT_MODE = strictMode;
};

/**
 * Updates the dicitionary, overwriting existing values and adding new ones.
 *
 * @param{object} data The dictionary object.
 */
Validator.updateDictionary = function updateDictionary (data) {
  DICTIONARY.merge(data);
};

Validator.addLocale = function addLocale (locale) {
  if (! locale.name) {
    warn('Your locale must have a name property');
    return;
  }

  this.updateDictionary(( obj = {}, obj[locale.name] = locale, obj ));
    var obj;
};

Validator.prototype.addLocale = function addLocale (locale) {
  Validator.addLocale(locale);
};

/**
 * Creates the fields to be validated.
 *
 * @param{object} validations
 * @return {object} Normalized object.
 */
Validator.prototype._createFields = function _createFields (validations) {
    var this$1 = this;

  if (! validations) { return; }

  Object.keys(validations).forEach(function (field) {
    var options = assign({}, { name: field, rules: validations[field] });
    this$1.attach(options);
  });
};

/**
 * Date rules need the existance of a format, so date_format must be supplied.
 * @param {String} name The rule name.
 * @param {Array} validations the field validations.
 */
Validator.prototype._getDateFormat = function _getDateFormat (validations) {
  var format = null;
  if (validations.date_format && Array.isArray(validations.date_format)) {
    format = validations.date_format[0];
  }

  return format || this.dictionary.getDateFormat(this.locale);
};

/**
 * Checks if the passed rule is a date rule.
 */
Validator.prototype._isADateRule = function _isADateRule (rule) {
  return !! ~['after', 'before', 'date_between', 'date_format'].indexOf(rule);
};

/**
 * Formats an error message for field and a rule.
 *
 * @param{Field} field The field object.
 * @param{object} rule Normalized rule object.
 * @param {object} data Additional Information about the validation result.
 * @return {string} Formatted error message.
 */
Validator.prototype._formatErrorMessage = function _formatErrorMessage (field, rule, data) {
    if ( data === void 0 ) data = {};

  var name = this._getFieldDisplayName(field);
  var params = this._getLocalizedParams(rule);
  // Defaults to english message.
  if (! this.dictionary.hasLocale(LOCALE)) {
    var msg$1 = this.dictionary.getFieldMessage('en', field.name, rule.name);

    return isCallable(msg$1) ? msg$1(name, params, data) : msg$1;
  }

  var msg = this.dictionary.getFieldMessage(LOCALE, field.name, rule.name);

  return isCallable(msg) ? msg(name, params, data) : msg;
};

/**
 * Translates the parameters passed to the rule (mainly for target fields).
 */
Validator.prototype._getLocalizedParams = function _getLocalizedParams (rule) {
  if (~ ['after', 'before', 'confirmed'].indexOf(rule.name) && rule.params && rule.params[0]) {
    if (rule.params.length > 1) {
      return [this.dictionary.getAttribute(LOCALE, rule.params[0], rule.params[0]), rule.params[1]];
    } else {
      return [this.dictionary.getAttribute(LOCALE, rule.params[0], rule.params[0])];
    }
  }

  return rule.params;
};

/**
 * Resolves an appropiate display name, first checking 'data-as' or the registered 'prettyName'
 * Then the dictionary, then fallsback to field name.
 * @param {Field} field The field object.
 * @return {String} The name to be used in the errors.
 */
Validator.prototype._getFieldDisplayName = function _getFieldDisplayName (field) {
  return field.displayName || this.dictionary.getAttribute(LOCALE, field.name, field.name);
};

/**
 * Tests a single input value against a rule.
 *
 * @param{Field} field The field under validation.
 * @param{*} valuethe value of the field.
 * @param{object} rule the rule object.
 * @return {boolean} Whether it passes the check.
 */
Validator.prototype._test = function _test (field, value, rule) {
    var this$1 = this;

  var validator = Rules[rule.name];
  var params = Array.isArray(rule.params) ? toArray(rule.params) : [];
  if (! validator || typeof validator !== 'function') {
    throw createError(("No such validator '" + (rule.name) + "' exists."));
  }

  // has field depenencies
  if (/(confirmed|after|before)/.test(rule.name)) {
    var target = find(field.dependencies, function (d) { return d.name === rule.name; });
    if (target) {
      if (params.length > 1) {
        params = [target.field.value, params[1]];
      } else {
        params = [target.field.value];
      }
    }
  } else if (rule.name === 'required' && field.rejectsFalse) {
    // invalidate false if no args were specified and the field rejects false by default.
    params = params.length ? params : [true];
  }

  if (date.installed && this._isADateRule(rule.name)) {
    var dateFormat = this._getDateFormat(field.rules);
    if (rule.name !== 'date_format') {
      params.push(dateFormat);
    }
  }

  var result = validator(value, params);

  // If it is a promise.
  if (isCallable(result.then)) {
    return result.then(function (values) {
      var allValid = true;
      var data = {};
      if (Array.isArray(values)) {
        allValid = values.every(function (t) { return (isObject(t) ? t.valid : t); });
      } else { // Is a single object/boolean.
        allValid = isObject(values) ? values.valid : values;
        data = values.data;
      }

      if (! allValid) {
        this$1.errors.add({
          id: field.id,
          field: field.name,
          msg: this$1._formatErrorMessage(field, rule, data),
          rule: rule.name,
          scope: field.scope
        });
      }

      return allValid;
    });
  }

  if (! isObject(result)) {
    result = { valid: result, data: {} };
  }

  if (! result.valid) {
    this.errors.add({
      id: field.id,
      field: field.name,
      msg: this._formatErrorMessage(field, rule, result.data),
      rule: rule.name,
      scope: field.scope
    });
  }

  return result.valid;
};

/**
 * Registers a field to be validated.
 *
 * @param{Field|Object} name The field name.
 * @return {Field}
 */
Validator.prototype.attach = function attach (field) {
  // deprecate: handle old signature.
  if (arguments.length > 1) {
    field = assign({}, {
      name: arguments[0],
      rules: arguments[1]
    }, arguments[2] || { vm: { $validator: this } });
  }

  if (!(field instanceof Field)) {
    field = new Field(field.el || null, field);
  }

  this.fields.push(field);
  // validate if initial.
  if (field.initial) {
    this.validate(("#" + (field.id)), field.value);
  }
  if (!field.scope) {
    this.fieldBag = assign({}, this.fieldBag, ( obj = {}, obj[("" + (field.name))] = field.flags, obj ));
      var obj;
    return field;
  }

  var scopeObj = assign({}, this.fieldBag[("$" + (field.scope))] || {}, ( obj$1 = {}, obj$1[("" + (field.name))] = field.flags, obj$1 ));
    var obj$1;
  this.fieldBag = assign({}, this.fieldBag, ( obj$2 = {}, obj$2[("$" + (field.scope))] = scopeObj, obj$2 ));
    var obj$2;

  return field;
};

/**
 * Sets the flags on a field.
 *
 * @param {String} name
 * @param {Object} flags
 */
Validator.prototype.flag = function flag (name, flags) {
  var field = this._resolveField(name);
  if (! field) {
    return;
  }

  Object.keys(field.flags).forEach(function (flag) {
    field.flags[flag] = flags[flag] !== undefined ? flags[flag] : field.flags[flag];
  });
  if (field.classes) {
    field.updateClasses();
  }
};

/**
 * Removes a field from the validator.
 *
 * @param{String} name The name of the field.
 * @param {String} scope The name of the field scope.
 */
Validator.prototype.detach = function detach (name, scope) {
  var field = name instanceof Field ? name : this._resolveField(name, scope);
  if (field) {
    field.destroy();
    this.errors.removeById(field.id);
    this.fields.remove(field);
  }
};

/**
 * Adds a custom validator to the list of validation rules.
 *
 * @param{string} name The name of the validator.
 * @param{object|function} validator The validator object/function.
 */
Validator.prototype.extend = function extend (name, validator) {
  Validator.extend(name, validator);
};

/**
 * Just an alias to the static method for convienece.
 */
Validator.prototype.installDateTimeValidators = function installDateTimeValidators (moment) {
  Validator.installDateTimeValidators(moment);
};

/**
 * Removes a rule from the list of validators.
 * @param {String} name The name of the validator/rule.
 */
Validator.prototype.remove = function remove (name) {
  Validator.remove(name);
};

/**
 * Sets the validator current langauge.
 *
 * @param {string} language locale or language id.
 */
Validator.prototype.setLocale = function setLocale (language) {
  /* istanbul ignore if */
  if (! this.dictionary.hasLocale(language)) {
    // eslint-disable-next-line
    warn('You are setting the validator locale to a locale that is not defined in the dicitionary. English messages may still be generated.');
  }

  LOCALE = language;
};

/**
 * Updates the messages dicitionary, overwriting existing values and adding new ones.
 *
 * @param{object} data The messages object.
 */
Validator.prototype.updateDictionary = function updateDictionary (data) {
  Validator.updateDictionary(data);
};

/**
 * Tries different strategies to find a field.
 * @param {String} name
 * @param {String} scope
 * @return {Field}
 */
Validator.prototype._resolveField = function _resolveField (name, scope) {
  if (scope) {
    return this.fields.find({ name: name, scope: scope });
  }

  if (name[0] === '#') {
    return this.fields.find({ id: name.slice(1) });
  }

  if (name.indexOf('.') > -1) {
    var parts = name.split('.');
    var field = this.fields.find({ name: parts[1], scope: parts[0] });
    if (field) {
      return field;
    }
  }

  return this.fields.find({ name: name, scope: null });
};

/**
 * Handles when a field is not found depending on the strict flag.
 *
 * @param {String} name
 * @param {String} scope
 */
Validator.prototype._handleFieldNotFound = function _handleFieldNotFound (name, scope) {
  if (! this.strict) { return Promise.resolve(true); }

  var fullName = scope ? name : ("" + (scope ? scope + '.' : '') + name);
  throw createError(
    ("Validating a non-existant field: \"" + fullName + "\". Use \"attach()\" first.")
  );
};

/**
 * Starts the validation process.
 *
 * @param {Field} field
 * @param {Promise} value
 */
Validator.prototype._validate = function _validate (field, value) {
    var this$1 = this;

  if (! field.isRequired && ~[null, undefined, ''].indexOf(value)) {
    return Promise.resolve(true);
  }

  var promises = [];
  var isExitEarly = false;
  // use of '.some()' is to break iteration in middle by returning true
  Object.keys(field.rules).some(function (rule) {
    var result = this$1._test(
      field,
      value,
      { name: rule, params: field.rules[rule] }
    );

    if (isCallable(result.then)) {
      promises.push(result);
    } else if (this$1.fastExit && !result) {
      isExitEarly = true;
    } else {
      var resultAsPromise = new Promise(function (resolve) {
        resolve(result);
      });
      promises.push(resultAsPromise);
    }

    return isExitEarly;
  });

  if (isExitEarly) { return Promise.resolve(false); }

  return Promise.all(promises).then(function (values) {
    var valid = values.every(function (t) { return t; });
    return valid;
  });
};

/**
 * Validates a value against a registered field validations.
 *
 * @param{string} name the field name.
 * @param{*} value The value to be validated.
 * @param {String} scope The scope of the field.
 * @return {Promise}
 */
Validator.prototype.validate = function validate (name, value, scope) {
    if ( scope === void 0 ) scope = null;

  if (this.paused) { return Promise.resolve(true); }

  // overload to validate all.
  if (arguments.length === 0) {
    return this.validateScopes();
  }

  // overload to validate scopeless fields.
  if (arguments.length === 1 && arguments[0] === '*') {
    return this.validateAll();
  }

  // overload to validate a scope.
  if (arguments.length === 1 && typeof arguments[0] === 'string' && /^(.+)\.\*$/.test(arguments[0])) {
    var matched = arguments[0].match(/^(.+)\.\*$/)[1];
    return this.validateAll(matched);
  }

  var field = this._resolveField(name, scope);
  if (!field) {
    return this._handleFieldNotFound(name, scope);
  }
  this.errors.removeById(field.id);
  if (field.isDisabled) {
    return Promise.resolve(true);
  }
  field.flags.pending = true;
  if (arguments.length === 1) {
    value = field.value;
  }

  return this._validate(field, value).then(function (result) {
    field.flags.pending = false;
    field.flags.valid = result;
    field.flags.invalid = !result;
    field.flags.validated = true;
    field.updateAriaAttrs();
    field.updateCustomValidity();
    field.updateClasses();

    return result;
  });
};

/**
 * Pauses the validator.
 *
 * @return {Validator}
 */
Validator.prototype.pause = function pause () {
  this.paused = true;

  return this;
};

/**
 * Resumes the validator.
 *
 * @return {Validator}
 */
Validator.prototype.resume = function resume () {
  this.paused = false;

  return this;
};

/**
 * Validates each value against the corresponding field validations.
 * @param{Object|String} values The values to be validated.
 * @return {Promise} Returns a promise with the validation result.
 */
Validator.prototype.validateAll = function validateAll (values) {
    var arguments$1 = arguments;
    var this$1 = this;

  if (this.paused) { return Promise.resolve(true); }

  var matcher = null;
  var providedValues = false;

  if (typeof values === 'string') {
    matcher = { scope: values };
  } else if (isObject(values)) {
    matcher = Object.keys(values).map(function (key) {
      return { name: key, scope: arguments$1[1] || null };
    });
    providedValues = true;
  } else if (arguments.length === 0) {
    matcher = { scope: null }; // global scope.
  }

  var promises = this.fields.filter(matcher).map(function (field) { return this$1.validate(
    ("#" + (field.id)),
    providedValues ? values[field.name] : field.value
  ); });

  return Promise.all(promises).then(function (results) { return results.every(function (t) { return t; }); });
};

/**
 * Validates all scopes.
 *
 * @returns {Promise} All promises resulted from each scope.
 */
Validator.prototype.validateScopes = function validateScopes () {
    var this$1 = this;

  if (this.paused) { return Promise.resolve(true); }

  var promises = this.fields.map(function (field) { return this$1.validate(
    ("#" + (field.id)),
    field.value
  ); });

  return Promise.all(promises).then(function (results) { return results.every(function (t) { return t; }); });
};

Object.defineProperties( Validator.prototype, prototypeAccessors );
Object.defineProperties( Validator, staticAccessors );

/**
 * Checks if a parent validator instance was requested.
 * @param {Object|Array} injections
 */
var requestsValidator = function (injections) {
  if (! injections) {
    return false;
  }

  /* istanbul ignore next */
  if (Array.isArray(injections) && ~injections.indexOf('$validator')) {
    return true;
  }

  if (isObject(injections) && injections.$validator) {
    return true;
  }

  return false;
};

/**
 * Creates a validator instance.
 * @param {Vue} vm
 * @param {Object} options
 */
var createValidator = function (vm, options) { return new Validator(null, {
  init: false,
  vm: vm,
  fastExit: options.fastExit
}); };

var makeMixin = function (Vue, options) {
  if ( options === void 0 ) options = {};

  var mixin = {};
  mixin.provide = function providesValidator () {
    if (this.$validator) {
      return {
        $validator: this.$validator
      };
    }

    return {};
  };

  mixin.beforeCreate = function beforeCreate () {
    // if its a root instance, inject anyways, or if it requested a new instance.
    if (this.$options.$validates || !this.$parent) {
      this.$validator = createValidator(this, options);
    }

    var requested = requestsValidator(this.$options.inject);

    // if automatic injection is enabled and no instance was requested.
    if (! this.$validator && options.inject && !requested) {
      this.$validator = createValidator(this, options);
    }

    // don't inject errors or fieldBag as no validator was resolved.
    if (! requested && ! this.$validator) {
      return;
    }

    // There is a validator but it isn't injected, mark as reactive.
    if (! requested && this.$validator) {
      Vue.util.defineReactive(this.$validator, 'errors', this.$validator.errors);
      Vue.util.defineReactive(this.$validator, 'fieldBag', this.$validator.fieldBag);
    }

    if (! this.$options.computed) {
      this.$options.computed = {};
    }

    this.$options.computed[options.errorBagName || 'errors'] = function errorBagGetter () {
      return this.$validator.errors;
    };
    this.$options.computed[options.fieldsBagName || 'fields'] = function fieldBagGetter () {
      return this.$validator.fieldBag;
    };
  };

  mixin.beforeDestroy = function beforeDestroy () {
    // mark the validator paused to prevent delayed validation.
    if (this.$validator && this.$validator.ownerId === this._uid && isCallable(this.$validator.pause)) {
      this.$validator.pause();
    }
  };

  return mixin;
};

var config = {
  locale: 'en',
  delay: 0,
  errorBagName: 'errors',
  dictionary: null,
  strict: true,
  fieldsBagName: 'fields',
  classes: false,
  classNames: undefined,
  events: 'input|blur',
  inject: true,
  fastExit: true,
  aria: true,
  validity: true
};

/**
 * 
 * 
 * Finds the requested field by id from the context object.
 * @param {Object} context
 * @return {Field|null}
 */
var findField = function (el, context) {
  if (!context || !context.$validator) {
    return null;
  }

  return context.$validator.fields.find({ id: getDataAttribute(el, 'id') });
};

var createDirective = function (options) {
  options = assign({}, config, options);

  return {
    bind: function bind (el, binding, vnode) {
      var validator = vnode.context.$validator;
      if (! validator) {
        warn("No validator instance is present on vm, did you forget to inject '$validator'?");
        return;
      }
      var fieldOptions = Generator.generate(el, binding, vnode, options);
      validator.attach(fieldOptions);
    },
    inserted: function (el, binding, vnode) {
      var field = findField(el, vnode.context);
      var scope = Generator.resolveScope(el, binding, vnode);

      // skip if scope hasn't changed.
      if (!field || scope === field.scope) { return; }

      // only update scope.
      field.update({ scope: scope });

      // allows the field to re-evaluated once more in the update hook.
      field.updated = false;
    },
    update: function (el, binding, vnode) {
      var field = findField(el, vnode.context);

      // make sure we don't do uneccessary work if no important change was done.
      if (!field || (field.updated && isEqual(binding.value, binding.oldValue))) { return; }
      var scope = Generator.resolveScope(el, binding, vnode);
      var rules = Generator.resolveRules(el, binding);

      field.update({
        scope: scope,
        rules: rules
      });
    },
    unbind: function unbind (el, binding, ref) {
      var context = ref.context;

      var field = findField(el, context);
      if (!field) { return; }

      context.$validator.detach(field);
    }
  };
};

var normalize = function (fields) {
  if (Array.isArray(fields)) {
    return fields.reduce(function (prev, curr) {
      if (~curr.indexOf('.')) {
        prev[curr.split('.')[1]] = curr;
      } else {
        prev[curr] = curr;
      }

      return prev;
    }, {});
  }

  return fields;
};

/**
 * Maps fields to computed functions.
 *
 * @param {Array|Object} fields
 */
var mapFields = function (fields) {
  var normalized = normalize(fields);
  return Object.keys(normalized).reduce(function (prev, curr) {
    var field = normalized[curr];
    prev[curr] = function mappedField () {
      if (this.$validator.fieldBag[field]) {
        return this.$validator.fieldBag[field];
      }

      var index = field.indexOf('.');
      if (index <= 0) {
        return {};
      }
      var ref = field.split('.');
      var scope = ref[0];
      var name = ref[1];

      return getPath(("$" + scope + "." + name), this.$validator.fieldBag, {});
    };

    return prev;
  }, {});
};

var Vue;

var install = function (_Vue, options) {
  if (Vue) {
    warn('already installed, Vue.use(VeeValidate) should only be called once.');
    return;
  }

  Vue = _Vue;
  var config$$1 = assign({}, config, options);
  if (config$$1.dictionary) {
    Validator.updateDictionary(config$$1.dictionary);
  }

  Validator.setLocale(config$$1.locale);
  Validator.setStrictMode(config$$1.strict);

  Vue.mixin(makeMixin(Vue, config$$1));
  Vue.directive('validate', createDirective(config$$1));
};

var index = {
  install: install,
  mapFields: mapFields,
  Validator: Validator,
  ErrorBag: ErrorBag,
  Rules: Rules,
  version: '2.0.0-rc.13'
};

return index;

})));


/***/ }),
/* 97 */
/***/ (function(module, exports, __webpack_require__) {

var Cookie, browser_store, bs, e, router, test;

browser_store = bs = function (method) {
  var db;
  db = bs[method];
  return {
    init: function (key) {
      return JSON.parse(db.getItem(key));
    },
    pack: function (computed, key, val) {
      return computed[key] = {
        get: function () {
          return this.$data.$browser[key].value || val;
        },
        set: function (val) {
          if (val != null) {
            db.setItem(key, JSON.stringify(val));
          } else {
            db.removeItem(key);
          }
          return this.$data.$browser[key].value = val;
        }
      };
    }
  };
};

router = function (method, store) {
  return {
    init: function (key) {
      return null;
    },
    pack: function (computed, key, val) {
      return computed[key] = {
        get: function () {
          return this.$route[store][key] || val;
        },
        set: function (val) {
          var hash, name, o, params, query, to;
          o = {};
          o[key] = val;
          ({ name, params, query, hash } = this.$route);
          to = { name, params, query, hash };
          to[store] = Object.assign({}, to[store], o);
          return this.$router[method](to);
        }
      };
    }
  };
};

try {
  test = '__vue-localstorage-test__';
  Cookie = __webpack_require__(293);
  bs.cookie = {
    getItem: function (key) {
      var ref;
      return (ref = Cookie.get(key)) != null ? ref : null;
    },
    setItem: function (key, s) {
      return Cookie.set(key, s, {
        expires: '1M'
      });
    },
    removeItem: function (key) {
      return Cookie.remove(key);
    }
  };
  bs.cookie.setItem(test, test);
  bs.cookie.removeItem(test);
  bs.local = window.localStorage;
  bs.local.setItem(test, test);
  bs.local.removeItem(test);
  bs.session = window.sessionStorage;
  bs.session.setItem(test, test);
  bs.session.removeItem(test);
} catch (error) {
  e = error;
  console.error('Local storage not supported by this browser');
  bs.cookie = bs.local = bs.session = {
    _data: {},
    getItem: function (key) {
      var ref;
      return (ref = this._data[key]) != null ? ref : null;
    },
    setItem: function (key, s) {
      return this._data[key] = s;
    },
    removeItem: function (key) {
      return delete this._data[key];
    }
  };
}

module.exports = function (args1) {
  var $browser, args2, args3, cb, computed, created, data, key, method, pack, store, val, watch;
  $browser = {};
  computed = {};
  watch = {};
  cb = args1.watch;
  created = function () {
    var key, ref, results, val;
    if (cb) {
      ref = this.$data.$browser;
      results = [];
      for (key in ref) {
        val = ref[key];
        results.push(cb.call(this, this[key], key));
      }
      return results;
    }
  };
  data = function () {
    return { $browser };
  };
  pack = function (setter, key, value) {
    var ref, type;
    type = value.constructor;
    value = (ref = setter.init(key)) != null ? ref : value;
    setter.pack(computed, key, value);
    $browser[key] = { value, type };
    if (cb) {
      return watch[key] = function (newVal, oldVal) {
        return this.$nextTick(function () {
          return cb.call(this, newVal, key);
        });
      };
    }
  };
  for (method in args1) {
    args2 = args1[method];
    switch (method) {
      case "replace":
      case "push":
        for (store in args2) {
          args3 = args2[store];
          for (key in args3) {
            val = args3[key];
            pack(router(method, store), key, val);
          }
        }
        break;
      case "cookie":
      case "local":
      case "session":
        for (key in args2) {
          val = args2[key];
          pack(browser_store(method), key, val);
        }
    }
  }
  return { data, watch, computed, created };
};

/***/ }),
/* 98 */,
/* 99 */
/***/ (function(module, exports, __webpack_require__) {

var map = {
	"./font-large.styl.use": 284,
	"./font-novel.styl.use": 285,
	"./font-small.styl.use": 286,
	"./font-std.styl.use": 287,
	"./theme-cinema.styl.use": 288,
	"./theme-moon.styl.use": 289,
	"./theme-night.styl.use": 290,
	"./theme-star.styl.use": 291,
	"./theme-wa.styl.use": 292
};
function webpackContext(req) {
	return __webpack_require__(webpackContextResolve(req));
};
function webpackContextResolve(req) {
	var id = map[req];
	if(!(id + 1)) // check for number or string
		throw new Error("Cannot find module '" + req + "'.");
	return id;
};
webpackContext.keys = function webpackContextKeys() {
	return Object.keys(map);
};
webpackContext.resolve = webpackContextResolve;
module.exports = webpackContext;
webpackContext.id = 99;

/***/ }),
/* 100 */
/***/ (function(module, exports, __webpack_require__) {

var map = {
	"./btn.vue": 300,
	"./chat-foot.vue": 301,
	"./chat-head.vue": 302,
	"./chat.vue": 19,
	"./check.vue": 303,
	"./current.vue": 304,
	"./hide.vue": 305,
	"./layout-footer.vue": 306,
	"./layout-header.vue": 307,
	"./mentions.vue": 308,
	"./modes.vue": 309,
	"./monaco-editor.vue": 310,
	"./myself.vue": 311,
	"./phases.vue": 312,
	"./portrate.vue": 313,
	"./post.vue": 314,
	"./potofs.vue": 315,
	"./report.vue": 316,
	"./scroll-mine.vue": 317,
	"./tag.vue": 91,
	"./tags.vue": 318,
	"./talk.vue": 319,
	"./text-editor.vue": 320,
	"./timeago.vue": 321,
	"./timerange.vue": 322,
	"./toc.vue": 323,
	"./tr-intro-chat.vue": 324,
	"./welcome.vue": 325,
	"./writeframe.vue": 326
};
function webpackContext(req) {
	return __webpack_require__(webpackContextResolve(req));
};
function webpackContextResolve(req) {
	var id = map[req];
	if(!(id + 1)) // check for number or string
		throw new Error("Cannot find module '" + req + "'.");
	return id;
};
webpackContext.keys = function webpackContextKeys() {
	return Object.keys(map);
};
webpackContext.resolve = webpackContextResolve;
module.exports = webpackContext;
webpackContext.id = 100;

/***/ }),
/* 101 */,
/* 102 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(9);
var bind = __webpack_require__(69);
var Axios = __webpack_require__(104);
var defaults = __webpack_require__(39);

/**
 * Create an instance of Axios
 *
 * @param {Object} defaultConfig The default config for the instance
 * @return {Axios} A new instance of Axios
 */
function createInstance(defaultConfig) {
  var context = new Axios(defaultConfig);
  var instance = bind(Axios.prototype.request, context);

  // Copy axios.prototype to instance
  utils.extend(instance, Axios.prototype, context);

  // Copy context to instance
  utils.extend(instance, context);

  return instance;
}

// Create the default instance to be exported
var axios = createInstance(defaults);

// Expose Axios class to allow class inheritance
axios.Axios = Axios;

// Factory for creating new instances
axios.create = function create(instanceConfig) {
  return createInstance(utils.merge(defaults, instanceConfig));
};

// Expose Cancel & CancelToken
axios.Cancel = __webpack_require__(66);
axios.CancelToken = __webpack_require__(103);
axios.isCancel = __webpack_require__(67);

// Expose all/spread
axios.all = function all(promises) {
  return Promise.all(promises);
};
axios.spread = __webpack_require__(118);

module.exports = axios;

// Allow use of default import syntax in TypeScript
module.exports.default = axios;


/***/ }),
/* 103 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var Cancel = __webpack_require__(66);

/**
 * A `CancelToken` is an object that can be used to request cancellation of an operation.
 *
 * @class
 * @param {Function} executor The executor function.
 */
function CancelToken(executor) {
  if (typeof executor !== 'function') {
    throw new TypeError('executor must be a function.');
  }

  var resolvePromise;
  this.promise = new Promise(function promiseExecutor(resolve) {
    resolvePromise = resolve;
  });

  var token = this;
  executor(function cancel(message) {
    if (token.reason) {
      // Cancellation has already been requested
      return;
    }

    token.reason = new Cancel(message);
    resolvePromise(token.reason);
  });
}

/**
 * Throws a `Cancel` if cancellation has been requested.
 */
CancelToken.prototype.throwIfRequested = function throwIfRequested() {
  if (this.reason) {
    throw this.reason;
  }
};

/**
 * Returns an object that contains a new `CancelToken` and a function that, when called,
 * cancels the `CancelToken`.
 */
CancelToken.source = function source() {
  var cancel;
  var token = new CancelToken(function executor(c) {
    cancel = c;
  });
  return {
    token: token,
    cancel: cancel
  };
};

module.exports = CancelToken;


/***/ }),
/* 104 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var defaults = __webpack_require__(39);
var utils = __webpack_require__(9);
var InterceptorManager = __webpack_require__(105);
var dispatchRequest = __webpack_require__(106);
var isAbsoluteURL = __webpack_require__(114);
var combineURLs = __webpack_require__(112);

/**
 * Create a new instance of Axios
 *
 * @param {Object} instanceConfig The default config for the instance
 */
function Axios(instanceConfig) {
  this.defaults = instanceConfig;
  this.interceptors = {
    request: new InterceptorManager(),
    response: new InterceptorManager()
  };
}

/**
 * Dispatch a request
 *
 * @param {Object} config The config specific for this request (merged with this.defaults)
 */
Axios.prototype.request = function request(config) {
  /*eslint no-param-reassign:0*/
  // Allow for axios('example/url'[, config]) a la fetch API
  if (typeof config === 'string') {
    config = utils.merge({
      url: arguments[0]
    }, arguments[1]);
  }

  config = utils.merge(defaults, this.defaults, { method: 'get' }, config);
  config.method = config.method.toLowerCase();

  // Support baseURL config
  if (config.baseURL && !isAbsoluteURL(config.url)) {
    config.url = combineURLs(config.baseURL, config.url);
  }

  // Hook up interceptors middleware
  var chain = [dispatchRequest, undefined];
  var promise = Promise.resolve(config);

  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {
    chain.unshift(interceptor.fulfilled, interceptor.rejected);
  });

  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {
    chain.push(interceptor.fulfilled, interceptor.rejected);
  });

  while (chain.length) {
    promise = promise.then(chain.shift(), chain.shift());
  }

  return promise;
};

// Provide aliases for supported request methods
utils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {
  /*eslint func-names:0*/
  Axios.prototype[method] = function(url, config) {
    return this.request(utils.merge(config || {}, {
      method: method,
      url: url
    }));
  };
});

utils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {
  /*eslint func-names:0*/
  Axios.prototype[method] = function(url, data, config) {
    return this.request(utils.merge(config || {}, {
      method: method,
      url: url,
      data: data
    }));
  };
});

module.exports = Axios;


/***/ }),
/* 105 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(9);

function InterceptorManager() {
  this.handlers = [];
}

/**
 * Add a new interceptor to the stack
 *
 * @param {Function} fulfilled The function to handle `then` for a `Promise`
 * @param {Function} rejected The function to handle `reject` for a `Promise`
 *
 * @return {Number} An ID used to remove interceptor later
 */
InterceptorManager.prototype.use = function use(fulfilled, rejected) {
  this.handlers.push({
    fulfilled: fulfilled,
    rejected: rejected
  });
  return this.handlers.length - 1;
};

/**
 * Remove an interceptor from the stack
 *
 * @param {Number} id The ID that was returned by `use`
 */
InterceptorManager.prototype.eject = function eject(id) {
  if (this.handlers[id]) {
    this.handlers[id] = null;
  }
};

/**
 * Iterate over all the registered interceptors
 *
 * This method is particularly useful for skipping over any
 * interceptors that may have become `null` calling `eject`.
 *
 * @param {Function} fn The function to call for each interceptor
 */
InterceptorManager.prototype.forEach = function forEach(fn) {
  utils.forEach(this.handlers, function forEachHandler(h) {
    if (h !== null) {
      fn(h);
    }
  });
};

module.exports = InterceptorManager;


/***/ }),
/* 106 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(9);
var transformData = __webpack_require__(109);
var isCancel = __webpack_require__(67);
var defaults = __webpack_require__(39);

/**
 * Throws a `Cancel` if cancellation has been requested.
 */
function throwIfCancellationRequested(config) {
  if (config.cancelToken) {
    config.cancelToken.throwIfRequested();
  }
}

/**
 * Dispatch a request to the server using the configured adapter.
 *
 * @param {object} config The config that is to be used for the request
 * @returns {Promise} The Promise to be fulfilled
 */
module.exports = function dispatchRequest(config) {
  throwIfCancellationRequested(config);

  // Ensure headers exist
  config.headers = config.headers || {};

  // Transform request data
  config.data = transformData(
    config.data,
    config.headers,
    config.transformRequest
  );

  // Flatten headers
  config.headers = utils.merge(
    config.headers.common || {},
    config.headers[config.method] || {},
    config.headers || {}
  );

  utils.forEach(
    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],
    function cleanHeaderConfig(method) {
      delete config.headers[method];
    }
  );

  var adapter = config.adapter || defaults.adapter;

  return adapter(config).then(function onAdapterResolution(response) {
    throwIfCancellationRequested(config);

    // Transform response data
    response.data = transformData(
      response.data,
      response.headers,
      config.transformResponse
    );

    return response;
  }, function onAdapterRejection(reason) {
    if (!isCancel(reason)) {
      throwIfCancellationRequested(config);

      // Transform response data
      if (reason && reason.response) {
        reason.response.data = transformData(
          reason.response.data,
          reason.response.headers,
          config.transformResponse
        );
      }
    }

    return Promise.reject(reason);
  });
};


/***/ }),
/* 107 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Update an Error with the specified config, error code, and response.
 *
 * @param {Error} error The error to update.
 * @param {Object} config The config.
 * @param {string} [code] The error code (for example, 'ECONNABORTED').
 * @param {Object} [request] The request.
 * @param {Object} [response] The response.
 * @returns {Error} The error.
 */
module.exports = function enhanceError(error, config, code, request, response) {
  error.config = config;
  if (code) {
    error.code = code;
  }
  error.request = request;
  error.response = response;
  return error;
};


/***/ }),
/* 108 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var createError = __webpack_require__(68);

/**
 * Resolve or reject a Promise based on response status.
 *
 * @param {Function} resolve A function that resolves the promise.
 * @param {Function} reject A function that rejects the promise.
 * @param {object} response The response.
 */
module.exports = function settle(resolve, reject, response) {
  var validateStatus = response.config.validateStatus;
  // Note: status is not exposed by XDomainRequest
  if (!response.status || !validateStatus || validateStatus(response.status)) {
    resolve(response);
  } else {
    reject(createError(
      'Request failed with status code ' + response.status,
      response.config,
      null,
      response.request,
      response
    ));
  }
};


/***/ }),
/* 109 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(9);

/**
 * Transform the data for a request or a response
 *
 * @param {Object|String} data The data to be transformed
 * @param {Array} headers The headers for the request or response
 * @param {Array|Function} fns A single function or Array of functions
 * @returns {*} The resulting transformed data
 */
module.exports = function transformData(data, headers, fns) {
  /*eslint no-param-reassign:0*/
  utils.forEach(fns, function transform(fn) {
    data = fn(data, headers);
  });

  return data;
};


/***/ }),
/* 110 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


// btoa polyfill for IE<10 courtesy https://github.com/davidchambers/Base64.js

var chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';

function E() {
  this.message = 'String contains an invalid character';
}
E.prototype = new Error;
E.prototype.code = 5;
E.prototype.name = 'InvalidCharacterError';

function btoa(input) {
  var str = String(input);
  var output = '';
  for (
    // initialize result and counter
    var block, charCode, idx = 0, map = chars;
    // if the next str index does not exist:
    //   change the mapping table to "="
    //   check if d has no fractional digits
    str.charAt(idx | 0) || (map = '=', idx % 1);
    // "8 - idx % 1 * 8" generates the sequence 2, 4, 6, 8
    output += map.charAt(63 & block >> 8 - idx % 1 * 8)
  ) {
    charCode = str.charCodeAt(idx += 3 / 4);
    if (charCode > 0xFF) {
      throw new E();
    }
    block = block << 8 | charCode;
  }
  return output;
}

module.exports = btoa;


/***/ }),
/* 111 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(9);

function encode(val) {
  return encodeURIComponent(val).
    replace(/%40/gi, '@').
    replace(/%3A/gi, ':').
    replace(/%24/g, '$').
    replace(/%2C/gi, ',').
    replace(/%20/g, '+').
    replace(/%5B/gi, '[').
    replace(/%5D/gi, ']');
}

/**
 * Build a URL by appending params to the end
 *
 * @param {string} url The base of the url (e.g., http://www.google.com)
 * @param {object} [params] The params to be appended
 * @returns {string} The formatted url
 */
module.exports = function buildURL(url, params, paramsSerializer) {
  /*eslint no-param-reassign:0*/
  if (!params) {
    return url;
  }

  var serializedParams;
  if (paramsSerializer) {
    serializedParams = paramsSerializer(params);
  } else if (utils.isURLSearchParams(params)) {
    serializedParams = params.toString();
  } else {
    var parts = [];

    utils.forEach(params, function serialize(val, key) {
      if (val === null || typeof val === 'undefined') {
        return;
      }

      if (utils.isArray(val)) {
        key = key + '[]';
      }

      if (!utils.isArray(val)) {
        val = [val];
      }

      utils.forEach(val, function parseValue(v) {
        if (utils.isDate(v)) {
          v = v.toISOString();
        } else if (utils.isObject(v)) {
          v = JSON.stringify(v);
        }
        parts.push(encode(key) + '=' + encode(v));
      });
    });

    serializedParams = parts.join('&');
  }

  if (serializedParams) {
    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;
  }

  return url;
};


/***/ }),
/* 112 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Creates a new URL by combining the specified URLs
 *
 * @param {string} baseURL The base URL
 * @param {string} relativeURL The relative URL
 * @returns {string} The combined URL
 */
module.exports = function combineURLs(baseURL, relativeURL) {
  return relativeURL
    ? baseURL.replace(/\/+$/, '') + '/' + relativeURL.replace(/^\/+/, '')
    : baseURL;
};


/***/ }),
/* 113 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(9);

module.exports = (
  utils.isStandardBrowserEnv() ?

  // Standard browser envs support document.cookie
  (function standardBrowserEnv() {
    return {
      write: function write(name, value, expires, path, domain, secure) {
        var cookie = [];
        cookie.push(name + '=' + encodeURIComponent(value));

        if (utils.isNumber(expires)) {
          cookie.push('expires=' + new Date(expires).toGMTString());
        }

        if (utils.isString(path)) {
          cookie.push('path=' + path);
        }

        if (utils.isString(domain)) {
          cookie.push('domain=' + domain);
        }

        if (secure === true) {
          cookie.push('secure');
        }

        document.cookie = cookie.join('; ');
      },

      read: function read(name) {
        var match = document.cookie.match(new RegExp('(^|;\\s*)(' + name + ')=([^;]*)'));
        return (match ? decodeURIComponent(match[3]) : null);
      },

      remove: function remove(name) {
        this.write(name, '', Date.now() - 86400000);
      }
    };
  })() :

  // Non standard browser env (web workers, react-native) lack needed support.
  (function nonStandardBrowserEnv() {
    return {
      write: function write() {},
      read: function read() { return null; },
      remove: function remove() {}
    };
  })()
);


/***/ }),
/* 114 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Determines whether the specified URL is absolute
 *
 * @param {string} url The URL to test
 * @returns {boolean} True if the specified URL is absolute, otherwise false
 */
module.exports = function isAbsoluteURL(url) {
  // A URL is considered absolute if it begins with "<scheme>://" or "//" (protocol-relative URL).
  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed
  // by any combination of letters, digits, plus, period, or hyphen.
  return /^([a-z][a-z\d\+\-\.]*:)?\/\//i.test(url);
};


/***/ }),
/* 115 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(9);

module.exports = (
  utils.isStandardBrowserEnv() ?

  // Standard browser envs have full support of the APIs needed to test
  // whether the request URL is of the same origin as current location.
  (function standardBrowserEnv() {
    var msie = /(msie|trident)/i.test(navigator.userAgent);
    var urlParsingNode = document.createElement('a');
    var originURL;

    /**
    * Parse a URL to discover it's components
    *
    * @param {String} url The URL to be parsed
    * @returns {Object}
    */
    function resolveURL(url) {
      var href = url;

      if (msie) {
        // IE needs attribute set twice to normalize properties
        urlParsingNode.setAttribute('href', href);
        href = urlParsingNode.href;
      }

      urlParsingNode.setAttribute('href', href);

      // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils
      return {
        href: urlParsingNode.href,
        protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',
        host: urlParsingNode.host,
        search: urlParsingNode.search ? urlParsingNode.search.replace(/^\?/, '') : '',
        hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',
        hostname: urlParsingNode.hostname,
        port: urlParsingNode.port,
        pathname: (urlParsingNode.pathname.charAt(0) === '/') ?
                  urlParsingNode.pathname :
                  '/' + urlParsingNode.pathname
      };
    }

    originURL = resolveURL(window.location.href);

    /**
    * Determine if a URL shares the same origin as the current location
    *
    * @param {String} requestURL The URL to test
    * @returns {boolean} True if URL shares the same origin, otherwise false
    */
    return function isURLSameOrigin(requestURL) {
      var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;
      return (parsed.protocol === originURL.protocol &&
            parsed.host === originURL.host);
    };
  })() :

  // Non standard browser envs (web workers, react-native) lack needed support.
  (function nonStandardBrowserEnv() {
    return function isURLSameOrigin() {
      return true;
    };
  })()
);


/***/ }),
/* 116 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(9);

module.exports = function normalizeHeaderName(headers, normalizedName) {
  utils.forEach(headers, function processHeader(value, name) {
    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {
      headers[normalizedName] = value;
      delete headers[name];
    }
  });
};


/***/ }),
/* 117 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(9);

/**
 * Parse headers into an object
 *
 * ```
 * Date: Wed, 27 Aug 2014 08:58:49 GMT
 * Content-Type: application/json
 * Connection: keep-alive
 * Transfer-Encoding: chunked
 * ```
 *
 * @param {String} headers Headers needing to be parsed
 * @returns {Object} Headers parsed into an object
 */
module.exports = function parseHeaders(headers) {
  var parsed = {};
  var key;
  var val;
  var i;

  if (!headers) { return parsed; }

  utils.forEach(headers.split('\n'), function parser(line) {
    i = line.indexOf(':');
    key = utils.trim(line.substr(0, i)).toLowerCase();
    val = utils.trim(line.substr(i + 1));

    if (key) {
      parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;
    }
  });

  return parsed;
};


/***/ }),
/* 118 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Syntactic sugar for invoking a function and expanding an array for arguments.
 *
 * Common use case would be to use `Function.prototype.apply`.
 *
 *  ```js
 *  function f(x, y, z) {}
 *  var args = [1, 2, 3];
 *  f.apply(null, args);
 *  ```
 *
 * With `spread` this example can be re-written.
 *
 *  ```js
 *  spread(function(x, y, z) {})([1, 2, 3]);
 *  ```
 *
 * @param {Function} callback
 * @returns {Function}
 */
module.exports = function spread(callback) {
  return function wrap(arr) {
    return callback.apply(null, arr);
  };
};


/***/ }),
/* 119 */,
/* 120 */,
/* 121 */,
/* 122 */,
/* 123 */,
/* 124 */,
/* 125 */,
/* 126 */,
/* 127 */,
/* 128 */,
/* 129 */,
/* 130 */
/***/ (function(module, exports, __webpack_require__) {

var Finder, Map, Mem, Model, Query, Rule, Set, _, rename;

_ = __webpack_require__(7);

Mem = __webpack_require__(12);

Finder = __webpack_require__(70);

Query = __webpack_require__(40);

Model = __webpack_require__(72);

Set = __webpack_require__(73);

Map = __webpack_require__(71);

Mem.Name = {};

rename = function (base) {
  var depends, deploys, id, ids, list, name;
  name = Mem.Name[base];
  if (name) {
    return name;
  }
  id = `${base}_id`;
  ids = `${base}_ids`;
  list = `${base}s`;
  deploys = [];
  depends = [];
  return Mem.Name[base] = { id, ids, list, base, deploys, depends };
};

module.exports = Rule = class Rule {
  constructor(base, cb) {
    this.$name = rename(base);
    this.model = Model;
    this.set = Set;
    this.map = Map;
    this.all = Query.build();
    this.all.cache = {};
    this.all._finder = new Finder(this.$name);
    this.depend_on(base);
    this.map_property = {};
    this.model_property = {
      $form: {
        enumerable: false,
        get: function () {
          // TODO
          return Mem.Set[this.$name.base].form(this.id);
        }
      },
      id: {
        enumerable: true,
        get: function () {
          return this._id;
        }
      },
      [`${this.$name.id}`]: {
        enumerable: true,
        get: function () {
          return this._id;
        }
      }
    };
    this.form_property = {
      $model: {
        enumerable: false,
        get: function () {
          // TODO
          return Mem.Set[this.$name.base].find(this.id);
        }
      },
      changes: {
        enumerable: true,
        value: function (key) {
          if (_.isEqual(this[key], this.find[key])) {
            return null;
          } else {
            return this.$model[key];
          }
        }
      },
      isChanged: {
        enumerable: true,
        get: function () {
          var i, key, keys, len;
          keys = Object.keys(this);
          for (i = 0, len = keys.length; i < len; i++) {
            key = keys[i];
            if (!_.isEqual(this[key], this.$model[key])) {
              return true;
            }
          }
          return false;
        }
      }
    };
    this.set_property = {
      first: {
        enumerable: false,
        get: function () {
          return this[0];
        }
      },
      last: {
        enumerable: false,
        get: function () {
          return this[this.length - 1];
        }
      },
      pluck: {
        enumerable: false,
        value: function (...keys) {
          cb = function () {
            switch (keys.length) {
              case 0:
                return function () {
                  return null;
                };
              case 1:
                return _.property(keys[0]);
              default:
                return function (o) {
                  return _.at(o, ...keys);
                };
            }
          }();
          return this.map(cb);
        }
      }
    };
    if (cb) {
      this.schema(cb);
    }
    return;
  }

  schema(cb) {
    var finder;
    cb.call(this);
    if (this.model === Model) {
      this.model = class model extends this.model {};
    }
    Object.defineProperties(this.model.prototype, this.model_property);
    this.form = class form extends this.model {};
    Object.defineProperties(this.form.prototype, this.form_property);
    if (this.set === Set) {
      this.set = class set extends this.set {};
    }
    Object.defineProperties(this.set.prototype, this.set_property);
    if (this.map === Map) {
      this.map = class map extends this.map {};
    }
    Object.defineProperties(this.map.prototype, this.map_property);
    this.model.$name = this.form.$name = this.set.$name = this.map.$name = this.$name;
    Mem.Query[this.$name.list] = this.set.all = this.all;
    Mem.Set[this.$name.base] = this.set.bless([]);
    Mem.Finder[this.$name.base] = finder = this.all._finder;
    finder.set = this.set;
    finder.map = this.map;
    finder.form = this.form;
    finder.model = this.model;
    finder.format = {};
    return this;
  }

  key_by(keys) {
    var cb;
    cb = function () {
      switch (keys != null ? keys.constructor : void 0) {
        case void 0:
          return function (o) {
            return o;
          };
        case Function:
          return keys;
        case String:
        case Array:
          return _.property(keys);
        default:
          throw Error(`unimplemented ${keys}`);
      }
    }();
    return this.model_property.id = {
      enumerable: true,
      get: cb
    };
  }

  deploy(cb) {
    return Mem.set_deploy(this.$name.base, cb);
  }

  depend_on(parent) {
    var all;
    ({ all } = this);
    return Mem.set_depend(parent, function () {
      return all._finder.clear_cache(all);
    });
  }

  scope(cb) {
    var key, ref, results, val;
    ref = cb(this.all);
    results = [];
    for (key in ref) {
      val = ref[key];
      results.push(this.use_cache(key, val));
    }
    return results;
  }

  default_scope(scope) {
    return this.all._copy(scope(this.all));
  }

  shuffle() {
    return this.default_scope(function (all) {
      return all.shuffle();
    });
  }

  order(...sort) {
    return this.default_scope(function (all) {
      return all.sort(...sort);
    });
  }

  relation_to_one(key, target, ik, else_id) {
    return this.model_property[key] = {
      enumerable: true,
      get: function () {
        var id;
        id = _.get(this, ik);
        return Mem.Query[target].find(id, else_id);
      }
    };
  }

  relation_to_many(key, target, ik, qk) {
    var all;
    all = this.all;
    this.use_cache(key, function (id) {
      return Mem.Query[target].where({
        [`${qk}`]: id
      });
    });
    return this.model_property[key] = {
      enumerable: true,
      get: function () {
        return all[key](this[ik]);
      }
    };
  }

  relation_tree(key, ik) {
    var all;
    all = this.all;
    this.use_cache(key, function (_id, n) {
      var q;
      if (n) {
        q = all.where({
          [`${ik}`]: _id
        });
        return all[key](q.ids, n - 1);
      } else {
        return all.where({
          _id: _id
        });
      }
    });
    return this.model_property[key] = {
      enumerable: true,
      value: function (n) {
        return all[key]([this._id], n);
      }
    };
  }

  relation_graph(key, ik) {
    var all;
    all = this.all;
    this.use_cache(key, function (_id, n) {
      var a, i, j, k, len, len1, q, ref;
      q = all.where({
        _id: _id
      });
      if (n) {
        _id = [];
        ref = q.pluck(ik);
        for (i = 0, len = ref.length; i < len; i++) {
          a = ref[i];
          if (a != null) {
            for (j = 0, len1 = a.length; j < len1; j++) {
              k = a[j];
              if (k != null) {
                _id.push(k);
              }
            }
          }
        }
        return all[key](_.uniq(_id), n - 1);
      } else {
        return q;
      }
    });
    return this.model_property[key] = {
      enumerable: true,
      value: function (n) {
        return all[key]([this._id], n);
      }
    };
  }

  use_cache(key, val) {
    switch (val != null ? val.constructor : void 0) {
      case Function:
        return this.all[key] = (...args) => {
          var base1, name1;
          return (base1 = this.all.cache)[name1 = `${key}:${JSON.stringify(args)}`] != null ? base1[name1] : base1[name1] = val(...args);
        };
      default:
        return this.all[key] = val;
    }
  }

  path(...keys) {
    var all, i, key, len, pk;
    for (i = 0, len = keys.length; i < len; i++) {
      key = keys[i];
      this.belongs_to(key);
    }
    this.deploy(function () {
      var idx, j, len1, results, subids;
      subids = this._id.split("-");
      this.idx = subids[keys.length];
      results = [];
      for (idx = j = 0, len1 = keys.length; j < len1; idx = ++j) {
        key = keys[idx];
        results.push(this[`${key}_id`] = subids.slice(0, +idx + 1 || 9e9).join('-'));
      }
      return results;
    });
    ({ all } = this);
    pk = keys.slice(-1)[0] + "_id";
    return this.model_property.siblings = {
      get: function () {
        var q;
        q = {};
        q[pk] = this[pk];
        return all.where(q);
      }
    };
  }

  belongs_to(to, option = {}) {
    var key, miss, name, target;
    name = rename(to);
    ({ key = name.id, target = name.list, miss } = option);
    return this.relation_to_one(name.base, target, key, miss);
  }

  habtm(to, option = {}) {
    var key, name, target;
    name = rename(to.replace(/s$/, ""));
    ({ key = name.ids, target = name.list } = option);
    return this.relation_to_many(name.list, target, key, "_id");
  }

  has_many(to, option = {}) {
    var key, name, target;
    name = rename(to.replace(/s$/, ""));
    ({ key = this.$name.id, target = name.list } = option);
    return this.relation_to_many(name.list, target, "_id", key);
  }

  tree(option = {}) {
    this.relation_tree("nodes", this.$name.id);
    return this.belongs_to(this.$name.base, option);
  }

  graph(option = {}) {
    var cost, directed, ik;
    ({ directed, cost } = option);
    ik = this.$name.ids;
    this.relation_to_many(this.$name.list, this.$name.list, ik, "_id");
    this.relation_graph("path", ik);
    if (!directed) {
      return true; // todo
    }
  }

};

/***/ }),
/* 131 */,
/* 132 */,
/* 133 */,
/* 134 */,
/* 135 */,
/* 136 */,
/* 137 */,
/* 138 */,
/* 139 */,
/* 140 */,
/* 141 */,
/* 142 */,
/* 143 */,
/* 144 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__(181), __esModule: true };

/***/ }),
/* 145 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__(182), __esModule: true };

/***/ }),
/* 146 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__(184), __esModule: true };

/***/ }),
/* 147 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__(186), __esModule: true };

/***/ }),
/* 148 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__(187), __esModule: true };

/***/ }),
/* 149 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _isIterable2 = __webpack_require__(144);

var _isIterable3 = _interopRequireDefault(_isIterable2);

var _getIterator2 = __webpack_require__(41);

var _getIterator3 = _interopRequireDefault(_getIterator2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = function () {
  function sliceIterator(arr, i) {
    var _arr = [];
    var _n = true;
    var _d = false;
    var _e = undefined;

    try {
      for (var _i = (0, _getIterator3.default)(arr), _s; !(_n = (_s = _i.next()).done); _n = true) {
        _arr.push(_s.value);

        if (i && _arr.length === i) break;
      }
    } catch (err) {
      _d = true;
      _e = err;
    } finally {
      try {
        if (!_n && _i["return"]) _i["return"]();
      } finally {
        if (_d) throw _e;
      }
    }

    return _arr;
  }

  return function (arr, i) {
    if (Array.isArray(arr)) {
      return arr;
    } else if ((0, _isIterable3.default)(Object(arr))) {
      return sliceIterator(arr, i);
    } else {
      throw new TypeError("Invalid attempt to destructure non-iterable instance");
    }
  };
}();

/***/ }),
/* 150 */
/***/ (function(module, exports, __webpack_require__) {

var _, methods,
  indexOf = [].indexOf;

_ = __webpack_require__(7);

methods = {
  undefined: _.isEqual
};

module.exports = {
  props: {
    as: {
      required: true
    },
    value: {
      required: true
    },
    bool: {
      default: "equal"
    }
  },
  methods: {
    tap: function() {
      if (this.bool_is) {
        return this.$emit('toggle', this.as);
      } else {
        return this.$emit('input', this.as);
      }
    }
  },
  computed: {
    bool_is: function() {
      var as, i, len, ref;
      switch (this.bool) {
        case "equal":
          return _.isEqual(this.as, this.value);
        case "include":
          ref = this.as;
          for (i = 0, len = ref.length; i < len; i++) {
            as = ref[i];
            if (indexOf.call(this.value, as) < 0) {
              return false;
            }
          }
          return true;
      }
    },
    btn: function() {
      if (this.bool_is) {
        return ["active"];
      } else {
        return [];
      }
    }
  }
};


/***/ }),
/* 151 */
/***/ (function(module, exports) {

module.exports = {
  props: ["chat_id", "anker", "write_at"]
};


/***/ }),
/* 152 */
/***/ (function(module, exports) {

module.exports = {
  props: ["full", "head", "to", "sign"]
};


/***/ }),
/* 153 */
/***/ (function(module, exports, __webpack_require__) {

var Query, el;

({Query} = __webpack_require__(1));

el = __webpack_require__(64);

module.exports = {
  functional: true,
  props: {
    id: {
      type: String,
      required: true
    },
    show: {
      type: String
    }
  },
  render: function(m, ctx) {
    var attrs, chat, id, key, o, ref, show;
    ({id, show} = ctx.props);
    chat = Query.chats.find(id);
    if (!chat) {
      return [];
    }
    key = id;
    attrs = {
      id: id,
      write_at: chat.write_at,
      handle: chat.handle,
      show: show != null ? show : chat.show,
      deco: chat.deco,
      log: chat.log,
      to: chat.to
    };
    if (o = chat.potof) {
      if (o.hide) {
        attrs.show = "hide";
      }
      Object.assign(attrs, {
        face_id: o.face_id,
        sign: o.sign,
        head: o.head
      });
    }
    if (o = chat.phase) {
      Object.assign(attrs, {
        handle: (ref = chat.handle) != null ? ref : o.handle
      });
    }
    return m(attrs.show, {
      attrs,
      key,
      on: ctx.data.on
    });
  },
  component_class: function() {
    return {
      props: ["id", "write_at", "handle", "deco", "log", "face_id", "head", "to", "sign", "img_src"],
      methods: {
        click: function({target}) {
          var book_id, chat, chat_id, chk, href, ids, url;
          ({chat_id, href, chk} = target.attributes);
          if (chat_id && (chat = Query.chats.find(chat_id.value))) {
            ({book_id} = chat);
            ids = Array.from(new Set([this.id, chat.id]));
            this.$emit("anker", book_id, ids.map(function(id) {
              return id.slice(book_id.length);
            }));
          }
          if (url = href != null ? href.value : void 0) {
            if ((chk != null ? chk.value : void 0) === "confirm" && confirm(`open?\n${url}`)) {
              return open(url, "_blank");
            }
          }
        }
      },
      computed: {
        el_adjust: el.adjust,
        full: function() {
          return !this.$store.state.menu.set.current;
        },
        anker: function() {
          var chat, current, mark, prefix;
          if (chat = this.chat) {
            if (!chat.phase) {
              console.log(chat);
            }
            ({mark} = chat.phase);
            if (mark != null) {
              prefix = (current = this.current) && current.part_id === chat.part_id ? "" : `${chat.part.idx}:`;
              return `${prefix}${mark}${chat.idx}`;
            } else {
              return "";
            }
          }
        },
        log_mention: function() {
          return this.log_html.replace(/<br>/g, " ");
        },
        log_html: function() {
          if (!this.log) {
            return "";
          }
          return this.log.replace(/[a-z]+\:\/\/[^"\s<>]+/g, function(url, idx, src) {
            var hostname, protocol, suffix, title;
            if ('<a href="' === src.slice(idx - 9, idx).toLowerCase()) {
              return url;
            }
            suffix = "";
            url = url.replace(/&lt;$|&gt;$|\]$|\[$/, function(last) {
              suffix = last;
              return "";
            });
            [protocol, hostname] = url.split(/\:\/\/|\/|\?|\#/g);
            title = [protocol, hostname].join("\n");
            return `<b chk=\"confirm\" href=\"${url}\" title=\"${title}\">${protocol}</b>${suffix}`;
          }).replace(/(\/\*).*(\*\/|$)/g, "<em>$&</em>").replace(/(^|\/\*).*(\*\/)/g, "<em>$&</em>");
        },
        current: function() {
          var idx;
          ({idx} = this.$route.params);
          if (idx) {
            return Query.chats.find(idx);
          }
        },
        chat: function() {
          if (this.id) {
            return Query.chats.find(this.id);
          }
        },
        classname: function() {
          var id;
          ({id} = this);
          if (id && "focus" === this.el_adjust) {
            // console.log "focus", id
            this.$emit("focus", id);
          }
          return [this.handle, this.el_adjust];
        }
      }
    };
  }
};


/***/ }),
/* 154 */
/***/ (function(module, exports, __webpack_require__) {

var _;

_ = __webpack_require__(7);

module.exports = {
  props: ["as", "value"],
  methods: {
    tap: function() {
      var idx, newVal;
      idx = this.value.indexOf(this.as);
      newVal = idx < 0 ? [this.as, ...this.value] : [...this.value.slice(0, idx), ...this.value.slice(idx + 1)];
      return this.$emit('input', newVal);
    }
  },
  computed: {
    btn: function() {
      var bool, idx;
      idx = this.value.indexOf(this.as);
      bool = !(idx < 0);
      if (bool) {
        return ["active"];
      } else {
        return [];
      }
    }
  }
};


/***/ }),
/* 155 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(19).component_class();


/***/ }),
/* 156 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(19).component_class();


/***/ }),
/* 157 */
/***/ (function(module, exports) {

module.exports = {
  default: {}
};


/***/ }),
/* 158 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = {
  mixins: [
    __webpack_require__(97)({
      cookie: {
        theme: "cinema",
        font: "std"
      },
      watch: function(val,
    key) {
        var ref;
        if (typeof window === "undefined" || window === null) {
          return;
        }
        if ((ref = this.use[key]) != null) {
          ref.unuse();
        }
        this.use[key] = __webpack_require__(99)(`./${key}-${val}.styl.use`);
        return this.use[key].use();
      }
    })
  ],
  data: function() {
    return {
      top: 0,
      width: 0,
      height: 0,
      use: {},
      welcome: true
    };
  },
  created: function() {
    if (typeof window === "undefined" || window === null) {
      return;
    }
    document.ontouchstart = function() {};
    return this.poll();
  },
  computed: {
    center: function() {
      return this.$store.commit("menu/center", {top: this.top, left: this.left, height: this.height, width: this.width});
    },
    body_class: function() {
      return [this.theme, this.font].join("~");
    }
  },
  methods: {
    poll: function() {
      if (this.top === scrollY && this.left === scrollX) {
        this.center;
      }
      this.top = scrollY;
      this.left = scrollX;
      this.width = innerWidth;
      this.height = innerHeight;
      return requestAnimationFrame(this.poll);
    }
  }
};


/***/ }),
/* 159 */
/***/ (function(module, exports, __webpack_require__) {

var Query, computed;

({Query} = __webpack_require__(1));

({computed} = __webpack_require__(38));

module.exports = {
  computed: Object.assign({}, computed, {
    show: function() {
      return this.chat && this.$store.state.menu.set.current;
    }
  })
};


/***/ }),
/* 160 */
/***/ (function(module, exports) {

module.exports = {
  default: {
    props: ["value", "chats"],
    data: function() {
      return {};
    },
    methods: {
      tap: function(value) {
        return this.$emit('input', value);
      }
    }
  }
};


/***/ }),
/* 161 */
/***/ (function(module, exports) {

if (typeof window !== "undefined" && window !== null) {
  window.require.config({
    paths: {
      vs: '/monaco-editor/vs'
    }
  });
}

module.exports = {
  default: {
    props: {
      value: String,
      maxRow: {
        type: Number,
        default: 1
      }
    },
    data: function() {
      return {
        value_past: "",
        editor: null,
        monaco: null
      };
    },
    mounted: function() {
      return typeof window !== "undefined" && window !== null ? window.require(['vs/editor/editor.main'], () => {
        this.monaco = monaco;
        this.editor = monaco.editor.create(this.$el, {
          value: this.value,
          theme: 'vs',
          language: 'markdown',
          rulers: [58, 70],
          scrollbar: {
            horizontal: 'hidden',
            vertical: 'hidden'
          },
          folding: true,
          readOnly: false,
          disableMonospaceOptimizations: true,
          experimentalScreenReader: false,
          emptySelectionClipboard: false,
          fixedOverflowWidgets: false,
          scrollBeyondLastLine: false,
          selectOnLineNumbers: true,
          snippetSuggestions: "bottom",
          roundedSelection: true,
          automaticLayout: false,
          parameterHints: true,
          glyphMargin: true,
          useTabStops: true,
          cursorStyle: "line",
          cursorBlinking: "smooth",
          wordWrap: false,
          wrappingColumn: 58,
          wrappingIndent: 'same',
          renderControlCharacters: true,
          renderLineHighlight: "line",
          renderWhitespace: "all",
          renderIndentGuides: true,
          formatOnPaste: true,
          formatOnType: true,
          suggestLineHeight: 14,
          suggestFontSize: 12,
          lineNumbers: "on",
          lineNumbersMinChars: 2,
          lineDecorationsWidth: 4,
          lineHeight: 20,
          fontSize: 16,
          fontWeight: "normal",
          fontFamily: "monospace",
          fontLigatures: false
        });
        this.editor.onDidChangeModelContent((e) => {
          return this.$emit("input", this.editor.getValue({
            preserveBOM: false
          }));
        });
        this.editor.onDidChangeCursorPosition((e) => {
          return console.log(e);
        });
        return this.editor.onDidChangeCursorSelection((e) => {
          return console.log(e);
        });
      }) : void 0;
    },
    beforeDestroy: function() {
      if (typeof window === "undefined" || window === null) {
        return;
      }
      // garbage cleanup
      return this.editor.dispose();
    },
    watch: {
      value: function(newStr, oldStr) {
        this.value_past = this.editor.getValue({
          preserveBOM: false
        });
        if (newStr === this.value_past) {
          return;
        }
        console.log(newStr, oldStr);
        return this.editor.setValue(newStr);
      }
    },
    computed: {
      style: function() {
        return {
          height: `${16 * this.maxRow}px`
        };
      }
    }
  }
};


/***/ }),
/* 162 */
/***/ (function(module, exports, __webpack_require__) {

var Query;

({Query} = __webpack_require__(1));

module.exports = {
  default: {
    props: ["self_id"],
    data: function() {
      return {
        text: "",
        show: "talk",
        deco: "head",
        handle: "SSAY",
        show: {}
      };
    },
    methods: {
      can_phase: function(handle) {
        return Query.stats.find(`${this.self_id}-${handle}`);
      }
    },
    computed: {
      sayable: function() {
        return this.can_phase(this.handle);
      },
      self: function() {
        this.$store.state.book.read_at;
        return Query.potofs.find(this.self_id);
      },
      parts: function() {
        return this.$store.state.book.parts;
      },
      part: function() {
        return Query.parts.find(this.part_id);
      },
      part_id: function() {
        return this.$store.state.book.part_id;
      },
      phases: function() {
        return this.$store.state.book.phases;
      },
      phase: function() {
        this.show[this.handle] = true;
        return Query.phases.where({part_id: this.part_id, handle: this.handle}).list.first;
      }
    }
  }
};


/***/ }),
/* 163 */
/***/ (function(module, exports, __webpack_require__) {

var Query;

({Query} = __webpack_require__(1));

module.exports = {
  default: {
    props: ["value", "part_id"],
    methods: {
      tap: function(value) {
        return this.$emit('input', value);
      },
      phase_at: function(xk, yk) {
        return Query.phases.where({
          part_id: this.part_id,
          handle: xk,
          group: yk
        }).list;
      }
    },
    computed: {
      group_calcs: function() {
        var i, len, list, o, ref, ref1;
        list = (ref = (ref1 = Query.phases.where({
          part_id: this.part_id
        }).reduce) != null ? ref1.group.summary : void 0) != null ? ref : [];
        for (i = 0, len = list.length; i < len; i++) {
          o = list[i];
          if (o.phases == null) {
            o.phases = Query.phases.where({
              part_id: this.part_id,
              group: o.id
            });
          }
          if (o.chats == null) {
            o.chats = Query.chats.where({
              part_id: this.part_id,
              "phase.group": o.id
            });
          }
        }
        return list;
      },
      handle_calcs: function() {
        var i, len, list, o, ref, ref1;
        list = (ref = (ref1 = Query.phases.where({
          part_id: this.part_id
        }).reduce) != null ? ref1.handle.summary : void 0) != null ? ref : [];
        for (i = 0, len = list.length; i < len; i++) {
          o = list[i];
          if (o.phases == null) {
            o.phases = Query.phases.where({
              part_id: this.part_id,
              handle: o.id
            });
          }
          if (o.chats == null) {
            o.chats = Query.chats.where({
              part_id: this.part_id,
              "phase.handle": o.id
            });
          }
        }
        return list;
      }
    }
  }
};


/***/ }),
/* 164 */
/***/ (function(module, exports, __webpack_require__) {

var Query;

({Query} = __webpack_require__(1));

module.exports = {
  props: {
    img_src: {
      type: String
    },
    face_id: {
      type: String
    },
    hide: {
      type: Boolean
    }
  },
  computed: {
    has_html: function() {
      return !!this.$slots.default;
    },
    image_class: function() {
      if (this.hide) {
        return ["hide"];
      } else {
        return [];
      }
    },
    image_src: function() {
      var face;
      face = Query.faces.find(this.face_id, "all");
      switch (false) {
        case !this.img_src:
          return this.img_src;
        case !face:
          return `${env.STORE_URL}/images/portrate/${face.id}.jpg`;
      }
    }
  },
  methods: {
    click: function() {
      return this.$emit('click', this.face_id);
    }
  }
};


/***/ }),
/* 165 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(19).component_class();


/***/ }),
/* 166 */
/***/ (function(module, exports, __webpack_require__) {

var Query, computed;

({Query} = __webpack_require__(1));

({computed} = __webpack_require__(38));

module.exports = {
  data: function() {
    return {
      sort: "live",
      order: "asc",
      full_mode: true,
      live_mode: true
    };
  },
  computed: Object.assign({}, computed, {
    full_on: function() {
      return this.potof_ids(function() {
        return false;
      });
    },
    full_off: function() {
      return this.potof_ids(function() {
        return true;
      });
    },
    live_on: function() {
      return this.potof_ids(function(o) {
        return !o.commit;
      });
    },
    live_off: function() {
      return this.potof_ids(function(o) {
        return o.commit;
      });
    },
    potofs: function() {
      var hides, i, id, j, len, len1, list, o;
      hides = this.hide_potof_ids;
      if (this.part) {
        ({list} = Query.potofs.catalog(this.book_id, this.part_id, this.sort, this.order));
        for (i = 0, len = list.length; i < len; i++) {
          o = list[i];
          o.hide = false;
        }
        for (j = 0, len1 = hides.length; j < len1; j++) {
          id = hides[j];
          Query.potofs.find(id).hide = true;
        }
        return list;
      } else {
        return [];
      }
    },
    bgc: function() {
      switch (this.sort) {
        case "text":
        case "role_labels":
        case "winner_id":
        case "win":
          return function(o) {
            return o.winner_id;
          };
        default:
          return function(o) {
            return o.live.role_id;
          };
      }
    },
    show: function() {
      return this.part && this.$store.state.menu.set.potof;
    }
  }),
  methods: {
    potof_ids: function(f) {
      return this.potofs.filter(f).map(function(o) {
        return o.id;
      }).sort();
    },
    toggle: function(o) {
      o.hide = !o.hide;
      return this.hide_potof_ids = this.potof_ids(function(o) {
        return o.hide;
      });
    },
    reverse: function() {
      switch (this.order) {
        case "asc":
          return this.order = "desc";
        case "desc":
          return this.order = "asc";
      }
    },
    count: function(unit, n) {
      switch (n) {
        case 0:
        case void 0:
        case null:
        case 2e308:
          return " ";
        default:
          return `${n}${unit}`;
      }
    }
  }
};


/***/ }),
/* 167 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(19).component_class();


/***/ }),
/* 168 */
/***/ (function(module, exports, __webpack_require__) {

var _, el;

_ = __webpack_require__(7);

el = __webpack_require__(64);

module.exports = {
  props: ["as", "value"],
  computed: {
    el_adjust: el.adjust,
    btn: function() {
      if ((typeof window !== "undefined" && window !== null) && this.el_adjust) {
        requestAnimationFrame(() => {
          return this.$emit('input', this.as);
        });
      }
      return [this.el_adjust];
    }
  }
};


/***/ }),
/* 169 */
/***/ (function(module, exports, __webpack_require__) {

var Query, _;

({Query} = __webpack_require__(1));

_ = __webpack_require__(7);

module.exports = {
  parent: {
    props: {
      value: {
        default: function() {
          return "all";
        }
      }
    },
    methods: {
      find_tag: function(tag_id) {
        return Query.tags.find(tag_id);
      },
      faces: function(tag_id) {
        return Query.faces.tag(tag_id);
      }
    }
  },
  functional: true,
  props: {
    id: {
      required: true
    }
  },
  render: function(m, ctx) {
    var attr, id, label, list, p;
    p = ctx.parent;
    // p.query
    ({id} = ctx.props);
    ({list} = p.faces(id));
    ({label = "- 全体 -"} = p.find_tag(id));
    attr = {
      key: id,
      props: {
        as: id,
        value: p.value
      },
      on: {
        input: function(as) {
          return p.$emit('input', as);
        }
      }
    };
    if (list.length) {
      return m("btn", attr, [label, m("sup", list.length)]);
    }
  }
};


/***/ }),
/* 170 */
/***/ (function(module, exports, __webpack_require__) {

var Query, _;

({Query} = __webpack_require__(1));

_ = __webpack_require__(7);

module.exports = {
  default: _.merge({}, __webpack_require__(91).parent, {})
};


/***/ }),
/* 171 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(19).component_class();


/***/ }),
/* 172 */
/***/ (function(module, exports) {

var caret;

caret = function(cb) {
  return function() {
    var after, ed, input, size, st, value;
    ({input} = this.$refs);
    st = input.selectionStart;
    ed = input.selectionEnd;
    value = this.value;
    after = cb(value.slice(0, st), value.slice(st, ed), value.slice(ed));
    size = after.length - value.length;
    this.$emit('input', after);
    return this.$nextTick(function() {
      input.selectionStart = st;
      return input.selectionEnd = ed + size;
    });
  };
};

module.exports = {
  default: {
    props: {
      value: {
        type: String,
        required: true
      },
      maxSize: {
        type: Number,
        default: 100
      },
      maxRow: {
        type: Number,
        default: 1
      },
      minRow: {
        type: Number,
        default: 1
      }
    },
    data: function() {
      return {
        caret: {}
      };
    },
    methods: {
      nDm: caret(function(pre, select, post) {
        return `${pre}[[${select}]]${post}`;
      }),
      anker: caret(function(pre, select, post) {
        return `${pre}>>${select}${post}`;
      }),
      comment: caret(function(pre, select, post) {
        return `${pre}/*${select}*/${post}`;
      }),
      submit: function() {
        return console.log(this.value);
      },
      input: function(e) {
        return this.$emit('input', e.target.value);
      }
    },
    computed: {
      ban: function() {
        var ban;
        ban = false;
        ban || (ban = this.maxSize < this.size);
        ban || (ban = this.row < this.minRow);
        ban || (ban = this.maxRow < this.row);
        return ban;
      },
      warn: function() {
        var ok;
        ok = true;
        ok && (ok = !this.value.match(/>>/));
        return !ok;
      },
      mark: function() {
        var m;
        m = "fa-check";
        if (this.warn) {
          m = "fa-warning";
        }
        if (this.ban) {
          m = "fa-ban";
        }
        return [m];
      },
      size: function() {
        return this.value.length;
      },
      row: function() {
        return this.value.split("\n").length;
      },
      areaRow: function() {
        if (this.row < this.minRow) {
          return this.minRow;
        }
        if (this.maxRow < this.row) {
          return this.maxRow;
        }
        return this.row;
      }
    }
  }
};


/***/ }),
/* 173 */
/***/ (function(module, exports) {

var DAY, HOUR, MINUTE, MONTH, SECOND, WEEK, YEAR, format, i, idx, len, locales, suffix, time, times;

SECOND = 1000;

MINUTE = SECOND * 60;

HOUR = MINUTE * 60;

DAY = HOUR * 24;

WEEK = DAY * 7;

MONTH = DAY * 30;

YEAR = DAY * 365;

locales = [" %s 年後", " %s ヶ月後", " %s 週間後", " %s 日後", " %s 時間後", " %s 分後", " %s 秒後", "今", " %s 秒前", " %s 分前", " %s 時間前", " %s 日前", " %s 週間前", " %s ヶ月前", " %s 年前"];

times = [[-YEAR, YEAR], [-MONTH, MONTH], [-WEEK, WEEK], [-DAY, DAY], [-HOUR, HOUR], [-MINUTE, MINUTE], [-25000, SECOND], [25000, 25000], [MINUTE, SECOND], [HOUR, MINUTE], [DAY, HOUR], [WEEK, DAY], [MONTH, WEEK], [YEAR, MONTH], [2e308, YEAR]];

for (idx = i = 0, len = times.length; i < len; idx = ++i) {
  time = times[idx];
  time[2] = locales[idx];
}

suffix = {
  date: "頃",
  short: ""
};

format = {
  date: new Intl.DateTimeFormat('ja-JP', {
    year: "numeric",
    month: "2-digit",
    day: "2-digit",
    weekday: "short",
    hour: "2-digit"
  }),
  short: new Intl.DateTimeFormat('ja-JP', {
    year: "numeric",
    month: "2-digit",
    day: "2-digit"
  }),
  num: new Intl.NumberFormat('ja-JP', {
    style: 'decimal',
    useGrouping: true,
    minimumIntegerDigits: 1,
    minimumSignificantDigits: 1,
    maximumSignificantDigits: 21,
    minimumFractionDigits: 0,
    maximumFractionDigits: 2
  })
};

module.exports = {
  data: function() {
    return {
      now: null,
      tick: 2e308,
      interval: null
    };
  },
  props: {
    since: {
      required: true
    },
    maxTime: {
      type: Number,
      default: 1 * YEAR
    },
    lock: {
      type: Boolean,
      default: false
    },
    format: {
      type: String,
      default: "date"
    }
  },
  computed: {
    sinceTime: function() {
      return new Date(this.since).getTime();
    },
    msec: function() {
      this.tick = 2e308;
      this.now = Date.now();
      return this.now - this.sinceTime;
    },
    time: function() {
      var j, len1, limit;
      for (idx = j = 0, len1 = times.length; j < len1; idx = ++j) {
        [limit] = times[idx];
        if (this.msec < limit) {
          return times[idx];
        }
      }
      return times.slice(-1)[0];
    },
    timeago: function() {
      var _, base, count, msec, text;
      if (this.maxTime && this.msec > this.maxTime) {
        clearInterval(this.interval);
        this.interval = null;
        return format[this.format].format(this.sinceTime) + suffix[this.format];
      }
      [_, base, text] = this.time;
      msec = Math.abs(100 + this.msec);
      count = Math.floor(msec / base); // 八捨九入
      this.tickTime;
      return text.replace('%s', count);
    },
    tickTime: function() {
      var _, base, tick;
      if (this.lock) {
        return 2e308;
      }
      [_, base] = this.time;
      tick = base;
      if (2e308 === this.tick) {
        tick = -this.msec % base;
        if (tick < 0) {
          tick += base;
        }
      }
      if (this.tick !== tick) {
        if (this.interval) {
          clearInterval(this.interval);
        }
        this.interval = setInterval(() => {
          this.now = Date.now();
          return this.tickTime;
        }, this.tick = tick);
      }
      return this.tick;
    }
  },
  render: function(m) {
    return m('time', this.timeago);
  },
  beforeDestroy: function() {
    if (this.lock) {
      return;
    }
    clearInterval(this.interval);
    return this.interval = null;
  }
};


/***/ }),
/* 174 */
/***/ (function(module, exports) {

var DAY, HOUR, MINUTE, MONTH, SECOND, WEEK, YEAR, format, i, idx, len, locales, time, times;

SECOND = 1000;

MINUTE = SECOND * 60;

HOUR = MINUTE * 60;

DAY = HOUR * 24;

WEEK = DAY * 7;

MONTH = DAY * 30;

YEAR = DAY * 365;

locales = [" %s 秒間", " %s 分間", " %s 時間", " %s 日間", " %s 週間", " %s ヶ月間", " %s 年間"];

times = [[MINUTE, SECOND], [HOUR, MINUTE], [DAY, HOUR], [WEEK, DAY], [MONTH, WEEK], [YEAR, MONTH], [2e308, YEAR]];

for (idx = i = 0, len = times.length; i < len; idx = ++i) {
  time = times[idx];
  time[2] = locales[idx];
}

format = {
  date: new Intl.DateTimeFormat('ja-JP', {
    year: "numeric",
    month: "2-digit",
    day: "2-digit",
    weekday: "short",
    hour: "2-digit"
  }),
  num: new Intl.NumberFormat('ja-JP', {
    style: 'decimal',
    useGrouping: true,
    minimumIntegerDigits: 1,
    minimumSignificantDigits: 1,
    maximumSignificantDigits: 21,
    minimumFractionDigits: 0,
    maximumFractionDigits: 2
  })
};

module.exports = {
  props: {
    range: {
      required: true
    }
  },
  computed: {
    time: function() {
      var j, len1, limit;
      for (idx = j = 0, len1 = times.length; j < len1; idx = ++j) {
        [limit] = times[idx];
        if (this.range < limit) {
          return times[idx];
        }
      }
      return times.slice(-1)[0];
    },
    timerange: function() {
      var _, base, count, text;
      [_, base, text] = this.time;
      count = Math.floor(this.range / base); // 切り捨て
      return text.replace('%s', count);
    }
  },
  render: function(m) {
    return m('time', this.timerange);
  }
};


/***/ }),
/* 175 */
/***/ (function(module, exports, __webpack_require__) {

var Query, computed, format;

({Query} = __webpack_require__(1));

({computed} = __webpack_require__(38));

format = {
  head: new Intl.DateTimeFormat('ja-JP', {
    weekday: "short",
    hour: "2-digit"
  }),
  tail: new Intl.DateTimeFormat('ja-JP', {
    hour: "2-digit"
  })
};

module.exports = {
  props: ["chats"],
  methods: {
    all_page_idxs: function(part_id) {
      var i, last, results;
      last = this.chats(part_id).length;
      return (function() {
        results = [];
        for (var i = 0; 0 <= last ? i < last : i > last; 0 <= last ? i++ : i--){ results.push(i); }
        return results;
      }).apply(this);
    },
    page_label: function(part_id, page_id) {
      var begin, first, last, ref, write;
      ref = this.chats(part_id)[page_id], first = ref[0], last = ref[ref.length - 1];
      begin = format.head.format(first.write_at);
      write = format.head.format(last.write_at);
      if (begin === write) {
        return begin;
      } else {
        write = format.tail.format(this.write_at);
        return begin.replace("時", "-" + write);
      }
    },
    input_part: function(part_id) {
      return this.book = {
        part_id: part_id,
        page_idxs: [0]
      };
    },
    input_page: function(part_id, page_id) {
      return this.book = {
        part_id: part_id,
        page_idxs: [page_id]
      };
    },
    tooltip: function(line) {
      if (1 < line) {
        return "tooltip-top";
      } else {
        return "tooltip-bottom";
      }
    }
  },
  computed: Object.assign({}, computed, {
    show: function() {
      return this.$store.state.menu.set.toc;
    }
  })
};


/***/ }),
/* 176 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(19).component_class();


/***/ }),
/* 177 */
/***/ (function(module, exports, __webpack_require__) {

var Query;

({Query} = __webpack_require__(1));

module.exports = {
  default: {
    props: ["top", "show"],
    data: function() {
      return {
        export_to: "progress"
      };
    },
    computed: {
      root_path: function() {
        return env.WEB_URL;
      },
      welcome_style: function() {
        return {
          backgroundImage: `url(${env.STORE_URL}/images/bg/fhd-giji.png)`,
          backgroundPosition: `left 50% top ${this.top}px`
        };
      }
    },
    methods: {
      vils: function(id) {
        var max_vils;
        max_vils = Query.folders.find(id).max_vils;
        if (max_vils && "progress" === this.export_to) {
          return `${max_vils}村:`;
        } else {
          return "";
        }
      },
      url: function(id) {
        switch (this.export_to) {
          case "progress":
            return Query.folders.find(id).href;
          case "finish":
            return `/sow/village?folder_id=${id}`;
        }
      }
    },
    components: {
      sow: {
        functional: true,
        props: ["folder"],
        render: function(m, ctx) {
          var children, folder, href, outer, ref, vils;
          ({folder} = ctx.props);
          children = (ref = ctx.children) != null ? ref : [folder.toLowerCase()];
          vils = ctx.parent.vils(folder);
          href = ctx.parent.url(folder);
          outer = ctx.parent.export_to === "progress";
          return m("p", [
            vils,
            href ? outer ? m("a",
            {
              attrs: {href}
            },
            children) : m("nuxt-link",
            {
              attrs: {
                to: href
              }
            },
            children) : children
          ]);
        }
      }
    }
  }
};


/***/ }),
/* 178 */
/***/ (function(module, exports) {

module.exports = {
  default: {
    props: ["top"],
    data: function() {
      return {
        text: ""
      };
    },
    computed: {
      text_rows: function() {
        var rows;
        rows = this.text.split("\n").length;
        if (2 < rows) {
          return rows;
        } else {
          return 3;
        }
      },
      show_write: function() {
        return this.$store.state.menu.target === 'comment';
      },
      show: function() {
        return this.show_write;
      },
      style: function() {
        return {
          position: "absolute",
          transform: `translateY(${this.top}px)`
        };
      }
    }
  }
};


/***/ }),
/* 179 */,
/* 180 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(36);
__webpack_require__(35);
module.exports = __webpack_require__(213);


/***/ }),
/* 181 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(36);
__webpack_require__(35);
module.exports = __webpack_require__(214);


/***/ }),
/* 182 */
/***/ (function(module, exports, __webpack_require__) {

var core = __webpack_require__(5);
var $JSON = core.JSON || (core.JSON = { stringify: JSON.stringify });
module.exports = function stringify(it) { // eslint-disable-line no-unused-vars
  return $JSON.stringify.apply($JSON, arguments);
};


/***/ }),
/* 183 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(216);
module.exports = __webpack_require__(5).Object.assign;


/***/ }),
/* 184 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(217);
module.exports = __webpack_require__(5).Object.keys;


/***/ }),
/* 185 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(90);
__webpack_require__(35);
__webpack_require__(36);
__webpack_require__(218);
__webpack_require__(220);
__webpack_require__(221);
module.exports = __webpack_require__(5).Promise;


/***/ }),
/* 186 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(219);
__webpack_require__(90);
__webpack_require__(222);
__webpack_require__(223);
module.exports = __webpack_require__(5).Symbol;


/***/ }),
/* 187 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(35);
__webpack_require__(36);
module.exports = __webpack_require__(55).f('iterator');


/***/ }),
/* 188 */
/***/ (function(module, exports) {

module.exports = function () { /* empty */ };


/***/ }),
/* 189 */
/***/ (function(module, exports) {

module.exports = function (it, Constructor, name, forbiddenField) {
  if (!(it instanceof Constructor) || (forbiddenField !== undefined && forbiddenField in it)) {
    throw TypeError(name + ': incorrect invocation!');
  } return it;
};


/***/ }),
/* 190 */
/***/ (function(module, exports, __webpack_require__) {

// false -> Array#indexOf
// true  -> Array#includes
var toIObject = __webpack_require__(18);
var toLength = __webpack_require__(88);
var toAbsoluteIndex = __webpack_require__(212);
module.exports = function (IS_INCLUDES) {
  return function ($this, el, fromIndex) {
    var O = toIObject($this);
    var length = toLength(O.length);
    var index = toAbsoluteIndex(fromIndex, length);
    var value;
    // Array#includes uses SameValueZero equality algorithm
    // eslint-disable-next-line no-self-compare
    if (IS_INCLUDES && el != el) while (length > index) {
      value = O[index++];
      // eslint-disable-next-line no-self-compare
      if (value != value) return true;
    // Array#indexOf ignores holes, Array#includes - not
    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {
      if (O[index] === el) return IS_INCLUDES || index || 0;
    } return !IS_INCLUDES && -1;
  };
};


/***/ }),
/* 191 */
/***/ (function(module, exports, __webpack_require__) {

// all enumerable object keys, includes symbols
var getKeys = __webpack_require__(23);
var gOPS = __webpack_require__(48);
var pIE = __webpack_require__(31);
module.exports = function (it) {
  var result = getKeys(it);
  var getSymbols = gOPS.f;
  if (getSymbols) {
    var symbols = getSymbols(it);
    var isEnum = pIE.f;
    var i = 0;
    var key;
    while (symbols.length > i) if (isEnum.call(it, key = symbols[i++])) result.push(key);
  } return result;
};


/***/ }),
/* 192 */
/***/ (function(module, exports, __webpack_require__) {

var ctx = __webpack_require__(29);
var call = __webpack_require__(196);
var isArrayIter = __webpack_require__(194);
var anObject = __webpack_require__(11);
var toLength = __webpack_require__(88);
var getIterFn = __webpack_require__(89);
var BREAK = {};
var RETURN = {};
var exports = module.exports = function (iterable, entries, fn, that, ITERATOR) {
  var iterFn = ITERATOR ? function () { return iterable; } : getIterFn(iterable);
  var f = ctx(fn, that, entries ? 2 : 1);
  var index = 0;
  var length, step, iterator, result;
  if (typeof iterFn != 'function') throw TypeError(iterable + ' is not iterable!');
  // fast case for arrays with default iterator
  if (isArrayIter(iterFn)) for (length = toLength(iterable.length); length > index; index++) {
    result = entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);
    if (result === BREAK || result === RETURN) return result;
  } else for (iterator = iterFn.call(iterable); !(step = iterator.next()).done;) {
    result = call(iterator, f, step.value, entries);
    if (result === BREAK || result === RETURN) return result;
  }
};
exports.BREAK = BREAK;
exports.RETURN = RETURN;


/***/ }),
/* 193 */
/***/ (function(module, exports) {

// fast apply, http://jsperf.lnkit.com/fast-apply/5
module.exports = function (fn, args, that) {
  var un = that === undefined;
  switch (args.length) {
    case 0: return un ? fn()
                      : fn.call(that);
    case 1: return un ? fn(args[0])
                      : fn.call(that, args[0]);
    case 2: return un ? fn(args[0], args[1])
                      : fn.call(that, args[0], args[1]);
    case 3: return un ? fn(args[0], args[1], args[2])
                      : fn.call(that, args[0], args[1], args[2]);
    case 4: return un ? fn(args[0], args[1], args[2], args[3])
                      : fn.call(that, args[0], args[1], args[2], args[3]);
  } return fn.apply(that, args);
};


/***/ }),
/* 194 */
/***/ (function(module, exports, __webpack_require__) {

// check on default Array iterator
var Iterators = __webpack_require__(22);
var ITERATOR = __webpack_require__(6)('iterator');
var ArrayProto = Array.prototype;

module.exports = function (it) {
  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);
};


/***/ }),
/* 195 */
/***/ (function(module, exports, __webpack_require__) {

// 7.2.2 IsArray(argument)
var cof = __webpack_require__(25);
module.exports = Array.isArray || function isArray(arg) {
  return cof(arg) == 'Array';
};


/***/ }),
/* 196 */
/***/ (function(module, exports, __webpack_require__) {

// call something on iterator step with safe closing on error
var anObject = __webpack_require__(11);
module.exports = function (iterator, fn, value, entries) {
  try {
    return entries ? fn(anObject(value)[0], value[1]) : fn(value);
  // 7.4.6 IteratorClose(iterator, completion)
  } catch (e) {
    var ret = iterator['return'];
    if (ret !== undefined) anObject(ret.call(iterator));
    throw e;
  }
};


/***/ }),
/* 197 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var create = __webpack_require__(80);
var descriptor = __webpack_require__(32);
var setToStringTag = __webpack_require__(33);
var IteratorPrototype = {};

// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()
__webpack_require__(16)(IteratorPrototype, __webpack_require__(6)('iterator'), function () { return this; });

module.exports = function (Constructor, NAME, next) {
  Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });
  setToStringTag(Constructor, NAME + ' Iterator');
};


/***/ }),
/* 198 */
/***/ (function(module, exports, __webpack_require__) {

var ITERATOR = __webpack_require__(6)('iterator');
var SAFE_CLOSING = false;

try {
  var riter = [7][ITERATOR]();
  riter['return'] = function () { SAFE_CLOSING = true; };
  // eslint-disable-next-line no-throw-literal
  Array.from(riter, function () { throw 2; });
} catch (e) { /* empty */ }

module.exports = function (exec, skipClosing) {
  if (!skipClosing && !SAFE_CLOSING) return false;
  var safe = false;
  try {
    var arr = [7];
    var iter = arr[ITERATOR]();
    iter.next = function () { return { done: safe = true }; };
    arr[ITERATOR] = function () { return iter; };
    exec(arr);
  } catch (e) { /* empty */ }
  return safe;
};


/***/ }),
/* 199 */
/***/ (function(module, exports) {

module.exports = function (done, value) {
  return { value: value, done: !!done };
};


/***/ }),
/* 200 */
/***/ (function(module, exports, __webpack_require__) {

var getKeys = __webpack_require__(23);
var toIObject = __webpack_require__(18);
module.exports = function (object, el) {
  var O = toIObject(object);
  var keys = getKeys(O);
  var length = keys.length;
  var index = 0;
  var key;
  while (length > index) if (O[key = keys[index++]] === el) return key;
};


/***/ }),
/* 201 */
/***/ (function(module, exports, __webpack_require__) {

var META = __webpack_require__(34)('meta');
var isObject = __webpack_require__(26);
var has = __webpack_require__(15);
var setDesc = __webpack_require__(17).f;
var id = 0;
var isExtensible = Object.isExtensible || function () {
  return true;
};
var FREEZE = !__webpack_require__(21)(function () {
  return isExtensible(Object.preventExtensions({}));
});
var setMeta = function (it) {
  setDesc(it, META, { value: {
    i: 'O' + ++id, // object ID
    w: {}          // weak collections IDs
  } });
};
var fastKey = function (it, create) {
  // return primitive with prefix
  if (!isObject(it)) return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;
  if (!has(it, META)) {
    // can't set metadata to uncaught frozen object
    if (!isExtensible(it)) return 'F';
    // not necessary to add metadata
    if (!create) return 'E';
    // add missing metadata
    setMeta(it);
  // return object ID
  } return it[META].i;
};
var getWeak = function (it, create) {
  if (!has(it, META)) {
    // can't set metadata to uncaught frozen object
    if (!isExtensible(it)) return true;
    // not necessary to add metadata
    if (!create) return false;
    // add missing metadata
    setMeta(it);
  // return hash weak collections IDs
  } return it[META].w;
};
// add metadata on freeze-family methods calling
var onFreeze = function (it) {
  if (FREEZE && meta.NEED && isExtensible(it) && !has(it, META)) setMeta(it);
  return it;
};
var meta = module.exports = {
  KEY: META,
  NEED: false,
  fastKey: fastKey,
  getWeak: getWeak,
  onFreeze: onFreeze
};


/***/ }),
/* 202 */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(8);
var macrotask = __webpack_require__(87).set;
var Observer = global.MutationObserver || global.WebKitMutationObserver;
var process = global.process;
var Promise = global.Promise;
var isNode = __webpack_require__(25)(process) == 'process';

module.exports = function () {
  var head, last, notify;

  var flush = function () {
    var parent, fn;
    if (isNode && (parent = process.domain)) parent.exit();
    while (head) {
      fn = head.fn;
      head = head.next;
      try {
        fn();
      } catch (e) {
        if (head) notify();
        else last = undefined;
        throw e;
      }
    } last = undefined;
    if (parent) parent.enter();
  };

  // Node.js
  if (isNode) {
    notify = function () {
      process.nextTick(flush);
    };
  // browsers with MutationObserver
  } else if (Observer) {
    var toggle = true;
    var node = document.createTextNode('');
    new Observer(flush).observe(node, { characterData: true }); // eslint-disable-line no-new
    notify = function () {
      node.data = toggle = !toggle;
    };
  // environments with maybe non-completely correct, but existent Promise
  } else if (Promise && Promise.resolve) {
    var promise = Promise.resolve();
    notify = function () {
      promise.then(flush);
    };
  // for other environments - macrotask based on:
  // - setImmediate
  // - MessageChannel
  // - window.postMessag
  // - onreadystatechange
  // - setTimeout
  } else {
    notify = function () {
      // strange IE + webpack dev server bug - use .call(global)
      macrotask.call(global, flush);
    };
  }

  return function (fn) {
    var task = { fn: fn, next: undefined };
    if (last) last.next = task;
    if (!head) {
      head = task;
      notify();
    } last = task;
  };
};


/***/ }),
/* 203 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// 19.1.2.1 Object.assign(target, source, ...)
var getKeys = __webpack_require__(23);
var gOPS = __webpack_require__(48);
var pIE = __webpack_require__(31);
var toObject = __webpack_require__(52);
var IObject = __webpack_require__(78);
var $assign = Object.assign;

// should work with symbols and should have deterministic property order (V8 bug)
module.exports = !$assign || __webpack_require__(21)(function () {
  var A = {};
  var B = {};
  // eslint-disable-next-line no-undef
  var S = Symbol();
  var K = 'abcdefghijklmnopqrst';
  A[S] = 7;
  K.split('').forEach(function (k) { B[k] = k; });
  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;
}) ? function assign(target, source) { // eslint-disable-line no-unused-vars
  var T = toObject(target);
  var aLen = arguments.length;
  var index = 1;
  var getSymbols = gOPS.f;
  var isEnum = pIE.f;
  while (aLen > index) {
    var S = IObject(arguments[index++]);
    var keys = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S);
    var length = keys.length;
    var j = 0;
    var key;
    while (length > j) if (isEnum.call(S, key = keys[j++])) T[key] = S[key];
  } return T;
} : $assign;


/***/ }),
/* 204 */
/***/ (function(module, exports, __webpack_require__) {

var dP = __webpack_require__(17);
var anObject = __webpack_require__(11);
var getKeys = __webpack_require__(23);

module.exports = __webpack_require__(13) ? Object.defineProperties : function defineProperties(O, Properties) {
  anObject(O);
  var keys = getKeys(Properties);
  var length = keys.length;
  var i = 0;
  var P;
  while (length > i) dP.f(O, P = keys[i++], Properties[P]);
  return O;
};


/***/ }),
/* 205 */
/***/ (function(module, exports, __webpack_require__) {

var pIE = __webpack_require__(31);
var createDesc = __webpack_require__(32);
var toIObject = __webpack_require__(18);
var toPrimitive = __webpack_require__(53);
var has = __webpack_require__(15);
var IE8_DOM_DEFINE = __webpack_require__(77);
var gOPD = Object.getOwnPropertyDescriptor;

exports.f = __webpack_require__(13) ? gOPD : function getOwnPropertyDescriptor(O, P) {
  O = toIObject(O);
  P = toPrimitive(P, true);
  if (IE8_DOM_DEFINE) try {
    return gOPD(O, P);
  } catch (e) { /* empty */ }
  if (has(O, P)) return createDesc(!pIE.f.call(O, P), O[P]);
};


/***/ }),
/* 206 */
/***/ (function(module, exports, __webpack_require__) {

// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window
var toIObject = __webpack_require__(18);
var gOPN = __webpack_require__(81).f;
var toString = {}.toString;

var windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames
  ? Object.getOwnPropertyNames(window) : [];

var getWindowNames = function (it) {
  try {
    return gOPN(it);
  } catch (e) {
    return windowNames.slice();
  }
};

module.exports.f = function getOwnPropertyNames(it) {
  return windowNames && toString.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(toIObject(it));
};


/***/ }),
/* 207 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)
var has = __webpack_require__(15);
var toObject = __webpack_require__(52);
var IE_PROTO = __webpack_require__(49)('IE_PROTO');
var ObjectProto = Object.prototype;

module.exports = Object.getPrototypeOf || function (O) {
  O = toObject(O);
  if (has(O, IE_PROTO)) return O[IE_PROTO];
  if (typeof O.constructor == 'function' && O instanceof O.constructor) {
    return O.constructor.prototype;
  } return O instanceof Object ? ObjectProto : null;
};


/***/ }),
/* 208 */
/***/ (function(module, exports, __webpack_require__) {

// most Object methods by ES6 should accept primitives
var $export = __webpack_require__(14);
var core = __webpack_require__(5);
var fails = __webpack_require__(21);
module.exports = function (KEY, exec) {
  var fn = (core.Object || {})[KEY] || Object[KEY];
  var exp = {};
  exp[KEY] = exec(fn);
  $export($export.S + $export.F * fails(function () { fn(1); }), 'Object', exp);
};


/***/ }),
/* 209 */
/***/ (function(module, exports, __webpack_require__) {

var hide = __webpack_require__(16);
module.exports = function (target, src, safe) {
  for (var key in src) {
    if (safe && target[key]) target[key] = src[key];
    else hide(target, key, src[key]);
  } return target;
};


/***/ }),
/* 210 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var global = __webpack_require__(8);
var core = __webpack_require__(5);
var dP = __webpack_require__(17);
var DESCRIPTORS = __webpack_require__(13);
var SPECIES = __webpack_require__(6)('species');

module.exports = function (KEY) {
  var C = typeof core[KEY] == 'function' ? core[KEY] : global[KEY];
  if (DESCRIPTORS && C && !C[SPECIES]) dP.f(C, SPECIES, {
    configurable: true,
    get: function () { return this; }
  });
};


/***/ }),
/* 211 */
/***/ (function(module, exports, __webpack_require__) {

var toInteger = __webpack_require__(51);
var defined = __webpack_require__(44);
// true  -> String#at
// false -> String#codePointAt
module.exports = function (TO_STRING) {
  return function (that, pos) {
    var s = String(defined(that));
    var i = toInteger(pos);
    var l = s.length;
    var a, b;
    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;
    a = s.charCodeAt(i);
    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff
      ? TO_STRING ? s.charAt(i) : a
      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;
  };
};


/***/ }),
/* 212 */
/***/ (function(module, exports, __webpack_require__) {

var toInteger = __webpack_require__(51);
var max = Math.max;
var min = Math.min;
module.exports = function (index, length) {
  index = toInteger(index);
  return index < 0 ? max(index + length, 0) : min(index, length);
};


/***/ }),
/* 213 */
/***/ (function(module, exports, __webpack_require__) {

var anObject = __webpack_require__(11);
var get = __webpack_require__(89);
module.exports = __webpack_require__(5).getIterator = function (it) {
  var iterFn = get(it);
  if (typeof iterFn != 'function') throw TypeError(it + ' is not iterable!');
  return anObject(iterFn.call(it));
};


/***/ }),
/* 214 */
/***/ (function(module, exports, __webpack_require__) {

var classof = __webpack_require__(43);
var ITERATOR = __webpack_require__(6)('iterator');
var Iterators = __webpack_require__(22);
module.exports = __webpack_require__(5).isIterable = function (it) {
  var O = Object(it);
  return O[ITERATOR] !== undefined
    || '@@iterator' in O
    // eslint-disable-next-line no-prototype-builtins
    || Iterators.hasOwnProperty(classof(O));
};


/***/ }),
/* 215 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var addToUnscopables = __webpack_require__(188);
var step = __webpack_require__(199);
var Iterators = __webpack_require__(22);
var toIObject = __webpack_require__(18);

// 22.1.3.4 Array.prototype.entries()
// 22.1.3.13 Array.prototype.keys()
// 22.1.3.29 Array.prototype.values()
// 22.1.3.30 Array.prototype[@@iterator]()
module.exports = __webpack_require__(79)(Array, 'Array', function (iterated, kind) {
  this._t = toIObject(iterated); // target
  this._i = 0;                   // next index
  this._k = kind;                // kind
// 22.1.5.2.1 %ArrayIteratorPrototype%.next()
}, function () {
  var O = this._t;
  var kind = this._k;
  var index = this._i++;
  if (!O || index >= O.length) {
    this._t = undefined;
    return step(1);
  }
  if (kind == 'keys') return step(0, index);
  if (kind == 'values') return step(0, O[index]);
  return step(0, [index, O[index]]);
}, 'values');

// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)
Iterators.Arguments = Iterators.Array;

addToUnscopables('keys');
addToUnscopables('values');
addToUnscopables('entries');


/***/ }),
/* 216 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.3.1 Object.assign(target, source)
var $export = __webpack_require__(14);

$export($export.S + $export.F, 'Object', { assign: __webpack_require__(203) });


/***/ }),
/* 217 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.14 Object.keys(O)
var toObject = __webpack_require__(52);
var $keys = __webpack_require__(23);

__webpack_require__(208)('keys', function () {
  return function keys(it) {
    return $keys(toObject(it));
  };
});


/***/ }),
/* 218 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var LIBRARY = __webpack_require__(30);
var global = __webpack_require__(8);
var ctx = __webpack_require__(29);
var classof = __webpack_require__(43);
var $export = __webpack_require__(14);
var isObject = __webpack_require__(26);
var aFunction = __webpack_require__(28);
var anInstance = __webpack_require__(189);
var forOf = __webpack_require__(192);
var speciesConstructor = __webpack_require__(86);
var task = __webpack_require__(87).set;
var microtask = __webpack_require__(202)();
var newPromiseCapabilityModule = __webpack_require__(47);
var perform = __webpack_require__(83);
var promiseResolve = __webpack_require__(84);
var PROMISE = 'Promise';
var TypeError = global.TypeError;
var process = global.process;
var $Promise = global[PROMISE];
var isNode = classof(process) == 'process';
var empty = function () { /* empty */ };
var Internal, newGenericPromiseCapability, OwnPromiseCapability, Wrapper;
var newPromiseCapability = newGenericPromiseCapability = newPromiseCapabilityModule.f;

var USE_NATIVE = !!function () {
  try {
    // correct subclassing with @@species support
    var promise = $Promise.resolve(1);
    var FakePromise = (promise.constructor = {})[__webpack_require__(6)('species')] = function (exec) {
      exec(empty, empty);
    };
    // unhandled rejections tracking support, NodeJS Promise without it fails @@species test
    return (isNode || typeof PromiseRejectionEvent == 'function') && promise.then(empty) instanceof FakePromise;
  } catch (e) { /* empty */ }
}();

// helpers
var sameConstructor = LIBRARY ? function (a, b) {
  // with library wrapper special case
  return a === b || a === $Promise && b === Wrapper;
} : function (a, b) {
  return a === b;
};
var isThenable = function (it) {
  var then;
  return isObject(it) && typeof (then = it.then) == 'function' ? then : false;
};
var notify = function (promise, isReject) {
  if (promise._n) return;
  promise._n = true;
  var chain = promise._c;
  microtask(function () {
    var value = promise._v;
    var ok = promise._s == 1;
    var i = 0;
    var run = function (reaction) {
      var handler = ok ? reaction.ok : reaction.fail;
      var resolve = reaction.resolve;
      var reject = reaction.reject;
      var domain = reaction.domain;
      var result, then;
      try {
        if (handler) {
          if (!ok) {
            if (promise._h == 2) onHandleUnhandled(promise);
            promise._h = 1;
          }
          if (handler === true) result = value;
          else {
            if (domain) domain.enter();
            result = handler(value);
            if (domain) domain.exit();
          }
          if (result === reaction.promise) {
            reject(TypeError('Promise-chain cycle'));
          } else if (then = isThenable(result)) {
            then.call(result, resolve, reject);
          } else resolve(result);
        } else reject(value);
      } catch (e) {
        reject(e);
      }
    };
    while (chain.length > i) run(chain[i++]); // variable length - can't use forEach
    promise._c = [];
    promise._n = false;
    if (isReject && !promise._h) onUnhandled(promise);
  });
};
var onUnhandled = function (promise) {
  task.call(global, function () {
    var value = promise._v;
    var unhandled = isUnhandled(promise);
    var result, handler, console;
    if (unhandled) {
      result = perform(function () {
        if (isNode) {
          process.emit('unhandledRejection', value, promise);
        } else if (handler = global.onunhandledrejection) {
          handler({ promise: promise, reason: value });
        } else if ((console = global.console) && console.error) {
          console.error('Unhandled promise rejection', value);
        }
      });
      // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should
      promise._h = isNode || isUnhandled(promise) ? 2 : 1;
    } promise._a = undefined;
    if (unhandled && result.e) throw result.v;
  });
};
var isUnhandled = function (promise) {
  if (promise._h == 1) return false;
  var chain = promise._a || promise._c;
  var i = 0;
  var reaction;
  while (chain.length > i) {
    reaction = chain[i++];
    if (reaction.fail || !isUnhandled(reaction.promise)) return false;
  } return true;
};
var onHandleUnhandled = function (promise) {
  task.call(global, function () {
    var handler;
    if (isNode) {
      process.emit('rejectionHandled', promise);
    } else if (handler = global.onrejectionhandled) {
      handler({ promise: promise, reason: promise._v });
    }
  });
};
var $reject = function (value) {
  var promise = this;
  if (promise._d) return;
  promise._d = true;
  promise = promise._w || promise; // unwrap
  promise._v = value;
  promise._s = 2;
  if (!promise._a) promise._a = promise._c.slice();
  notify(promise, true);
};
var $resolve = function (value) {
  var promise = this;
  var then;
  if (promise._d) return;
  promise._d = true;
  promise = promise._w || promise; // unwrap
  try {
    if (promise === value) throw TypeError("Promise can't be resolved itself");
    if (then = isThenable(value)) {
      microtask(function () {
        var wrapper = { _w: promise, _d: false }; // wrap
        try {
          then.call(value, ctx($resolve, wrapper, 1), ctx($reject, wrapper, 1));
        } catch (e) {
          $reject.call(wrapper, e);
        }
      });
    } else {
      promise._v = value;
      promise._s = 1;
      notify(promise, false);
    }
  } catch (e) {
    $reject.call({ _w: promise, _d: false }, e); // wrap
  }
};

// constructor polyfill
if (!USE_NATIVE) {
  // 25.4.3.1 Promise(executor)
  $Promise = function Promise(executor) {
    anInstance(this, $Promise, PROMISE, '_h');
    aFunction(executor);
    Internal.call(this);
    try {
      executor(ctx($resolve, this, 1), ctx($reject, this, 1));
    } catch (err) {
      $reject.call(this, err);
    }
  };
  // eslint-disable-next-line no-unused-vars
  Internal = function Promise(executor) {
    this._c = [];             // <- awaiting reactions
    this._a = undefined;      // <- checked in isUnhandled reactions
    this._s = 0;              // <- state
    this._d = false;          // <- done
    this._v = undefined;      // <- value
    this._h = 0;              // <- rejection state, 0 - default, 1 - handled, 2 - unhandled
    this._n = false;          // <- notify
  };
  Internal.prototype = __webpack_require__(209)($Promise.prototype, {
    // 25.4.5.3 Promise.prototype.then(onFulfilled, onRejected)
    then: function then(onFulfilled, onRejected) {
      var reaction = newPromiseCapability(speciesConstructor(this, $Promise));
      reaction.ok = typeof onFulfilled == 'function' ? onFulfilled : true;
      reaction.fail = typeof onRejected == 'function' && onRejected;
      reaction.domain = isNode ? process.domain : undefined;
      this._c.push(reaction);
      if (this._a) this._a.push(reaction);
      if (this._s) notify(this, false);
      return reaction.promise;
    },
    // 25.4.5.1 Promise.prototype.catch(onRejected)
    'catch': function (onRejected) {
      return this.then(undefined, onRejected);
    }
  });
  OwnPromiseCapability = function () {
    var promise = new Internal();
    this.promise = promise;
    this.resolve = ctx($resolve, promise, 1);
    this.reject = ctx($reject, promise, 1);
  };
  newPromiseCapabilityModule.f = newPromiseCapability = function (C) {
    return sameConstructor($Promise, C)
      ? new OwnPromiseCapability(C)
      : newGenericPromiseCapability(C);
  };
}

$export($export.G + $export.W + $export.F * !USE_NATIVE, { Promise: $Promise });
__webpack_require__(33)($Promise, PROMISE);
__webpack_require__(210)(PROMISE);
Wrapper = __webpack_require__(5)[PROMISE];

// statics
$export($export.S + $export.F * !USE_NATIVE, PROMISE, {
  // 25.4.4.5 Promise.reject(r)
  reject: function reject(r) {
    var capability = newPromiseCapability(this);
    var $$reject = capability.reject;
    $$reject(r);
    return capability.promise;
  }
});
$export($export.S + $export.F * (LIBRARY || !USE_NATIVE), PROMISE, {
  // 25.4.4.6 Promise.resolve(x)
  resolve: function resolve(x) {
    // instanceof instead of internal slot check because we should fix it without replacement native Promise core
    if (x instanceof $Promise && sameConstructor(x.constructor, this)) return x;
    return promiseResolve(this, x);
  }
});
$export($export.S + $export.F * !(USE_NATIVE && __webpack_require__(198)(function (iter) {
  $Promise.all(iter)['catch'](empty);
})), PROMISE, {
  // 25.4.4.1 Promise.all(iterable)
  all: function all(iterable) {
    var C = this;
    var capability = newPromiseCapability(C);
    var resolve = capability.resolve;
    var reject = capability.reject;
    var result = perform(function () {
      var values = [];
      var index = 0;
      var remaining = 1;
      forOf(iterable, false, function (promise) {
        var $index = index++;
        var alreadyCalled = false;
        values.push(undefined);
        remaining++;
        C.resolve(promise).then(function (value) {
          if (alreadyCalled) return;
          alreadyCalled = true;
          values[$index] = value;
          --remaining || resolve(values);
        }, reject);
      });
      --remaining || resolve(values);
    });
    if (result.e) reject(result.v);
    return capability.promise;
  },
  // 25.4.4.4 Promise.race(iterable)
  race: function race(iterable) {
    var C = this;
    var capability = newPromiseCapability(C);
    var reject = capability.reject;
    var result = perform(function () {
      forOf(iterable, false, function (promise) {
        C.resolve(promise).then(capability.resolve, reject);
      });
    });
    if (result.e) reject(result.v);
    return capability.promise;
  }
});


/***/ }),
/* 219 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// ECMAScript 6 symbols shim
var global = __webpack_require__(8);
var has = __webpack_require__(15);
var DESCRIPTORS = __webpack_require__(13);
var $export = __webpack_require__(14);
var redefine = __webpack_require__(85);
var META = __webpack_require__(201).KEY;
var $fails = __webpack_require__(21);
var shared = __webpack_require__(50);
var setToStringTag = __webpack_require__(33);
var uid = __webpack_require__(34);
var wks = __webpack_require__(6);
var wksExt = __webpack_require__(55);
var wksDefine = __webpack_require__(54);
var keyOf = __webpack_require__(200);
var enumKeys = __webpack_require__(191);
var isArray = __webpack_require__(195);
var anObject = __webpack_require__(11);
var toIObject = __webpack_require__(18);
var toPrimitive = __webpack_require__(53);
var createDesc = __webpack_require__(32);
var _create = __webpack_require__(80);
var gOPNExt = __webpack_require__(206);
var $GOPD = __webpack_require__(205);
var $DP = __webpack_require__(17);
var $keys = __webpack_require__(23);
var gOPD = $GOPD.f;
var dP = $DP.f;
var gOPN = gOPNExt.f;
var $Symbol = global.Symbol;
var $JSON = global.JSON;
var _stringify = $JSON && $JSON.stringify;
var PROTOTYPE = 'prototype';
var HIDDEN = wks('_hidden');
var TO_PRIMITIVE = wks('toPrimitive');
var isEnum = {}.propertyIsEnumerable;
var SymbolRegistry = shared('symbol-registry');
var AllSymbols = shared('symbols');
var OPSymbols = shared('op-symbols');
var ObjectProto = Object[PROTOTYPE];
var USE_NATIVE = typeof $Symbol == 'function';
var QObject = global.QObject;
// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173
var setter = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;

// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687
var setSymbolDesc = DESCRIPTORS && $fails(function () {
  return _create(dP({}, 'a', {
    get: function () { return dP(this, 'a', { value: 7 }).a; }
  })).a != 7;
}) ? function (it, key, D) {
  var protoDesc = gOPD(ObjectProto, key);
  if (protoDesc) delete ObjectProto[key];
  dP(it, key, D);
  if (protoDesc && it !== ObjectProto) dP(ObjectProto, key, protoDesc);
} : dP;

var wrap = function (tag) {
  var sym = AllSymbols[tag] = _create($Symbol[PROTOTYPE]);
  sym._k = tag;
  return sym;
};

var isSymbol = USE_NATIVE && typeof $Symbol.iterator == 'symbol' ? function (it) {
  return typeof it == 'symbol';
} : function (it) {
  return it instanceof $Symbol;
};

var $defineProperty = function defineProperty(it, key, D) {
  if (it === ObjectProto) $defineProperty(OPSymbols, key, D);
  anObject(it);
  key = toPrimitive(key, true);
  anObject(D);
  if (has(AllSymbols, key)) {
    if (!D.enumerable) {
      if (!has(it, HIDDEN)) dP(it, HIDDEN, createDesc(1, {}));
      it[HIDDEN][key] = true;
    } else {
      if (has(it, HIDDEN) && it[HIDDEN][key]) it[HIDDEN][key] = false;
      D = _create(D, { enumerable: createDesc(0, false) });
    } return setSymbolDesc(it, key, D);
  } return dP(it, key, D);
};
var $defineProperties = function defineProperties(it, P) {
  anObject(it);
  var keys = enumKeys(P = toIObject(P));
  var i = 0;
  var l = keys.length;
  var key;
  while (l > i) $defineProperty(it, key = keys[i++], P[key]);
  return it;
};
var $create = function create(it, P) {
  return P === undefined ? _create(it) : $defineProperties(_create(it), P);
};
var $propertyIsEnumerable = function propertyIsEnumerable(key) {
  var E = isEnum.call(this, key = toPrimitive(key, true));
  if (this === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return false;
  return E || !has(this, key) || !has(AllSymbols, key) || has(this, HIDDEN) && this[HIDDEN][key] ? E : true;
};
var $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key) {
  it = toIObject(it);
  key = toPrimitive(key, true);
  if (it === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return;
  var D = gOPD(it, key);
  if (D && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key])) D.enumerable = true;
  return D;
};
var $getOwnPropertyNames = function getOwnPropertyNames(it) {
  var names = gOPN(toIObject(it));
  var result = [];
  var i = 0;
  var key;
  while (names.length > i) {
    if (!has(AllSymbols, key = names[i++]) && key != HIDDEN && key != META) result.push(key);
  } return result;
};
var $getOwnPropertySymbols = function getOwnPropertySymbols(it) {
  var IS_OP = it === ObjectProto;
  var names = gOPN(IS_OP ? OPSymbols : toIObject(it));
  var result = [];
  var i = 0;
  var key;
  while (names.length > i) {
    if (has(AllSymbols, key = names[i++]) && (IS_OP ? has(ObjectProto, key) : true)) result.push(AllSymbols[key]);
  } return result;
};

// 19.4.1.1 Symbol([description])
if (!USE_NATIVE) {
  $Symbol = function Symbol() {
    if (this instanceof $Symbol) throw TypeError('Symbol is not a constructor!');
    var tag = uid(arguments.length > 0 ? arguments[0] : undefined);
    var $set = function (value) {
      if (this === ObjectProto) $set.call(OPSymbols, value);
      if (has(this, HIDDEN) && has(this[HIDDEN], tag)) this[HIDDEN][tag] = false;
      setSymbolDesc(this, tag, createDesc(1, value));
    };
    if (DESCRIPTORS && setter) setSymbolDesc(ObjectProto, tag, { configurable: true, set: $set });
    return wrap(tag);
  };
  redefine($Symbol[PROTOTYPE], 'toString', function toString() {
    return this._k;
  });

  $GOPD.f = $getOwnPropertyDescriptor;
  $DP.f = $defineProperty;
  __webpack_require__(81).f = gOPNExt.f = $getOwnPropertyNames;
  __webpack_require__(31).f = $propertyIsEnumerable;
  __webpack_require__(48).f = $getOwnPropertySymbols;

  if (DESCRIPTORS && !__webpack_require__(30)) {
    redefine(ObjectProto, 'propertyIsEnumerable', $propertyIsEnumerable, true);
  }

  wksExt.f = function (name) {
    return wrap(wks(name));
  };
}

$export($export.G + $export.W + $export.F * !USE_NATIVE, { Symbol: $Symbol });

for (var es6Symbols = (
  // 19.4.2.2, 19.4.2.3, 19.4.2.4, 19.4.2.6, 19.4.2.8, 19.4.2.9, 19.4.2.10, 19.4.2.11, 19.4.2.12, 19.4.2.13, 19.4.2.14
  'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'
).split(','), j = 0; es6Symbols.length > j;)wks(es6Symbols[j++]);

for (var wellKnownSymbols = $keys(wks.store), k = 0; wellKnownSymbols.length > k;) wksDefine(wellKnownSymbols[k++]);

$export($export.S + $export.F * !USE_NATIVE, 'Symbol', {
  // 19.4.2.1 Symbol.for(key)
  'for': function (key) {
    return has(SymbolRegistry, key += '')
      ? SymbolRegistry[key]
      : SymbolRegistry[key] = $Symbol(key);
  },
  // 19.4.2.5 Symbol.keyFor(sym)
  keyFor: function keyFor(key) {
    if (isSymbol(key)) return keyOf(SymbolRegistry, key);
    throw TypeError(key + ' is not a symbol!');
  },
  useSetter: function () { setter = true; },
  useSimple: function () { setter = false; }
});

$export($export.S + $export.F * !USE_NATIVE, 'Object', {
  // 19.1.2.2 Object.create(O [, Properties])
  create: $create,
  // 19.1.2.4 Object.defineProperty(O, P, Attributes)
  defineProperty: $defineProperty,
  // 19.1.2.3 Object.defineProperties(O, Properties)
  defineProperties: $defineProperties,
  // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)
  getOwnPropertyDescriptor: $getOwnPropertyDescriptor,
  // 19.1.2.7 Object.getOwnPropertyNames(O)
  getOwnPropertyNames: $getOwnPropertyNames,
  // 19.1.2.8 Object.getOwnPropertySymbols(O)
  getOwnPropertySymbols: $getOwnPropertySymbols
});

// 24.3.2 JSON.stringify(value [, replacer [, space]])
$JSON && $export($export.S + $export.F * (!USE_NATIVE || $fails(function () {
  var S = $Symbol();
  // MS Edge converts symbol values to JSON as {}
  // WebKit converts symbol values to JSON as null
  // V8 throws on boxed symbols
  return _stringify([S]) != '[null]' || _stringify({ a: S }) != '{}' || _stringify(Object(S)) != '{}';
})), 'JSON', {
  stringify: function stringify(it) {
    if (it === undefined || isSymbol(it)) return; // IE8 returns string on undefined
    var args = [it];
    var i = 1;
    var replacer, $replacer;
    while (arguments.length > i) args.push(arguments[i++]);
    replacer = args[1];
    if (typeof replacer == 'function') $replacer = replacer;
    if ($replacer || !isArray(replacer)) replacer = function (key, value) {
      if ($replacer) value = $replacer.call(this, key, value);
      if (!isSymbol(value)) return value;
    };
    args[1] = replacer;
    return _stringify.apply($JSON, args);
  }
});

// 19.4.3.4 Symbol.prototype[@@toPrimitive](hint)
$Symbol[PROTOTYPE][TO_PRIMITIVE] || __webpack_require__(16)($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);
// 19.4.3.5 Symbol.prototype[@@toStringTag]
setToStringTag($Symbol, 'Symbol');
// 20.2.1.9 Math[@@toStringTag]
setToStringTag(Math, 'Math', true);
// 24.3.3 JSON[@@toStringTag]
setToStringTag(global.JSON, 'JSON', true);


/***/ }),
/* 220 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// https://github.com/tc39/proposal-promise-finally

var $export = __webpack_require__(14);
var core = __webpack_require__(5);
var global = __webpack_require__(8);
var speciesConstructor = __webpack_require__(86);
var promiseResolve = __webpack_require__(84);

$export($export.P + $export.R, 'Promise', { 'finally': function (onFinally) {
  var C = speciesConstructor(this, core.Promise || global.Promise);
  var isFunction = typeof onFinally == 'function';
  return this.then(
    isFunction ? function (x) {
      return promiseResolve(C, onFinally()).then(function () { return x; });
    } : onFinally,
    isFunction ? function (e) {
      return promiseResolve(C, onFinally()).then(function () { throw e; });
    } : onFinally
  );
} });


/***/ }),
/* 221 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// https://github.com/tc39/proposal-promise-try
var $export = __webpack_require__(14);
var newPromiseCapability = __webpack_require__(47);
var perform = __webpack_require__(83);

$export($export.S, 'Promise', { 'try': function (callbackfn) {
  var promiseCapability = newPromiseCapability.f(this);
  var result = perform(callbackfn);
  (result.e ? promiseCapability.reject : promiseCapability.resolve)(result.v);
  return promiseCapability.promise;
} });


/***/ }),
/* 222 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(54)('asyncIterator');


/***/ }),
/* 223 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(54)('observable');


/***/ }),
/* 224 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(2)(undefined);
// imports


// module
exports.push([module.i, ".outframe,.writeframe{width:100%}.center-left,.center-right{width:calc(50% - 437px)}@media screen and (min-width:1234px){.summary{width:calc(50% - 407px)}}@media screen and (max-width:1234px){.summary{width:198px}}@media screen and (min-width:998px){.sideframe{width:calc(50% - 407px)}}@media screen and (max-width:998px){.sideframe{width:80px}}@media screen and (min-width:877.7777777777777px){.outframe .contentframe,.writeframe .contentframe{width:790px;margin:0 auto}.summary:hover{width:calc(50% + 407px)}}@media screen and (max-width:877.7777777777777px){.outframe .contentframe,.writeframe .contentframe{margin:0 5%}.summary:hover{width:calc(100% - 50px)}}sup{vertical-align:8px}sub,sup{font-size:16px;line-height:18px}sub{vertical-align:-8px}.btns,.links,.name,.text,a,abbr,b,body,button,dfn,input,p,select,textarea,time{font-family:serif;font-family:\\\\82B1\\5712\\660E\\671D A,\\\\82B1\\5712\\660E\\671D B,HanaMinA,HanaMinB,serif;font-size:22px;line-height:33px}h6{padding:7.333333333333333px}.date,.date a,.date abbr,.date b,.date button,.date dfn,.date input,.date p,.date select,.date textarea,.date time,.fine,.fine a,.fine abbr,.fine b,.fine button,.fine dfn,.fine input,.fine p,.fine select,.fine textarea,.fine time,.potofs tbody td,.potofs tbody td a,.potofs tbody td abbr,.potofs tbody td b,.potofs tbody td button,.potofs tbody td dfn,.potofs tbody td input,.potofs tbody td p,.potofs tbody td select,.potofs tbody td textarea,.potofs tbody td time,.potofs tbody th,.potofs tbody th a,.potofs tbody th abbr,.potofs tbody th b,.potofs tbody th button,.potofs tbody th dfn,.potofs tbody th input,.potofs tbody th p,.potofs tbody th select,.potofs tbody th textarea,.potofs tbody th time,code,code a,code abbr,code b,code button,code dfn,code input,code p,code select,code textarea,code time,h6,h6 a,h6 abbr,h6 b,h6 button,h6 dfn,h6 input,h6 p,h6 select,h6 textarea,h6 time,kbd,kbd a,kbd abbr,kbd b,kbd button,kbd dfn,kbd input,kbd p,kbd select,kbd textarea,kbd time{font-family:serif;font-family:\\\\82B1\\5712\\660E\\671D A,\\\\82B1\\5712\\660E\\671D B,HanaMinA,HanaMinB,serif;font-size:16px;line-height:19px}.chrblank,.chrblank a,.chrblank abbr,.chrblank b,.chrblank button,.chrblank dfn,.chrblank input,.chrblank p,.chrblank select,.chrblank textarea,.chrblank time{font-family:serif;font-family:\\\\82B1\\5712\\660E\\671D A,\\\\82B1\\5712\\660E\\671D B,HanaMinA,HanaMinB,serif;font-size:12px;line-height:15px}", ""]);

// exports


/***/ }),
/* 225 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(2)(undefined);
// imports


// module
exports.push([module.i, ".outframe,.writeframe{width:100%}.center-left,.center-right{width:calc(50% - 347px)}@media screen and (min-width:946px){.summary{width:calc(50% - 317px)}}@media screen and (max-width:946px){.summary{width:144px}}@media screen and (min-width:818px){.sideframe{width:calc(50% - 317px)}}@media screen and (max-width:818px){.sideframe{width:80px}}@media screen and (min-width:677.7777777777777px){.outframe .contentframe,.writeframe .contentframe{width:610px;margin:0 auto}.summary:hover{width:calc(50% + 317px)}}@media screen and (max-width:677.7777777777777px){.outframe .contentframe,.writeframe .contentframe{margin:0 5%}.summary:hover{width:calc(100% - 50px)}}sup{vertical-align:6px}sub,sup{font-size:12px;line-height:14px}sub{vertical-align:-6px}.btns,.links,.name,.text,a,abbr,b,body,button,dfn,input,p,select,textarea,time{font-family:serif;font-family:\\\\82B1\\5712\\660E\\671D A,\\\\82B1\\5712\\660E\\671D B,HanaMinA,HanaMinB,serif;font-size:16px;line-height:24px}h6{padding:5.333333333333333px}.date,.date a,.date abbr,.date b,.date button,.date dfn,.date input,.date p,.date select,.date textarea,.date time,.fine,.fine a,.fine abbr,.fine b,.fine button,.fine dfn,.fine input,.fine p,.fine select,.fine textarea,.fine time,.potofs tbody td,.potofs tbody td a,.potofs tbody td abbr,.potofs tbody td b,.potofs tbody td button,.potofs tbody td dfn,.potofs tbody td input,.potofs tbody td p,.potofs tbody td select,.potofs tbody td textarea,.potofs tbody td time,.potofs tbody th,.potofs tbody th a,.potofs tbody th abbr,.potofs tbody th b,.potofs tbody th button,.potofs tbody th dfn,.potofs tbody th input,.potofs tbody th p,.potofs tbody th select,.potofs tbody th textarea,.potofs tbody th time,code,code a,code abbr,code b,code button,code dfn,code input,code p,code select,code textarea,code time,h6,h6 a,h6 abbr,h6 b,h6 button,h6 dfn,h6 input,h6 p,h6 select,h6 textarea,h6 time,kbd,kbd a,kbd abbr,kbd b,kbd button,kbd dfn,kbd input,kbd p,kbd select,kbd textarea,kbd time{font-family:serif;font-family:\\\\82B1\\5712\\660E\\671D A,\\\\82B1\\5712\\660E\\671D B,HanaMinA,HanaMinB,serif;font-size:12px;line-height:14px}.chrblank,.chrblank a,.chrblank abbr,.chrblank b,.chrblank button,.chrblank dfn,.chrblank input,.chrblank p,.chrblank select,.chrblank textarea,.chrblank time{font-family:serif;font-family:\\\\82B1\\5712\\660E\\671D A,\\\\82B1\\5712\\660E\\671D B,HanaMinA,HanaMinB,serif;font-size:12px;line-height:15px}", ""]);

// exports


/***/ }),
/* 226 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(2)(undefined);
// imports


// module
exports.push([module.i, ".outframe,.writeframe{width:100%}.center-left,.center-right{width:calc(50% - 287px)}@media screen and (min-width:754px){.summary{width:calc(50% - 257px)}}@media screen and (max-width:754px){.summary{width:108px}}@media screen and (min-width:698px){.sideframe{width:calc(50% - 257px)}}@media screen and (max-width:698px){.sideframe{width:80px}}@media screen and (min-width:544.4444444444445px){.outframe .contentframe,.writeframe .contentframe{width:490px;margin:0 auto}.summary:hover{width:calc(50% + 257px)}}@media screen and (max-width:544.4444444444445px){.outframe .contentframe,.writeframe .contentframe{margin:0 5%}.summary:hover{width:calc(100% - 50px)}}sup{vertical-align:4.5px}sub,sup{font-size:9px;line-height:11px}sub{vertical-align:-4.5px}.btns,.links,.name,.text,a,abbr,b,body,button,dfn,input,p,select,textarea,time{font-family:sans-serif;font-family:Avenir,Helvetica Neue,Helvetica,\\\\6E38\\30B4\\30B7\\30C3\\30AF,Yu Gothic,sans-serif;font-size:12px;line-height:18px}h6{padding:4px}.date,.date a,.date abbr,.date b,.date button,.date dfn,.date input,.date p,.date select,.date textarea,.date time,.fine,.fine a,.fine abbr,.fine b,.fine button,.fine dfn,.fine input,.fine p,.fine select,.fine textarea,.fine time,.potofs tbody td,.potofs tbody td a,.potofs tbody td abbr,.potofs tbody td b,.potofs tbody td button,.potofs tbody td dfn,.potofs tbody td input,.potofs tbody td p,.potofs tbody td select,.potofs tbody td textarea,.potofs tbody td time,.potofs tbody th,.potofs tbody th a,.potofs tbody th abbr,.potofs tbody th b,.potofs tbody th button,.potofs tbody th dfn,.potofs tbody th input,.potofs tbody th p,.potofs tbody th select,.potofs tbody th textarea,.potofs tbody th time,code,code a,code abbr,code b,code button,code dfn,code input,code p,code select,code textarea,code time,h6,h6 a,h6 abbr,h6 b,h6 button,h6 dfn,h6 input,h6 p,h6 select,h6 textarea,h6 time,kbd,kbd a,kbd abbr,kbd b,kbd button,kbd dfn,kbd input,kbd p,kbd select,kbd textarea,kbd time{font-family:sans-serif;font-family:Avenir,Helvetica Neue,Helvetica,\\\\6E38\\30B4\\30B7\\30C3\\30AF,Yu Gothic,sans-serif;font-size:9px;line-height:10.5px}.chrblank,.chrblank a,.chrblank abbr,.chrblank b,.chrblank button,.chrblank dfn,.chrblank input,.chrblank p,.chrblank select,.chrblank textarea,.chrblank time{font-family:sans-serif;font-family:Avenir,Helvetica Neue,Helvetica,\\\\6E38\\30B4\\30B7\\30C3\\30AF,Yu Gothic,sans-serif;font-size:12px;line-height:15px}", ""]);

// exports


/***/ }),
/* 227 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(2)(undefined);
// imports


// module
exports.push([module.i, ".outframe,.writeframe{width:100%}.center-left,.center-right{width:calc(50% - 347px)}@media screen and (min-width:946px){.summary{width:calc(50% - 317px)}}@media screen and (max-width:946px){.summary{width:144px}}@media screen and (min-width:818px){.sideframe{width:calc(50% - 317px)}}@media screen and (max-width:818px){.sideframe{width:80px}}@media screen and (min-width:677.7777777777777px){.outframe .contentframe,.writeframe .contentframe{width:610px;margin:0 auto}.summary:hover{width:calc(50% + 317px)}}@media screen and (max-width:677.7777777777777px){.outframe .contentframe,.writeframe .contentframe{margin:0 5%}.summary:hover{width:calc(100% - 50px)}}sup{vertical-align:6px}sub,sup{font-size:12px;line-height:14px}sub{vertical-align:-6px}.btns,.links,.name,.text,a,abbr,b,body,button,dfn,input,p,select,textarea,time{font-family:sans-serif;font-family:Avenir,Helvetica Neue,Helvetica,\\\\6E38\\30B4\\30B7\\30C3\\30AF,Yu Gothic,sans-serif;font-size:16px;line-height:24px}h6{padding:5.333333333333333px}.date,.date a,.date abbr,.date b,.date button,.date dfn,.date input,.date p,.date select,.date textarea,.date time,.fine,.fine a,.fine abbr,.fine b,.fine button,.fine dfn,.fine input,.fine p,.fine select,.fine textarea,.fine time,.potofs tbody td,.potofs tbody td a,.potofs tbody td abbr,.potofs tbody td b,.potofs tbody td button,.potofs tbody td dfn,.potofs tbody td input,.potofs tbody td p,.potofs tbody td select,.potofs tbody td textarea,.potofs tbody td time,.potofs tbody th,.potofs tbody th a,.potofs tbody th abbr,.potofs tbody th b,.potofs tbody th button,.potofs tbody th dfn,.potofs tbody th input,.potofs tbody th p,.potofs tbody th select,.potofs tbody th textarea,.potofs tbody th time,code,code a,code abbr,code b,code button,code dfn,code input,code p,code select,code textarea,code time,h6,h6 a,h6 abbr,h6 b,h6 button,h6 dfn,h6 input,h6 p,h6 select,h6 textarea,h6 time,kbd,kbd a,kbd abbr,kbd b,kbd button,kbd dfn,kbd input,kbd p,kbd select,kbd textarea,kbd time{font-family:sans-serif;font-family:Avenir,Helvetica Neue,Helvetica,\\\\6E38\\30B4\\30B7\\30C3\\30AF,Yu Gothic,sans-serif;font-size:12px;line-height:14px}.chrblank,.chrblank a,.chrblank abbr,.chrblank b,.chrblank button,.chrblank dfn,.chrblank input,.chrblank p,.chrblank select,.chrblank textarea,.chrblank time{font-family:sans-serif;font-family:Avenir,Helvetica Neue,Helvetica,\\\\6E38\\30B4\\30B7\\30C3\\30AF,Yu Gothic,sans-serif;font-size:12px;line-height:15px}", ""]);

// exports


/***/ }),
/* 228 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(2)(undefined);
// imports


// module
exports.push([module.i, ".contentframe .inframe{background-repeat:repeat-y;background-position:0;background-attachment:local;background-image:url(\"http://s3-ap-northeast-1.amazonaws.com/giji-assets/images/bg/film-L.png\")}.filmline{background-image:url(\"http://s3-ap-northeast-1.amazonaws.com/giji-assets/images/bg/film-border.png\")}body{background-color:#927d5f}*{border-color:#663}.MAKER,.MAKER textarea{color:silver;background-color:#151515;border-color:#7e7e7e}.MAKER.baloon{border-color:#151515}.MAKER .fa-check{color:#5fb14a}.MAKER .fa-warning{color:#c87856}.MAKER .fa-ban{color:#c85656}.MAKER [data-tooltip],.MAKER [title]{background-color:#3f3f3f}.MAKER [data-tooltip]:after,.MAKER [data-tooltip]:before,.MAKER [title]:after,.MAKER [title]:before,.MAKER b{color:silver;background-color:#3f3f3f}.MAKER a:not([name]),body a:not([name]).MAKER{color:silver}.MAKER a:not([name]):visited,body a:not([name]).MAKER:visited{background-color:#3d4b39}.MAKER a:not([name]):link,body a:not([name]).MAKER:link{background-color:#484556}.MAKER .active{background-color:#a8a8a8}.MAKER a:not([name]),.MAKER button,.MAKER input,body a:not([name]).MAKER{background-color:#3f3f3f}.MAKER a:not([name]):focus,.MAKER a:not([name]):hover,.MAKER button:focus,.MAKER button:hover,.MAKER input:focus,.MAKER input:hover,body a:not([name]).MAKER:focus,body a:not([name]).MAKER:hover{background-color:#939393}.MAKER a:not([name]).active,.MAKER a:not([name]) .active,.MAKER a:not([name]):active,.MAKER button.active,.MAKER button .active,.MAKER button:active,.MAKER input.active,.MAKER input .active,.MAKER input:active,body a:not([name]).MAKER.active,body a:not([name]).MAKER .active,body a:not([name]).MAKER:active{background-color:#a8a8a8}.MAKER input[type=checkbox],.MAKER input[type=radio]{background-color:#484556}.MAKER input[type=checkbox]:checked,.MAKER input[type=radio]:checked{background-color:#3d4b39}.MAKER .date,.MAKER .name,.MAKER em{color:#696969}.MAKER abbr,.MAKER rt,.MAKER strong,.MAKER sub,.MAKER sup{background-color:#7e7e7e;color:#3f3f3f}.ADMIN,.ADMIN textarea{color:#e2cc56;background-color:#00041c;border-color:#a88d00}.ADMIN.baloon{border-color:#00041c}.ADMIN .fa-check{color:#6ab527}.ADMIN .fa-warning{color:#d37c33}.ADMIN .fa-ban{color:#d35a33}.ADMIN [data-tooltip],.ADMIN [title]{background-color:#000d54}.ADMIN [data-tooltip]:after,.ADMIN [data-tooltip]:before,.ADMIN [title]:after,.ADMIN [title]:before,.ADMIN b{color:#e2cc56;background-color:#000d54}.ADMIN a:not([name]),body a:not([name]).ADMIN{color:#e2cc56}.ADMIN a:not([name]):visited,body a:not([name]).ADMIN:visited{background-color:#051f4b}.ADMIN a:not([name]):link,body a:not([name]).ADMIN:link{background-color:#111968}.ADMIN .active{background-color:#e0bd00}.ADMIN a:not([name]),.ADMIN button,.ADMIN input,body a:not([name]).ADMIN{background-color:#000d54}.ADMIN a:not([name]):focus,.ADMIN a:not([name]):hover,.ADMIN button:focus,.ADMIN button:hover,.ADMIN input:focus,.ADMIN input:hover,body a:not([name]).ADMIN:focus,body a:not([name]).ADMIN:hover{background-color:#c4a500}.ADMIN a:not([name]).active,.ADMIN a:not([name]) .active,.ADMIN a:not([name]):active,.ADMIN button.active,.ADMIN button .active,.ADMIN button:active,.ADMIN input.active,.ADMIN input .active,.ADMIN input:active,body a:not([name]).ADMIN.active,body a:not([name]).ADMIN .active,body a:not([name]).ADMIN:active{background-color:#e0bd00}.ADMIN input[type=checkbox],.ADMIN input[type=radio]{background-color:#111968}.ADMIN input[type=checkbox]:checked,.ADMIN input[type=radio]:checked{background-color:#051f4b}.ADMIN .date,.ADMIN .name,.ADMIN em{color:#8c7600}.ADMIN abbr,.ADMIN rt,.ADMIN strong,.ADMIN sub,.ADMIN sup{background-color:#a88d00;color:#000d54}.dark,.dark textarea,.links,.links textarea,.TITLE,.TITLE textarea{color:silver;background-color:#000;border-color:#565656}.dark.baloon,.links.baloon,.TITLE.baloon{border-color:#000}.dark .fa-check,.links .fa-check,.TITLE .fa-check{color:#5fb14a}.dark .fa-warning,.links .fa-warning,.TITLE .fa-warning{color:#c87856}.dark .fa-ban,.links .fa-ban,.TITLE .fa-ban{color:#c85656}.dark [data-tooltip],.dark [title],.links [data-tooltip],.links [title],.TITLE [data-tooltip],.TITLE [title]{background-color:#1e1e1e}.dark [data-tooltip]:after,.dark [data-tooltip]:before,.dark [title]:after,.dark [title]:before,.dark b,.links [data-tooltip]:after,.links [data-tooltip]:before,.links [title]:after,.links [title]:before,.links b,.TITLE [data-tooltip]:after,.TITLE [data-tooltip]:before,.TITLE [title]:after,.TITLE [title]:before,.TITLE b{color:silver;background-color:#1e1e1e}.dark a:not([name]),.links a:not([name]),.TITLE a:not([name]),body a:not([name]).dark,body a:not([name]).links,body a:not([name]).TITLE{color:silver}.dark a:not([name]):visited,.links a:not([name]):visited,.TITLE a:not([name]):visited,body a:not([name]).dark:visited,body a:not([name]).links:visited,body a:not([name]).TITLE:visited{background-color:#202e1c}.dark a:not([name]):link,.links a:not([name]):link,.TITLE a:not([name]):link,body a:not([name]).dark:link,body a:not([name]).links:link,body a:not([name]).TITLE:link{background-color:#2b2839}.dark .active,.links .active,.TITLE .active{background-color:#565656}.dark a:not([name]),.dark button,.dark input,.links a:not([name]),.links button,.links input,.TITLE a:not([name]),.TITLE button,.TITLE input,body a:not([name]).dark,body a:not([name]).links,body a:not([name]).TITLE{background-color:#1e1e1e}.dark a:not([name]):focus,.dark a:not([name]):hover,.dark button:focus,.dark button:hover,.dark input:focus,.dark input:hover,.links a:not([name]):focus,.links a:not([name]):hover,.links button:focus,.links button:hover,.links input:focus,.links input:hover,.TITLE a:not([name]):focus,.TITLE a:not([name]):hover,.TITLE button:focus,.TITLE button:hover,.TITLE input:focus,.TITLE input:hover,body a:not([name]).dark:focus,body a:not([name]).dark:hover,body a:not([name]).links:focus,body a:not([name]).links:hover,body a:not([name]).TITLE:focus,body a:not([name]).TITLE:hover{background-color:#414141}.dark a:not([name]).active,.dark a:not([name]) .active,.dark a:not([name]):active,.dark button.active,.dark button .active,.dark button:active,.dark input.active,.dark input .active,.dark input:active,.links a:not([name]).active,.links a:not([name]) .active,.links a:not([name]):active,.links button.active,.links button .active,.links button:active,.links input.active,.links input .active,.links input:active,.TITLE a:not([name]).active,.TITLE a:not([name]) .active,.TITLE a:not([name]):active,.TITLE button.active,.TITLE button .active,.TITLE button:active,.TITLE input.active,.TITLE input .active,.TITLE input:active,body a:not([name]).dark.active,body a:not([name]).dark .active,body a:not([name]).dark:active,body a:not([name]).links.active,body a:not([name]).links .active,body a:not([name]).links:active,body a:not([name]).TITLE.active,body a:not([name]).TITLE .active,body a:not([name]).TITLE:active{background-color:#565656}.dark input[type=checkbox],.dark input[type=radio],.links input[type=checkbox],.links input[type=radio],.TITLE input[type=checkbox],.TITLE input[type=radio]{background-color:#2b2839}.dark input[type=checkbox]:checked,.dark input[type=radio]:checked,.links input[type=checkbox]:checked,.links input[type=radio]:checked,.TITLE input[type=checkbox]:checked,.TITLE input[type=radio]:checked{background-color:#202e1c}.dark .date,.dark .name,.dark em,.links .date,.links .name,.links em,.TITLE .date,.TITLE .name,.TITLE em{color:#565656}.dark abbr,.dark rt,.dark strong,.dark sub,.dark sup,.links abbr,.links rt,.links strong,.links sub,.links sup,.TITLE abbr,.TITLE rt,.TITLE strong,.TITLE sub,.TITLE sup{background-color:#565656;color:#1e1e1e}.btns,.btns textarea,.chrblank,.chrblank textarea,.footer,.footer textarea,.header,.header textarea{color:silver;background-color:#4d4e46;border-color:#898a84}.btns.baloon,.chrblank.baloon,.footer.baloon,.header.baloon{border-color:#4d4e46}.btns .fa-check,.chrblank .fa-check,.footer .fa-check,.header .fa-check{color:#5fb14a}.btns .fa-warning,.chrblank .fa-warning,.footer .fa-warning,.header .fa-warning{color:#c87856}.btns .fa-ban,.chrblank .fa-ban,.footer .fa-ban,.header .fa-ban{color:#c85656}.btns [data-tooltip],.btns [title],.chrblank [data-tooltip],.chrblank [title],.footer [data-tooltip],.footer [title],.header [data-tooltip],.header [title]{background-color:#62635c}.btns [data-tooltip]:after,.btns [data-tooltip]:before,.btns [title]:after,.btns [title]:before,.btns b,.chrblank [data-tooltip]:after,.chrblank [data-tooltip]:before,.chrblank [title]:after,.chrblank [title]:before,.chrblank b,.footer [data-tooltip]:after,.footer [data-tooltip]:before,.footer [title]:after,.footer [title]:before,.footer b,.header [data-tooltip]:after,.header [data-tooltip]:before,.header [title]:after,.header [title]:before,.header b{color:silver;background-color:#62635c}.btns a:not([name]),.chrblank a:not([name]),.footer a:not([name]),.header a:not([name]),body a:not([name]).btns,body a:not([name]).chrblank,body a:not([name]).footer,body a:not([name]).header{color:silver}.btns a:not([name]):visited,.chrblank a:not([name]):visited,.footer a:not([name]):visited,.header a:not([name]):visited,body a:not([name]).btns:visited,body a:not([name]).chrblank:visited,body a:not([name]).footer:visited,body a:not([name]).header:visited{background-color:#5c6b53}.btns a:not([name]):link,.chrblank a:not([name]):link,.footer a:not([name]):link,.header a:not([name]):link,body a:not([name]).btns:link,body a:not([name]).chrblank:link,body a:not([name]).footer:link,body a:not([name]).header:link{background-color:#67656f}.btns .active,.chrblank .active,.footer .active,.header .active{background-color:#80817c}.btns a:not([name]),.btns button,.btns input,.chrblank a:not([name]),.chrblank button,.chrblank input,.footer a:not([name]),.footer button,.footer input,.header a:not([name]),.header button,.header input,body a:not([name]).btns,body a:not([name]).chrblank,body a:not([name]).footer,body a:not([name]).header{background-color:#62635c}.btns a:not([name]):focus,.btns a:not([name]):hover,.btns button:focus,.btns button:hover,.btns input:focus,.btns input:hover,.chrblank a:not([name]):focus,.chrblank a:not([name]):hover,.chrblank button:focus,.chrblank button:hover,.chrblank input:focus,.chrblank input:hover,.footer a:not([name]):focus,.footer a:not([name]):hover,.footer button:focus,.footer button:hover,.footer input:focus,.footer input:hover,.header a:not([name]):focus,.header a:not([name]):hover,.header button:focus,.header button:hover,.header input:focus,.header input:hover,body a:not([name]).btns:focus,body a:not([name]).btns:hover,body a:not([name]).chrblank:focus,body a:not([name]).chrblank:hover,body a:not([name]).footer:focus,body a:not([name]).footer:hover,body a:not([name]).header:focus,body a:not([name]).header:hover{background-color:#74746f}.btns a:not([name]).active,.btns a:not([name]) .active,.btns a:not([name]):active,.btns button.active,.btns button .active,.btns button:active,.btns input.active,.btns input .active,.btns input:active,.chrblank a:not([name]).active,.chrblank a:not([name]) .active,.chrblank a:not([name]):active,.chrblank button.active,.chrblank button .active,.chrblank button:active,.chrblank input.active,.chrblank input .active,.chrblank input:active,.footer a:not([name]).active,.footer a:not([name]) .active,.footer a:not([name]):active,.footer button.active,.footer button .active,.footer button:active,.footer input.active,.footer input .active,.footer input:active,.header a:not([name]).active,.header a:not([name]) .active,.header a:not([name]):active,.header button.active,.header button .active,.header button:active,.header input.active,.header input .active,.header input:active,body a:not([name]).btns.active,body a:not([name]).btns .active,body a:not([name]).btns:active,body a:not([name]).chrblank.active,body a:not([name]).chrblank .active,body a:not([name]).chrblank:active,body a:not([name]).footer.active,body a:not([name]).footer .active,body a:not([name]).footer:active,body a:not([name]).header.active,body a:not([name]).header .active,body a:not([name]).header:active{background-color:#80817c}.btns input[type=checkbox],.btns input[type=radio],.chrblank input[type=checkbox],.chrblank input[type=radio],.footer input[type=checkbox],.footer input[type=radio],.header input[type=checkbox],.header input[type=radio]{background-color:#67656f}.btns input[type=checkbox]:checked,.btns input[type=radio]:checked,.chrblank input[type=checkbox]:checked,.chrblank input[type=radio]:checked,.footer input[type=checkbox]:checked,.footer input[type=radio]:checked,.header input[type=checkbox]:checked,.header input[type=radio]:checked{background-color:#5c6b53}.btns .date,.btns .name,.btns em,.chrblank .date,.chrblank .name,.chrblank em,.footer .date,.footer .name,.footer em,.header .date,.header .name,.header em{color:#898a84}.btns abbr,.btns rt,.btns strong,.btns sub,.btns sup,.chrblank abbr,.chrblank rt,.chrblank strong,.chrblank sub,.chrblank sup,.footer abbr,.footer rt,.footer strong,.footer sub,.footer sup,.header abbr,.header rt,.header strong,.header sub,.header sup{background-color:#898a84;color:#62635c}.public,.public textarea{color:silver;background-color:#332509;border-color:#786f5c}.public.baloon{border-color:#332509}.public .fa-check{color:#5fb14a}.public .fa-warning{color:#c87856}.public .fa-ban{color:#c85656}.public [data-tooltip],.public [title]{background-color:#4b3f26}.public [data-tooltip]:after,.public [data-tooltip]:before,.public [title]:after,.public [title]:before,.public b{color:silver;background-color:#4b3f26}.public a:not([name]),body a:not([name]).public{color:silver}.public a:not([name]):visited,body a:not([name]).public:visited{background-color:#474b23}.public a:not([name]):link,body a:not([name]).public:link{background-color:#534540}.public .active{background-color:#726a5b}.public a:not([name]),.public button,.public input,body a:not([name]).public{background-color:#4b3f26}.public a:not([name]):focus,.public a:not([name]):hover,.public button:focus,.public button:hover,.public input:focus,.public input:hover,body a:not([name]).public:focus,body a:not([name]).public:hover{background-color:#625947}.public a:not([name]).active,.public a:not([name]) .active,.public a:not([name]):active,.public button.active,.public button .active,.public button:active,.public input.active,.public input .active,.public input:active,body a:not([name]).public.active,body a:not([name]).public .active,body a:not([name]).public:active{background-color:#726a5b}.public input[type=checkbox],.public input[type=radio]{background-color:#534540}.public input[type=checkbox]:checked,.public input[type=radio]:checked{background-color:#474b23}.public .date,.public .name,.public em{color:#786f5c}.public abbr,.public rt,.public strong,.public sub,.public sup{background-color:#786f5c;color:#4b3f26}.private,.private textarea{color:silver;background-color:#090a33;border-color:#5c5d78}.private.baloon{border-color:#090a33}.private .fa-check{color:#5fb14a}.private .fa-warning{color:#c87856}.private .fa-ban{color:#c85656}.private [data-tooltip],.private [title]{background-color:#26274b}.private [data-tooltip]:after,.private [data-tooltip]:before,.private [title]:after,.private [title]:before,.private b{color:silver;background-color:#26274b}.private a:not([name]),body a:not([name]).private{color:silver}.private a:not([name]):visited,body a:not([name]).private:visited{background-color:#273644}.private a:not([name]):link,body a:not([name]).private:link{background-color:#323060}.private .active{background-color:#5b5b72}.private a:not([name]),.private button,.private input,body a:not([name]).private{background-color:#26274b}.private a:not([name]):focus,.private a:not([name]):hover,.private button:focus,.private button:hover,.private input:focus,.private input:hover,body a:not([name]).private:focus,body a:not([name]).private:hover{background-color:#474762}.private a:not([name]).active,.private a:not([name]) .active,.private a:not([name]):active,.private button.active,.private button .active,.private button:active,.private input.active,.private input .active,.private input:active,body a:not([name]).private.active,body a:not([name]).private .active,body a:not([name]).private:active{background-color:#5b5b72}.private input[type=checkbox],.private input[type=radio]{background-color:#323060}.private input[type=checkbox]:checked,.private input[type=radio]:checked{background-color:#273644}.private .date,.private .name,.private em{color:#5c5d78}.private abbr,.private rt,.private strong,.private sub,.private sup{background-color:#5c5d78;color:#26274b}.HATER,.HATER textarea,.LONEWOLF,.LONEWOLF textarea{color:#0b4343;background-color:#7ac5c5;border-color:#4abbb5}.HATER.baloon,.LONEWOLF.baloon{border-color:#7ac5c5}.HATER .fa-check,.LONEWOLF .fa-check{color:#238821}.HATER .fa-warning,.LONEWOLF .fa-warning{color:#8c4f2c}.HATER .fa-ban,.LONEWOLF .fa-ban{color:#8c2c2c}.HATER [data-tooltip],.HATER [title],.LONEWOLF [data-tooltip],.LONEWOLF [title]{background-color:#85e2e2}.HATER [data-tooltip]:after,.HATER [data-tooltip]:before,.HATER [title]:after,.HATER [title]:before,.HATER b,.LONEWOLF [data-tooltip]:after,.LONEWOLF [data-tooltip]:before,.LONEWOLF [title]:after,.LONEWOLF [title]:before,.LONEWOLF b{color:#0b4343;background-color:#85e2e2}.HATER a:not([name]),.LONEWOLF a:not([name]),body a:not([name]).HATER,body a:not([name]).LONEWOLF{color:#0b4343}.HATER a:not([name]):visited,.LONEWOLF a:not([name]):visited,body a:not([name]).HATER:visited,body a:not([name]).LONEWOLF:visited{background-color:#7adbc8}.HATER a:not([name]):link,.LONEWOLF a:not([name]):link,body a:not([name]).HATER:link,body a:not([name]).LONEWOLF:link{background-color:#86d5e5}.HATER .active,.LONEWOLF .active{background-color:#227f7f}.HATER a:not([name]),.HATER button,.HATER input,.LONEWOLF a:not([name]),.LONEWOLF button,.LONEWOLF input,body a:not([name]).HATER,body a:not([name]).LONEWOLF{background-color:#85e2e2}.HATER a:not([name]):focus,.HATER a:not([name]):hover,.HATER button:focus,.HATER button:hover,.HATER input:focus,.HATER input:hover,.LONEWOLF a:not([name]):focus,.LONEWOLF a:not([name]):hover,.LONEWOLF button:focus,.LONEWOLF button:hover,.LONEWOLF input:focus,.LONEWOLF input:hover,body a:not([name]).HATER:focus,body a:not([name]).HATER:hover,body a:not([name]).LONEWOLF:focus,body a:not([name]).LONEWOLF:hover{background-color:#229292}.HATER a:not([name]).active,.HATER a:not([name]) .active,.HATER a:not([name]):active,.HATER button.active,.HATER button .active,.HATER button:active,.HATER input.active,.HATER input .active,.HATER input:active,.LONEWOLF a:not([name]).active,.LONEWOLF a:not([name]) .active,.LONEWOLF a:not([name]):active,.LONEWOLF button.active,.LONEWOLF button .active,.LONEWOLF button:active,.LONEWOLF input.active,.LONEWOLF input .active,.LONEWOLF input:active,body a:not([name]).HATER.active,body a:not([name]).HATER .active,body a:not([name]).HATER:active,body a:not([name]).LONEWOLF.active,body a:not([name]).LONEWOLF .active,body a:not([name]).LONEWOLF:active{background-color:#227f7f}.HATER input[type=checkbox],.HATER input[type=radio],.LONEWOLF input[type=checkbox],.LONEWOLF input[type=radio]{background-color:#86d5e5}.HATER input[type=checkbox]:checked,.HATER input[type=radio]:checked,.LONEWOLF input[type=checkbox]:checked,.LONEWOLF input[type=radio]:checked{background-color:#7adbc8}.HATER .date,.HATER .name,.HATER em,.LONEWOLF .date,.LONEWOLF .name,.LONEWOLF em{color:#0b4343}.HATER abbr,.HATER rt,.HATER strong,.HATER sub,.HATER sup,.LONEWOLF abbr,.LONEWOLF rt,.LONEWOLF strong,.LONEWOLF sub,.LONEWOLF sup{background-color:#4abbb5;color:#85e2e2}.GURU,.GURU textarea,.PIXI,.PIXI textarea{color:#053819;background-color:#73b68d;border-color:#3fa462}.GURU.baloon,.PIXI.baloon{border-color:#73b68d}.GURU .fa-check,.PIXI .fa-check{color:#218413}.GURU .fa-warning,.PIXI .fa-warning{color:#8a4b1f}.GURU .fa-ban,.PIXI .fa-ban{color:#8a291f}.GURU [data-tooltip],.GURU [title],.PIXI [data-tooltip],.PIXI [title]{background-color:#7cd09d}.GURU [data-tooltip]:after,.GURU [data-tooltip]:before,.GURU [title]:after,.GURU [title]:before,.GURU b,.PIXI [data-tooltip]:after,.PIXI [data-tooltip]:before,.PIXI [title]:after,.PIXI [title]:before,.PIXI b{color:#053819;background-color:#7cd09d}.GURU a:not([name]),.PIXI a:not([name]),body a:not([name]).GURU,body a:not([name]).PIXI{color:#053819}.GURU a:not([name]):visited,.PIXI a:not([name]):visited,body a:not([name]).GURU:visited,body a:not([name]).PIXI:visited{background-color:#72cb8c}.GURU a:not([name]):link,.PIXI a:not([name]):link,body a:not([name]).GURU:link,body a:not([name]).PIXI:link{background-color:#7ec5a8}.GURU .active,.PIXI .active{background-color:#186c3a}.GURU a:not([name]),.GURU button,.GURU input,.PIXI a:not([name]),.PIXI button,.PIXI input,body a:not([name]).GURU,body a:not([name]).PIXI{background-color:#7cd09d}.GURU a:not([name]):focus,.GURU a:not([name]):hover,.GURU button:focus,.GURU button:hover,.GURU input:focus,.GURU input:hover,.PIXI a:not([name]):focus,.PIXI a:not([name]):hover,.PIXI button:focus,.PIXI button:hover,.PIXI input:focus,.PIXI input:hover,body a:not([name]).GURU:focus,body a:not([name]).GURU:hover,body a:not([name]).PIXI:focus,body a:not([name]).PIXI:hover{background-color:#167b3f}.GURU a:not([name]).active,.GURU a:not([name]) .active,.GURU a:not([name]):active,.GURU button.active,.GURU button .active,.GURU button:active,.GURU input.active,.GURU input .active,.GURU input:active,.PIXI a:not([name]).active,.PIXI a:not([name]) .active,.PIXI a:not([name]):active,.PIXI button.active,.PIXI button .active,.PIXI button:active,.PIXI input.active,.PIXI input .active,.PIXI input:active,body a:not([name]).GURU.active,body a:not([name]).GURU .active,body a:not([name]).GURU:active,body a:not([name]).PIXI.active,body a:not([name]).PIXI .active,body a:not([name]).PIXI:active{background-color:#186c3a}.GURU input[type=checkbox],.GURU input[type=radio],.PIXI input[type=checkbox],.PIXI input[type=radio]{background-color:#7ec5a8}.GURU input[type=checkbox]:checked,.GURU input[type=radio]:checked,.PIXI input[type=checkbox]:checked,.PIXI input[type=radio]:checked{background-color:#72cb8c}.GURU .date,.GURU .name,.GURU em,.PIXI .date,.PIXI .name,.PIXI em{color:#053819}.GURU abbr,.GURU rt,.GURU strong,.GURU sub,.GURU sup,.PIXI abbr,.PIXI rt,.PIXI strong,.PIXI sub,.PIXI sup{background-color:#3fa462;color:#7cd09d}.EVIL,.EVIL textarea{color:#0f3805;background-color:#80b673;border-color:#53a43a}.EVIL.baloon{border-color:#80b673}.EVIL .fa-check{color:#25840d}.EVIL .fa-warning{color:#8d4b18}.EVIL .fa-ban{color:#8d2918}.EVIL [data-tooltip],.EVIL [title]{background-color:#8dd07c}.EVIL [data-tooltip]:after,.EVIL [data-tooltip]:before,.EVIL [title]:after,.EVIL [title]:before,.EVIL b{color:#0f3805;background-color:#8dd07c}.EVIL a:not([name]),body a:not([name]).EVIL{color:#0f3805}.EVIL a:not([name]):visited,body a:not([name]).EVIL:visited{background-color:#81cb6f}.EVIL a:not([name]):link,body a:not([name]).EVIL:link{background-color:#8dc58b}.EVIL .active{background-color:#296c18}.EVIL a:not([name]),.EVIL button,.EVIL input,body a:not([name]).EVIL{background-color:#8dd07c}.EVIL a:not([name]):focus,.EVIL a:not([name]):hover,.EVIL button:focus,.EVIL button:hover,.EVIL input:focus,.EVIL input:hover,body a:not([name]).EVIL:focus,body a:not([name]).EVIL:hover{background-color:#2b7b16}.EVIL a:not([name]).active,.EVIL a:not([name]) .active,.EVIL a:not([name]):active,.EVIL button.active,.EVIL button .active,.EVIL button:active,.EVIL input.active,.EVIL input .active,.EVIL input:active,body a:not([name]).EVIL.active,body a:not([name]).EVIL .active,body a:not([name]).EVIL:active{background-color:#296c18}.EVIL input[type=checkbox],.EVIL input[type=radio]{background-color:#8dc58b}.EVIL input[type=checkbox]:checked,.EVIL input[type=radio]:checked{background-color:#81cb6f}.EVIL .date,.EVIL .name,.EVIL em{color:#0f3805}.EVIL abbr,.EVIL rt,.EVIL strong,.EVIL sub,.EVIL sup{background-color:#53a43a;color:#8dd07c}.DISH,.DISH textarea,.HUMAN,.HUMAN textarea,.juror,.juror textarea,.live,.live textarea{color:#43360b;background-color:#c5b37a;border-color:#baa045}.DISH.baloon,.HUMAN.baloon,.juror.baloon,.live.baloon{border-color:#c5b37a}.DISH .fa-check,.HUMAN .fa-check,.juror .fa-check,.live .fa-check{color:#36830f}.DISH .fa-warning,.HUMAN .fa-warning,.juror .fa-warning,.live .fa-warning{color:#9e4a1a}.DISH .fa-ban,.HUMAN .fa-ban,.juror .fa-ban,.live .fa-ban{color:#9e281a}.DISH [data-tooltip],.DISH [title],.HUMAN [data-tooltip],.HUMAN [title],.juror [data-tooltip],.juror [title],.live [data-tooltip],.live [title]{background-color:#e2cc85}.DISH [data-tooltip]:after,.DISH [data-tooltip]:before,.DISH [title]:after,.DISH [title]:before,.DISH b,.HUMAN [data-tooltip]:after,.HUMAN [data-tooltip]:before,.HUMAN [title]:after,.HUMAN [title]:before,.HUMAN b,.juror [data-tooltip]:after,.juror [data-tooltip]:before,.juror [title]:after,.juror [title]:before,.juror b,.live [data-tooltip]:after,.live [data-tooltip]:before,.live [title]:after,.live [title]:before,.live b{color:#43360b;background-color:#e2cc85}.DISH a:not([name]),.HUMAN a:not([name]),.juror a:not([name]),.live a:not([name]),body a:not([name]).DISH,body a:not([name]).HUMAN,body a:not([name]).juror,body a:not([name]).live{color:#43360b}.DISH a:not([name]):visited,.HUMAN a:not([name]):visited,.juror a:not([name]):visited,.live a:not([name]):visited,body a:not([name]).DISH:visited,body a:not([name]).HUMAN:visited,body a:not([name]).juror:visited,body a:not([name]).live:visited{background-color:#ccc777}.DISH a:not([name]):link,.HUMAN a:not([name]):link,.juror a:not([name]):link,.live a:not([name]):link,body a:not([name]).DISH:link,body a:not([name]).HUMAN:link,body a:not([name]).juror:link,body a:not([name]).live:link{background-color:#d8c193}.DISH .active,.HUMAN .active,.juror .active,.live .active{background-color:#7f6922}.DISH a:not([name]),.DISH button,.DISH input,.HUMAN a:not([name]),.HUMAN button,.HUMAN input,.juror a:not([name]),.juror button,.juror input,.live a:not([name]),.live button,.live input,body a:not([name]).DISH,body a:not([name]).HUMAN,body a:not([name]).juror,body a:not([name]).live{background-color:#e2cc85}.DISH a:not([name]):focus,.DISH a:not([name]):hover,.DISH button:focus,.DISH button:hover,.DISH input:focus,.DISH input:hover,.HUMAN a:not([name]):focus,.HUMAN a:not([name]):hover,.HUMAN button:focus,.HUMAN button:hover,.HUMAN input:focus,.HUMAN input:hover,.juror a:not([name]):focus,.juror a:not([name]):hover,.juror button:focus,.juror button:hover,.juror input:focus,.juror input:hover,.live a:not([name]):focus,.live a:not([name]):hover,.live button:focus,.live button:hover,.live input:focus,.live input:hover,body a:not([name]).DISH:focus,body a:not([name]).DISH:hover,body a:not([name]).HUMAN:focus,body a:not([name]).HUMAN:hover,body a:not([name]).juror:focus,body a:not([name]).juror:hover,body a:not([name]).live:focus,body a:not([name]).live:hover{background-color:#927722}.DISH a:not([name]).active,.DISH a:not([name]) .active,.DISH a:not([name]):active,.DISH button.active,.DISH button .active,.DISH button:active,.DISH input.active,.DISH input .active,.DISH input:active,.HUMAN a:not([name]).active,.HUMAN a:not([name]) .active,.HUMAN a:not([name]):active,.HUMAN button.active,.HUMAN button .active,.HUMAN button:active,.HUMAN input.active,.HUMAN input .active,.HUMAN input:active,.juror a:not([name]).active,.juror a:not([name]) .active,.juror a:not([name]):active,.juror button.active,.juror button .active,.juror button:active,.juror input.active,.juror input .active,.juror input:active,.live a:not([name]).active,.live a:not([name]) .active,.live a:not([name]):active,.live button.active,.live button .active,.live button:active,.live input.active,.live input .active,.live input:active,body a:not([name]).DISH.active,body a:not([name]).DISH .active,body a:not([name]).DISH:active,body a:not([name]).HUMAN.active,body a:not([name]).HUMAN .active,body a:not([name]).HUMAN:active,body a:not([name]).juror.active,body a:not([name]).juror .active,body a:not([name]).juror:active,body a:not([name]).live.active,body a:not([name]).live .active,body a:not([name]).live:active{background-color:#7f6922}.DISH input[type=checkbox],.DISH input[type=radio],.HUMAN input[type=checkbox],.HUMAN input[type=radio],.juror input[type=checkbox],.juror input[type=radio],.live input[type=checkbox],.live input[type=radio]{background-color:#d8c193}.DISH input[type=checkbox]:checked,.DISH input[type=radio]:checked,.HUMAN input[type=checkbox]:checked,.HUMAN input[type=radio]:checked,.juror input[type=checkbox]:checked,.juror input[type=radio]:checked,.live input[type=checkbox]:checked,.live input[type=radio]:checked{background-color:#ccc777}.DISH .date,.DISH .name,.DISH em,.HUMAN .date,.HUMAN .name,.HUMAN em,.juror .date,.juror .name,.juror em,.live .date,.live .name,.live em{color:#43360b}.DISH abbr,.DISH rt,.DISH strong,.DISH sub,.DISH sup,.HUMAN abbr,.HUMAN rt,.HUMAN strong,.HUMAN sub,.HUMAN sup,.juror abbr,.juror rt,.juror strong,.juror sub,.juror sup,.live abbr,.live rt,.live strong,.live sub,.live sup{background-color:#baa045;color:#e2cc85}.cursed,.cursed textarea,.droop,.droop textarea,.feared,.feared textarea,.suicide,.suicide textarea,.victim,.victim textarea,.WOLF,.WOLF textarea{color:#430b0b;background-color:#c57a7a;border-color:#ba4a45}.cursed.baloon,.droop.baloon,.feared.baloon,.suicide.baloon,.victim.baloon,.WOLF.baloon{border-color:#c57a7a}.cursed .fa-check,.droop .fa-check,.feared .fa-check,.suicide .fa-check,.victim .fa-check,.WOLF .fa-check{color:#36750f}.cursed .fa-warning,.droop .fa-warning,.feared .fa-warning,.suicide .fa-warning,.victim .fa-warning,.WOLF .fa-warning{color:#9e3c1a}.cursed .fa-ban,.droop .fa-ban,.feared .fa-ban,.suicide .fa-ban,.victim .fa-ban,.WOLF .fa-ban{color:#9e1a1a}.cursed [data-tooltip],.cursed [title],.droop [data-tooltip],.droop [title],.feared [data-tooltip],.feared [title],.suicide [data-tooltip],.suicide [title],.victim [data-tooltip],.victim [title],.WOLF [data-tooltip],.WOLF [title]{background-color:#e28585}.cursed [data-tooltip]:after,.cursed [data-tooltip]:before,.cursed [title]:after,.cursed [title]:before,.cursed b,.droop [data-tooltip]:after,.droop [data-tooltip]:before,.droop [title]:after,.droop [title]:before,.droop b,.feared [data-tooltip]:after,.feared [data-tooltip]:before,.feared [title]:after,.feared [title]:before,.feared b,.suicide [data-tooltip]:after,.suicide [data-tooltip]:before,.suicide [title]:after,.suicide [title]:before,.suicide b,.victim [data-tooltip]:after,.victim [data-tooltip]:before,.victim [title]:after,.victim [title]:before,.victim b,.WOLF [data-tooltip]:after,.WOLF [data-tooltip]:before,.WOLF [title]:after,.WOLF [title]:before,.WOLF b{color:#430b0b;background-color:#e28585}.cursed a:not([name]),.droop a:not([name]),.feared a:not([name]),.suicide a:not([name]),.victim a:not([name]),.WOLF a:not([name]),body a:not([name]).cursed,body a:not([name]).droop,body a:not([name]).feared,body a:not([name]).suicide,body a:not([name]).victim,body a:not([name]).WOLF{color:#430b0b}.cursed a:not([name]):visited,.droop a:not([name]):visited,.feared a:not([name]):visited,.suicide a:not([name]):visited,.victim a:not([name]):visited,.WOLF a:not([name]):visited,body a:not([name]).cursed:visited,body a:not([name]).droop:visited,body a:not([name]).feared:visited,body a:not([name]).suicide:visited,body a:not([name]).victim:visited,body a:not([name]).WOLF:visited{background-color:#cc8977}.cursed a:not([name]):link,.droop a:not([name]):link,.feared a:not([name]):link,.suicide a:not([name]):link,.victim a:not([name]):link,.WOLF a:not([name]):link,body a:not([name]).cursed:link,body a:not([name]).droop:link,body a:not([name]).feared:link,body a:not([name]).suicide:link,body a:not([name]).victim:link,body a:not([name]).WOLF:link{background-color:#d88393}.cursed .active,.droop .active,.feared .active,.suicide .active,.victim .active,.WOLF .active{background-color:#7f2222}.cursed a:not([name]),.cursed button,.cursed input,.droop a:not([name]),.droop button,.droop input,.feared a:not([name]),.feared button,.feared input,.suicide a:not([name]),.suicide button,.suicide input,.victim a:not([name]),.victim button,.victim input,.WOLF a:not([name]),.WOLF button,.WOLF input,body a:not([name]).cursed,body a:not([name]).droop,body a:not([name]).feared,body a:not([name]).suicide,body a:not([name]).victim,body a:not([name]).WOLF{background-color:#e28585}.cursed a:not([name]):focus,.cursed a:not([name]):hover,.cursed button:focus,.cursed button:hover,.cursed input:focus,.cursed input:hover,.droop a:not([name]):focus,.droop a:not([name]):hover,.droop button:focus,.droop button:hover,.droop input:focus,.droop input:hover,.feared a:not([name]):focus,.feared a:not([name]):hover,.feared button:focus,.feared button:hover,.feared input:focus,.feared input:hover,.suicide a:not([name]):focus,.suicide a:not([name]):hover,.suicide button:focus,.suicide button:hover,.suicide input:focus,.suicide input:hover,.victim a:not([name]):focus,.victim a:not([name]):hover,.victim button:focus,.victim button:hover,.victim input:focus,.victim input:hover,.WOLF a:not([name]):focus,.WOLF a:not([name]):hover,.WOLF button:focus,.WOLF button:hover,.WOLF input:focus,.WOLF input:hover,body a:not([name]).cursed:focus,body a:not([name]).cursed:hover,body a:not([name]).droop:focus,body a:not([name]).droop:hover,body a:not([name]).feared:focus,body a:not([name]).feared:hover,body a:not([name]).suicide:focus,body a:not([name]).suicide:hover,body a:not([name]).victim:focus,body a:not([name]).victim:hover,body a:not([name]).WOLF:focus,body a:not([name]).WOLF:hover{background-color:#922222}.cursed a:not([name]).active,.cursed a:not([name]) .active,.cursed a:not([name]):active,.cursed button.active,.cursed button .active,.cursed button:active,.cursed input.active,.cursed input .active,.cursed input:active,.droop a:not([name]).active,.droop a:not([name]) .active,.droop a:not([name]):active,.droop button.active,.droop button .active,.droop button:active,.droop input.active,.droop input .active,.droop input:active,.feared a:not([name]).active,.feared a:not([name]) .active,.feared a:not([name]):active,.feared button.active,.feared button .active,.feared button:active,.feared input.active,.feared input .active,.feared input:active,.suicide a:not([name]).active,.suicide a:not([name]) .active,.suicide a:not([name]):active,.suicide button.active,.suicide button .active,.suicide button:active,.suicide input.active,.suicide input .active,.suicide input:active,.victim a:not([name]).active,.victim a:not([name]) .active,.victim a:not([name]):active,.victim button.active,.victim button .active,.victim button:active,.victim input.active,.victim input .active,.victim input:active,.WOLF a:not([name]).active,.WOLF a:not([name]) .active,.WOLF a:not([name]):active,.WOLF button.active,.WOLF button .active,.WOLF button:active,.WOLF input.active,.WOLF input .active,.WOLF input:active,body a:not([name]).cursed.active,body a:not([name]).cursed .active,body a:not([name]).cursed:active,body a:not([name]).droop.active,body a:not([name]).droop .active,body a:not([name]).droop:active,body a:not([name]).feared.active,body a:not([name]).feared .active,body a:not([name]).feared:active,body a:not([name]).suicide.active,body a:not([name]).suicide .active,body a:not([name]).suicide:active,body a:not([name]).victim.active,body a:not([name]).victim .active,body a:not([name]).victim:active,body a:not([name]).WOLF.active,body a:not([name]).WOLF .active,body a:not([name]).WOLF:active{background-color:#7f2222}.cursed input[type=checkbox],.cursed input[type=radio],.droop input[type=checkbox],.droop input[type=radio],.feared input[type=checkbox],.feared input[type=radio],.suicide input[type=checkbox],.suicide input[type=radio],.victim input[type=checkbox],.victim input[type=radio],.WOLF input[type=checkbox],.WOLF input[type=radio]{background-color:#d88393}.cursed input[type=checkbox]:checked,.cursed input[type=radio]:checked,.droop input[type=checkbox]:checked,.droop input[type=radio]:checked,.feared input[type=checkbox]:checked,.feared input[type=radio]:checked,.suicide input[type=checkbox]:checked,.suicide input[type=radio]:checked,.victim input[type=checkbox]:checked,.victim input[type=radio]:checked,.WOLF input[type=checkbox]:checked,.WOLF input[type=radio]:checked{background-color:#cc8977}.cursed .date,.cursed .name,.cursed em,.droop .date,.droop .name,.droop em,.feared .date,.feared .name,.feared em,.suicide .date,.suicide .name,.suicide em,.victim .date,.victim .name,.victim em,.WOLF .date,.WOLF .name,.WOLF em{color:#430b0b}.cursed abbr,.cursed rt,.cursed strong,.cursed sub,.cursed sup,.droop abbr,.droop rt,.droop strong,.droop sub,.droop sup,.feared abbr,.feared rt,.feared strong,.feared sub,.feared sup,.suicide abbr,.suicide rt,.suicide strong,.suicide sub,.suicide sup,.victim abbr,.victim rt,.victim strong,.victim sub,.victim sup,.WOLF abbr,.WOLF rt,.WOLF strong,.WOLF sub,.WOLF sup{background-color:#ba4a45;color:#e28585}.LOVER,.LOVER textarea{color:#441c4e;background-color:#c690d4;border-color:#bc6ccc}.LOVER.baloon{border-color:#c690d4}.LOVER .fa-check{color:#367b25}.LOVER .fa-warning{color:#9f4230}.LOVER .fa-ban{color:#9f2030}.LOVER [data-tooltip],.LOVER [title]{background-color:#e4a1f5}.LOVER [data-tooltip]:after,.LOVER [data-tooltip]:before,.LOVER [title]:after,.LOVER [title]:before,.LOVER b{color:#441c4e;background-color:#e4a1f5}.LOVER a:not([name]),body a:not([name]).LOVER{color:#441c4e}.LOVER a:not([name]):visited,body a:not([name]).LOVER:visited{background-color:#cea2d9}.LOVER a:not([name]):link,body a:not([name]).LOVER:link{background-color:#da9bf6}.LOVER .active{background-color:#813e92}.LOVER a:not([name]),.LOVER button,.LOVER input,body a:not([name]).LOVER{background-color:#e4a1f5}.LOVER a:not([name]):focus,.LOVER a:not([name]):hover,.LOVER button:focus,.LOVER button:hover,.LOVER input:focus,.LOVER input:hover,body a:not([name]).LOVER:focus,body a:not([name]).LOVER:hover{background-color:#9443a8}.LOVER a:not([name]).active,.LOVER a:not([name]) .active,.LOVER a:not([name]):active,.LOVER button.active,.LOVER button .active,.LOVER button:active,.LOVER input.active,.LOVER input .active,.LOVER input:active,body a:not([name]).LOVER.active,body a:not([name]).LOVER .active,body a:not([name]).LOVER:active{background-color:#813e92}.LOVER input[type=checkbox],.LOVER input[type=radio]{background-color:#da9bf6}.LOVER input[type=checkbox]:checked,.LOVER input[type=radio]:checked{background-color:#cea2d9}.LOVER .date,.LOVER .name,.LOVER em{color:#441c4e}.LOVER abbr,.LOVER rt,.LOVER strong,.LOVER sub,.LOVER sup{background-color:#bc6ccc;color:#e4a1f5}.alive,.alive textarea,.grave,.grave textarea,.mob,.MOB,.MOB textarea,.mob textarea,.NONE,.NONE textarea,.visiter,.visiter textarea{color:#432c0b;background-color:#c5a77a;border-color:#ba8e45}.alive.baloon,.grave.baloon,.MOB.baloon,.mob.baloon,.NONE.baloon,.visiter.baloon{border-color:#c5a77a}.alive .fa-check,.grave .fa-check,.MOB .fa-check,.mob .fa-check,.NONE .fa-check,.visiter .fa-check{color:#36800f}.alive .fa-warning,.grave .fa-warning,.MOB .fa-warning,.mob .fa-warning,.NONE .fa-warning,.visiter .fa-warning{color:#9e471a}.alive .fa-ban,.grave .fa-ban,.MOB .fa-ban,.mob .fa-ban,.NONE .fa-ban,.visiter .fa-ban{color:#9e251a}.alive [data-tooltip],.alive [title],.grave [data-tooltip],.grave [title],.MOB [data-tooltip],.mob [data-tooltip],.mob [title],.MOB [title],.NONE [data-tooltip],.NONE [title],.visiter [data-tooltip],.visiter [title]{background-color:#e2bd85}.alive [data-tooltip]:after,.alive [data-tooltip]:before,.alive [title]:after,.alive [title]:before,.alive b,.grave [data-tooltip]:after,.grave [data-tooltip]:before,.grave [title]:after,.grave [title]:before,.grave b,.MOB [data-tooltip]:after,.mob [data-tooltip]:after,.MOB [data-tooltip]:before,.mob [data-tooltip]:before,.MOB [title]:after,.mob [title]:after,.mob [title]:before,.MOB [title]:before,.mob b,.MOB b,.NONE [data-tooltip]:after,.NONE [data-tooltip]:before,.NONE [title]:after,.NONE [title]:before,.NONE b,.visiter [data-tooltip]:after,.visiter [data-tooltip]:before,.visiter [title]:after,.visiter [title]:before,.visiter b{color:#432c0b;background-color:#e2bd85}.alive a:not([name]),.grave a:not([name]),.mob a:not([name]),.MOB a:not([name]),.NONE a:not([name]),.visiter a:not([name]),body a:not([name]).alive,body a:not([name]).grave,body a:not([name]).MOB,body a:not([name]).mob,body a:not([name]).NONE,body a:not([name]).visiter{color:#432c0b}.alive a:not([name]):visited,.grave a:not([name]):visited,.mob a:not([name]):visited,.MOB a:not([name]):visited,.NONE a:not([name]):visited,.visiter a:not([name]):visited,body a:not([name]).alive:visited,body a:not([name]).grave:visited,body a:not([name]).MOB:visited,body a:not([name]).mob:visited,body a:not([name]).NONE:visited,body a:not([name]).visiter:visited{background-color:#ccba77}.alive a:not([name]):link,.grave a:not([name]):link,.mob a:not([name]):link,.MOB a:not([name]):link,.NONE a:not([name]):link,.visiter a:not([name]):link,body a:not([name]).alive:link,body a:not([name]).grave:link,body a:not([name]).MOB:link,body a:not([name]).mob:link,body a:not([name]).NONE:link,body a:not([name]).visiter:link{background-color:#d8b493}.alive .active,.grave .active,.MOB .active,.mob .active,.NONE .active,.visiter .active{background-color:#7f5a22}.alive a:not([name]),.alive button,.alive input,.grave a:not([name]),.grave button,.grave input,.MOB a:not([name]),.mob a:not([name]),.MOB button,.mob button,.mob input,.MOB input,.NONE a:not([name]),.NONE button,.NONE input,.visiter a:not([name]),.visiter button,.visiter input,body a:not([name]).alive,body a:not([name]).grave,body a:not([name]).mob,body a:not([name]).MOB,body a:not([name]).NONE,body a:not([name]).visiter{background-color:#e2bd85}.alive a:not([name]):focus,.alive a:not([name]):hover,.alive button:focus,.alive button:hover,.alive input:focus,.alive input:hover,.grave a:not([name]):focus,.grave a:not([name]):hover,.grave button:focus,.grave button:hover,.grave input:focus,.grave input:hover,.mob a:not([name]):focus,.MOB a:not([name]):focus,.mob a:not([name]):hover,.MOB a:not([name]):hover,.mob button:focus,.MOB button:focus,.mob button:hover,.MOB button:hover,.MOB input:focus,.mob input:focus,.mob input:hover,.MOB input:hover,.NONE a:not([name]):focus,.NONE a:not([name]):hover,.NONE button:focus,.NONE button:hover,.NONE input:focus,.NONE input:hover,.visiter a:not([name]):focus,.visiter a:not([name]):hover,.visiter button:focus,.visiter button:hover,.visiter input:focus,.visiter input:hover,body a:not([name]).alive:focus,body a:not([name]).alive:hover,body a:not([name]).grave:focus,body a:not([name]).grave:hover,body a:not([name]).mob:focus,body a:not([name]).MOB:focus,body a:not([name]).MOB:hover,body a:not([name]).mob:hover,body a:not([name]).NONE:focus,body a:not([name]).NONE:hover,body a:not([name]).visiter:focus,body a:not([name]).visiter:hover{background-color:#926522}.alive a:not([name]).active,.alive a:not([name]) .active,.alive a:not([name]):active,.alive button.active,.alive button .active,.alive button:active,.alive input.active,.alive input .active,.alive input:active,.grave a:not([name]).active,.grave a:not([name]) .active,.grave a:not([name]):active,.grave button.active,.grave button .active,.grave button:active,.grave input.active,.grave input .active,.grave input:active,.MOB a:not([name]).active,.mob a:not([name]).active,.MOB a:not([name]) .active,.mob a:not([name]) .active,.mob a:not([name]):active,.MOB a:not([name]):active,.mob button.active,.MOB button.active,.mob button .active,.MOB button .active,.MOB button:active,.mob button:active,.mob input.active,.MOB input.active,.mob input .active,.MOB input .active,.mob input:active,.MOB input:active,.NONE a:not([name]).active,.NONE a:not([name]) .active,.NONE a:not([name]):active,.NONE button.active,.NONE button .active,.NONE button:active,.NONE input.active,.NONE input .active,.NONE input:active,.visiter a:not([name]).active,.visiter a:not([name]) .active,.visiter a:not([name]):active,.visiter button.active,.visiter button .active,.visiter button:active,.visiter input.active,.visiter input .active,.visiter input:active,body a:not([name]).alive.active,body a:not([name]).alive .active,body a:not([name]).alive:active,body a:not([name]).grave.active,body a:not([name]).grave .active,body a:not([name]).grave:active,body a:not([name]).MOB.active,body a:not([name]).mob.active,body a:not([name]).mob .active,body a:not([name]).MOB .active,body a:not([name]).MOB:active,body a:not([name]).mob:active,body a:not([name]).NONE.active,body a:not([name]).NONE .active,body a:not([name]).NONE:active,body a:not([name]).visiter.active,body a:not([name]).visiter .active,body a:not([name]).visiter:active{background-color:#7f5a22}.alive input[type=checkbox],.alive input[type=radio],.grave input[type=checkbox],.grave input[type=radio],.mob input[type=checkbox],.MOB input[type=checkbox],.MOB input[type=radio],.mob input[type=radio],.NONE input[type=checkbox],.NONE input[type=radio],.visiter input[type=checkbox],.visiter input[type=radio]{background-color:#d8b493}.alive input[type=checkbox]:checked,.alive input[type=radio]:checked,.grave input[type=checkbox]:checked,.grave input[type=radio]:checked,.mob input[type=checkbox]:checked,.MOB input[type=checkbox]:checked,.MOB input[type=radio]:checked,.mob input[type=radio]:checked,.NONE input[type=checkbox]:checked,.NONE input[type=radio]:checked,.visiter input[type=checkbox]:checked,.visiter input[type=radio]:checked{background-color:#ccba77}.alive .date,.alive .name,.alive em,.grave .date,.grave .name,.grave em,.mob .date,.MOB .date,.MOB .name,.mob .name,.MOB em,.mob em,.NONE .date,.NONE .name,.NONE em,.visiter .date,.visiter .name,.visiter em{color:#432c0b}.alive abbr,.alive rt,.alive strong,.alive sub,.alive sup,.grave abbr,.grave rt,.grave strong,.grave sub,.grave sup,.MOB abbr,.mob abbr,.MOB rt,.mob rt,.MOB strong,.mob strong,.mob sub,.MOB sub,.MOB sup,.mob sup,.NONE abbr,.NONE rt,.NONE strong,.NONE sub,.NONE sup,.visiter abbr,.visiter rt,.visiter strong,.visiter sub,.visiter sup{background-color:#ba8e45;color:#e2bd85}.executed,.executed textarea{color:#1c304e;background-color:#90abd4;border-color:#6c94cc}.executed.baloon{border-color:#90abd4}.executed .fa-check{color:#298125}.executed .fa-warning{color:#914830}.executed .fa-ban{color:#912630}.executed [data-tooltip],.executed [title]{background-color:#a1c3f5}.executed [data-tooltip]:after,.executed [data-tooltip]:before,.executed [title]:after,.executed [title]:before,.executed b{color:#1c304e;background-color:#a1c3f5}.executed a:not([name]),body a:not([name]).executed{color:#1c304e}.executed a:not([name]):visited,body a:not([name]).executed:visited{background-color:#93c0d9}.executed a:not([name]):link,body a:not([name]).executed:link{background-color:#9fb9f6}.executed .active{background-color:#3e5f92}.executed a:not([name]),.executed button,.executed input,body a:not([name]).executed{background-color:#a1c3f5}.executed a:not([name]):focus,.executed a:not([name]):hover,.executed button:focus,.executed button:hover,.executed input:focus,.executed input:hover,body a:not([name]).executed:focus,body a:not([name]).executed:hover{background-color:#436ba8}.executed a:not([name]).active,.executed a:not([name]) .active,.executed a:not([name]):active,.executed button.active,.executed button .active,.executed button:active,.executed input.active,.executed input .active,.executed input:active,body a:not([name]).executed.active,body a:not([name]).executed .active,body a:not([name]).executed:active{background-color:#3e5f92}.executed input[type=checkbox],.executed input[type=radio]{background-color:#9fb9f6}.executed input[type=checkbox]:checked,.executed input[type=radio]:checked{background-color:#93c0d9}.executed .date,.executed .name,.executed em{color:#1c304e}.executed abbr,.executed rt,.executed strong,.executed sub,.executed sup{background-color:#6c94cc;color:#a1c3f5}.hide,.hide textarea{color:#38321c;background-color:#b6ae90;border-color:#a49967}.hide.baloon{border-color:#b6ae90}.hide .fa-check{color:#328214}.hide .fa-warning{color:#9b4920}.hide .fa-ban{color:#9b2720}.hide [data-tooltip],.hide [title]{background-color:#d0c6a1}.hide [data-tooltip]:after,.hide [data-tooltip]:before,.hide [title]:after,.hide [title]:before,.hide b{color:#38321c;background-color:#d0c6a1}.hide a:not([name]),body a:not([name]).hide{color:#38321c}.hide a:not([name]):visited,body a:not([name]).hide:visited{background-color:#bcc28f}.hide a:not([name]):link,body a:not([name]).hide:link{background-color:#c8bcac}.hide .active{background-color:#6c633e}.hide a:not([name]),.hide button,.hide input,body a:not([name]).hide{background-color:#d0c6a1}.hide a:not([name]):focus,.hide a:not([name]):hover,.hide button:focus,.hide button:hover,.hide input:focus,.hide input:hover,body a:not([name]).hide:focus,body a:not([name]).hide:hover{background-color:#7b7043}.hide a:not([name]).active,.hide a:not([name]) .active,.hide a:not([name]):active,.hide button.active,.hide button .active,.hide button:active,.hide input.active,.hide input .active,.hide input:active,body a:not([name]).hide.active,body a:not([name]).hide .active,body a:not([name]).hide:active{background-color:#6c633e}.hide input[type=checkbox],.hide input[type=radio]{background-color:#c8bcac}.hide input[type=checkbox]:checked,.hide input[type=radio]:checked{background-color:#bcc28f}.hide .date,.hide .name,.hide em{color:#38321c}.hide abbr,.hide rt,.hide strong,.hide sub,.hide sup{background-color:#a49967;color:#d0c6a1}.leave,.leave textarea,.suddendead,.suddendead textarea{color:#32322d;background-color:#aeafa8;border-color:#999a8b}.leave.baloon,.suddendead.baloon{border-color:#aeafa8}.leave .fa-check,.suddendead .fa-check{color:#30821a}.leave .fa-warning,.suddendead .fa-warning{color:#994925}.leave .fa-ban,.suddendead .fa-ban{color:#992725}.leave [data-tooltip],.leave [title],.suddendead [data-tooltip],.suddendead [title]{background-color:#c6c7bf}.leave [data-tooltip]:after,.leave [data-tooltip]:before,.leave [title]:after,.leave [title]:before,.leave b,.suddendead [data-tooltip]:after,.suddendead [data-tooltip]:before,.suddendead [title]:after,.suddendead [title]:before,.suddendead b{color:#32322d;background-color:#c6c7bf}.leave a:not([name]),.suddendead a:not([name]),body a:not([name]).leave,body a:not([name]).suddendead{color:#32322d}.leave a:not([name]):visited,.suddendead a:not([name]):visited,body a:not([name]).leave:visited,body a:not([name]).suddendead:visited{background-color:#b4c3aa}.leave a:not([name]):link,.suddendead a:not([name]):link,body a:not([name]).leave:link,body a:not([name]).suddendead:link{background-color:#bfbdc6}.leave .active,.suddendead .active{background-color:#63645b}.leave a:not([name]),.leave button,.leave input,.suddendead a:not([name]),.suddendead button,.suddendead input,body a:not([name]).leave,body a:not([name]).suddendead{background-color:#c6c7bf}.leave a:not([name]):focus,.leave a:not([name]):hover,.leave button:focus,.leave button:hover,.leave input:focus,.leave input:hover,.suddendead a:not([name]):focus,.suddendead a:not([name]):hover,.suddendead button:focus,.suddendead button:hover,.suddendead input:focus,.suddendead input:hover,body a:not([name]).leave:focus,body a:not([name]).leave:hover,body a:not([name]).suddendead:focus,body a:not([name]).suddendead:hover{background-color:#707167}.leave a:not([name]).active,.leave a:not([name]) .active,.leave a:not([name]):active,.leave button.active,.leave button .active,.leave button:active,.leave input.active,.leave input .active,.leave input:active,.suddendead a:not([name]).active,.suddendead a:not([name]) .active,.suddendead a:not([name]):active,.suddendead button.active,.suddendead button .active,.suddendead button:active,.suddendead input.active,.suddendead input .active,.suddendead input:active,body a:not([name]).leave.active,body a:not([name]).leave .active,body a:not([name]).leave:active,body a:not([name]).suddendead.active,body a:not([name]).suddendead .active,body a:not([name]).suddendead:active{background-color:#63645b}.leave input[type=checkbox],.leave input[type=radio],.suddendead input[type=checkbox],.suddendead input[type=radio]{background-color:#bfbdc6}.leave input[type=checkbox]:checked,.leave input[type=radio]:checked,.suddendead input[type=checkbox]:checked,.suddendead input[type=radio]:checked{background-color:#b4c3aa}.leave .date,.leave .name,.leave em,.suddendead .date,.suddendead .name,.suddendead em{color:#32322d}.leave abbr,.leave rt,.leave strong,.leave sub,.leave sup,.suddendead abbr,.suddendead rt,.suddendead strong,.suddendead sub,.suddendead sup{background-color:#999a8b;color:#c6c7bf}.SPORT,.SPORT textarea{color:#000;background-color:#7ac5c5;border-color:#4abbb5}.SPORT.baloon{border-color:#7ac5c5}.SPORT .fa-check{color:#20710b}.SPORT .fa-warning{color:#883816}.SPORT .fa-ban{color:#881616}.SPORT [data-tooltip],.SPORT [title]{background-color:#85e2e2}.SPORT [data-tooltip]:after,.SPORT [data-tooltip]:before,.SPORT [title]:after,.SPORT [title]:before,.SPORT b{color:#000;background-color:#85e2e2}.SPORT a:not([name]),body a:not([name]).SPORT{color:#000}.SPORT a:not([name]):visited,body a:not([name]).SPORT:visited{background-color:#7adbc8}.SPORT a:not([name]):link,body a:not([name]).SPORT:link{background-color:#86d5e5}.SPORT .active{background-color:#227f7f}.SPORT a:not([name]),.SPORT button,.SPORT input,body a:not([name]).SPORT{background-color:#85e2e2}.SPORT a:not([name]):focus,.SPORT a:not([name]):hover,.SPORT button:focus,.SPORT button:hover,.SPORT input:focus,.SPORT input:hover,body a:not([name]).SPORT:focus,body a:not([name]).SPORT:hover{background-color:#229292}.SPORT a:not([name]).active,.SPORT a:not([name]) .active,.SPORT a:not([name]):active,.SPORT button.active,.SPORT button .active,.SPORT button:active,.SPORT input.active,.SPORT input .active,.SPORT input:active,body a:not([name]).SPORT.active,body a:not([name]).SPORT .active,body a:not([name]).SPORT:active{background-color:#227f7f}.SPORT input[type=checkbox],.SPORT input[type=radio]{background-color:#86d5e5}.SPORT input[type=checkbox]:checked,.SPORT input[type=radio]:checked{background-color:#7adbc8}.SPORT .date,.SPORT .name,.SPORT em{color:#0b4343}.SPORT abbr,.SPORT rt,.SPORT strong,.SPORT sub,.SPORT sup{background-color:#4abbb5;color:#85e2e2}.P09,.P09 textarea{color:#000;background-color:#7ac5ae;border-color:#4abb94}.P09.baloon{border-color:#7ac5ae}.P09 .fa-check{color:#20710b}.P09 .fa-warning{color:#883816}.P09 .fa-ban{color:#881616}.P09 [data-tooltip],.P09 [title]{background-color:#85e2c6}.P09 [data-tooltip]:after,.P09 [data-tooltip]:before,.P09 [title]:after,.P09 [title]:before,.P09 b{color:#000;background-color:#85e2c6}.P09 a:not([name]),body a:not([name]).P09{color:#000}.P09 a:not([name]):visited,body a:not([name]).P09:visited{background-color:#7adbb0}.P09 a:not([name]):link,body a:not([name]).P09:link{background-color:#86d5cc}.P09 .active{background-color:#227f63}.P09 a:not([name]),.P09 button,.P09 input,body a:not([name]).P09{background-color:#85e2c6}.P09 a:not([name]):focus,.P09 a:not([name]):hover,.P09 button:focus,.P09 button:hover,.P09 input:focus,.P09 input:hover,body a:not([name]).P09:focus,body a:not([name]).P09:hover{background-color:#229270}.P09 a:not([name]).active,.P09 a:not([name]) .active,.P09 a:not([name]):active,.P09 button.active,.P09 button .active,.P09 button:active,.P09 input.active,.P09 input .active,.P09 input:active,body a:not([name]).P09 .active,body a:not([name]).P09.active,body a:not([name]).P09:active{background-color:#227f63}.P09 input[type=checkbox],.P09 input[type=radio]{background-color:#86d5cc}.P09 input[type=checkbox]:checked,.P09 input[type=radio]:checked{background-color:#7adbb0}.P09 .date,.P09 .name,.P09 em{color:#0b4332}.P09 abbr,.P09 rt,.P09 strong,.P09 sub,.P09 sup{background-color:#4abb94;color:#85e2c6}.ELSE,.ELSE textarea{color:#000;background-color:#73b68d;border-color:#3fa462}.ELSE.baloon{border-color:#73b68d}.ELSE .fa-check{color:#20710b}.ELSE .fa-warning{color:#883816}.ELSE .fa-ban{color:#881616}.ELSE [data-tooltip],.ELSE [title]{background-color:#7cd09d}.ELSE [data-tooltip]:after,.ELSE [data-tooltip]:before,.ELSE [title]:after,.ELSE [title]:before,.ELSE b{color:#000;background-color:#7cd09d}.ELSE a:not([name]),body a:not([name]).ELSE{color:#000}.ELSE a:not([name]):visited,body a:not([name]).ELSE:visited{background-color:#72cb8c}.ELSE a:not([name]):link,body a:not([name]).ELSE:link{background-color:#7ec5a8}.ELSE .active{background-color:#186c3a}.ELSE a:not([name]),.ELSE button,.ELSE input,body a:not([name]).ELSE{background-color:#7cd09d}.ELSE a:not([name]):focus,.ELSE a:not([name]):hover,.ELSE button:focus,.ELSE button:hover,.ELSE input:focus,.ELSE input:hover,body a:not([name]).ELSE:focus,body a:not([name]).ELSE:hover{background-color:#167b3f}.ELSE a:not([name]).active,.ELSE a:not([name]) .active,.ELSE a:not([name]):active,.ELSE button.active,.ELSE button .active,.ELSE button:active,.ELSE input.active,.ELSE input .active,.ELSE input:active,body a:not([name]).ELSE.active,body a:not([name]).ELSE .active,body a:not([name]).ELSE:active{background-color:#186c3a}.ELSE input[type=checkbox],.ELSE input[type=radio]{background-color:#7ec5a8}.ELSE input[type=checkbox]:checked,.ELSE input[type=radio]:checked{background-color:#72cb8c}.ELSE .date,.ELSE .name,.ELSE em{color:#053819}.ELSE abbr,.ELSE rt,.ELSE strong,.ELSE sub,.ELSE sup{background-color:#3fa462;color:#7cd09d}.P07,.P07 textarea{color:#000;background-color:#73b679;border-color:#3fa444}.P07.baloon{border-color:#73b679}.P07 .fa-check{color:#20710b}.P07 .fa-warning{color:#883816}.P07 .fa-ban{color:#881616}.P07 [data-tooltip],.P07 [title]{background-color:#7cd084}.P07 [data-tooltip]:after,.P07 [data-tooltip]:before,.P07 [title]:after,.P07 [title]:before,.P07 b{color:#000;background-color:#7cd084}.P07 a:not([name]),body a:not([name]).P07{color:#000}.P07 a:not([name]):visited,body a:not([name]).P07:visited{background-color:#72cb76}.P07 a:not([name]):link,body a:not([name]).P07:link{background-color:#7ec592}.P07 .active{background-color:#186c20}.P07 a:not([name]),.P07 button,.P07 input,body a:not([name]).P07{background-color:#7cd084}.P07 a:not([name]):focus,.P07 a:not([name]):hover,.P07 button:focus,.P07 button:hover,.P07 input:focus,.P07 input:hover,body a:not([name]).P07:focus,body a:not([name]).P07:hover{background-color:#167b20}.P07 a:not([name]).active,.P07 a:not([name]) .active,.P07 a:not([name]):active,.P07 button.active,.P07 button .active,.P07 button:active,.P07 input.active,.P07 input .active,.P07 input:active,body a:not([name]).P07 .active,body a:not([name]).P07.active,body a:not([name]).P07:active{background-color:#186c20}.P07 input[type=checkbox],.P07 input[type=radio]{background-color:#7ec592}.P07 input[type=checkbox]:checked,.P07 input[type=radio]:checked{background-color:#72cb76}.P07 .date,.P07 .name,.P07 em{color:#05380a}.P07 abbr,.P07 rt,.P07 strong,.P07 sub,.P07 sup{background-color:#3fa444;color:#7cd084}.BSAY,.BSAY textarea,.XSAY,.XSAY textarea{color:#000;background-color:#80b673;border-color:#53a43a}.BSAY.baloon,.XSAY.baloon{border-color:#80b673}.BSAY .fa-check,.XSAY .fa-check{color:#20710b}.BSAY .fa-warning,.XSAY .fa-warning{color:#883816}.BSAY .fa-ban,.XSAY .fa-ban{color:#881616}.BSAY [data-tooltip],.BSAY [title],.XSAY [data-tooltip],.XSAY [title]{background-color:#8dd07c}.BSAY [data-tooltip]:after,.BSAY [data-tooltip]:before,.BSAY [title]:after,.BSAY [title]:before,.BSAY b,.XSAY [data-tooltip]:after,.XSAY [data-tooltip]:before,.XSAY [title]:after,.XSAY [title]:before,.XSAY b{color:#000;background-color:#8dd07c}.BSAY a:not([name]),.XSAY a:not([name]),body a:not([name]).BSAY,body a:not([name]).XSAY{color:#000}.BSAY a:not([name]):visited,.XSAY a:not([name]):visited,body a:not([name]).BSAY:visited,body a:not([name]).XSAY:visited{background-color:#81cb6f}.BSAY a:not([name]):link,.XSAY a:not([name]):link,body a:not([name]).BSAY:link,body a:not([name]).XSAY:link{background-color:#8dc58b}.BSAY .active,.XSAY .active{background-color:#296c18}.BSAY a:not([name]),.BSAY button,.BSAY input,.XSAY a:not([name]),.XSAY button,.XSAY input,body a:not([name]).BSAY,body a:not([name]).XSAY{background-color:#8dd07c}.BSAY a:not([name]):focus,.BSAY a:not([name]):hover,.BSAY button:focus,.BSAY button:hover,.BSAY input:focus,.BSAY input:hover,.XSAY a:not([name]):focus,.XSAY a:not([name]):hover,.XSAY button:focus,.XSAY button:hover,.XSAY input:focus,.XSAY input:hover,body a:not([name]).BSAY:focus,body a:not([name]).BSAY:hover,body a:not([name]).XSAY:focus,body a:not([name]).XSAY:hover{background-color:#2b7b16}.BSAY a:not([name]).active,.BSAY a:not([name]) .active,.BSAY a:not([name]):active,.BSAY button.active,.BSAY button .active,.BSAY button:active,.BSAY input.active,.BSAY input .active,.BSAY input:active,.XSAY a:not([name]).active,.XSAY a:not([name]) .active,.XSAY a:not([name]):active,.XSAY button.active,.XSAY button .active,.XSAY button:active,.XSAY input.active,.XSAY input .active,.XSAY input:active,body a:not([name]).BSAY.active,body a:not([name]).BSAY .active,body a:not([name]).BSAY:active,body a:not([name]).XSAY.active,body a:not([name]).XSAY .active,body a:not([name]).XSAY:active{background-color:#296c18}.BSAY input[type=checkbox],.BSAY input[type=radio],.XSAY input[type=checkbox],.XSAY input[type=radio]{background-color:#8dc58b}.BSAY input[type=checkbox]:checked,.BSAY input[type=radio]:checked,.XSAY input[type=checkbox]:checked,.XSAY input[type=radio]:checked{background-color:#81cb6f}.BSAY .date,.BSAY .name,.BSAY em,.XSAY .date,.XSAY .name,.XSAY em{color:#0f3805}.BSAY abbr,.BSAY rt,.BSAY strong,.BSAY sub,.BSAY sup,.XSAY abbr,.XSAY rt,.XSAY strong,.XSAY sub,.XSAY sup{background-color:#53a43a;color:#8dd07c}.P05,.P05 textarea{color:#000;background-color:#9fc57a;border-color:#82bb45}.P05.baloon{border-color:#9fc57a}.P05 .fa-check{color:#20710b}.P05 .fa-warning{color:#883816}.P05 .fa-ban{color:#881616}.P05 [data-tooltip],.P05 [title]{background-color:#b4e285}.P05 [data-tooltip]:after,.P05 [data-tooltip]:before,.P05 [title]:after,.P05 [title]:before,.P05 b{color:#000;background-color:#b4e285}.P05 a:not([name]),body a:not([name]).P05{color:#000}.P05 a:not([name]):visited,body a:not([name]).P05:visited{background-color:#a4db77}.P05 a:not([name]):link,body a:not([name]).P05:link{background-color:#afd593}.P05 .active{background-color:#507f22}.P05 a:not([name]),.P05 button,.P05 input,body a:not([name]).P05{background-color:#b4e285}.P05 a:not([name]):focus,.P05 a:not([name]):hover,.P05 button:focus,.P05 button:hover,.P05 input:focus,.P05 input:hover,body a:not([name]).P05:focus,body a:not([name]).P05:hover{background-color:#5a9222}.P05 a:not([name]).active,.P05 a:not([name]) .active,.P05 a:not([name]):active,.P05 button.active,.P05 button .active,.P05 button:active,.P05 input.active,.P05 input .active,.P05 input:active,body a:not([name]).P05 .active,body a:not([name]).P05.active,body a:not([name]).P05:active{background-color:#507f22}.P05 input[type=checkbox],.P05 input[type=radio]{background-color:#afd593}.P05 input[type=checkbox]:checked,.P05 input[type=radio]:checked{background-color:#a4db77}.P05 .date,.P05 .name,.P05 em{color:#27430b}.P05 abbr,.P05 rt,.P05 strong,.P05 sub,.P05 sup{background-color:#82bb45;color:#b4e285}.P04,.P04 textarea{color:#000;background-color:#b6c57a;border-color:#a4bb45}.P04.baloon{border-color:#b6c57a}.P04 .fa-check{color:#20710b}.P04 .fa-warning{color:#883816}.P04 .fa-ban{color:#881616}.P04 [data-tooltip],.P04 [title]{background-color:#d0e285}.P04 [data-tooltip]:after,.P04 [data-tooltip]:before,.P04 [title]:after,.P04 [title]:before,.P04 b{color:#000;background-color:#d0e285}.P04 a:not([name]),body a:not([name]).P04{color:#000}.P04 a:not([name]):visited,body a:not([name]).P04:visited{background-color:#bcdb77}.P04 a:not([name]):link,body a:not([name]).P04:link{background-color:#c8d593}.P04 .active{background-color:#6c7f22}.P04 a:not([name]),.P04 button,.P04 input,body a:not([name]).P04{background-color:#d0e285}.P04 a:not([name]):focus,.P04 a:not([name]):hover,.P04 button:focus,.P04 button:hover,.P04 input:focus,.P04 input:hover,body a:not([name]).P04:focus,body a:not([name]).P04:hover{background-color:#7b9222}.P04 a:not([name]).active,.P04 a:not([name]) .active,.P04 a:not([name]):active,.P04 button.active,.P04 button .active,.P04 button:active,.P04 input.active,.P04 input .active,.P04 input:active,body a:not([name]).P04 .active,body a:not([name]).P04.active,body a:not([name]).P04:active{background-color:#6c7f22}.P04 input[type=checkbox],.P04 input[type=radio]{background-color:#c8d593}.P04 input[type=checkbox]:checked,.P04 input[type=radio]:checked{background-color:#bcdb77}.P04 .date,.P04 .name,.P04 em{color:#38430b}.P04 abbr,.P04 rt,.P04 strong,.P04 sub,.P04 sup{background-color:#a4bb45;color:#d0e285}.MSAY,.MSAY textarea,.SSAY,.SSAY textarea{color:#000;background-color:#c5b37a;border-color:#baa045}.MSAY.baloon,.SSAY.baloon{border-color:#c5b37a}.MSAY .fa-check,.SSAY .fa-check{color:#20710b}.MSAY .fa-warning,.SSAY .fa-warning{color:#883816}.MSAY .fa-ban,.SSAY .fa-ban{color:#881616}.MSAY [data-tooltip],.MSAY [title],.SSAY [data-tooltip],.SSAY [title]{background-color:#e2cc85}.MSAY [data-tooltip]:after,.MSAY [data-tooltip]:before,.MSAY [title]:after,.MSAY [title]:before,.MSAY b,.SSAY [data-tooltip]:after,.SSAY [data-tooltip]:before,.SSAY [title]:after,.SSAY [title]:before,.SSAY b{color:#000;background-color:#e2cc85}.MSAY a:not([name]),.SSAY a:not([name]),body a:not([name]).MSAY,body a:not([name]).SSAY{color:#000}.MSAY a:not([name]):visited,.SSAY a:not([name]):visited,body a:not([name]).MSAY:visited,body a:not([name]).SSAY:visited{background-color:#ccc777}.MSAY a:not([name]):link,.SSAY a:not([name]):link,body a:not([name]).MSAY:link,body a:not([name]).SSAY:link{background-color:#d8c193}.MSAY .active,.SSAY .active{background-color:#7f6922}.MSAY a:not([name]),.MSAY button,.MSAY input,.SSAY a:not([name]),.SSAY button,.SSAY input,body a:not([name]).MSAY,body a:not([name]).SSAY{background-color:#e2cc85}.MSAY a:not([name]):focus,.MSAY a:not([name]):hover,.MSAY button:focus,.MSAY button:hover,.MSAY input:focus,.MSAY input:hover,.SSAY a:not([name]):focus,.SSAY a:not([name]):hover,.SSAY button:focus,.SSAY button:hover,.SSAY input:focus,.SSAY input:hover,body a:not([name]).MSAY:focus,body a:not([name]).MSAY:hover,body a:not([name]).SSAY:focus,body a:not([name]).SSAY:hover{background-color:#927722}.MSAY a:not([name]).active,.MSAY a:not([name]) .active,.MSAY a:not([name]):active,.MSAY button.active,.MSAY button .active,.MSAY button:active,.MSAY input.active,.MSAY input .active,.MSAY input:active,.SSAY a:not([name]).active,.SSAY a:not([name]) .active,.SSAY a:not([name]):active,.SSAY button.active,.SSAY button .active,.SSAY button:active,.SSAY input.active,.SSAY input .active,.SSAY input:active,body a:not([name]).MSAY.active,body a:not([name]).MSAY .active,body a:not([name]).MSAY:active,body a:not([name]).SSAY.active,body a:not([name]).SSAY .active,body a:not([name]).SSAY:active{background-color:#7f6922}.MSAY input[type=checkbox],.MSAY input[type=radio],.SSAY input[type=checkbox],.SSAY input[type=radio]{background-color:#d8c193}.MSAY input[type=checkbox]:checked,.MSAY input[type=radio]:checked,.SSAY input[type=checkbox]:checked,.SSAY input[type=radio]:checked{background-color:#ccc777}.MSAY .date,.MSAY .name,.MSAY em,.SSAY .date,.SSAY .name,.SSAY em{color:#43360b}.MSAY abbr,.MSAY rt,.MSAY strong,.MSAY sub,.MSAY sup,.SSAY abbr,.SSAY rt,.SSAY strong,.SSAY sub,.SSAY sup{background-color:#baa045;color:#e2cc85}.VSAY,.VSAY textarea,.VSSAY,.VSSAY textarea{color:#000;background-color:#c5a77a;border-color:#ba8e45}.VSAY.baloon,.VSSAY.baloon{border-color:#c5a77a}.VSAY .fa-check,.VSSAY .fa-check{color:#20710b}.VSAY .fa-warning,.VSSAY .fa-warning{color:#883816}.VSAY .fa-ban,.VSSAY .fa-ban{color:#881616}.VSAY [data-tooltip],.VSAY [title],.VSSAY [data-tooltip],.VSSAY [title]{background-color:#e2bd85}.VSAY [data-tooltip]:after,.VSAY [data-tooltip]:before,.VSAY [title]:after,.VSAY [title]:before,.VSAY b,.VSSAY [data-tooltip]:after,.VSSAY [data-tooltip]:before,.VSSAY [title]:after,.VSSAY [title]:before,.VSSAY b{color:#000;background-color:#e2bd85}.VSAY a:not([name]),.VSSAY a:not([name]),body a:not([name]).VSAY,body a:not([name]).VSSAY{color:#000}.VSAY a:not([name]):visited,.VSSAY a:not([name]):visited,body a:not([name]).VSAY:visited,body a:not([name]).VSSAY:visited{background-color:#ccba77}.VSAY a:not([name]):link,.VSSAY a:not([name]):link,body a:not([name]).VSAY:link,body a:not([name]).VSSAY:link{background-color:#d8b493}.VSAY .active,.VSSAY .active{background-color:#7f5a22}.VSAY a:not([name]),.VSAY button,.VSAY input,.VSSAY a:not([name]),.VSSAY button,.VSSAY input,body a:not([name]).VSAY,body a:not([name]).VSSAY{background-color:#e2bd85}.VSAY a:not([name]):focus,.VSAY a:not([name]):hover,.VSAY button:focus,.VSAY button:hover,.VSAY input:focus,.VSAY input:hover,.VSSAY a:not([name]):focus,.VSSAY a:not([name]):hover,.VSSAY button:focus,.VSSAY button:hover,.VSSAY input:focus,.VSSAY input:hover,body a:not([name]).VSAY:focus,body a:not([name]).VSAY:hover,body a:not([name]).VSSAY:focus,body a:not([name]).VSSAY:hover{background-color:#926522}.VSAY a:not([name]).active,.VSAY a:not([name]) .active,.VSAY a:not([name]):active,.VSAY button.active,.VSAY button .active,.VSAY button:active,.VSAY input.active,.VSAY input .active,.VSAY input:active,.VSSAY a:not([name]).active,.VSSAY a:not([name]) .active,.VSSAY a:not([name]):active,.VSSAY button.active,.VSSAY button .active,.VSSAY button:active,.VSSAY input.active,.VSSAY input .active,.VSSAY input:active,body a:not([name]).VSAY.active,body a:not([name]).VSAY .active,body a:not([name]).VSAY:active,body a:not([name]).VSSAY.active,body a:not([name]).VSSAY .active,body a:not([name]).VSSAY:active{background-color:#7f5a22}.VSAY input[type=checkbox],.VSAY input[type=radio],.VSSAY input[type=checkbox],.VSSAY input[type=radio]{background-color:#d8b493}.VSAY input[type=checkbox]:checked,.VSAY input[type=radio]:checked,.VSSAY input[type=checkbox]:checked,.VSSAY input[type=radio]:checked{background-color:#ccba77}.VSAY .date,.VSAY .name,.VSAY em,.VSSAY .date,.VSSAY .name,.VSSAY em{color:#432c0b}.VSAY abbr,.VSAY rt,.VSAY strong,.VSAY sub,.VSAY sup,.VSSAY abbr,.VSSAY rt,.VSSAY strong,.VSSAY sub,.VSSAY sup{background-color:#ba8e45;color:#e2bd85}.P01,.P01 textarea{color:#000;background-color:#c5907a;border-color:#ba6c45}.P01.baloon{border-color:#c5907a}.P01 .fa-check{color:#20710b}.P01 .fa-warning{color:#883816}.P01 .fa-ban{color:#881616}.P01 [data-tooltip],.P01 [title]{background-color:#e2a185}.P01 [data-tooltip]:after,.P01 [data-tooltip]:before,.P01 [title]:after,.P01 [title]:before,.P01 b{color:#000;background-color:#e2a185}.P01 a:not([name]),body a:not([name]).P01{color:#000}.P01 a:not([name]):visited,body a:not([name]).P01:visited{background-color:#cca277}.P01 a:not([name]):link,body a:not([name]).P01:link{background-color:#d89b93}.P01 .active{background-color:#7f3e22}.P01 a:not([name]),.P01 button,.P01 input,body a:not([name]).P01{background-color:#e2a185}.P01 a:not([name]):focus,.P01 a:not([name]):hover,.P01 button:focus,.P01 button:hover,.P01 input:focus,.P01 input:hover,body a:not([name]).P01:focus,body a:not([name]).P01:hover{background-color:#924322}.P01 a:not([name]).active,.P01 a:not([name]) .active,.P01 a:not([name]):active,.P01 button.active,.P01 button .active,.P01 button:active,.P01 input.active,.P01 input .active,.P01 input:active,body a:not([name]).P01 .active,body a:not([name]).P01.active,body a:not([name]).P01:active{background-color:#7f3e22}.P01 input[type=checkbox],.P01 input[type=radio]{background-color:#d89b93}.P01 input[type=checkbox]:checked,.P01 input[type=radio]:checked{background-color:#cca277}.P01 .date,.P01 .name,.P01 em{color:#431c0b}.P01 abbr,.P01 rt,.P01 strong,.P01 sub,.P01 sup{background-color:#ba6c45;color:#e2a185}.WSAY,.WSAY textarea{color:#000;background-color:#c57a7a;border-color:#ba4a45}.WSAY.baloon{border-color:#c57a7a}.WSAY .fa-check{color:#20710b}.WSAY .fa-warning{color:#883816}.WSAY .fa-ban{color:#881616}.WSAY [data-tooltip],.WSAY [title]{background-color:#e28585}.WSAY [data-tooltip]:after,.WSAY [data-tooltip]:before,.WSAY [title]:after,.WSAY [title]:before,.WSAY b{color:#000;background-color:#e28585}.WSAY a:not([name]),body a:not([name]).WSAY{color:#000}.WSAY a:not([name]):visited,body a:not([name]).WSAY:visited{background-color:#cc8977}.WSAY a:not([name]):link,body a:not([name]).WSAY:link{background-color:#d88393}.WSAY .active{background-color:#7f2222}.WSAY a:not([name]),.WSAY button,.WSAY input,body a:not([name]).WSAY{background-color:#e28585}.WSAY a:not([name]):focus,.WSAY a:not([name]):hover,.WSAY button:focus,.WSAY button:hover,.WSAY input:focus,.WSAY input:hover,body a:not([name]).WSAY:focus,body a:not([name]).WSAY:hover{background-color:#922222}.WSAY a:not([name]).active,.WSAY a:not([name]) .active,.WSAY a:not([name]):active,.WSAY button.active,.WSAY button .active,.WSAY button:active,.WSAY input.active,.WSAY input .active,.WSAY input:active,body a:not([name]).WSAY.active,body a:not([name]).WSAY .active,body a:not([name]).WSAY:active{background-color:#7f2222}.WSAY input[type=checkbox],.WSAY input[type=radio]{background-color:#d88393}.WSAY input[type=checkbox]:checked,.WSAY input[type=radio]:checked{background-color:#cc8977}.WSAY .date,.WSAY .name,.WSAY em{color:#430b0b}.WSAY abbr,.WSAY rt,.WSAY strong,.WSAY sub,.WSAY sup{background-color:#ba4a45;color:#e28585}.N01,.N01 textarea{color:#000;background-color:#c57a90;border-color:#ba4a67}.N01.baloon{border-color:#c57a90}.N01 .fa-check{color:#20710b}.N01 .fa-warning{color:#883816}.N01 .fa-ban{color:#881616}.N01 [data-tooltip],.N01 [title]{background-color:#e285a1}.N01 [data-tooltip]:after,.N01 [data-tooltip]:before,.N01 [title]:after,.N01 [title]:before,.N01 b{color:#000;background-color:#e285a1}.N01 a:not([name]),body a:not([name]).N01{color:#000}.N01 a:not([name]):visited,body a:not([name]).N01:visited{background-color:#cc898f}.N01 a:not([name]):link,body a:not([name]).N01:link{background-color:#d883ac}.N01 .active{background-color:#7f223e}.N01 a:not([name]),.N01 button,.N01 input,body a:not([name]).N01{background-color:#e285a1}.N01 a:not([name]):focus,.N01 a:not([name]):hover,.N01 button:focus,.N01 button:hover,.N01 input:focus,.N01 input:hover,body a:not([name]).N01:focus,body a:not([name]).N01:hover{background-color:#922243}.N01 a:not([name]).active,.N01 a:not([name]) .active,.N01 a:not([name]):active,.N01 button.active,.N01 button .active,.N01 button:active,.N01 input.active,.N01 input .active,.N01 input:active,body a:not([name]).N01 .active,body a:not([name]).N01.active,body a:not([name]).N01:active{background-color:#7f223e}.N01 input[type=checkbox],.N01 input[type=radio]{background-color:#d883ac}.N01 input[type=checkbox]:checked,.N01 input[type=radio]:checked{background-color:#cc898f}.N01 .date,.N01 .name,.N01 em{color:#430b1c}.N01 abbr,.N01 rt,.N01 strong,.N01 sub,.N01 sup{background-color:#ba4a67;color:#e285a1}.N02,.N02 textarea{color:#000;background-color:#c57aa1;border-color:#ba4a7f}.N02.baloon{border-color:#c57aa1}.N02 .fa-check{color:#20710b}.N02 .fa-warning{color:#883816}.N02 .fa-ban{color:#881616}.N02 [data-tooltip],.N02 [title]{background-color:#e285b5}.N02 [data-tooltip]:after,.N02 [data-tooltip]:before,.N02 [title]:after,.N02 [title]:before,.N02 b{color:#000;background-color:#e285b5}.N02 a:not([name]),body a:not([name]).N02{color:#000}.N02 a:not([name]):visited,body a:not([name]).N02:visited{background-color:#cc89a1}.N02 a:not([name]):link,body a:not([name]).N02:link{background-color:#d883bd}.N02 .active{background-color:#7f2252}.N02 a:not([name]),.N02 button,.N02 input,body a:not([name]).N02{background-color:#e285b5}.N02 a:not([name]):focus,.N02 a:not([name]):hover,.N02 button:focus,.N02 button:hover,.N02 input:focus,.N02 input:hover,body a:not([name]).N02:focus,body a:not([name]).N02:hover{background-color:#92225c}.N02 a:not([name]).active,.N02 a:not([name]) .active,.N02 a:not([name]):active,.N02 button.active,.N02 button .active,.N02 button:active,.N02 input.active,.N02 input .active,.N02 input:active,body a:not([name]).N02 .active,body a:not([name]).N02.active,body a:not([name]).N02:active{background-color:#7f2252}.N02 input[type=checkbox],.N02 input[type=radio]{background-color:#d883bd}.N02 input[type=checkbox]:checked,.N02 input[type=radio]:checked{background-color:#cc89a1}.N02 .date,.N02 .name,.N02 em{color:#430b28}.N02 abbr,.N02 rt,.N02 strong,.N02 sub,.N02 sup{background-color:#ba4a7f;color:#e285b5}.AIM,.AIM textarea{color:#000;background-color:#c57abd;border-color:#ba4aaa}.AIM.baloon{border-color:#c57abd}.AIM .fa-check{color:#20710b}.AIM .fa-warning{color:#883816}.AIM .fa-ban{color:#881616}.AIM [data-tooltip],.AIM [title]{background-color:#e285d9}.AIM [data-tooltip]:after,.AIM [data-tooltip]:before,.AIM [title]:after,.AIM [title]:before,.AIM b{color:#000;background-color:#e285d9}.AIM a:not([name]),body a:not([name]).AIM{color:#000}.AIM a:not([name]):visited,body a:not([name]).AIM:visited{background-color:#cc89c1}.AIM a:not([name]):link,body a:not([name]).AIM:link{background-color:#d883dd}.AIM .active{background-color:#7f2276}.AIM a:not([name]),.AIM button,.AIM input,body a:not([name]).AIM{background-color:#e285d9}.AIM a:not([name]):focus,.AIM a:not([name]):hover,.AIM button:focus,.AIM button:hover,.AIM input:focus,.AIM input:hover,body a:not([name]).AIM:focus,body a:not([name]).AIM:hover{background-color:#922286}.AIM a:not([name]).active,.AIM a:not([name]) .active,.AIM a:not([name]):active,.AIM button.active,.AIM button .active,.AIM button:active,.AIM input.active,.AIM input .active,.AIM input:active,body a:not([name]).AIM.active,body a:not([name]).AIM .active,body a:not([name]).AIM:active{background-color:#7f2276}.AIM input[type=checkbox],.AIM input[type=radio]{background-color:#d883dd}.AIM input[type=checkbox]:checked,.AIM input[type=radio]:checked{background-color:#cc89c1}.AIM .date,.AIM .name,.AIM em{color:#430b3d}.AIM abbr,.AIM rt,.AIM strong,.AIM sub,.AIM sup{background-color:#ba4aaa;color:#e285d9}.PSAY,.PSAY textarea,.SPSAY,.SPSAY textarea{color:#000;background-color:#c690d4;border-color:#bc6ccc}.PSAY.baloon,.SPSAY.baloon{border-color:#c690d4}.PSAY .fa-check,.SPSAY .fa-check{color:#20710b}.PSAY .fa-warning,.SPSAY .fa-warning{color:#883816}.PSAY .fa-ban,.SPSAY .fa-ban{color:#881616}.PSAY [data-tooltip],.PSAY [title],.SPSAY [data-tooltip],.SPSAY [title]{background-color:#e4a1f5}.PSAY [data-tooltip]:after,.PSAY [data-tooltip]:before,.PSAY [title]:after,.PSAY [title]:before,.PSAY b,.SPSAY [data-tooltip]:after,.SPSAY [data-tooltip]:before,.SPSAY [title]:after,.SPSAY [title]:before,.SPSAY b{color:#000;background-color:#e4a1f5}.PSAY a:not([name]),.SPSAY a:not([name]),body a:not([name]).PSAY,body a:not([name]).SPSAY{color:#000}.PSAY a:not([name]):visited,.SPSAY a:not([name]):visited,body a:not([name]).PSAY:visited,body a:not([name]).SPSAY:visited{background-color:#cea2d9}.PSAY a:not([name]):link,.SPSAY a:not([name]):link,body a:not([name]).PSAY:link,body a:not([name]).SPSAY:link{background-color:#da9bf6}.PSAY .active,.SPSAY .active{background-color:#813e92}.PSAY a:not([name]),.PSAY button,.PSAY input,.SPSAY a:not([name]),.SPSAY button,.SPSAY input,body a:not([name]).PSAY,body a:not([name]).SPSAY{background-color:#e4a1f5}.PSAY a:not([name]):focus,.PSAY a:not([name]):hover,.PSAY button:focus,.PSAY button:hover,.PSAY input:focus,.PSAY input:hover,.SPSAY a:not([name]):focus,.SPSAY a:not([name]):hover,.SPSAY button:focus,.SPSAY button:hover,.SPSAY input:focus,.SPSAY input:hover,body a:not([name]).PSAY:focus,body a:not([name]).PSAY:hover,body a:not([name]).SPSAY:focus,body a:not([name]).SPSAY:hover{background-color:#9443a8}.PSAY a:not([name]).active,.PSAY a:not([name]) .active,.PSAY a:not([name]):active,.PSAY button.active,.PSAY button .active,.PSAY button:active,.PSAY input.active,.PSAY input .active,.PSAY input:active,.SPSAY a:not([name]).active,.SPSAY a:not([name]) .active,.SPSAY a:not([name]):active,.SPSAY button.active,.SPSAY button .active,.SPSAY button:active,.SPSAY input.active,.SPSAY input .active,.SPSAY input:active,body a:not([name]).PSAY.active,body a:not([name]).PSAY .active,body a:not([name]).PSAY:active,body a:not([name]).SPSAY.active,body a:not([name]).SPSAY .active,body a:not([name]).SPSAY:active{background-color:#813e92}.PSAY input[type=checkbox],.PSAY input[type=radio],.SPSAY input[type=checkbox],.SPSAY input[type=radio]{background-color:#da9bf6}.PSAY input[type=checkbox]:checked,.PSAY input[type=radio]:checked,.SPSAY input[type=checkbox]:checked,.SPSAY input[type=radio]:checked{background-color:#cea2d9}.PSAY .date,.PSAY .name,.PSAY em,.SPSAY .date,.SPSAY .name,.SPSAY em{color:#441c4e}.PSAY abbr,.PSAY rt,.PSAY strong,.PSAY sub,.PSAY sup,.SPSAY abbr,.SPSAY rt,.SPSAY strong,.SPSAY sub,.SPSAY sup{background-color:#bc6ccc;color:#e4a1f5}.N05,.N05 textarea{color:#000;background-color:#bd9fdb;border-color:#af82d7}.N05.baloon{border-color:#bd9fdb}.N05 .fa-check{color:#20710b}.N05 .fa-warning{color:#883816}.N05 .fa-ban{color:#881616}.N05 [data-tooltip],.N05 [title]{background-color:#d9b4ff}.N05 [data-tooltip]:after,.N05 [data-tooltip]:before,.N05 [title]:after,.N05 [title]:before,.N05 b{color:#000;background-color:#d9b4ff}.N05 a:not([name]),body a:not([name]).N05{color:#000}.N05 a:not([name]):visited,body a:not([name]).N05:visited{background-color:#c4b2e2}.N05 a:not([name]):link,body a:not([name]).N05:link{background-color:#d0acff}.N05 .active{background-color:#76509b}.N05 a:not([name]),.N05 button,.N05 input,body a:not([name]).N05{background-color:#d9b4ff}.N05 a:not([name]):focus,.N05 a:not([name]):hover,.N05 button:focus,.N05 button:hover,.N05 input:focus,.N05 input:hover,body a:not([name]).N05:focus,body a:not([name]).N05:hover{background-color:#865ab3}.N05 a:not([name]).active,.N05 a:not([name]) .active,.N05 a:not([name]):active,.N05 button.active,.N05 button .active,.N05 button:active,.N05 input.active,.N05 input .active,.N05 input:active,body a:not([name]).N05 .active,body a:not([name]).N05.active,body a:not([name]).N05:active{background-color:#76509b}.N05 input[type=checkbox],.N05 input[type=radio]{background-color:#d0acff}.N05 input[type=checkbox]:checked,.N05 input[type=radio]:checked{background-color:#c4b2e2}.N05 .date,.N05 .name,.N05 em{color:#3d2754}.N05 abbr,.N05 rt,.N05 strong,.N05 sub,.N05 sup{background-color:#af82d7;color:#d9b4ff}.N06,.N06 textarea{color:#000;background-color:#ab9fdb;border-color:#9482d7}.N06.baloon{border-color:#ab9fdb}.N06 .fa-check{color:#20710b}.N06 .fa-warning{color:#883816}.N06 .fa-ban{color:#881616}.N06 [data-tooltip],.N06 [title]{background-color:#c3b4ff}.N06 [data-tooltip]:after,.N06 [data-tooltip]:before,.N06 [title]:after,.N06 [title]:before,.N06 b{color:#000;background-color:#c3b4ff}.N06 a:not([name]),body a:not([name]).N06{color:#000}.N06 a:not([name]):visited,body a:not([name]).N06:visited{background-color:#b1b2e2}.N06 a:not([name]):link,body a:not([name]).N06:link{background-color:#bdacff}.N06 .active{background-color:#5f509b}.N06 a:not([name]),.N06 button,.N06 input,body a:not([name]).N06{background-color:#c3b4ff}.N06 a:not([name]):focus,.N06 a:not([name]):hover,.N06 button:focus,.N06 button:hover,.N06 input:focus,.N06 input:hover,body a:not([name]).N06:focus,body a:not([name]).N06:hover{background-color:#6b5ab3}.N06 a:not([name]).active,.N06 a:not([name]) .active,.N06 a:not([name]):active,.N06 button.active,.N06 button .active,.N06 button:active,.N06 input.active,.N06 input .active,.N06 input:active,body a:not([name]).N06 .active,body a:not([name]).N06.active,body a:not([name]).N06:active{background-color:#5f509b}.N06 input[type=checkbox],.N06 input[type=radio]{background-color:#bdacff}.N06 input[type=checkbox]:checked,.N06 input[type=radio]:checked{background-color:#b1b2e2}.N06 .date,.N06 .name,.N06 em{color:#302754}.N06 abbr,.N06 rt,.N06 strong,.N06 sub,.N06 sup{background-color:#9482d7;color:#c3b4ff}.VGSAY,.VGSAY textarea{color:#000;background-color:#9fa6db;border-color:#828cd7}.VGSAY.baloon{border-color:#9fa6db}.VGSAY .fa-check{color:#20710b}.VGSAY .fa-warning{color:#883816}.VGSAY .fa-ban{color:#881616}.VGSAY [data-tooltip],.VGSAY [title]{background-color:#b4bbff}.VGSAY [data-tooltip]:after,.VGSAY [data-tooltip]:before,.VGSAY [title]:after,.VGSAY [title]:before,.VGSAY b{color:#000;background-color:#b4bbff}.VGSAY a:not([name]),body a:not([name]).VGSAY{color:#000}.VGSAY a:not([name]):visited,body a:not([name]).VGSAY:visited{background-color:#a4b8e2}.VGSAY a:not([name]):link,body a:not([name]).VGSAY:link{background-color:#afb2ff}.VGSAY .active{background-color:#50589b}.VGSAY a:not([name]),.VGSAY button,.VGSAY input,body a:not([name]).VGSAY{background-color:#b4bbff}.VGSAY a:not([name]):focus,.VGSAY a:not([name]):hover,.VGSAY button:focus,.VGSAY button:hover,.VGSAY input:focus,.VGSAY input:hover,body a:not([name]).VGSAY:focus,body a:not([name]).VGSAY:hover{background-color:#5a63b3}.VGSAY a:not([name]).active,.VGSAY a:not([name]) .active,.VGSAY a:not([name]):active,.VGSAY button.active,.VGSAY button .active,.VGSAY button:active,.VGSAY input.active,.VGSAY input .active,.VGSAY input:active,body a:not([name]).VGSAY.active,body a:not([name]).VGSAY .active,body a:not([name]).VGSAY:active{background-color:#50589b}.VGSAY input[type=checkbox],.VGSAY input[type=radio]{background-color:#afb2ff}.VGSAY input[type=checkbox]:checked,.VGSAY input[type=radio]:checked{background-color:#a4b8e2}.VGSAY .date,.VGSAY .name,.VGSAY em{color:#272b54}.VGSAY abbr,.VGSAY rt,.VGSAY strong,.VGSAY sub,.VGSAY sup{background-color:#828cd7;color:#b4bbff}.GSAY,.GSAY textarea{color:#000;background-color:#90abd4;border-color:#6c94cc}.GSAY.baloon{border-color:#90abd4}.GSAY .fa-check{color:#20710b}.GSAY .fa-warning{color:#883816}.GSAY .fa-ban{color:#881616}.GSAY [data-tooltip],.GSAY [title]{background-color:#a1c3f5}.GSAY [data-tooltip]:after,.GSAY [data-tooltip]:before,.GSAY [title]:after,.GSAY [title]:before,.GSAY b{color:#000;background-color:#a1c3f5}.GSAY a:not([name]),body a:not([name]).GSAY{color:#000}.GSAY a:not([name]):visited,body a:not([name]).GSAY:visited{background-color:#93c0d9}.GSAY a:not([name]):link,body a:not([name]).GSAY:link{background-color:#9fb9f6}.GSAY .active{background-color:#3e5f92}.GSAY a:not([name]),.GSAY button,.GSAY input,body a:not([name]).GSAY{background-color:#a1c3f5}.GSAY a:not([name]):focus,.GSAY a:not([name]):hover,.GSAY button:focus,.GSAY button:hover,.GSAY input:focus,.GSAY input:hover,body a:not([name]).GSAY:focus,body a:not([name]).GSAY:hover{background-color:#436ba8}.GSAY a:not([name]).active,.GSAY a:not([name]) .active,.GSAY a:not([name]):active,.GSAY button.active,.GSAY button .active,.GSAY button:active,.GSAY input.active,.GSAY input .active,.GSAY input:active,body a:not([name]).GSAY.active,body a:not([name]).GSAY .active,body a:not([name]).GSAY:active{background-color:#3e5f92}.GSAY input[type=checkbox],.GSAY input[type=radio]{background-color:#9fb9f6}.GSAY input[type=checkbox]:checked,.GSAY input[type=radio]:checked{background-color:#93c0d9}.GSAY .date,.GSAY .name,.GSAY em{color:#1c304e}.GSAY abbr,.GSAY rt,.GSAY strong,.GSAY sub,.GSAY sup{background-color:#6c94cc;color:#a1c3f5}.N09,.N09 textarea{color:#000;background-color:#90c0d4;border-color:#6cb3cc}.N09.baloon{border-color:#90c0d4}.N09 .fa-check{color:#20710b}.N09 .fa-warning{color:#883816}.N09 .fa-ban{color:#881616}.N09 [data-tooltip],.N09 [title]{background-color:#a1dcf5}.N09 [data-tooltip]:after,.N09 [data-tooltip]:before,.N09 [title]:after,.N09 [title]:before,.N09 b{color:#000;background-color:#a1dcf5}.N09 a:not([name]),body a:not([name]).N09{color:#000}.N09 a:not([name]):visited,body a:not([name]).N09:visited{background-color:#93d6d9}.N09 a:not([name]):link,body a:not([name]).N09:link{background-color:#9fcff6}.N09 .active{background-color:#3e7892}.N09 a:not([name]),.N09 button,.N09 input,body a:not([name]).N09{background-color:#a1dcf5}.N09 a:not([name]):focus,.N09 a:not([name]):hover,.N09 button:focus,.N09 button:hover,.N09 input:focus,.N09 input:hover,body a:not([name]).N09:focus,body a:not([name]).N09:hover{background-color:#438aa8}.N09 a:not([name]).active,.N09 a:not([name]) .active,.N09 a:not([name]):active,.N09 button.active,.N09 button .active,.N09 button:active,.N09 input.active,.N09 input .active,.N09 input:active,body a:not([name]).N09 .active,body a:not([name]).N09.active,body a:not([name]).N09:active{background-color:#3e7892}.N09 input[type=checkbox],.N09 input[type=radio]{background-color:#9fcff6}.N09 input[type=checkbox]:checked,.N09 input[type=radio]:checked{background-color:#93d6d9}.N09 .date,.N09 .name,.N09 em{color:#1c3f4e}.N09 abbr,.N09 rt,.N09 strong,.N09 sub,.N09 sup{background-color:#6cb3cc;color:#a1dcf5}.TSAY,.TSAY textarea{color:#000;background-color:#b6ae90;border-color:#a49967}.TSAY.baloon{border-color:#b6ae90}.TSAY .fa-check{color:#20710b}.TSAY .fa-warning{color:#883816}.TSAY .fa-ban{color:#881616}.TSAY [data-tooltip],.TSAY [title]{background-color:#d0c6a1}.TSAY [data-tooltip]:after,.TSAY [data-tooltip]:before,.TSAY [title]:after,.TSAY [title]:before,.TSAY b{color:#000;background-color:#d0c6a1}.TSAY a:not([name]),body a:not([name]).TSAY{color:#000}.TSAY a:not([name]):visited,body a:not([name]).TSAY:visited{background-color:#bcc28f}.TSAY a:not([name]):link,body a:not([name]).TSAY:link{background-color:#c8bcac}.TSAY .active{background-color:#6c633e}.TSAY a:not([name]),.TSAY button,.TSAY input,body a:not([name]).TSAY{background-color:#d0c6a1}.TSAY a:not([name]):focus,.TSAY a:not([name]):hover,.TSAY button:focus,.TSAY button:hover,.TSAY input:focus,.TSAY input:hover,body a:not([name]).TSAY:focus,body a:not([name]).TSAY:hover{background-color:#7b7043}.TSAY a:not([name]).active,.TSAY a:not([name]) .active,.TSAY a:not([name]):active,.TSAY button.active,.TSAY button .active,.TSAY button:active,.TSAY input.active,.TSAY input .active,.TSAY input:active,body a:not([name]).TSAY.active,body a:not([name]).TSAY .active,body a:not([name]).TSAY:active{background-color:#6c633e}.TSAY input[type=checkbox],.TSAY input[type=radio]{background-color:#c8bcac}.TSAY input[type=checkbox]:checked,.TSAY input[type=radio]:checked{background-color:#bcc28f}.TSAY .date,.TSAY .name,.TSAY em{color:#38321c}.TSAY abbr,.TSAY rt,.TSAY strong,.TSAY sub,.TSAY sup{background-color:#a49967;color:#d0c6a1}.talk .chat{border-radius:.5rem;border-style:none;border-width:0;margin:0 7px 0 0}.post{border-style:solid none solid solid;border-width:2px 0 2px 18px}.chat .name{border-bottom:1px solid rgba(0,0,0,.2);box-shadow:0 1px 0 hsla(0,0%,100%,.3)}.contentframe{background-repeat:repeat;background-position:100%;background-attachment:fixed;background-image:url(\"http://s3-ap-northeast-1.amazonaws.com/giji-assets/images/bg/renga.png\")}.contentframe .talk .baloon{left:-6px;border-right-width:1px}.filmend{background-image:url(\"http://s3-ap-northeast-1.amazonaws.com/giji-assets/images/bg/film-end.png\")}", ""]);

// exports


/***/ }),
/* 229 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(2)(undefined);
// imports


// module
exports.push([module.i, ".chrs,.contentframe .talk th .portrate{border-top:2px solid rgba(112,32,0,.5);border-bottom:3px solid rgba(112,32,0,.5)}.contentframe .inframe{background-repeat:repeat-y;background-position:0;background-attachment:local;background-image:url(\"http://s3-ap-northeast-1.amazonaws.com/giji-assets/images/bg/film-wa-L.png\")}.filmline{background-image:url(\"http://s3-ap-northeast-1.amazonaws.com/giji-assets/images/bg/film-wa-border.png\")}.MAKER,.MAKER textarea{color:#dcdcdc;background-color:#151515;border-color:#7e7e7e}.MAKER.baloon{border-color:#7e7e7e}.MAKER .fa-check{color:#68ba53}.MAKER .fa-warning{color:#d1815f}.MAKER .fa-ban{color:#d15f5f}.MAKER [data-tooltip],.MAKER [title]{background-color:#3f3f3f}.MAKER [data-tooltip]:after,.MAKER [data-tooltip]:before,.MAKER [title]:after,.MAKER [title]:before,.MAKER b{color:#dcdcdc;background-color:#3f3f3f}.MAKER a:not([name]),body a:not([name]).MAKER{color:#dcdcdc}.MAKER a:not([name]):visited,body a:not([name]).MAKER:visited{background-color:#3d4b39}.MAKER a:not([name]):link,body a:not([name]).MAKER:link{background-color:#484556}.MAKER .active{background-color:#a8a8a8}.MAKER a:not([name]),.MAKER button,.MAKER input,body a:not([name]).MAKER{background-color:#3f3f3f}.MAKER a:not([name]):focus,.MAKER a:not([name]):hover,.MAKER button:focus,.MAKER button:hover,.MAKER input:focus,.MAKER input:hover,body a:not([name]).MAKER:focus,body a:not([name]).MAKER:hover{background-color:#939393}.MAKER a:not([name]).active,.MAKER a:not([name]) .active,.MAKER a:not([name]):active,.MAKER button.active,.MAKER button .active,.MAKER button:active,.MAKER input.active,.MAKER input .active,.MAKER input:active,body a:not([name]).MAKER.active,body a:not([name]).MAKER .active,body a:not([name]).MAKER:active{background-color:#a8a8a8}.MAKER input[type=checkbox],.MAKER input[type=radio]{background-color:#484556}.MAKER input[type=checkbox]:checked,.MAKER input[type=radio]:checked{background-color:#3d4b39}.MAKER .date,.MAKER .name,.MAKER em{color:#696969}.MAKER abbr,.MAKER rt,.MAKER strong,.MAKER sub,.MAKER sup{background-color:#7e7e7e;color:#3f3f3f}.ADMIN,.ADMIN textarea{color:#ffe972;background-color:#00041c;border-color:#a88d00}.ADMIN.baloon{border-color:#a88d00}.ADMIN .fa-check{color:#74be31}.ADMIN .fa-warning{color:#dc853c}.ADMIN .fa-ban{color:#dc633c}.ADMIN [data-tooltip],.ADMIN [title]{background-color:#000d54}.ADMIN [data-tooltip]:after,.ADMIN [data-tooltip]:before,.ADMIN [title]:after,.ADMIN [title]:before,.ADMIN b{color:#ffe972;background-color:#000d54}.ADMIN a:not([name]),body a:not([name]).ADMIN{color:#ffe972}.ADMIN a:not([name]):visited,body a:not([name]).ADMIN:visited{background-color:#051f4b}.ADMIN a:not([name]):link,body a:not([name]).ADMIN:link{background-color:#111968}.ADMIN .active{background-color:#e0bd00}.ADMIN a:not([name]),.ADMIN button,.ADMIN input,body a:not([name]).ADMIN{background-color:#000d54}.ADMIN a:not([name]):focus,.ADMIN a:not([name]):hover,.ADMIN button:focus,.ADMIN button:hover,.ADMIN input:focus,.ADMIN input:hover,body a:not([name]).ADMIN:focus,body a:not([name]).ADMIN:hover{background-color:#c4a500}.ADMIN a:not([name]).active,.ADMIN a:not([name]) .active,.ADMIN a:not([name]):active,.ADMIN button.active,.ADMIN button .active,.ADMIN button:active,.ADMIN input.active,.ADMIN input .active,.ADMIN input:active,body a:not([name]).ADMIN.active,body a:not([name]).ADMIN .active,body a:not([name]).ADMIN:active{background-color:#e0bd00}.ADMIN input[type=checkbox],.ADMIN input[type=radio]{background-color:#111968}.ADMIN input[type=checkbox]:checked,.ADMIN input[type=radio]:checked{background-color:#051f4b}.ADMIN .date,.ADMIN .name,.ADMIN em{color:#8c7600}.ADMIN abbr,.ADMIN rt,.ADMIN strong,.ADMIN sub,.ADMIN sup{background-color:#a88d00;color:#000d54}.dark,.dark textarea,.links,.links textarea,.TITLE,.TITLE textarea{color:gold;background-color:#000;border-color:#565656}.dark.baloon,.links.baloon,.TITLE.baloon{border-color:#000}.dark .fa-check,.links .fa-check,.TITLE .fa-check{color:#74b80b}.dark .fa-warning,.links .fa-warning,.TITLE .fa-warning{color:#dc7f16}.dark .fa-ban,.links .fa-ban,.TITLE .fa-ban{color:#dc5d16}.dark [data-tooltip],.dark [title],.links [data-tooltip],.links [title],.TITLE [data-tooltip],.TITLE [title]{background-color:#1e1e1e}.dark [data-tooltip]:after,.dark [data-tooltip]:before,.dark [title]:after,.dark [title]:before,.dark b,.links [data-tooltip]:after,.links [data-tooltip]:before,.links [title]:after,.links [title]:before,.links b,.TITLE [data-tooltip]:after,.TITLE [data-tooltip]:before,.TITLE [title]:after,.TITLE [title]:before,.TITLE b{color:gold;background-color:#1e1e1e}.dark a:not([name]),.links a:not([name]),.TITLE a:not([name]),body a:not([name]).dark,body a:not([name]).links,body a:not([name]).TITLE{color:gold}.dark a:not([name]):visited,.links a:not([name]):visited,.TITLE a:not([name]):visited,body a:not([name]).dark:visited,body a:not([name]).links:visited,body a:not([name]).TITLE:visited{background-color:#202e1c}.dark a:not([name]):link,.links a:not([name]):link,.TITLE a:not([name]):link,body a:not([name]).dark:link,body a:not([name]).links:link,body a:not([name]).TITLE:link{background-color:#2b2839}.dark .active,.links .active,.TITLE .active{background-color:#565656}.dark a:not([name]),.dark button,.dark input,.links a:not([name]),.links button,.links input,.TITLE a:not([name]),.TITLE button,.TITLE input,body a:not([name]).dark,body a:not([name]).links,body a:not([name]).TITLE{background-color:#1e1e1e}.dark a:not([name]):focus,.dark a:not([name]):hover,.dark button:focus,.dark button:hover,.dark input:focus,.dark input:hover,.links a:not([name]):focus,.links a:not([name]):hover,.links button:focus,.links button:hover,.links input:focus,.links input:hover,.TITLE a:not([name]):focus,.TITLE a:not([name]):hover,.TITLE button:focus,.TITLE button:hover,.TITLE input:focus,.TITLE input:hover,body a:not([name]).dark:focus,body a:not([name]).dark:hover,body a:not([name]).links:focus,body a:not([name]).links:hover,body a:not([name]).TITLE:focus,body a:not([name]).TITLE:hover{background-color:#414141}.dark a:not([name]).active,.dark a:not([name]) .active,.dark a:not([name]):active,.dark button.active,.dark button .active,.dark button:active,.dark input.active,.dark input .active,.dark input:active,.links a:not([name]).active,.links a:not([name]) .active,.links a:not([name]):active,.links button.active,.links button .active,.links button:active,.links input.active,.links input .active,.links input:active,.TITLE a:not([name]).active,.TITLE a:not([name]) .active,.TITLE a:not([name]):active,.TITLE button.active,.TITLE button .active,.TITLE button:active,.TITLE input.active,.TITLE input .active,.TITLE input:active,body a:not([name]).dark.active,body a:not([name]).dark .active,body a:not([name]).dark:active,body a:not([name]).links.active,body a:not([name]).links .active,body a:not([name]).links:active,body a:not([name]).TITLE.active,body a:not([name]).TITLE .active,body a:not([name]).TITLE:active{background-color:#565656}.dark input[type=checkbox],.dark input[type=radio],.links input[type=checkbox],.links input[type=radio],.TITLE input[type=checkbox],.TITLE input[type=radio]{background-color:#2b2839}.dark input[type=checkbox]:checked,.dark input[type=radio]:checked,.links input[type=checkbox]:checked,.links input[type=radio]:checked,.TITLE input[type=checkbox]:checked,.TITLE input[type=radio]:checked{background-color:#202e1c}.dark .date,.dark .name,.dark em,.links .date,.links .name,.links em,.TITLE .date,.TITLE .name,.TITLE em{color:#565656}.dark abbr,.dark rt,.dark strong,.dark sub,.dark sup,.links abbr,.links rt,.links strong,.links sub,.links sup,.TITLE abbr,.TITLE rt,.TITLE strong,.TITLE sub,.TITLE sup{background-color:#565656;color:#1e1e1e}.btns,.btns textarea,.chrblank,.chrblank textarea,.footer,.footer textarea,.header,.header textarea{color:gold;background-color:#4d4e46;border-color:#898a84}.btns.baloon,.chrblank.baloon,.footer.baloon,.header.baloon{border-color:#4d4e46}.btns .fa-check,.chrblank .fa-check,.footer .fa-check,.header .fa-check{color:#74b80b}.btns .fa-warning,.chrblank .fa-warning,.footer .fa-warning,.header .fa-warning{color:#dc7f16}.btns .fa-ban,.chrblank .fa-ban,.footer .fa-ban,.header .fa-ban{color:#dc5d16}.btns [data-tooltip],.btns [title],.chrblank [data-tooltip],.chrblank [title],.footer [data-tooltip],.footer [title],.header [data-tooltip],.header [title]{background-color:#62635c}.btns [data-tooltip]:after,.btns [data-tooltip]:before,.btns [title]:after,.btns [title]:before,.btns b,.chrblank [data-tooltip]:after,.chrblank [data-tooltip]:before,.chrblank [title]:after,.chrblank [title]:before,.chrblank b,.footer [data-tooltip]:after,.footer [data-tooltip]:before,.footer [title]:after,.footer [title]:before,.footer b,.header [data-tooltip]:after,.header [data-tooltip]:before,.header [title]:after,.header [title]:before,.header b{color:gold;background-color:#62635c}.btns a:not([name]),.chrblank a:not([name]),.footer a:not([name]),.header a:not([name]),body a:not([name]).btns,body a:not([name]).chrblank,body a:not([name]).footer,body a:not([name]).header{color:gold}.btns a:not([name]):visited,.chrblank a:not([name]):visited,.footer a:not([name]):visited,.header a:not([name]):visited,body a:not([name]).btns:visited,body a:not([name]).chrblank:visited,body a:not([name]).footer:visited,body a:not([name]).header:visited{background-color:#5c6b53}.btns a:not([name]):link,.chrblank a:not([name]):link,.footer a:not([name]):link,.header a:not([name]):link,body a:not([name]).btns:link,body a:not([name]).chrblank:link,body a:not([name]).footer:link,body a:not([name]).header:link{background-color:#67656f}.btns .active,.chrblank .active,.footer .active,.header .active{background-color:#80817c}.btns a:not([name]),.btns button,.btns input,.chrblank a:not([name]),.chrblank button,.chrblank input,.footer a:not([name]),.footer button,.footer input,.header a:not([name]),.header button,.header input,body a:not([name]).btns,body a:not([name]).chrblank,body a:not([name]).footer,body a:not([name]).header{background-color:#62635c}.btns a:not([name]):focus,.btns a:not([name]):hover,.btns button:focus,.btns button:hover,.btns input:focus,.btns input:hover,.chrblank a:not([name]):focus,.chrblank a:not([name]):hover,.chrblank button:focus,.chrblank button:hover,.chrblank input:focus,.chrblank input:hover,.footer a:not([name]):focus,.footer a:not([name]):hover,.footer button:focus,.footer button:hover,.footer input:focus,.footer input:hover,.header a:not([name]):focus,.header a:not([name]):hover,.header button:focus,.header button:hover,.header input:focus,.header input:hover,body a:not([name]).btns:focus,body a:not([name]).btns:hover,body a:not([name]).chrblank:focus,body a:not([name]).chrblank:hover,body a:not([name]).footer:focus,body a:not([name]).footer:hover,body a:not([name]).header:focus,body a:not([name]).header:hover{background-color:#74746f}.btns a:not([name]).active,.btns a:not([name]) .active,.btns a:not([name]):active,.btns button.active,.btns button .active,.btns button:active,.btns input.active,.btns input .active,.btns input:active,.chrblank a:not([name]).active,.chrblank a:not([name]) .active,.chrblank a:not([name]):active,.chrblank button.active,.chrblank button .active,.chrblank button:active,.chrblank input.active,.chrblank input .active,.chrblank input:active,.footer a:not([name]).active,.footer a:not([name]) .active,.footer a:not([name]):active,.footer button.active,.footer button .active,.footer button:active,.footer input.active,.footer input .active,.footer input:active,.header a:not([name]).active,.header a:not([name]) .active,.header a:not([name]):active,.header button.active,.header button .active,.header button:active,.header input.active,.header input .active,.header input:active,body a:not([name]).btns.active,body a:not([name]).btns .active,body a:not([name]).btns:active,body a:not([name]).chrblank.active,body a:not([name]).chrblank .active,body a:not([name]).chrblank:active,body a:not([name]).footer.active,body a:not([name]).footer .active,body a:not([name]).footer:active,body a:not([name]).header.active,body a:not([name]).header .active,body a:not([name]).header:active{background-color:#80817c}.btns input[type=checkbox],.btns input[type=radio],.chrblank input[type=checkbox],.chrblank input[type=radio],.footer input[type=checkbox],.footer input[type=radio],.header input[type=checkbox],.header input[type=radio]{background-color:#67656f}.btns input[type=checkbox]:checked,.btns input[type=radio]:checked,.chrblank input[type=checkbox]:checked,.chrblank input[type=radio]:checked,.footer input[type=checkbox]:checked,.footer input[type=radio]:checked,.header input[type=checkbox]:checked,.header input[type=radio]:checked{background-color:#5c6b53}.btns .date,.btns .name,.btns em,.chrblank .date,.chrblank .name,.chrblank em,.footer .date,.footer .name,.footer em,.header .date,.header .name,.header em{color:#898a84}.btns abbr,.btns rt,.btns strong,.btns sub,.btns sup,.chrblank abbr,.chrblank rt,.chrblank strong,.chrblank sub,.chrblank sup,.footer abbr,.footer rt,.footer strong,.footer sub,.footer sup,.header abbr,.header rt,.header strong,.header sub,.header sup{background-color:#898a84;color:#62635c}.public,.public textarea{color:gold;background-color:#332509;border-color:#786f5c}.public.baloon{border-color:#332509}.public .fa-check{color:#74b80b}.public .fa-warning{color:#dc7f16}.public .fa-ban{color:#dc5d16}.public [data-tooltip],.public [title]{background-color:#4b3f26}.public [data-tooltip]:after,.public [data-tooltip]:before,.public [title]:after,.public [title]:before,.public b{color:gold;background-color:#4b3f26}.public a:not([name]),body a:not([name]).public{color:gold}.public a:not([name]):visited,body a:not([name]).public:visited{background-color:#474b23}.public a:not([name]):link,body a:not([name]).public:link{background-color:#534540}.public .active{background-color:#726a5b}.public a:not([name]),.public button,.public input,body a:not([name]).public{background-color:#4b3f26}.public a:not([name]):focus,.public a:not([name]):hover,.public button:focus,.public button:hover,.public input:focus,.public input:hover,body a:not([name]).public:focus,body a:not([name]).public:hover{background-color:#625947}.public a:not([name]).active,.public a:not([name]) .active,.public a:not([name]):active,.public button.active,.public button .active,.public button:active,.public input.active,.public input .active,.public input:active,body a:not([name]).public.active,body a:not([name]).public .active,body a:not([name]).public:active{background-color:#726a5b}.public input[type=checkbox],.public input[type=radio]{background-color:#534540}.public input[type=checkbox]:checked,.public input[type=radio]:checked{background-color:#474b23}.public .date,.public .name,.public em{color:#786f5c}.public abbr,.public rt,.public strong,.public sub,.public sup{background-color:#786f5c;color:#4b3f26}.private,.private textarea{color:gold;background-color:#090a33;border-color:#5c5d78}.private.baloon{border-color:#090a33}.private .fa-check{color:#74b80b}.private .fa-warning{color:#dc7f16}.private .fa-ban{color:#dc5d16}.private [data-tooltip],.private [title]{background-color:#26274b}.private [data-tooltip]:after,.private [data-tooltip]:before,.private [title]:after,.private [title]:before,.private b{color:gold;background-color:#26274b}.private a:not([name]),body a:not([name]).private{color:gold}.private a:not([name]):visited,body a:not([name]).private:visited{background-color:#273644}.private a:not([name]):link,body a:not([name]).private:link{background-color:#323060}.private .active{background-color:#5b5b72}.private a:not([name]),.private button,.private input,body a:not([name]).private{background-color:#26274b}.private a:not([name]):focus,.private a:not([name]):hover,.private button:focus,.private button:hover,.private input:focus,.private input:hover,body a:not([name]).private:focus,body a:not([name]).private:hover{background-color:#474762}.private a:not([name]).active,.private a:not([name]) .active,.private a:not([name]):active,.private button.active,.private button .active,.private button:active,.private input.active,.private input .active,.private input:active,body a:not([name]).private.active,body a:not([name]).private .active,body a:not([name]).private:active{background-color:#5b5b72}.private input[type=checkbox],.private input[type=radio]{background-color:#323060}.private input[type=checkbox]:checked,.private input[type=radio]:checked{background-color:#273644}.private .date,.private .name,.private em{color:#5c5d78}.private abbr,.private rt,.private strong,.private sub,.private sup{background-color:#5c5d78;color:#26274b}.HATER,.HATER textarea,.LONEWOLF,.LONEWOLF textarea{color:#0b4343;background-color:#7ac5c5;border-color:#4abbb5}.HATER.baloon,.LONEWOLF.baloon{border-color:#7ac5c5}.HATER .fa-check,.LONEWOLF .fa-check{color:#238821}.HATER .fa-warning,.LONEWOLF .fa-warning{color:#8c4f2c}.HATER .fa-ban,.LONEWOLF .fa-ban{color:#8c2c2c}.HATER [data-tooltip],.HATER [title],.LONEWOLF [data-tooltip],.LONEWOLF [title]{background-color:#85e2e2}.HATER [data-tooltip]:after,.HATER [data-tooltip]:before,.HATER [title]:after,.HATER [title]:before,.HATER b,.LONEWOLF [data-tooltip]:after,.LONEWOLF [data-tooltip]:before,.LONEWOLF [title]:after,.LONEWOLF [title]:before,.LONEWOLF b{color:#0b4343;background-color:#85e2e2}.HATER a:not([name]),.LONEWOLF a:not([name]),body a:not([name]).HATER,body a:not([name]).LONEWOLF{color:#0b4343}.HATER a:not([name]):visited,.LONEWOLF a:not([name]):visited,body a:not([name]).HATER:visited,body a:not([name]).LONEWOLF:visited{background-color:#7adbc8}.HATER a:not([name]):link,.LONEWOLF a:not([name]):link,body a:not([name]).HATER:link,body a:not([name]).LONEWOLF:link{background-color:#86d5e5}.HATER .active,.LONEWOLF .active{background-color:#227f7f}.HATER a:not([name]),.HATER button,.HATER input,.LONEWOLF a:not([name]),.LONEWOLF button,.LONEWOLF input,body a:not([name]).HATER,body a:not([name]).LONEWOLF{background-color:#85e2e2}.HATER a:not([name]):focus,.HATER a:not([name]):hover,.HATER button:focus,.HATER button:hover,.HATER input:focus,.HATER input:hover,.LONEWOLF a:not([name]):focus,.LONEWOLF a:not([name]):hover,.LONEWOLF button:focus,.LONEWOLF button:hover,.LONEWOLF input:focus,.LONEWOLF input:hover,body a:not([name]).HATER:focus,body a:not([name]).HATER:hover,body a:not([name]).LONEWOLF:focus,body a:not([name]).LONEWOLF:hover{background-color:#229292}.HATER a:not([name]).active,.HATER a:not([name]) .active,.HATER a:not([name]):active,.HATER button.active,.HATER button .active,.HATER button:active,.HATER input.active,.HATER input .active,.HATER input:active,.LONEWOLF a:not([name]).active,.LONEWOLF a:not([name]) .active,.LONEWOLF a:not([name]):active,.LONEWOLF button.active,.LONEWOLF button .active,.LONEWOLF button:active,.LONEWOLF input.active,.LONEWOLF input .active,.LONEWOLF input:active,body a:not([name]).HATER.active,body a:not([name]).HATER .active,body a:not([name]).HATER:active,body a:not([name]).LONEWOLF.active,body a:not([name]).LONEWOLF .active,body a:not([name]).LONEWOLF:active{background-color:#227f7f}.HATER input[type=checkbox],.HATER input[type=radio],.LONEWOLF input[type=checkbox],.LONEWOLF input[type=radio]{background-color:#86d5e5}.HATER input[type=checkbox]:checked,.HATER input[type=radio]:checked,.LONEWOLF input[type=checkbox]:checked,.LONEWOLF input[type=radio]:checked{background-color:#7adbc8}.HATER .date,.HATER .name,.HATER em,.LONEWOLF .date,.LONEWOLF .name,.LONEWOLF em{color:#0b4343}.HATER abbr,.HATER rt,.HATER strong,.HATER sub,.HATER sup,.LONEWOLF abbr,.LONEWOLF rt,.LONEWOLF strong,.LONEWOLF sub,.LONEWOLF sup{background-color:#4abbb5;color:#85e2e2}.GURU,.GURU textarea,.PIXI,.PIXI textarea{color:#053819;background-color:#73b68d;border-color:#3fa462}.GURU.baloon,.PIXI.baloon{border-color:#73b68d}.GURU .fa-check,.PIXI .fa-check{color:#218413}.GURU .fa-warning,.PIXI .fa-warning{color:#8a4b1f}.GURU .fa-ban,.PIXI .fa-ban{color:#8a291f}.GURU [data-tooltip],.GURU [title],.PIXI [data-tooltip],.PIXI [title]{background-color:#7cd09d}.GURU [data-tooltip]:after,.GURU [data-tooltip]:before,.GURU [title]:after,.GURU [title]:before,.GURU b,.PIXI [data-tooltip]:after,.PIXI [data-tooltip]:before,.PIXI [title]:after,.PIXI [title]:before,.PIXI b{color:#053819;background-color:#7cd09d}.GURU a:not([name]),.PIXI a:not([name]),body a:not([name]).GURU,body a:not([name]).PIXI{color:#053819}.GURU a:not([name]):visited,.PIXI a:not([name]):visited,body a:not([name]).GURU:visited,body a:not([name]).PIXI:visited{background-color:#72cb8c}.GURU a:not([name]):link,.PIXI a:not([name]):link,body a:not([name]).GURU:link,body a:not([name]).PIXI:link{background-color:#7ec5a8}.GURU .active,.PIXI .active{background-color:#186c3a}.GURU a:not([name]),.GURU button,.GURU input,.PIXI a:not([name]),.PIXI button,.PIXI input,body a:not([name]).GURU,body a:not([name]).PIXI{background-color:#7cd09d}.GURU a:not([name]):focus,.GURU a:not([name]):hover,.GURU button:focus,.GURU button:hover,.GURU input:focus,.GURU input:hover,.PIXI a:not([name]):focus,.PIXI a:not([name]):hover,.PIXI button:focus,.PIXI button:hover,.PIXI input:focus,.PIXI input:hover,body a:not([name]).GURU:focus,body a:not([name]).GURU:hover,body a:not([name]).PIXI:focus,body a:not([name]).PIXI:hover{background-color:#167b3f}.GURU a:not([name]).active,.GURU a:not([name]) .active,.GURU a:not([name]):active,.GURU button.active,.GURU button .active,.GURU button:active,.GURU input.active,.GURU input .active,.GURU input:active,.PIXI a:not([name]).active,.PIXI a:not([name]) .active,.PIXI a:not([name]):active,.PIXI button.active,.PIXI button .active,.PIXI button:active,.PIXI input.active,.PIXI input .active,.PIXI input:active,body a:not([name]).GURU.active,body a:not([name]).GURU .active,body a:not([name]).GURU:active,body a:not([name]).PIXI.active,body a:not([name]).PIXI .active,body a:not([name]).PIXI:active{background-color:#186c3a}.GURU input[type=checkbox],.GURU input[type=radio],.PIXI input[type=checkbox],.PIXI input[type=radio]{background-color:#7ec5a8}.GURU input[type=checkbox]:checked,.GURU input[type=radio]:checked,.PIXI input[type=checkbox]:checked,.PIXI input[type=radio]:checked{background-color:#72cb8c}.GURU .date,.GURU .name,.GURU em,.PIXI .date,.PIXI .name,.PIXI em{color:#053819}.GURU abbr,.GURU rt,.GURU strong,.GURU sub,.GURU sup,.PIXI abbr,.PIXI rt,.PIXI strong,.PIXI sub,.PIXI sup{background-color:#3fa462;color:#7cd09d}.EVIL,.EVIL textarea{color:#0f3805;background-color:#80b673;border-color:#53a43a}.EVIL.baloon{border-color:#80b673}.EVIL .fa-check{color:#25840d}.EVIL .fa-warning{color:#8d4b18}.EVIL .fa-ban{color:#8d2918}.EVIL [data-tooltip],.EVIL [title]{background-color:#8dd07c}.EVIL [data-tooltip]:after,.EVIL [data-tooltip]:before,.EVIL [title]:after,.EVIL [title]:before,.EVIL b{color:#0f3805;background-color:#8dd07c}.EVIL a:not([name]),body a:not([name]).EVIL{color:#0f3805}.EVIL a:not([name]):visited,body a:not([name]).EVIL:visited{background-color:#81cb6f}.EVIL a:not([name]):link,body a:not([name]).EVIL:link{background-color:#8dc58b}.EVIL .active{background-color:#296c18}.EVIL a:not([name]),.EVIL button,.EVIL input,body a:not([name]).EVIL{background-color:#8dd07c}.EVIL a:not([name]):focus,.EVIL a:not([name]):hover,.EVIL button:focus,.EVIL button:hover,.EVIL input:focus,.EVIL input:hover,body a:not([name]).EVIL:focus,body a:not([name]).EVIL:hover{background-color:#2b7b16}.EVIL a:not([name]).active,.EVIL a:not([name]) .active,.EVIL a:not([name]):active,.EVIL button.active,.EVIL button .active,.EVIL button:active,.EVIL input.active,.EVIL input .active,.EVIL input:active,body a:not([name]).EVIL.active,body a:not([name]).EVIL .active,body a:not([name]).EVIL:active{background-color:#296c18}.EVIL input[type=checkbox],.EVIL input[type=radio]{background-color:#8dc58b}.EVIL input[type=checkbox]:checked,.EVIL input[type=radio]:checked{background-color:#81cb6f}.EVIL .date,.EVIL .name,.EVIL em{color:#0f3805}.EVIL abbr,.EVIL rt,.EVIL strong,.EVIL sub,.EVIL sup{background-color:#53a43a;color:#8dd07c}.DISH,.DISH textarea,.HUMAN,.HUMAN textarea,.juror,.juror textarea,.live,.live textarea{color:#43360b;background-color:#c5b37a;border-color:#baa045}.DISH.baloon,.HUMAN.baloon,.juror.baloon,.live.baloon{border-color:#c5b37a}.DISH .fa-check,.HUMAN .fa-check,.juror .fa-check,.live .fa-check{color:#36830f}.DISH .fa-warning,.HUMAN .fa-warning,.juror .fa-warning,.live .fa-warning{color:#9e4a1a}.DISH .fa-ban,.HUMAN .fa-ban,.juror .fa-ban,.live .fa-ban{color:#9e281a}.DISH [data-tooltip],.DISH [title],.HUMAN [data-tooltip],.HUMAN [title],.juror [data-tooltip],.juror [title],.live [data-tooltip],.live [title]{background-color:#e2cc85}.DISH [data-tooltip]:after,.DISH [data-tooltip]:before,.DISH [title]:after,.DISH [title]:before,.DISH b,.HUMAN [data-tooltip]:after,.HUMAN [data-tooltip]:before,.HUMAN [title]:after,.HUMAN [title]:before,.HUMAN b,.juror [data-tooltip]:after,.juror [data-tooltip]:before,.juror [title]:after,.juror [title]:before,.juror b,.live [data-tooltip]:after,.live [data-tooltip]:before,.live [title]:after,.live [title]:before,.live b{color:#43360b;background-color:#e2cc85}.DISH a:not([name]),.HUMAN a:not([name]),.juror a:not([name]),.live a:not([name]),body a:not([name]).DISH,body a:not([name]).HUMAN,body a:not([name]).juror,body a:not([name]).live{color:#43360b}.DISH a:not([name]):visited,.HUMAN a:not([name]):visited,.juror a:not([name]):visited,.live a:not([name]):visited,body a:not([name]).DISH:visited,body a:not([name]).HUMAN:visited,body a:not([name]).juror:visited,body a:not([name]).live:visited{background-color:#ccc777}.DISH a:not([name]):link,.HUMAN a:not([name]):link,.juror a:not([name]):link,.live a:not([name]):link,body a:not([name]).DISH:link,body a:not([name]).HUMAN:link,body a:not([name]).juror:link,body a:not([name]).live:link{background-color:#d8c193}.DISH .active,.HUMAN .active,.juror .active,.live .active{background-color:#7f6922}.DISH a:not([name]),.DISH button,.DISH input,.HUMAN a:not([name]),.HUMAN button,.HUMAN input,.juror a:not([name]),.juror button,.juror input,.live a:not([name]),.live button,.live input,body a:not([name]).DISH,body a:not([name]).HUMAN,body a:not([name]).juror,body a:not([name]).live{background-color:#e2cc85}.DISH a:not([name]):focus,.DISH a:not([name]):hover,.DISH button:focus,.DISH button:hover,.DISH input:focus,.DISH input:hover,.HUMAN a:not([name]):focus,.HUMAN a:not([name]):hover,.HUMAN button:focus,.HUMAN button:hover,.HUMAN input:focus,.HUMAN input:hover,.juror a:not([name]):focus,.juror a:not([name]):hover,.juror button:focus,.juror button:hover,.juror input:focus,.juror input:hover,.live a:not([name]):focus,.live a:not([name]):hover,.live button:focus,.live button:hover,.live input:focus,.live input:hover,body a:not([name]).DISH:focus,body a:not([name]).DISH:hover,body a:not([name]).HUMAN:focus,body a:not([name]).HUMAN:hover,body a:not([name]).juror:focus,body a:not([name]).juror:hover,body a:not([name]).live:focus,body a:not([name]).live:hover{background-color:#927722}.DISH a:not([name]).active,.DISH a:not([name]) .active,.DISH a:not([name]):active,.DISH button.active,.DISH button .active,.DISH button:active,.DISH input.active,.DISH input .active,.DISH input:active,.HUMAN a:not([name]).active,.HUMAN a:not([name]) .active,.HUMAN a:not([name]):active,.HUMAN button.active,.HUMAN button .active,.HUMAN button:active,.HUMAN input.active,.HUMAN input .active,.HUMAN input:active,.juror a:not([name]).active,.juror a:not([name]) .active,.juror a:not([name]):active,.juror button.active,.juror button .active,.juror button:active,.juror input.active,.juror input .active,.juror input:active,.live a:not([name]).active,.live a:not([name]) .active,.live a:not([name]):active,.live button.active,.live button .active,.live button:active,.live input.active,.live input .active,.live input:active,body a:not([name]).DISH.active,body a:not([name]).DISH .active,body a:not([name]).DISH:active,body a:not([name]).HUMAN.active,body a:not([name]).HUMAN .active,body a:not([name]).HUMAN:active,body a:not([name]).juror.active,body a:not([name]).juror .active,body a:not([name]).juror:active,body a:not([name]).live.active,body a:not([name]).live .active,body a:not([name]).live:active{background-color:#7f6922}.DISH input[type=checkbox],.DISH input[type=radio],.HUMAN input[type=checkbox],.HUMAN input[type=radio],.juror input[type=checkbox],.juror input[type=radio],.live input[type=checkbox],.live input[type=radio]{background-color:#d8c193}.DISH input[type=checkbox]:checked,.DISH input[type=radio]:checked,.HUMAN input[type=checkbox]:checked,.HUMAN input[type=radio]:checked,.juror input[type=checkbox]:checked,.juror input[type=radio]:checked,.live input[type=checkbox]:checked,.live input[type=radio]:checked{background-color:#ccc777}.DISH .date,.DISH .name,.DISH em,.HUMAN .date,.HUMAN .name,.HUMAN em,.juror .date,.juror .name,.juror em,.live .date,.live .name,.live em{color:#43360b}.DISH abbr,.DISH rt,.DISH strong,.DISH sub,.DISH sup,.HUMAN abbr,.HUMAN rt,.HUMAN strong,.HUMAN sub,.HUMAN sup,.juror abbr,.juror rt,.juror strong,.juror sub,.juror sup,.live abbr,.live rt,.live strong,.live sub,.live sup{background-color:#baa045;color:#e2cc85}.cursed,.cursed textarea,.droop,.droop textarea,.feared,.feared textarea,.suicide,.suicide textarea,.victim,.victim textarea,.WOLF,.WOLF textarea{color:#430b0b;background-color:#c57a7a;border-color:#ba4a45}.cursed.baloon,.droop.baloon,.feared.baloon,.suicide.baloon,.victim.baloon,.WOLF.baloon{border-color:#c57a7a}.cursed .fa-check,.droop .fa-check,.feared .fa-check,.suicide .fa-check,.victim .fa-check,.WOLF .fa-check{color:#36750f}.cursed .fa-warning,.droop .fa-warning,.feared .fa-warning,.suicide .fa-warning,.victim .fa-warning,.WOLF .fa-warning{color:#9e3c1a}.cursed .fa-ban,.droop .fa-ban,.feared .fa-ban,.suicide .fa-ban,.victim .fa-ban,.WOLF .fa-ban{color:#9e1a1a}.cursed [data-tooltip],.cursed [title],.droop [data-tooltip],.droop [title],.feared [data-tooltip],.feared [title],.suicide [data-tooltip],.suicide [title],.victim [data-tooltip],.victim [title],.WOLF [data-tooltip],.WOLF [title]{background-color:#e28585}.cursed [data-tooltip]:after,.cursed [data-tooltip]:before,.cursed [title]:after,.cursed [title]:before,.cursed b,.droop [data-tooltip]:after,.droop [data-tooltip]:before,.droop [title]:after,.droop [title]:before,.droop b,.feared [data-tooltip]:after,.feared [data-tooltip]:before,.feared [title]:after,.feared [title]:before,.feared b,.suicide [data-tooltip]:after,.suicide [data-tooltip]:before,.suicide [title]:after,.suicide [title]:before,.suicide b,.victim [data-tooltip]:after,.victim [data-tooltip]:before,.victim [title]:after,.victim [title]:before,.victim b,.WOLF [data-tooltip]:after,.WOLF [data-tooltip]:before,.WOLF [title]:after,.WOLF [title]:before,.WOLF b{color:#430b0b;background-color:#e28585}.cursed a:not([name]),.droop a:not([name]),.feared a:not([name]),.suicide a:not([name]),.victim a:not([name]),.WOLF a:not([name]),body a:not([name]).cursed,body a:not([name]).droop,body a:not([name]).feared,body a:not([name]).suicide,body a:not([name]).victim,body a:not([name]).WOLF{color:#430b0b}.cursed a:not([name]):visited,.droop a:not([name]):visited,.feared a:not([name]):visited,.suicide a:not([name]):visited,.victim a:not([name]):visited,.WOLF a:not([name]):visited,body a:not([name]).cursed:visited,body a:not([name]).droop:visited,body a:not([name]).feared:visited,body a:not([name]).suicide:visited,body a:not([name]).victim:visited,body a:not([name]).WOLF:visited{background-color:#cc8977}.cursed a:not([name]):link,.droop a:not([name]):link,.feared a:not([name]):link,.suicide a:not([name]):link,.victim a:not([name]):link,.WOLF a:not([name]):link,body a:not([name]).cursed:link,body a:not([name]).droop:link,body a:not([name]).feared:link,body a:not([name]).suicide:link,body a:not([name]).victim:link,body a:not([name]).WOLF:link{background-color:#d88393}.cursed .active,.droop .active,.feared .active,.suicide .active,.victim .active,.WOLF .active{background-color:#7f2222}.cursed a:not([name]),.cursed button,.cursed input,.droop a:not([name]),.droop button,.droop input,.feared a:not([name]),.feared button,.feared input,.suicide a:not([name]),.suicide button,.suicide input,.victim a:not([name]),.victim button,.victim input,.WOLF a:not([name]),.WOLF button,.WOLF input,body a:not([name]).cursed,body a:not([name]).droop,body a:not([name]).feared,body a:not([name]).suicide,body a:not([name]).victim,body a:not([name]).WOLF{background-color:#e28585}.cursed a:not([name]):focus,.cursed a:not([name]):hover,.cursed button:focus,.cursed button:hover,.cursed input:focus,.cursed input:hover,.droop a:not([name]):focus,.droop a:not([name]):hover,.droop button:focus,.droop button:hover,.droop input:focus,.droop input:hover,.feared a:not([name]):focus,.feared a:not([name]):hover,.feared button:focus,.feared button:hover,.feared input:focus,.feared input:hover,.suicide a:not([name]):focus,.suicide a:not([name]):hover,.suicide button:focus,.suicide button:hover,.suicide input:focus,.suicide input:hover,.victim a:not([name]):focus,.victim a:not([name]):hover,.victim button:focus,.victim button:hover,.victim input:focus,.victim input:hover,.WOLF a:not([name]):focus,.WOLF a:not([name]):hover,.WOLF button:focus,.WOLF button:hover,.WOLF input:focus,.WOLF input:hover,body a:not([name]).cursed:focus,body a:not([name]).cursed:hover,body a:not([name]).droop:focus,body a:not([name]).droop:hover,body a:not([name]).feared:focus,body a:not([name]).feared:hover,body a:not([name]).suicide:focus,body a:not([name]).suicide:hover,body a:not([name]).victim:focus,body a:not([name]).victim:hover,body a:not([name]).WOLF:focus,body a:not([name]).WOLF:hover{background-color:#922222}.cursed a:not([name]).active,.cursed a:not([name]) .active,.cursed a:not([name]):active,.cursed button.active,.cursed button .active,.cursed button:active,.cursed input.active,.cursed input .active,.cursed input:active,.droop a:not([name]).active,.droop a:not([name]) .active,.droop a:not([name]):active,.droop button.active,.droop button .active,.droop button:active,.droop input.active,.droop input .active,.droop input:active,.feared a:not([name]).active,.feared a:not([name]) .active,.feared a:not([name]):active,.feared button.active,.feared button .active,.feared button:active,.feared input.active,.feared input .active,.feared input:active,.suicide a:not([name]).active,.suicide a:not([name]) .active,.suicide a:not([name]):active,.suicide button.active,.suicide button .active,.suicide button:active,.suicide input.active,.suicide input .active,.suicide input:active,.victim a:not([name]).active,.victim a:not([name]) .active,.victim a:not([name]):active,.victim button.active,.victim button .active,.victim button:active,.victim input.active,.victim input .active,.victim input:active,.WOLF a:not([name]).active,.WOLF a:not([name]) .active,.WOLF a:not([name]):active,.WOLF button.active,.WOLF button .active,.WOLF button:active,.WOLF input.active,.WOLF input .active,.WOLF input:active,body a:not([name]).cursed.active,body a:not([name]).cursed .active,body a:not([name]).cursed:active,body a:not([name]).droop.active,body a:not([name]).droop .active,body a:not([name]).droop:active,body a:not([name]).feared.active,body a:not([name]).feared .active,body a:not([name]).feared:active,body a:not([name]).suicide.active,body a:not([name]).suicide .active,body a:not([name]).suicide:active,body a:not([name]).victim.active,body a:not([name]).victim .active,body a:not([name]).victim:active,body a:not([name]).WOLF.active,body a:not([name]).WOLF .active,body a:not([name]).WOLF:active{background-color:#7f2222}.cursed input[type=checkbox],.cursed input[type=radio],.droop input[type=checkbox],.droop input[type=radio],.feared input[type=checkbox],.feared input[type=radio],.suicide input[type=checkbox],.suicide input[type=radio],.victim input[type=checkbox],.victim input[type=radio],.WOLF input[type=checkbox],.WOLF input[type=radio]{background-color:#d88393}.cursed input[type=checkbox]:checked,.cursed input[type=radio]:checked,.droop input[type=checkbox]:checked,.droop input[type=radio]:checked,.feared input[type=checkbox]:checked,.feared input[type=radio]:checked,.suicide input[type=checkbox]:checked,.suicide input[type=radio]:checked,.victim input[type=checkbox]:checked,.victim input[type=radio]:checked,.WOLF input[type=checkbox]:checked,.WOLF input[type=radio]:checked{background-color:#cc8977}.cursed .date,.cursed .name,.cursed em,.droop .date,.droop .name,.droop em,.feared .date,.feared .name,.feared em,.suicide .date,.suicide .name,.suicide em,.victim .date,.victim .name,.victim em,.WOLF .date,.WOLF .name,.WOLF em{color:#430b0b}.cursed abbr,.cursed rt,.cursed strong,.cursed sub,.cursed sup,.droop abbr,.droop rt,.droop strong,.droop sub,.droop sup,.feared abbr,.feared rt,.feared strong,.feared sub,.feared sup,.suicide abbr,.suicide rt,.suicide strong,.suicide sub,.suicide sup,.victim abbr,.victim rt,.victim strong,.victim sub,.victim sup,.WOLF abbr,.WOLF rt,.WOLF strong,.WOLF sub,.WOLF sup{background-color:#ba4a45;color:#e28585}.LOVER,.LOVER textarea{color:#441c4e;background-color:#c690d4;border-color:#bc6ccc}.LOVER.baloon{border-color:#c690d4}.LOVER .fa-check{color:#367b25}.LOVER .fa-warning{color:#9f4230}.LOVER .fa-ban{color:#9f2030}.LOVER [data-tooltip],.LOVER [title]{background-color:#e4a1f5}.LOVER [data-tooltip]:after,.LOVER [data-tooltip]:before,.LOVER [title]:after,.LOVER [title]:before,.LOVER b{color:#441c4e;background-color:#e4a1f5}.LOVER a:not([name]),body a:not([name]).LOVER{color:#441c4e}.LOVER a:not([name]):visited,body a:not([name]).LOVER:visited{background-color:#cea2d9}.LOVER a:not([name]):link,body a:not([name]).LOVER:link{background-color:#da9bf6}.LOVER .active{background-color:#813e92}.LOVER a:not([name]),.LOVER button,.LOVER input,body a:not([name]).LOVER{background-color:#e4a1f5}.LOVER a:not([name]):focus,.LOVER a:not([name]):hover,.LOVER button:focus,.LOVER button:hover,.LOVER input:focus,.LOVER input:hover,body a:not([name]).LOVER:focus,body a:not([name]).LOVER:hover{background-color:#9443a8}.LOVER a:not([name]).active,.LOVER a:not([name]) .active,.LOVER a:not([name]):active,.LOVER button.active,.LOVER button .active,.LOVER button:active,.LOVER input.active,.LOVER input .active,.LOVER input:active,body a:not([name]).LOVER.active,body a:not([name]).LOVER .active,body a:not([name]).LOVER:active{background-color:#813e92}.LOVER input[type=checkbox],.LOVER input[type=radio]{background-color:#da9bf6}.LOVER input[type=checkbox]:checked,.LOVER input[type=radio]:checked{background-color:#cea2d9}.LOVER .date,.LOVER .name,.LOVER em{color:#441c4e}.LOVER abbr,.LOVER rt,.LOVER strong,.LOVER sub,.LOVER sup{background-color:#bc6ccc;color:#e4a1f5}.alive,.alive textarea,.grave,.grave textarea,.mob,.MOB,.MOB textarea,.mob textarea,.NONE,.NONE textarea,.visiter,.visiter textarea{color:#432c0b;background-color:#c5a77a;border-color:#ba8e45}.alive.baloon,.grave.baloon,.MOB.baloon,.mob.baloon,.NONE.baloon,.visiter.baloon{border-color:#c5a77a}.alive .fa-check,.grave .fa-check,.MOB .fa-check,.mob .fa-check,.NONE .fa-check,.visiter .fa-check{color:#36800f}.alive .fa-warning,.grave .fa-warning,.MOB .fa-warning,.mob .fa-warning,.NONE .fa-warning,.visiter .fa-warning{color:#9e471a}.alive .fa-ban,.grave .fa-ban,.MOB .fa-ban,.mob .fa-ban,.NONE .fa-ban,.visiter .fa-ban{color:#9e251a}.alive [data-tooltip],.alive [title],.grave [data-tooltip],.grave [title],.MOB [data-tooltip],.mob [data-tooltip],.mob [title],.MOB [title],.NONE [data-tooltip],.NONE [title],.visiter [data-tooltip],.visiter [title]{background-color:#e2bd85}.alive [data-tooltip]:after,.alive [data-tooltip]:before,.alive [title]:after,.alive [title]:before,.alive b,.grave [data-tooltip]:after,.grave [data-tooltip]:before,.grave [title]:after,.grave [title]:before,.grave b,.MOB [data-tooltip]:after,.mob [data-tooltip]:after,.MOB [data-tooltip]:before,.mob [data-tooltip]:before,.MOB [title]:after,.mob [title]:after,.mob [title]:before,.MOB [title]:before,.mob b,.MOB b,.NONE [data-tooltip]:after,.NONE [data-tooltip]:before,.NONE [title]:after,.NONE [title]:before,.NONE b,.visiter [data-tooltip]:after,.visiter [data-tooltip]:before,.visiter [title]:after,.visiter [title]:before,.visiter b{color:#432c0b;background-color:#e2bd85}.alive a:not([name]),.grave a:not([name]),.mob a:not([name]),.MOB a:not([name]),.NONE a:not([name]),.visiter a:not([name]),body a:not([name]).alive,body a:not([name]).grave,body a:not([name]).MOB,body a:not([name]).mob,body a:not([name]).NONE,body a:not([name]).visiter{color:#432c0b}.alive a:not([name]):visited,.grave a:not([name]):visited,.mob a:not([name]):visited,.MOB a:not([name]):visited,.NONE a:not([name]):visited,.visiter a:not([name]):visited,body a:not([name]).alive:visited,body a:not([name]).grave:visited,body a:not([name]).MOB:visited,body a:not([name]).mob:visited,body a:not([name]).NONE:visited,body a:not([name]).visiter:visited{background-color:#ccba77}.alive a:not([name]):link,.grave a:not([name]):link,.mob a:not([name]):link,.MOB a:not([name]):link,.NONE a:not([name]):link,.visiter a:not([name]):link,body a:not([name]).alive:link,body a:not([name]).grave:link,body a:not([name]).MOB:link,body a:not([name]).mob:link,body a:not([name]).NONE:link,body a:not([name]).visiter:link{background-color:#d8b493}.alive .active,.grave .active,.MOB .active,.mob .active,.NONE .active,.visiter .active{background-color:#7f5a22}.alive a:not([name]),.alive button,.alive input,.grave a:not([name]),.grave button,.grave input,.MOB a:not([name]),.mob a:not([name]),.MOB button,.mob button,.mob input,.MOB input,.NONE a:not([name]),.NONE button,.NONE input,.visiter a:not([name]),.visiter button,.visiter input,body a:not([name]).alive,body a:not([name]).grave,body a:not([name]).mob,body a:not([name]).MOB,body a:not([name]).NONE,body a:not([name]).visiter{background-color:#e2bd85}.alive a:not([name]):focus,.alive a:not([name]):hover,.alive button:focus,.alive button:hover,.alive input:focus,.alive input:hover,.grave a:not([name]):focus,.grave a:not([name]):hover,.grave button:focus,.grave button:hover,.grave input:focus,.grave input:hover,.mob a:not([name]):focus,.MOB a:not([name]):focus,.mob a:not([name]):hover,.MOB a:not([name]):hover,.mob button:focus,.MOB button:focus,.mob button:hover,.MOB button:hover,.MOB input:focus,.mob input:focus,.mob input:hover,.MOB input:hover,.NONE a:not([name]):focus,.NONE a:not([name]):hover,.NONE button:focus,.NONE button:hover,.NONE input:focus,.NONE input:hover,.visiter a:not([name]):focus,.visiter a:not([name]):hover,.visiter button:focus,.visiter button:hover,.visiter input:focus,.visiter input:hover,body a:not([name]).alive:focus,body a:not([name]).alive:hover,body a:not([name]).grave:focus,body a:not([name]).grave:hover,body a:not([name]).mob:focus,body a:not([name]).MOB:focus,body a:not([name]).MOB:hover,body a:not([name]).mob:hover,body a:not([name]).NONE:focus,body a:not([name]).NONE:hover,body a:not([name]).visiter:focus,body a:not([name]).visiter:hover{background-color:#926522}.alive a:not([name]).active,.alive a:not([name]) .active,.alive a:not([name]):active,.alive button.active,.alive button .active,.alive button:active,.alive input.active,.alive input .active,.alive input:active,.grave a:not([name]).active,.grave a:not([name]) .active,.grave a:not([name]):active,.grave button.active,.grave button .active,.grave button:active,.grave input.active,.grave input .active,.grave input:active,.MOB a:not([name]).active,.mob a:not([name]).active,.MOB a:not([name]) .active,.mob a:not([name]) .active,.mob a:not([name]):active,.MOB a:not([name]):active,.mob button.active,.MOB button.active,.mob button .active,.MOB button .active,.MOB button:active,.mob button:active,.mob input.active,.MOB input.active,.mob input .active,.MOB input .active,.mob input:active,.MOB input:active,.NONE a:not([name]).active,.NONE a:not([name]) .active,.NONE a:not([name]):active,.NONE button.active,.NONE button .active,.NONE button:active,.NONE input.active,.NONE input .active,.NONE input:active,.visiter a:not([name]).active,.visiter a:not([name]) .active,.visiter a:not([name]):active,.visiter button.active,.visiter button .active,.visiter button:active,.visiter input.active,.visiter input .active,.visiter input:active,body a:not([name]).alive.active,body a:not([name]).alive .active,body a:not([name]).alive:active,body a:not([name]).grave.active,body a:not([name]).grave .active,body a:not([name]).grave:active,body a:not([name]).MOB.active,body a:not([name]).mob.active,body a:not([name]).mob .active,body a:not([name]).MOB .active,body a:not([name]).MOB:active,body a:not([name]).mob:active,body a:not([name]).NONE.active,body a:not([name]).NONE .active,body a:not([name]).NONE:active,body a:not([name]).visiter.active,body a:not([name]).visiter .active,body a:not([name]).visiter:active{background-color:#7f5a22}.alive input[type=checkbox],.alive input[type=radio],.grave input[type=checkbox],.grave input[type=radio],.mob input[type=checkbox],.MOB input[type=checkbox],.MOB input[type=radio],.mob input[type=radio],.NONE input[type=checkbox],.NONE input[type=radio],.visiter input[type=checkbox],.visiter input[type=radio]{background-color:#d8b493}.alive input[type=checkbox]:checked,.alive input[type=radio]:checked,.grave input[type=checkbox]:checked,.grave input[type=radio]:checked,.mob input[type=checkbox]:checked,.MOB input[type=checkbox]:checked,.MOB input[type=radio]:checked,.mob input[type=radio]:checked,.NONE input[type=checkbox]:checked,.NONE input[type=radio]:checked,.visiter input[type=checkbox]:checked,.visiter input[type=radio]:checked{background-color:#ccba77}.alive .date,.alive .name,.alive em,.grave .date,.grave .name,.grave em,.mob .date,.MOB .date,.MOB .name,.mob .name,.MOB em,.mob em,.NONE .date,.NONE .name,.NONE em,.visiter .date,.visiter .name,.visiter em{color:#432c0b}.alive abbr,.alive rt,.alive strong,.alive sub,.alive sup,.grave abbr,.grave rt,.grave strong,.grave sub,.grave sup,.MOB abbr,.mob abbr,.MOB rt,.mob rt,.MOB strong,.mob strong,.mob sub,.MOB sub,.MOB sup,.mob sup,.NONE abbr,.NONE rt,.NONE strong,.NONE sub,.NONE sup,.visiter abbr,.visiter rt,.visiter strong,.visiter sub,.visiter sup{background-color:#ba8e45;color:#e2bd85}.executed,.executed textarea{color:#1c304e;background-color:#90abd4;border-color:#6c94cc}.executed.baloon{border-color:#90abd4}.executed .fa-check{color:#298125}.executed .fa-warning{color:#914830}.executed .fa-ban{color:#912630}.executed [data-tooltip],.executed [title]{background-color:#a1c3f5}.executed [data-tooltip]:after,.executed [data-tooltip]:before,.executed [title]:after,.executed [title]:before,.executed b{color:#1c304e;background-color:#a1c3f5}.executed a:not([name]),body a:not([name]).executed{color:#1c304e}.executed a:not([name]):visited,body a:not([name]).executed:visited{background-color:#93c0d9}.executed a:not([name]):link,body a:not([name]).executed:link{background-color:#9fb9f6}.executed .active{background-color:#3e5f92}.executed a:not([name]),.executed button,.executed input,body a:not([name]).executed{background-color:#a1c3f5}.executed a:not([name]):focus,.executed a:not([name]):hover,.executed button:focus,.executed button:hover,.executed input:focus,.executed input:hover,body a:not([name]).executed:focus,body a:not([name]).executed:hover{background-color:#436ba8}.executed a:not([name]).active,.executed a:not([name]) .active,.executed a:not([name]):active,.executed button.active,.executed button .active,.executed button:active,.executed input.active,.executed input .active,.executed input:active,body a:not([name]).executed.active,body a:not([name]).executed .active,body a:not([name]).executed:active{background-color:#3e5f92}.executed input[type=checkbox],.executed input[type=radio]{background-color:#9fb9f6}.executed input[type=checkbox]:checked,.executed input[type=radio]:checked{background-color:#93c0d9}.executed .date,.executed .name,.executed em{color:#1c304e}.executed abbr,.executed rt,.executed strong,.executed sub,.executed sup{background-color:#6c94cc;color:#a1c3f5}.hide,.hide textarea{color:#38321c;background-color:#b6ae90;border-color:#a49967}.hide.baloon{border-color:#b6ae90}.hide .fa-check{color:#328214}.hide .fa-warning{color:#9b4920}.hide .fa-ban{color:#9b2720}.hide [data-tooltip],.hide [title]{background-color:#d0c6a1}.hide [data-tooltip]:after,.hide [data-tooltip]:before,.hide [title]:after,.hide [title]:before,.hide b{color:#38321c;background-color:#d0c6a1}.hide a:not([name]),body a:not([name]).hide{color:#38321c}.hide a:not([name]):visited,body a:not([name]).hide:visited{background-color:#bcc28f}.hide a:not([name]):link,body a:not([name]).hide:link{background-color:#c8bcac}.hide .active{background-color:#6c633e}.hide a:not([name]),.hide button,.hide input,body a:not([name]).hide{background-color:#d0c6a1}.hide a:not([name]):focus,.hide a:not([name]):hover,.hide button:focus,.hide button:hover,.hide input:focus,.hide input:hover,body a:not([name]).hide:focus,body a:not([name]).hide:hover{background-color:#7b7043}.hide a:not([name]).active,.hide a:not([name]) .active,.hide a:not([name]):active,.hide button.active,.hide button .active,.hide button:active,.hide input.active,.hide input .active,.hide input:active,body a:not([name]).hide.active,body a:not([name]).hide .active,body a:not([name]).hide:active{background-color:#6c633e}.hide input[type=checkbox],.hide input[type=radio]{background-color:#c8bcac}.hide input[type=checkbox]:checked,.hide input[type=radio]:checked{background-color:#bcc28f}.hide .date,.hide .name,.hide em{color:#38321c}.hide abbr,.hide rt,.hide strong,.hide sub,.hide sup{background-color:#a49967;color:#d0c6a1}.leave,.leave textarea,.suddendead,.suddendead textarea{color:#32322d;background-color:#aeafa8;border-color:#999a8b}.leave.baloon,.suddendead.baloon{border-color:#aeafa8}.leave .fa-check,.suddendead .fa-check{color:#30821a}.leave .fa-warning,.suddendead .fa-warning{color:#994925}.leave .fa-ban,.suddendead .fa-ban{color:#992725}.leave [data-tooltip],.leave [title],.suddendead [data-tooltip],.suddendead [title]{background-color:#c6c7bf}.leave [data-tooltip]:after,.leave [data-tooltip]:before,.leave [title]:after,.leave [title]:before,.leave b,.suddendead [data-tooltip]:after,.suddendead [data-tooltip]:before,.suddendead [title]:after,.suddendead [title]:before,.suddendead b{color:#32322d;background-color:#c6c7bf}.leave a:not([name]),.suddendead a:not([name]),body a:not([name]).leave,body a:not([name]).suddendead{color:#32322d}.leave a:not([name]):visited,.suddendead a:not([name]):visited,body a:not([name]).leave:visited,body a:not([name]).suddendead:visited{background-color:#b4c3aa}.leave a:not([name]):link,.suddendead a:not([name]):link,body a:not([name]).leave:link,body a:not([name]).suddendead:link{background-color:#bfbdc6}.leave .active,.suddendead .active{background-color:#63645b}.leave a:not([name]),.leave button,.leave input,.suddendead a:not([name]),.suddendead button,.suddendead input,body a:not([name]).leave,body a:not([name]).suddendead{background-color:#c6c7bf}.leave a:not([name]):focus,.leave a:not([name]):hover,.leave button:focus,.leave button:hover,.leave input:focus,.leave input:hover,.suddendead a:not([name]):focus,.suddendead a:not([name]):hover,.suddendead button:focus,.suddendead button:hover,.suddendead input:focus,.suddendead input:hover,body a:not([name]).leave:focus,body a:not([name]).leave:hover,body a:not([name]).suddendead:focus,body a:not([name]).suddendead:hover{background-color:#707167}.leave a:not([name]).active,.leave a:not([name]) .active,.leave a:not([name]):active,.leave button.active,.leave button .active,.leave button:active,.leave input.active,.leave input .active,.leave input:active,.suddendead a:not([name]).active,.suddendead a:not([name]) .active,.suddendead a:not([name]):active,.suddendead button.active,.suddendead button .active,.suddendead button:active,.suddendead input.active,.suddendead input .active,.suddendead input:active,body a:not([name]).leave.active,body a:not([name]).leave .active,body a:not([name]).leave:active,body a:not([name]).suddendead.active,body a:not([name]).suddendead .active,body a:not([name]).suddendead:active{background-color:#63645b}.leave input[type=checkbox],.leave input[type=radio],.suddendead input[type=checkbox],.suddendead input[type=radio]{background-color:#bfbdc6}.leave input[type=checkbox]:checked,.leave input[type=radio]:checked,.suddendead input[type=checkbox]:checked,.suddendead input[type=radio]:checked{background-color:#b4c3aa}.leave .date,.leave .name,.leave em,.suddendead .date,.suddendead .name,.suddendead em{color:#32322d}.leave abbr,.leave rt,.leave strong,.leave sub,.leave sup,.suddendead abbr,.suddendead rt,.suddendead strong,.suddendead sub,.suddendead sup{background-color:#999a8b;color:#c6c7bf}.SPORT,.SPORT textarea{color:#85e2e2;background-color:#160303;border-color:#168686}.SPORT.baloon{border-color:#168686}.SPORT .fa-check{color:#4cbc55}.SPORT .fa-warning{color:#b48361}.SPORT .fa-ban{color:#b46161}.SPORT [data-tooltip],.SPORT [title]{background-color:#430b0b}.SPORT [data-tooltip]:after,.SPORT [data-tooltip]:before,.SPORT [title]:after,.SPORT [title]:before,.SPORT b{color:#85e2e2;background-color:#430b0b}.SPORT a:not([name]),body a:not([name]).SPORT{color:#85e2e2}.SPORT a:not([name]):visited,body a:not([name]).SPORT:visited{background-color:#401e0b}.SPORT a:not([name]):link,body a:not([name]).SPORT:link{background-color:#4c1728}.SPORT .active{background-color:#1db3b3}.SPORT a:not([name]),.SPORT button,.SPORT input,body a:not([name]).SPORT{background-color:#430b0b}.SPORT a:not([name]):focus,.SPORT a:not([name]):hover,.SPORT button:focus,.SPORT button:hover,.SPORT input:focus,.SPORT input:hover,body a:not([name]).SPORT:focus,body a:not([name]).SPORT:hover{background-color:#1a9d9d}.SPORT a:not([name]).active,.SPORT a:not([name]) .active,.SPORT a:not([name]):active,.SPORT button.active,.SPORT button .active,.SPORT button:active,.SPORT input.active,.SPORT input .active,.SPORT input:active,body a:not([name]).SPORT.active,body a:not([name]).SPORT .active,body a:not([name]).SPORT:active{background-color:#1db3b3}.SPORT input[type=checkbox],.SPORT input[type=radio]{background-color:#4c1728}.SPORT input[type=checkbox]:checked,.SPORT input[type=radio]:checked{background-color:#401e0b}.SPORT .date,.SPORT .name,.SPORT em{color:#127070}.SPORT abbr,.SPORT rt,.SPORT strong,.SPORT sub,.SPORT sup{background-color:#168686;color:#430b0b}.P09,.P09 textarea{color:#85e2c6;background-color:#160309}.P09,.P09 textarea,.P09.baloon{border-color:#168664}.P09 .fa-check{color:#4cbc4c}.P09 .fa-warning{color:#b48358}.P09 .fa-ban{color:#b46158}.P09 [data-tooltip],.P09 [title]{background-color:#430b1c}.P09 [data-tooltip]:after,.P09 [data-tooltip]:before,.P09 [title]:after,.P09 [title]:before,.P09 b{color:#85e2c6;background-color:#430b1c}.P09 a:not([name]),body a:not([name]).P09{color:#85e2c6}.P09 a:not([name]):visited,body a:not([name]).P09:visited{background-color:#401e1a}.P09 a:not([name]):link,body a:not([name]).P09:link{background-color:#4c1737}.P09 .active{background-color:#1db386}.P09 a:not([name]),.P09 button,.P09 input,body a:not([name]).P09{background-color:#430b1c}.P09 a:not([name]):focus,.P09 a:not([name]):hover,.P09 button:focus,.P09 button:hover,.P09 input:focus,.P09 input:hover,body a:not([name]).P09:focus,body a:not([name]).P09:hover{background-color:#1a9d75}.P09 a:not([name]).active,.P09 a:not([name]) .active,.P09 a:not([name]):active,.P09 button.active,.P09 button .active,.P09 button:active,.P09 input.active,.P09 input .active,.P09 input:active,body a:not([name]).P09 .active,body a:not([name]).P09.active,body a:not([name]).P09:active{background-color:#1db386}.P09 input[type=checkbox],.P09 input[type=radio]{background-color:#4c1737}.P09 input[type=checkbox]:checked,.P09 input[type=radio]:checked{background-color:#401e1a}.P09 .date,.P09 .name,.P09 em{color:#127054}.P09 abbr,.P09 rt,.P09 strong,.P09 sub,.P09 sup{background-color:#168664;color:#430b1c}.ELSE,.ELSE textarea{color:#7cd09d;background-color:#12010b;border-color:#0b7033}.ELSE.baloon{border-color:#0b7033}.ELSE .fa-check{color:#49b63f}.ELSE .fa-warning{color:#b17d4a}.ELSE .fa-ban{color:#b15b4a}.ELSE [data-tooltip],.ELSE [title]{background-color:#380523}.ELSE [data-tooltip]:after,.ELSE [data-tooltip]:before,.ELSE [title]:after,.ELSE [title]:before,.ELSE b{color:#7cd09d;background-color:#380523}.ELSE a:not([name]),body a:not([name]).ELSE{color:#7cd09d}.ELSE a:not([name]):visited,body a:not([name]).ELSE:visited{background-color:#371820}.ELSE a:not([name]):link,body a:not([name]).ELSE:link{background-color:#42123d}.ELSE .active{background-color:#0e9544}.ELSE a:not([name]),.ELSE button,.ELSE input,body a:not([name]).ELSE{background-color:#380523}.ELSE a:not([name]):focus,.ELSE a:not([name]):hover,.ELSE button:focus,.ELSE button:hover,.ELSE input:focus,.ELSE input:hover,body a:not([name]).ELSE:focus,body a:not([name]).ELSE:hover{background-color:#0d823c}.ELSE a:not([name]).active,.ELSE a:not([name]) .active,.ELSE a:not([name]):active,.ELSE button.active,.ELSE button .active,.ELSE button:active,.ELSE input.active,.ELSE input .active,.ELSE input:active,body a:not([name]).ELSE.active,body a:not([name]).ELSE .active,body a:not([name]).ELSE:active{background-color:#0e9544}.ELSE input[type=checkbox],.ELSE input[type=radio]{background-color:#42123d}.ELSE input[type=checkbox]:checked,.ELSE input[type=radio]:checked{background-color:#371820}.ELSE .date,.ELSE .name,.ELSE em{color:#095d2a}.ELSE abbr,.ELSE rt,.ELSE strong,.ELSE sub,.ELSE sup{background-color:#0b7033;color:#380523}.P07,.P07 textarea{color:#7cd084;background-color:#120111}.P07,.P07 textarea,.P07.baloon{border-color:#0b7015}.P07 .fa-check{color:#49b636}.P07 .fa-warning{color:#b17d42}.P07 .fa-ban{color:#b15b42}.P07 [data-tooltip],.P07 [title]{background-color:#380533}.P07 [data-tooltip]:after,.P07 [data-tooltip]:before,.P07 [title]:after,.P07 [title]:before,.P07 b{color:#7cd084;background-color:#380533}.P07 a:not([name]),body a:not([name]).P07{color:#7cd084}.P07 a:not([name]):visited,body a:not([name]).P07:visited{background-color:#37182e}.P07 a:not([name]):link,body a:not([name]).P07:link{background-color:#42124b}.P07 .active{background-color:#0e951c}.P07 a:not([name]),.P07 button,.P07 input,body a:not([name]).P07{background-color:#380533}.P07 a:not([name]):focus,.P07 a:not([name]):hover,.P07 button:focus,.P07 button:hover,.P07 input:focus,.P07 input:hover,body a:not([name]).P07:focus,body a:not([name]).P07:hover{background-color:#0d8218}.P07 a:not([name]).active,.P07 a:not([name]) .active,.P07 a:not([name]):active,.P07 button.active,.P07 button .active,.P07 button:active,.P07 input.active,.P07 input .active,.P07 input:active,body a:not([name]).P07 .active,body a:not([name]).P07.active,body a:not([name]).P07:active{background-color:#0e951c}.P07 input[type=checkbox],.P07 input[type=radio]{background-color:#42124b}.P07 input[type=checkbox]:checked,.P07 input[type=radio]:checked{background-color:#37182e}.P07 .date,.P07 .name,.P07 em{color:#095d11}.P07 abbr,.P07 rt,.P07 strong,.P07 sub,.P07 sup{background-color:#0b7015;color:#380533}.BSAY,.BSAY textarea,.XSAY,.XSAY textarea{color:#8dd07c;background-color:#0f0112;border-color:#1f700b}.BSAY.baloon,.XSAY.baloon{border-color:#1f700b}.BSAY .fa-check,.XSAY .fa-check{color:#4eb634}.BSAY .fa-warning,.XSAY .fa-warning{color:#b77d3f}.BSAY .fa-ban,.XSAY .fa-ban{color:#b75b3f}.BSAY [data-tooltip],.BSAY [title],.XSAY [data-tooltip],.XSAY [title]{background-color:#2d0538}.BSAY [data-tooltip]:after,.BSAY [data-tooltip]:before,.BSAY [title]:after,.BSAY [title]:before,.BSAY b,.XSAY [data-tooltip]:after,.XSAY [data-tooltip]:before,.XSAY [title]:after,.XSAY [title]:before,.XSAY b{color:#8dd07c;background-color:#2d0538}.BSAY a:not([name]),.XSAY a:not([name]),body a:not([name]).BSAY,body a:not([name]).XSAY{color:#8dd07c}.BSAY a:not([name]):visited,.XSAY a:not([name]):visited,body a:not([name]).BSAY:visited,body a:not([name]).XSAY:visited{background-color:#2d1833}.BSAY a:not([name]):link,.XSAY a:not([name]):link,body a:not([name]).BSAY:link,body a:not([name]).XSAY:link{background-color:#39124f}.BSAY .active,.XSAY .active{background-color:#2a950e}.BSAY a:not([name]),.BSAY button,.BSAY input,.XSAY a:not([name]),.XSAY button,.XSAY input,body a:not([name]).BSAY,body a:not([name]).XSAY{background-color:#2d0538}.BSAY a:not([name]):focus,.BSAY a:not([name]):hover,.BSAY button:focus,.BSAY button:hover,.BSAY input:focus,.BSAY input:hover,.XSAY a:not([name]):focus,.XSAY a:not([name]):hover,.XSAY button:focus,.XSAY button:hover,.XSAY input:focus,.XSAY input:hover,body a:not([name]).BSAY:focus,body a:not([name]).BSAY:hover,body a:not([name]).XSAY:focus,body a:not([name]).XSAY:hover{background-color:#24820d}.BSAY a:not([name]).active,.BSAY a:not([name]) .active,.BSAY a:not([name]):active,.BSAY button.active,.BSAY button .active,.BSAY button:active,.BSAY input.active,.BSAY input .active,.BSAY input:active,.XSAY a:not([name]).active,.XSAY a:not([name]) .active,.XSAY a:not([name]):active,.XSAY button.active,.XSAY button .active,.XSAY button:active,.XSAY input.active,.XSAY input .active,.XSAY input:active,body a:not([name]).BSAY.active,body a:not([name]).BSAY .active,body a:not([name]).BSAY:active,body a:not([name]).XSAY.active,body a:not([name]).XSAY .active,body a:not([name]).XSAY:active{background-color:#2a950e}.BSAY input[type=checkbox],.BSAY input[type=radio],.XSAY input[type=checkbox],.XSAY input[type=radio]{background-color:#39124f}.BSAY input[type=checkbox]:checked,.BSAY input[type=radio]:checked,.XSAY input[type=checkbox]:checked,.XSAY input[type=radio]:checked{background-color:#2d1833}.BSAY .date,.BSAY .name,.BSAY em,.XSAY .date,.XSAY .name,.XSAY em{color:#1a5d09}.BSAY abbr,.BSAY rt,.BSAY strong,.BSAY sub,.BSAY sup,.XSAY abbr,.XSAY rt,.XSAY strong,.XSAY sub,.XSAY sup{background-color:#1f700b;color:#2d0538}.P05,.P05 textarea{color:#b4e285;background-color:#0d0316}.P05,.P05 textarea,.P05.baloon{border-color:#4e8616}.P05 .fa-check{color:#5bbc37}.P05 .fa-warning{color:#c48342}.P05 .fa-ban{color:#c46142}.P05 [data-tooltip],.P05 [title]{background-color:#270b43}.P05 [data-tooltip]:after,.P05 [data-tooltip]:before,.P05 [title]:after,.P05 [title]:before,.P05 b{color:#b4e285;background-color:#270b43}.P05 a:not([name]),body a:not([name]).P05{color:#b4e285}.P05 a:not([name]):visited,body a:not([name]).P05:visited{background-color:#281e3d}.P05 a:not([name]):link,body a:not([name]).P05:link{background-color:#331759}.P05 .active{background-color:#68b31d}.P05 a:not([name]),.P05 button,.P05 input,body a:not([name]).P05{background-color:#270b43}.P05 a:not([name]):focus,.P05 a:not([name]):hover,.P05 button:focus,.P05 button:hover,.P05 input:focus,.P05 input:hover,body a:not([name]).P05:focus,body a:not([name]).P05:hover{background-color:#5b9d1a}.P05 a:not([name]).active,.P05 a:not([name]) .active,.P05 a:not([name]):active,.P05 button.active,.P05 button .active,.P05 button:active,.P05 input.active,.P05 input .active,.P05 input:active,body a:not([name]).P05 .active,body a:not([name]).P05.active,body a:not([name]).P05:active{background-color:#68b31d}.P05 input[type=checkbox],.P05 input[type=radio]{background-color:#331759}.P05 input[type=checkbox]:checked,.P05 input[type=radio]:checked{background-color:#281e3d}.P05 .date,.P05 .name,.P05 em{color:#417012}.P05 abbr,.P05 rt,.P05 strong,.P05 sub,.P05 sup{background-color:#4e8616;color:#270b43}.P04,.P04 textarea{color:#d0e285;background-color:#070316}.P04,.P04 textarea,.P04.baloon{border-color:#708616}.P04 .fa-check{color:#64bc37}.P04 .fa-warning{color:#cd8342}.P04 .fa-ban{color:#cd6142}.P04 [data-tooltip],.P04 [title]{background-color:#160b43}.P04 [data-tooltip]:after,.P04 [data-tooltip]:before,.P04 [title]:after,.P04 [title]:before,.P04 b{color:#d0e285;background-color:#160b43}.P04 a:not([name]),body a:not([name]).P04{color:#d0e285}.P04 a:not([name]):visited,body a:not([name]).P04:visited{background-color:#191e3d}.P04 a:not([name]):link,body a:not([name]).P04:link{background-color:#241759}.P04 .active{background-color:#95b31d}.P04 a:not([name]),.P04 button,.P04 input,body a:not([name]).P04{background-color:#160b43}.P04 a:not([name]):focus,.P04 a:not([name]):hover,.P04 button:focus,.P04 button:hover,.P04 input:focus,.P04 input:hover,body a:not([name]).P04:focus,body a:not([name]).P04:hover{background-color:#829d1a}.P04 a:not([name]).active,.P04 a:not([name]) .active,.P04 a:not([name]):active,.P04 button.active,.P04 button .active,.P04 button:active,.P04 input.active,.P04 input .active,.P04 input:active,body a:not([name]).P04 .active,body a:not([name]).P04.active,body a:not([name]).P04:active{background-color:#95b31d}.P04 input[type=checkbox],.P04 input[type=radio]{background-color:#241759}.P04 input[type=checkbox]:checked,.P04 input[type=radio]:checked{background-color:#191e3d}.P04 .date,.P04 .name,.P04 em{color:#5d7012}.P04 abbr,.P04 rt,.P04 strong,.P04 sub,.P04 sup{background-color:#708616;color:#160b43}.MSAY,.MSAY textarea,.SSAY,.SSAY textarea{color:#e2cc85;background-color:#030816;border-color:#866c16}.MSAY.baloon,.SSAY.baloon{border-color:#866c16}.MSAY .fa-check,.SSAY .fa-check{color:#6ab537}.MSAY .fa-warning,.SSAY .fa-warning{color:#d37c42}.MSAY .fa-ban,.SSAY .fa-ban{color:#d35a42}.MSAY [data-tooltip],.MSAY [title],.SSAY [data-tooltip],.SSAY [title]{background-color:#0b1843}.MSAY [data-tooltip]:after,.MSAY [data-tooltip]:before,.MSAY [title]:after,.MSAY [title]:before,.MSAY b,.SSAY [data-tooltip]:after,.SSAY [data-tooltip]:before,.SSAY [title]:after,.SSAY [title]:before,.SSAY b{color:#e2cc85;background-color:#0b1843}.MSAY a:not([name]),.SSAY a:not([name]),body a:not([name]).MSAY,body a:not([name]).SSAY{color:#e2cc85}.MSAY a:not([name]):visited,.SSAY a:not([name]):visited,body a:not([name]).MSAY:visited,body a:not([name]).SSAY:visited{background-color:#0f293d}.MSAY a:not([name]):link,.SSAY a:not([name]):link,body a:not([name]).MSAY:link,body a:not([name]).SSAY:link{background-color:#1b2359}.MSAY .active,.SSAY .active{background-color:#b3901d}.MSAY a:not([name]),.MSAY button,.MSAY input,.SSAY a:not([name]),.SSAY button,.SSAY input,body a:not([name]).MSAY,body a:not([name]).SSAY{background-color:#0b1843}.MSAY a:not([name]):focus,.MSAY a:not([name]):hover,.MSAY button:focus,.MSAY button:hover,.MSAY input:focus,.MSAY input:hover,.SSAY a:not([name]):focus,.SSAY a:not([name]):hover,.SSAY button:focus,.SSAY button:hover,.SSAY input:focus,.SSAY input:hover,body a:not([name]).MSAY:focus,body a:not([name]).MSAY:hover,body a:not([name]).SSAY:focus,body a:not([name]).SSAY:hover{background-color:#9d7e1a}.MSAY a:not([name]).active,.MSAY a:not([name]) .active,.MSAY a:not([name]):active,.MSAY button.active,.MSAY button .active,.MSAY button:active,.MSAY input.active,.MSAY input .active,.MSAY input:active,.SSAY a:not([name]).active,.SSAY a:not([name]) .active,.SSAY a:not([name]):active,.SSAY button.active,.SSAY button .active,.SSAY button:active,.SSAY input.active,.SSAY input .active,.SSAY input:active,body a:not([name]).MSAY.active,body a:not([name]).MSAY .active,body a:not([name]).MSAY:active,body a:not([name]).SSAY.active,body a:not([name]).SSAY .active,body a:not([name]).SSAY:active{background-color:#b3901d}.MSAY input[type=checkbox],.MSAY input[type=radio],.SSAY input[type=checkbox],.SSAY input[type=radio]{background-color:#1b2359}.MSAY input[type=checkbox]:checked,.MSAY input[type=radio]:checked,.SSAY input[type=checkbox]:checked,.SSAY input[type=radio]:checked{background-color:#0f293d}.MSAY .date,.MSAY .name,.MSAY em,.SSAY .date,.SSAY .name,.SSAY em{color:#705a12}.MSAY abbr,.MSAY rt,.MSAY strong,.MSAY sub,.MSAY sup,.SSAY abbr,.SSAY rt,.SSAY strong,.SSAY sub,.SSAY sup{background-color:#866c16;color:#0b1843}.VSAY,.VSAY textarea,.VSSAY,.VSSAY textarea{color:#e2bd85;background-color:#030b16;border-color:#865916}.VSAY.baloon,.VSSAY.baloon{border-color:#865916}.VSAY .fa-check,.VSSAY .fa-check{color:#6ab037}.VSAY .fa-warning,.VSSAY .fa-warning{color:#d37742}.VSAY .fa-ban,.VSSAY .fa-ban{color:#d35542}.VSAY [data-tooltip],.VSAY [title],.VSSAY [data-tooltip],.VSSAY [title]{background-color:#0b2143}.VSAY [data-tooltip]:after,.VSAY [data-tooltip]:before,.VSAY [title]:after,.VSAY [title]:before,.VSAY b,.VSSAY [data-tooltip]:after,.VSSAY [data-tooltip]:before,.VSSAY [title]:after,.VSSAY [title]:before,.VSSAY b{color:#e2bd85;background-color:#0b2143}.VSAY a:not([name]),.VSSAY a:not([name]),body a:not([name]).VSAY,body a:not([name]).VSSAY{color:#e2bd85}.VSAY a:not([name]):visited,.VSSAY a:not([name]):visited,body a:not([name]).VSAY:visited,body a:not([name]).VSSAY:visited{background-color:#0f313d}.VSAY a:not([name]):link,.VSSAY a:not([name]):link,body a:not([name]).VSAY:link,body a:not([name]).VSSAY:link{background-color:#1b2b59}.VSAY .active,.VSSAY .active{background-color:#b3771d}.VSAY a:not([name]),.VSAY button,.VSAY input,.VSSAY a:not([name]),.VSSAY button,.VSSAY input,body a:not([name]).VSAY,body a:not([name]).VSSAY{background-color:#0b2143}.VSAY a:not([name]):focus,.VSAY a:not([name]):hover,.VSAY button:focus,.VSAY button:hover,.VSAY input:focus,.VSAY input:hover,.VSSAY a:not([name]):focus,.VSSAY a:not([name]):hover,.VSSAY button:focus,.VSSAY button:hover,.VSSAY input:focus,.VSSAY input:hover,body a:not([name]).VSAY:focus,body a:not([name]).VSAY:hover,body a:not([name]).VSSAY:focus,body a:not([name]).VSSAY:hover{background-color:#9d681a}.VSAY a:not([name]).active,.VSAY a:not([name]) .active,.VSAY a:not([name]):active,.VSAY button.active,.VSAY button .active,.VSAY button:active,.VSAY input.active,.VSAY input .active,.VSAY input:active,.VSSAY a:not([name]).active,.VSSAY a:not([name]) .active,.VSSAY a:not([name]):active,.VSSAY button.active,.VSSAY button .active,.VSSAY button:active,.VSSAY input.active,.VSSAY input .active,.VSSAY input:active,body a:not([name]).VSAY.active,body a:not([name]).VSAY .active,body a:not([name]).VSAY:active,body a:not([name]).VSSAY.active,body a:not([name]).VSSAY .active,body a:not([name]).VSSAY:active{background-color:#b3771d}.VSAY input[type=checkbox],.VSAY input[type=radio],.VSSAY input[type=checkbox],.VSSAY input[type=radio]{background-color:#1b2b59}.VSAY input[type=checkbox]:checked,.VSAY input[type=radio]:checked,.VSSAY input[type=checkbox]:checked,.VSSAY input[type=radio]:checked{background-color:#0f313d}.VSAY .date,.VSAY .name,.VSAY em,.VSSAY .date,.VSSAY .name,.VSSAY em{color:#704a12}.VSAY abbr,.VSAY rt,.VSAY strong,.VSAY sub,.VSAY sup,.VSSAY abbr,.VSSAY rt,.VSSAY strong,.VSSAY sub,.VSSAY sup{background-color:#865916;color:#0b2143}.P01,.P01 textarea{color:#e2a185;background-color:#031016}.P01,.P01 textarea,.P01.baloon{border-color:#863816}.P01 .fa-check{color:#6aa737}.P01 .fa-warning{color:#d36e42}.P01 .fa-ban{color:#d34b42}.P01 [data-tooltip],.P01 [title]{background-color:#0b3243}.P01 [data-tooltip]:after,.P01 [data-tooltip]:before,.P01 [title]:after,.P01 [title]:before,.P01 b{color:#e2a185;background-color:#0b3243}.P01 a:not([name]),body a:not([name]).P01{color:#e2a185}.P01 a:not([name]):visited,body a:not([name]).P01:visited{background-color:#0f403d}.P01 a:not([name]):link,body a:not([name]).P01:link{background-color:#1b3a59}.P01 .active{background-color:#b34a1d}.P01 a:not([name]),.P01 button,.P01 input,body a:not([name]).P01{background-color:#0b3243}.P01 a:not([name]):focus,.P01 a:not([name]):hover,.P01 button:focus,.P01 button:hover,.P01 input:focus,.P01 input:hover,body a:not([name]).P01:focus,body a:not([name]).P01:hover{background-color:#9d411a}.P01 a:not([name]).active,.P01 a:not([name]) .active,.P01 a:not([name]):active,.P01 button.active,.P01 button .active,.P01 button:active,.P01 input.active,.P01 input .active,.P01 input:active,body a:not([name]).P01 .active,body a:not([name]).P01.active,body a:not([name]).P01:active{background-color:#b34a1d}.P01 input[type=checkbox],.P01 input[type=radio]{background-color:#1b3a59}.P01 input[type=checkbox]:checked,.P01 input[type=radio]:checked{background-color:#0f403d}.P01 .date,.P01 .name,.P01 em{color:#702e12}.P01 abbr,.P01 rt,.P01 strong,.P01 sub,.P01 sup{background-color:#863816;color:#0b3243}.WSAY,.WSAY textarea{color:#e28585;background-color:#031616;border-color:#861616}.WSAY.baloon{border-color:#861616}.WSAY .fa-check{color:#6a9d37}.WSAY .fa-warning{color:#d36442}.WSAY .fa-ban{color:#d34242}.WSAY [data-tooltip],.WSAY [title]{background-color:#0b4343}.WSAY [data-tooltip]:after,.WSAY [data-tooltip]:before,.WSAY [title]:after,.WSAY [title]:before,.WSAY b{color:#e28585;background-color:#0b4343}.WSAY a:not([name]),body a:not([name]).WSAY{color:#e28585}.WSAY a:not([name]):visited,body a:not([name]).WSAY:visited{background-color:#0f4f3d}.WSAY a:not([name]):link,body a:not([name]).WSAY:link{background-color:#1b4959}.WSAY .active{background-color:#b31d1d}.WSAY a:not([name]),.WSAY button,.WSAY input,body a:not([name]).WSAY{background-color:#0b4343}.WSAY a:not([name]):focus,.WSAY a:not([name]):hover,.WSAY button:focus,.WSAY button:hover,.WSAY input:focus,.WSAY input:hover,body a:not([name]).WSAY:focus,body a:not([name]).WSAY:hover{background-color:#9d1a1a}.WSAY a:not([name]).active,.WSAY a:not([name]) .active,.WSAY a:not([name]):active,.WSAY button.active,.WSAY button .active,.WSAY button:active,.WSAY input.active,.WSAY input .active,.WSAY input:active,body a:not([name]).WSAY.active,body a:not([name]).WSAY .active,body a:not([name]).WSAY:active{background-color:#b31d1d}.WSAY input[type=checkbox],.WSAY input[type=radio]{background-color:#1b4959}.WSAY input[type=checkbox]:checked,.WSAY input[type=radio]:checked{background-color:#0f4f3d}.WSAY .date,.WSAY .name,.WSAY em{color:#701212}.WSAY abbr,.WSAY rt,.WSAY strong,.WSAY sub,.WSAY sup{background-color:#861616;color:#0b4343}.N01,.N01 textarea{color:#e285a1;background-color:#031610}.N01,.N01 textarea,.N01.baloon{border-color:#861638}.N01 .fa-check{color:#6a9d40}.N01 .fa-warning{color:#d3644b}.N01 .fa-ban{color:#d3424b}.N01 [data-tooltip],.N01 [title]{background-color:#0b4332}.N01 [data-tooltip]:after,.N01 [data-tooltip]:before,.N01 [title]:after,.N01 [title]:before,.N01 b{color:#e285a1;background-color:#0b4332}.N01 a:not([name]),body a:not([name]).N01{color:#e285a1}.N01 a:not([name]):visited,body a:not([name]).N01:visited{background-color:#0f4f2e}.N01 a:not([name]):link,body a:not([name]).N01:link{background-color:#1b494a}.N01 .active{background-color:#b31d4a}.N01 a:not([name]),.N01 button,.N01 input,body a:not([name]).N01{background-color:#0b4332}.N01 a:not([name]):focus,.N01 a:not([name]):hover,.N01 button:focus,.N01 button:hover,.N01 input:focus,.N01 input:hover,body a:not([name]).N01:focus,body a:not([name]).N01:hover{background-color:#9d1a41}.N01 a:not([name]).active,.N01 a:not([name]) .active,.N01 a:not([name]):active,.N01 button.active,.N01 button .active,.N01 button:active,.N01 input.active,.N01 input .active,.N01 input:active,body a:not([name]).N01 .active,body a:not([name]).N01.active,body a:not([name]).N01:active{background-color:#b31d4a}.N01 input[type=checkbox],.N01 input[type=radio]{background-color:#1b494a}.N01 input[type=checkbox]:checked,.N01 input[type=radio]:checked{background-color:#0f4f2e}.N01 .date,.N01 .name,.N01 em{color:#70122e}.N01 abbr,.N01 rt,.N01 strong,.N01 sub,.N01 sup{background-color:#861638;color:#0b4332}.N02,.N02 textarea{color:#e285b5;background-color:#03160c}.N02,.N02 textarea,.N02.baloon{border-color:#861650}.N02 .fa-check{color:#6a9d47}.N02 .fa-warning{color:#d36452}.N02 .fa-ban{color:#d34252}.N02 [data-tooltip],.N02 [title]{background-color:#0b4326}.N02 [data-tooltip]:after,.N02 [data-tooltip]:before,.N02 [title]:after,.N02 [title]:before,.N02 b{color:#e285b5;background-color:#0b4326}.N02 a:not([name]),body a:not([name]).N02{color:#e285b5}.N02 a:not([name]):visited,body a:not([name]).N02:visited{background-color:#0f4f23}.N02 a:not([name]):link,body a:not([name]).N02:link{background-color:#1b4940}.N02 .active{background-color:#b31d6b}.N02 a:not([name]),.N02 button,.N02 input,body a:not([name]).N02{background-color:#0b4326}.N02 a:not([name]):focus,.N02 a:not([name]):hover,.N02 button:focus,.N02 button:hover,.N02 input:focus,.N02 input:hover,body a:not([name]).N02:focus,body a:not([name]).N02:hover{background-color:#9d1a5d}.N02 a:not([name]).active,.N02 a:not([name]) .active,.N02 a:not([name]):active,.N02 button.active,.N02 button .active,.N02 button:active,.N02 input.active,.N02 input .active,.N02 input:active,body a:not([name]).N02 .active,body a:not([name]).N02.active,body a:not([name]).N02:active{background-color:#b31d6b}.N02 input[type=checkbox],.N02 input[type=radio]{background-color:#1b4940}.N02 input[type=checkbox]:checked,.N02 input[type=radio]:checked{background-color:#0f4f23}.N02 .date,.N02 .name,.N02 em{color:#701243}.N02 abbr,.N02 rt,.N02 strong,.N02 sub,.N02 sup{background-color:#861650;color:#0b4326}.AIM,.AIM textarea{color:#e285d9;background-color:#031605}.AIM,.AIM.baloon,.AIM textarea{border-color:#86167b}.AIM .fa-check{color:#6a9d53}.AIM .fa-warning{color:#d3645e}.AIM .fa-ban{color:#d3425e}.AIM [data-tooltip],.AIM [title]{background-color:#0b4310}.AIM [data-tooltip]:after,.AIM [data-tooltip]:before,.AIM [title]:after,.AIM [title]:before,.AIM b{color:#e285d9;background-color:#0b4310}.AIM a:not([name]),body a:not([name]).AIM{color:#e285d9}.AIM a:not([name]):visited,body a:not([name]).AIM:visited{background-color:#0f4f10}.AIM a:not([name]):link,body a:not([name]).AIM:link{background-color:#1b492c}.AIM .active{background-color:#b31da4}.AIM a:not([name]),.AIM button,.AIM input,body a:not([name]).AIM{background-color:#0b4310}.AIM a:not([name]):focus,.AIM a:not([name]):hover,.AIM button:focus,.AIM button:hover,.AIM input:focus,.AIM input:hover,body a:not([name]).AIM:focus,body a:not([name]).AIM:hover{background-color:#9d1a8f}.AIM a:not([name]).active,.AIM a:not([name]) .active,.AIM a:not([name]):active,.AIM button.active,.AIM button .active,.AIM button:active,.AIM input.active,.AIM input .active,.AIM input:active,body a:not([name]).AIM.active,body a:not([name]).AIM .active,body a:not([name]).AIM:active{background-color:#b31da4}.AIM input[type=checkbox],.AIM input[type=radio]{background-color:#1b492c}.AIM input[type=checkbox]:checked,.AIM input[type=radio]:checked{background-color:#0f4f10}.AIM .date,.AIM .name,.AIM em{color:#701266}.AIM abbr,.AIM rt,.AIM strong,.AIM sub,.AIM sup{background-color:#86167b;color:#0b4310}.PSAY,.PSAY textarea,.SPSAY,.SPSAY textarea{color:#e4a1f5;background-color:#0c1a09;border-color:#88389d}.PSAY.baloon,.SPSAY.baloon{border-color:#88389d}.PSAY .fa-check,.SPSAY .fa-check{color:#6ba75c}.PSAY .fa-warning,.SPSAY .fa-warning{color:#d36e67}.PSAY .fa-ban,.SPSAY .fa-ban{color:#d34b67}.PSAY [data-tooltip],.PSAY [title],.SPSAY [data-tooltip],.SPSAY [title]{background-color:#264e1c}.PSAY [data-tooltip]:after,.PSAY [data-tooltip]:before,.PSAY [title]:after,.PSAY [title]:before,.PSAY b,.SPSAY [data-tooltip]:after,.SPSAY [data-tooltip]:before,.SPSAY [title]:after,.SPSAY [title]:before,.SPSAY b{color:#e4a1f5;background-color:#264e1c}.PSAY a:not([name]),.SPSAY a:not([name]),body a:not([name]).PSAY,body a:not([name]).SPSAY{color:#e4a1f5}.PSAY a:not([name]):visited,.SPSAY a:not([name]):visited,body a:not([name]).PSAY:visited,body a:not([name]).SPSAY:visited{background-color:#27591a}.PSAY a:not([name]):link,.SPSAY a:not([name]):link,body a:not([name]).PSAY:link,body a:not([name]).SPSAY:link{background-color:#325237}.PSAY .active,.SPSAY .active{background-color:#b64ad1}.PSAY a:not([name]),.PSAY button,.PSAY input,.SPSAY a:not([name]),.SPSAY button,.SPSAY input,body a:not([name]).PSAY,body a:not([name]).SPSAY{background-color:#264e1c}.PSAY a:not([name]):focus,.PSAY a:not([name]):hover,.PSAY button:focus,.PSAY button:hover,.PSAY input:focus,.PSAY input:hover,.SPSAY a:not([name]):focus,.SPSAY a:not([name]):hover,.SPSAY button:focus,.SPSAY button:hover,.SPSAY input:focus,.SPSAY input:hover,body a:not([name]).PSAY:focus,body a:not([name]).PSAY:hover,body a:not([name]).SPSAY:focus,body a:not([name]).SPSAY:hover{background-color:#9f41b7}.PSAY a:not([name]).active,.PSAY a:not([name]) .active,.PSAY a:not([name]):active,.PSAY button.active,.PSAY button .active,.PSAY button:active,.PSAY input.active,.PSAY input .active,.PSAY input:active,.SPSAY a:not([name]).active,.SPSAY a:not([name]) .active,.SPSAY a:not([name]):active,.SPSAY button.active,.SPSAY button .active,.SPSAY button:active,.SPSAY input.active,.SPSAY input .active,.SPSAY input:active,body a:not([name]).PSAY.active,body a:not([name]).PSAY .active,body a:not([name]).PSAY:active,body a:not([name]).SPSAY.active,body a:not([name]).SPSAY .active,body a:not([name]).SPSAY:active{background-color:#b64ad1}.PSAY input[type=checkbox],.PSAY input[type=radio],.SPSAY input[type=checkbox],.SPSAY input[type=radio]{background-color:#325237}.PSAY input[type=checkbox]:checked,.PSAY input[type=radio]:checked,.SPSAY input[type=checkbox]:checked,.SPSAY input[type=radio]:checked{background-color:#27591a}.PSAY .date,.PSAY .name,.PSAY em,.SPSAY .date,.SPSAY .name,.SPSAY em{color:#712e82}.PSAY abbr,.PSAY rt,.PSAY strong,.PSAY sub,.PSAY sup,.SPSAY abbr,.SPSAY rt,.SPSAY strong,.SPSAY sub,.SPSAY sup{background-color:#88389d;color:#264e1c}.N05,.N05 textarea{color:#d9b4ff;background-color:#141c0d}.N05,.N05 textarea,.N05.baloon{border-color:#7b4ea8}.N05 .fa-check{color:#67ad5f}.N05 .fa-warning{color:#d0746a}.N05 .fa-ban{color:#d0526a}.N05 [data-tooltip],.N05 [title]{background-color:#3d5427}.N05 [data-tooltip]:after,.N05 [data-tooltip]:before,.N05 [title]:after,.N05 [title]:before,.N05 b{color:#d9b4ff;background-color:#3d5427}.N05 a:not([name]),body a:not([name]).N05{color:#d9b4ff}.N05 a:not([name]):visited,body a:not([name]).N05:visited{background-color:#3b5e24}.N05 a:not([name]):link,body a:not([name]).N05:link{background-color:#475840}.N05 .active{background-color:#a468e0}.N05 a:not([name]),.N05 button,.N05 input,body a:not([name]).N05{background-color:#3d5427}.N05 a:not([name]):focus,.N05 a:not([name]):hover,.N05 button:focus,.N05 button:hover,.N05 input:focus,.N05 input:hover,body a:not([name]).N05:focus,body a:not([name]).N05:hover{background-color:#8f5bc4}.N05 a:not([name]).active,.N05 a:not([name]) .active,.N05 a:not([name]):active,.N05 button.active,.N05 button .active,.N05 button:active,.N05 input.active,.N05 input .active,.N05 input:active,body a:not([name]).N05 .active,body a:not([name]).N05.active,body a:not([name]).N05:active{background-color:#a468e0}.N05 input[type=checkbox],.N05 input[type=radio]{background-color:#475840}.N05 input[type=checkbox]:checked,.N05 input[type=radio]:checked{background-color:#3b5e24}.N05 .date,.N05 .name,.N05 em{color:#66418c}.N05 abbr,.N05 rt,.N05 strong,.N05 sub,.N05 sup{background-color:#7b4ea8;color:#3d5427}.N06,.N06 textarea{color:#c3b4ff;background-color:#191c0d}.N06,.N06 textarea,.N06.baloon{border-color:#604ea8}.N06 .fa-check{color:#60ad5f}.N06 .fa-warning{color:#c9746a}.N06 .fa-ban{color:#c9526a}.N06 [data-tooltip],.N06 [title]{background-color:#4b5427}.N06 [data-tooltip]:after,.N06 [data-tooltip]:before,.N06 [title]:after,.N06 [title]:before,.N06 b{color:#c3b4ff;background-color:#4b5427}.N06 a:not([name]),body a:not([name]).N06{color:#c3b4ff}.N06 a:not([name]):visited,body a:not([name]).N06:visited{background-color:#475e24}.N06 a:not([name]):link,body a:not([name]).N06:link{background-color:#535840}.N06 .active{background-color:#8068e0}.N06 a:not([name]),.N06 button,.N06 input,body a:not([name]).N06{background-color:#4b5427}.N06 a:not([name]):focus,.N06 a:not([name]):hover,.N06 button:focus,.N06 button:hover,.N06 input:focus,.N06 input:hover,body a:not([name]).N06:focus,body a:not([name]).N06:hover{background-color:#705bc4}.N06 a:not([name]).active,.N06 a:not([name]) .active,.N06 a:not([name]):active,.N06 button.active,.N06 button .active,.N06 button:active,.N06 input.active,.N06 input .active,.N06 input:active,body a:not([name]).N06 .active,body a:not([name]).N06.active,body a:not([name]).N06:active{background-color:#8068e0}.N06 input[type=checkbox],.N06 input[type=radio]{background-color:#535840}.N06 input[type=checkbox]:checked,.N06 input[type=radio]:checked{background-color:#475e24}.N06 .date,.N06 .name,.N06 em{color:#50418c}.N06 abbr,.N06 rt,.N06 strong,.N06 sub,.N06 sup{background-color:#604ea8;color:#4b5427}.VGSAY,.VGSAY textarea{color:#b4bbff;background-color:#1c1a0d;border-color:#4e57a8}.VGSAY.baloon{border-color:#4e57a8}.VGSAY .fa-check{color:#5baf5f}.VGSAY .fa-warning{color:#c4766a}.VGSAY .fa-ban{color:#c4546a}.VGSAY [data-tooltip],.VGSAY [title]{background-color:#544f27}.VGSAY [data-tooltip]:after,.VGSAY [data-tooltip]:before,.VGSAY [title]:after,.VGSAY [title]:before,.VGSAY b{color:#b4bbff;background-color:#544f27}.VGSAY a:not([name]),body a:not([name]).VGSAY{color:#b4bbff}.VGSAY a:not([name]):visited,body a:not([name]).VGSAY:visited{background-color:#4f5924}.VGSAY a:not([name]):link,body a:not([name]).VGSAY:link{background-color:#5b5340}.VGSAY .active{background-color:#6875e0}.VGSAY a:not([name]),.VGSAY button,.VGSAY input,body a:not([name]).VGSAY{background-color:#544f27}.VGSAY a:not([name]):focus,.VGSAY a:not([name]):hover,.VGSAY button:focus,.VGSAY button:hover,.VGSAY input:focus,.VGSAY input:hover,body a:not([name]).VGSAY:focus,body a:not([name]).VGSAY:hover{background-color:#5b66c4}.VGSAY a:not([name]).active,.VGSAY a:not([name]) .active,.VGSAY a:not([name]):active,.VGSAY button.active,.VGSAY button .active,.VGSAY button:active,.VGSAY input.active,.VGSAY input .active,.VGSAY input:active,body a:not([name]).VGSAY.active,body a:not([name]).VGSAY .active,body a:not([name]).VGSAY:active{background-color:#6875e0}.VGSAY input[type=checkbox],.VGSAY input[type=radio]{background-color:#5b5340}.VGSAY input[type=checkbox]:checked,.VGSAY input[type=radio]:checked{background-color:#4f5924}.VGSAY .date,.VGSAY .name,.VGSAY em{color:#41498c}.VGSAY abbr,.VGSAY rt,.VGSAY strong,.VGSAY sub,.VGSAY sup{background-color:#4e57a8;color:#544f27}.GSAY,.GSAY textarea{color:#a1c3f5;background-color:#1a1309;border-color:#38609d}.GSAY.baloon{border-color:#38609d}.GSAY .fa-check{color:#55b25c}.GSAY .fa-warning{color:#bd7967}.GSAY .fa-ban{color:#bd5767}.GSAY [data-tooltip],.GSAY [title]{background-color:#4e3a1c}.GSAY [data-tooltip]:after,.GSAY [data-tooltip]:before,.GSAY [title]:after,.GSAY [title]:before,.GSAY b{color:#a1c3f5;background-color:#4e3a1c}.GSAY a:not([name]),body a:not([name]).GSAY{color:#a1c3f5}.GSAY a:not([name]):visited,body a:not([name]).GSAY:visited{background-color:#4a471a}.GSAY a:not([name]):link,body a:not([name]).GSAY:link{background-color:#564137}.GSAY .active{background-color:#4a80d1}.GSAY a:not([name]),.GSAY button,.GSAY input,body a:not([name]).GSAY{background-color:#4e3a1c}.GSAY a:not([name]):focus,.GSAY a:not([name]):hover,.GSAY button:focus,.GSAY button:hover,.GSAY input:focus,.GSAY input:hover,body a:not([name]).GSAY:focus,body a:not([name]).GSAY:hover{background-color:#4170b7}.GSAY a:not([name]).active,.GSAY a:not([name]) .active,.GSAY a:not([name]):active,.GSAY button.active,.GSAY button .active,.GSAY button:active,.GSAY input.active,.GSAY input .active,.GSAY input:active,body a:not([name]).GSAY.active,body a:not([name]).GSAY .active,body a:not([name]).GSAY:active{background-color:#4a80d1}.GSAY input[type=checkbox],.GSAY input[type=radio]{background-color:#564137}.GSAY input[type=checkbox]:checked,.GSAY input[type=radio]:checked{background-color:#4a471a}.GSAY .date,.GSAY .name,.GSAY em{color:#2e5082}.GSAY abbr,.GSAY rt,.GSAY strong,.GSAY sub,.GSAY sup{background-color:#38609d;color:#4e3a1c}.N09,.N09 textarea{color:#a1dcf5;background-color:#1a0e09}.N09,.N09 textarea,.N09.baloon{border-color:#387e9d}.N09 .fa-check{color:#55ba5c}.N09 .fa-warning{color:#bd8167}.N09 .fa-ban{color:#bd5f67}.N09 [data-tooltip],.N09 [title]{background-color:#4e2b1c}.N09 [data-tooltip]:after,.N09 [data-tooltip]:before,.N09 [title]:after,.N09 [title]:before,.N09 b{color:#a1dcf5;background-color:#4e2b1c}.N09 a:not([name]),body a:not([name]).N09{color:#a1dcf5}.N09 a:not([name]):visited,body a:not([name]).N09:visited{background-color:#4a3a1a}.N09 a:not([name]):link,body a:not([name]).N09:link{background-color:#563437}.N09 .active{background-color:#4aa8d1}.N09 a:not([name]),.N09 button,.N09 input,body a:not([name]).N09{background-color:#4e2b1c}.N09 a:not([name]):focus,.N09 a:not([name]):hover,.N09 button:focus,.N09 button:hover,.N09 input:focus,.N09 input:hover,body a:not([name]).N09:focus,body a:not([name]).N09:hover{background-color:#4193b7}.N09 a:not([name]).active,.N09 a:not([name]) .active,.N09 a:not([name]):active,.N09 button.active,.N09 button .active,.N09 button:active,.N09 input.active,.N09 input .active,.N09 input:active,body a:not([name]).N09 .active,body a:not([name]).N09.active,body a:not([name]).N09:active{background-color:#4aa8d1}.N09 input[type=checkbox],.N09 input[type=radio]{background-color:#563437}.N09 input[type=checkbox]:checked,.N09 input[type=radio]:checked{background-color:#4a3a1a}.N09 .date,.N09 .name,.N09 em{color:#2e6982}.N09 abbr,.N09 rt,.N09 strong,.N09 sub,.N09 sup{background-color:#387e9d;color:#4e2b1c}.TSAY,.TSAY textarea{color:#d0c6a1;background-color:#090b12;border-color:#706438}.TSAY.baloon{border-color:#706438}.TSAY .fa-check{color:#64b340}.TSAY .fa-warning{color:#cd7a4b}.TSAY .fa-ban{color:#cd584b}.TSAY [data-tooltip],.TSAY [title]{background-color:#1c2138}.TSAY [data-tooltip]:after,.TSAY [data-tooltip]:before,.TSAY [title]:after,.TSAY [title]:before,.TSAY b{color:#d0c6a1;background-color:#1c2138}.TSAY a:not([name]),body a:not([name]).TSAY{color:#d0c6a1}.TSAY a:not([name]):visited,body a:not([name]).TSAY:visited{background-color:#1e3133}.TSAY a:not([name]):link,body a:not([name]).TSAY:link{background-color:#2a2b4f}.TSAY .active{background-color:#95864a}.TSAY a:not([name]),.TSAY button,.TSAY input,body a:not([name]).TSAY{background-color:#1c2138}.TSAY a:not([name]):focus,.TSAY a:not([name]):hover,.TSAY button:focus,.TSAY button:hover,.TSAY input:focus,.TSAY input:hover,body a:not([name]).TSAY:focus,body a:not([name]).TSAY:hover{background-color:#827541}.TSAY a:not([name]).active,.TSAY a:not([name]) .active,.TSAY a:not([name]):active,.TSAY button.active,.TSAY button .active,.TSAY button:active,.TSAY input.active,.TSAY input .active,.TSAY input:active,body a:not([name]).TSAY.active,body a:not([name]).TSAY .active,body a:not([name]).TSAY:active{background-color:#95864a}.TSAY input[type=checkbox],.TSAY input[type=radio]{background-color:#2a2b4f}.TSAY input[type=checkbox]:checked,.TSAY input[type=radio]:checked{background-color:#1e3133}.TSAY .date,.TSAY .name,.TSAY em{color:#5d542e}.TSAY abbr,.TSAY rt,.TSAY strong,.TSAY sub,.TSAY sup{background-color:#706438;color:#1c2138}.chat .name{border-bottom:1px dashed}.talk .chat{border-width:0 0 1px 3px;margin:0 7px 0 -3px}.post,.talk .chat{border-style:none none solid solid}.post{border-width:0 0 1px 18px}.contentframe{background-color:#282266}.contentframe .talk .baloon{left:-9px;border-right-width:1px}body{background-position-x:right;background-position-y:top;background-attachment:fixed;background-repeat:no-repeat;background-image:url(\"http://s3-ap-northeast-1.amazonaws.com/giji-assets/images/bg/moon-red.png\");background-color:#551826}.filmend{background-image:url(\"http://s3-ap-northeast-1.amazonaws.com/giji-assets/images/bg/film-wa-end.png\")}", ""]);

// exports


/***/ }),
/* 230 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(2)(undefined);
// imports


// module
exports.push([module.i, ".contentframe .inframe{background-repeat:repeat-y;background-position:0;background-attachment:local;background-image:url(\"http://s3-ap-northeast-1.amazonaws.com/giji-assets/images/bg/film-L.png\")}.filmline{background-image:url(\"http://s3-ap-northeast-1.amazonaws.com/giji-assets/images/bg/film-border.png\")}.MAKER,.MAKER textarea{color:#dcdcdc;background-color:#151515;border-color:#7e7e7e}.MAKER.baloon{border-color:#7e7e7e}.MAKER .fa-check{color:#68ba53}.MAKER .fa-warning{color:#d1815f}.MAKER .fa-ban{color:#d15f5f}.MAKER [data-tooltip],.MAKER [title]{background-color:#3f3f3f}.MAKER [data-tooltip]:after,.MAKER [data-tooltip]:before,.MAKER [title]:after,.MAKER [title]:before,.MAKER b{color:#dcdcdc;background-color:#3f3f3f}.MAKER a:not([name]),body a:not([name]).MAKER{color:#dcdcdc}.MAKER a:not([name]):visited,body a:not([name]).MAKER:visited{background-color:#3d4b39}.MAKER a:not([name]):link,body a:not([name]).MAKER:link{background-color:#484556}.MAKER .active{background-color:#a8a8a8}.MAKER a:not([name]),.MAKER button,.MAKER input,body a:not([name]).MAKER{background-color:#3f3f3f}.MAKER a:not([name]):focus,.MAKER a:not([name]):hover,.MAKER button:focus,.MAKER button:hover,.MAKER input:focus,.MAKER input:hover,body a:not([name]).MAKER:focus,body a:not([name]).MAKER:hover{background-color:#939393}.MAKER a:not([name]).active,.MAKER a:not([name]) .active,.MAKER a:not([name]):active,.MAKER button.active,.MAKER button .active,.MAKER button:active,.MAKER input.active,.MAKER input .active,.MAKER input:active,body a:not([name]).MAKER.active,body a:not([name]).MAKER .active,body a:not([name]).MAKER:active{background-color:#a8a8a8}.MAKER input[type=checkbox],.MAKER input[type=radio]{background-color:#484556}.MAKER input[type=checkbox]:checked,.MAKER input[type=radio]:checked{background-color:#3d4b39}.MAKER .date,.MAKER .name,.MAKER em{color:#696969}.MAKER abbr,.MAKER rt,.MAKER strong,.MAKER sub,.MAKER sup{background-color:#7e7e7e;color:#3f3f3f}.ADMIN,.ADMIN textarea{color:#ffe972;background-color:#00041c;border-color:#a88d00}.ADMIN.baloon{border-color:#a88d00}.ADMIN .fa-check{color:#74be31}.ADMIN .fa-warning{color:#dc853c}.ADMIN .fa-ban{color:#dc633c}.ADMIN [data-tooltip],.ADMIN [title]{background-color:#000d54}.ADMIN [data-tooltip]:after,.ADMIN [data-tooltip]:before,.ADMIN [title]:after,.ADMIN [title]:before,.ADMIN b{color:#ffe972;background-color:#000d54}.ADMIN a:not([name]),body a:not([name]).ADMIN{color:#ffe972}.ADMIN a:not([name]):visited,body a:not([name]).ADMIN:visited{background-color:#051f4b}.ADMIN a:not([name]):link,body a:not([name]).ADMIN:link{background-color:#111968}.ADMIN .active{background-color:#e0bd00}.ADMIN a:not([name]),.ADMIN button,.ADMIN input,body a:not([name]).ADMIN{background-color:#000d54}.ADMIN a:not([name]):focus,.ADMIN a:not([name]):hover,.ADMIN button:focus,.ADMIN button:hover,.ADMIN input:focus,.ADMIN input:hover,body a:not([name]).ADMIN:focus,body a:not([name]).ADMIN:hover{background-color:#c4a500}.ADMIN a:not([name]).active,.ADMIN a:not([name]) .active,.ADMIN a:not([name]):active,.ADMIN button.active,.ADMIN button .active,.ADMIN button:active,.ADMIN input.active,.ADMIN input .active,.ADMIN input:active,body a:not([name]).ADMIN.active,body a:not([name]).ADMIN .active,body a:not([name]).ADMIN:active{background-color:#e0bd00}.ADMIN input[type=checkbox],.ADMIN input[type=radio]{background-color:#111968}.ADMIN input[type=checkbox]:checked,.ADMIN input[type=radio]:checked{background-color:#051f4b}.ADMIN .date,.ADMIN .name,.ADMIN em{color:#8c7600}.ADMIN abbr,.ADMIN rt,.ADMIN strong,.ADMIN sub,.ADMIN sup{background-color:#a88d00;color:#000d54}.dark,.dark textarea,.links,.links textarea,.TITLE,.TITLE textarea{color:silver;background-color:#000;border-color:#565656}.dark.baloon,.links.baloon,.TITLE.baloon{border-color:#000}.dark .fa-check,.links .fa-check,.TITLE .fa-check{color:#5fb14a}.dark .fa-warning,.links .fa-warning,.TITLE .fa-warning{color:#c87856}.dark .fa-ban,.links .fa-ban,.TITLE .fa-ban{color:#c85656}.dark [data-tooltip],.dark [title],.links [data-tooltip],.links [title],.TITLE [data-tooltip],.TITLE [title]{background-color:#1e1e1e}.dark [data-tooltip]:after,.dark [data-tooltip]:before,.dark [title]:after,.dark [title]:before,.dark b,.links [data-tooltip]:after,.links [data-tooltip]:before,.links [title]:after,.links [title]:before,.links b,.TITLE [data-tooltip]:after,.TITLE [data-tooltip]:before,.TITLE [title]:after,.TITLE [title]:before,.TITLE b{color:silver;background-color:#1e1e1e}.dark a:not([name]),.links a:not([name]),.TITLE a:not([name]),body a:not([name]).dark,body a:not([name]).links,body a:not([name]).TITLE{color:silver}.dark a:not([name]):visited,.links a:not([name]):visited,.TITLE a:not([name]):visited,body a:not([name]).dark:visited,body a:not([name]).links:visited,body a:not([name]).TITLE:visited{background-color:#202e1c}.dark a:not([name]):link,.links a:not([name]):link,.TITLE a:not([name]):link,body a:not([name]).dark:link,body a:not([name]).links:link,body a:not([name]).TITLE:link{background-color:#2b2839}.dark .active,.links .active,.TITLE .active{background-color:#565656}.dark a:not([name]),.dark button,.dark input,.links a:not([name]),.links button,.links input,.TITLE a:not([name]),.TITLE button,.TITLE input,body a:not([name]).dark,body a:not([name]).links,body a:not([name]).TITLE{background-color:#1e1e1e}.dark a:not([name]):focus,.dark a:not([name]):hover,.dark button:focus,.dark button:hover,.dark input:focus,.dark input:hover,.links a:not([name]):focus,.links a:not([name]):hover,.links button:focus,.links button:hover,.links input:focus,.links input:hover,.TITLE a:not([name]):focus,.TITLE a:not([name]):hover,.TITLE button:focus,.TITLE button:hover,.TITLE input:focus,.TITLE input:hover,body a:not([name]).dark:focus,body a:not([name]).dark:hover,body a:not([name]).links:focus,body a:not([name]).links:hover,body a:not([name]).TITLE:focus,body a:not([name]).TITLE:hover{background-color:#414141}.dark a:not([name]).active,.dark a:not([name]) .active,.dark a:not([name]):active,.dark button.active,.dark button .active,.dark button:active,.dark input.active,.dark input .active,.dark input:active,.links a:not([name]).active,.links a:not([name]) .active,.links a:not([name]):active,.links button.active,.links button .active,.links button:active,.links input.active,.links input .active,.links input:active,.TITLE a:not([name]).active,.TITLE a:not([name]) .active,.TITLE a:not([name]):active,.TITLE button.active,.TITLE button .active,.TITLE button:active,.TITLE input.active,.TITLE input .active,.TITLE input:active,body a:not([name]).dark.active,body a:not([name]).dark .active,body a:not([name]).dark:active,body a:not([name]).links.active,body a:not([name]).links .active,body a:not([name]).links:active,body a:not([name]).TITLE.active,body a:not([name]).TITLE .active,body a:not([name]).TITLE:active{background-color:#565656}.dark input[type=checkbox],.dark input[type=radio],.links input[type=checkbox],.links input[type=radio],.TITLE input[type=checkbox],.TITLE input[type=radio]{background-color:#2b2839}.dark input[type=checkbox]:checked,.dark input[type=radio]:checked,.links input[type=checkbox]:checked,.links input[type=radio]:checked,.TITLE input[type=checkbox]:checked,.TITLE input[type=radio]:checked{background-color:#202e1c}.dark .date,.dark .name,.dark em,.links .date,.links .name,.links em,.TITLE .date,.TITLE .name,.TITLE em{color:#565656}.dark abbr,.dark rt,.dark strong,.dark sub,.dark sup,.links abbr,.links rt,.links strong,.links sub,.links sup,.TITLE abbr,.TITLE rt,.TITLE strong,.TITLE sub,.TITLE sup{background-color:#565656;color:#1e1e1e}.btns,.btns textarea,.chrblank,.chrblank textarea,.footer,.footer textarea,.header,.header textarea{color:silver;background-color:#4d4e46;border-color:#898a84}.btns.baloon,.chrblank.baloon,.footer.baloon,.header.baloon{border-color:#4d4e46}.btns .fa-check,.chrblank .fa-check,.footer .fa-check,.header .fa-check{color:#5fb14a}.btns .fa-warning,.chrblank .fa-warning,.footer .fa-warning,.header .fa-warning{color:#c87856}.btns .fa-ban,.chrblank .fa-ban,.footer .fa-ban,.header .fa-ban{color:#c85656}.btns [data-tooltip],.btns [title],.chrblank [data-tooltip],.chrblank [title],.footer [data-tooltip],.footer [title],.header [data-tooltip],.header [title]{background-color:#62635c}.btns [data-tooltip]:after,.btns [data-tooltip]:before,.btns [title]:after,.btns [title]:before,.btns b,.chrblank [data-tooltip]:after,.chrblank [data-tooltip]:before,.chrblank [title]:after,.chrblank [title]:before,.chrblank b,.footer [data-tooltip]:after,.footer [data-tooltip]:before,.footer [title]:after,.footer [title]:before,.footer b,.header [data-tooltip]:after,.header [data-tooltip]:before,.header [title]:after,.header [title]:before,.header b{color:silver;background-color:#62635c}.btns a:not([name]),.chrblank a:not([name]),.footer a:not([name]),.header a:not([name]),body a:not([name]).btns,body a:not([name]).chrblank,body a:not([name]).footer,body a:not([name]).header{color:silver}.btns a:not([name]):visited,.chrblank a:not([name]):visited,.footer a:not([name]):visited,.header a:not([name]):visited,body a:not([name]).btns:visited,body a:not([name]).chrblank:visited,body a:not([name]).footer:visited,body a:not([name]).header:visited{background-color:#5c6b53}.btns a:not([name]):link,.chrblank a:not([name]):link,.footer a:not([name]):link,.header a:not([name]):link,body a:not([name]).btns:link,body a:not([name]).chrblank:link,body a:not([name]).footer:link,body a:not([name]).header:link{background-color:#67656f}.btns .active,.chrblank .active,.footer .active,.header .active{background-color:#80817c}.btns a:not([name]),.btns button,.btns input,.chrblank a:not([name]),.chrblank button,.chrblank input,.footer a:not([name]),.footer button,.footer input,.header a:not([name]),.header button,.header input,body a:not([name]).btns,body a:not([name]).chrblank,body a:not([name]).footer,body a:not([name]).header{background-color:#62635c}.btns a:not([name]):focus,.btns a:not([name]):hover,.btns button:focus,.btns button:hover,.btns input:focus,.btns input:hover,.chrblank a:not([name]):focus,.chrblank a:not([name]):hover,.chrblank button:focus,.chrblank button:hover,.chrblank input:focus,.chrblank input:hover,.footer a:not([name]):focus,.footer a:not([name]):hover,.footer button:focus,.footer button:hover,.footer input:focus,.footer input:hover,.header a:not([name]):focus,.header a:not([name]):hover,.header button:focus,.header button:hover,.header input:focus,.header input:hover,body a:not([name]).btns:focus,body a:not([name]).btns:hover,body a:not([name]).chrblank:focus,body a:not([name]).chrblank:hover,body a:not([name]).footer:focus,body a:not([name]).footer:hover,body a:not([name]).header:focus,body a:not([name]).header:hover{background-color:#74746f}.btns a:not([name]).active,.btns a:not([name]) .active,.btns a:not([name]):active,.btns button.active,.btns button .active,.btns button:active,.btns input.active,.btns input .active,.btns input:active,.chrblank a:not([name]).active,.chrblank a:not([name]) .active,.chrblank a:not([name]):active,.chrblank button.active,.chrblank button .active,.chrblank button:active,.chrblank input.active,.chrblank input .active,.chrblank input:active,.footer a:not([name]).active,.footer a:not([name]) .active,.footer a:not([name]):active,.footer button.active,.footer button .active,.footer button:active,.footer input.active,.footer input .active,.footer input:active,.header a:not([name]).active,.header a:not([name]) .active,.header a:not([name]):active,.header button.active,.header button .active,.header button:active,.header input.active,.header input .active,.header input:active,body a:not([name]).btns.active,body a:not([name]).btns .active,body a:not([name]).btns:active,body a:not([name]).chrblank.active,body a:not([name]).chrblank .active,body a:not([name]).chrblank:active,body a:not([name]).footer.active,body a:not([name]).footer .active,body a:not([name]).footer:active,body a:not([name]).header.active,body a:not([name]).header .active,body a:not([name]).header:active{background-color:#80817c}.btns input[type=checkbox],.btns input[type=radio],.chrblank input[type=checkbox],.chrblank input[type=radio],.footer input[type=checkbox],.footer input[type=radio],.header input[type=checkbox],.header input[type=radio]{background-color:#67656f}.btns input[type=checkbox]:checked,.btns input[type=radio]:checked,.chrblank input[type=checkbox]:checked,.chrblank input[type=radio]:checked,.footer input[type=checkbox]:checked,.footer input[type=radio]:checked,.header input[type=checkbox]:checked,.header input[type=radio]:checked{background-color:#5c6b53}.btns .date,.btns .name,.btns em,.chrblank .date,.chrblank .name,.chrblank em,.footer .date,.footer .name,.footer em,.header .date,.header .name,.header em{color:#898a84}.btns abbr,.btns rt,.btns strong,.btns sub,.btns sup,.chrblank abbr,.chrblank rt,.chrblank strong,.chrblank sub,.chrblank sup,.footer abbr,.footer rt,.footer strong,.footer sub,.footer sup,.header abbr,.header rt,.header strong,.header sub,.header sup{background-color:#898a84;color:#62635c}.public,.public textarea{color:silver;background-color:#332509;border-color:#786f5c}.public.baloon{border-color:#332509}.public .fa-check{color:#5fb14a}.public .fa-warning{color:#c87856}.public .fa-ban{color:#c85656}.public [data-tooltip],.public [title]{background-color:#4b3f26}.public [data-tooltip]:after,.public [data-tooltip]:before,.public [title]:after,.public [title]:before,.public b{color:silver;background-color:#4b3f26}.public a:not([name]),body a:not([name]).public{color:silver}.public a:not([name]):visited,body a:not([name]).public:visited{background-color:#474b23}.public a:not([name]):link,body a:not([name]).public:link{background-color:#534540}.public .active{background-color:#726a5b}.public a:not([name]),.public button,.public input,body a:not([name]).public{background-color:#4b3f26}.public a:not([name]):focus,.public a:not([name]):hover,.public button:focus,.public button:hover,.public input:focus,.public input:hover,body a:not([name]).public:focus,body a:not([name]).public:hover{background-color:#625947}.public a:not([name]).active,.public a:not([name]) .active,.public a:not([name]):active,.public button.active,.public button .active,.public button:active,.public input.active,.public input .active,.public input:active,body a:not([name]).public.active,body a:not([name]).public .active,body a:not([name]).public:active{background-color:#726a5b}.public input[type=checkbox],.public input[type=radio]{background-color:#534540}.public input[type=checkbox]:checked,.public input[type=radio]:checked{background-color:#474b23}.public .date,.public .name,.public em{color:#786f5c}.public abbr,.public rt,.public strong,.public sub,.public sup{background-color:#786f5c;color:#4b3f26}.private,.private textarea{color:silver;background-color:#090a33;border-color:#5c5d78}.private.baloon{border-color:#090a33}.private .fa-check{color:#5fb14a}.private .fa-warning{color:#c87856}.private .fa-ban{color:#c85656}.private [data-tooltip],.private [title]{background-color:#26274b}.private [data-tooltip]:after,.private [data-tooltip]:before,.private [title]:after,.private [title]:before,.private b{color:silver;background-color:#26274b}.private a:not([name]),body a:not([name]).private{color:silver}.private a:not([name]):visited,body a:not([name]).private:visited{background-color:#273644}.private a:not([name]):link,body a:not([name]).private:link{background-color:#323060}.private .active{background-color:#5b5b72}.private a:not([name]),.private button,.private input,body a:not([name]).private{background-color:#26274b}.private a:not([name]):focus,.private a:not([name]):hover,.private button:focus,.private button:hover,.private input:focus,.private input:hover,body a:not([name]).private:focus,body a:not([name]).private:hover{background-color:#474762}.private a:not([name]).active,.private a:not([name]) .active,.private a:not([name]):active,.private button.active,.private button .active,.private button:active,.private input.active,.private input .active,.private input:active,body a:not([name]).private.active,body a:not([name]).private .active,body a:not([name]).private:active{background-color:#5b5b72}.private input[type=checkbox],.private input[type=radio]{background-color:#323060}.private input[type=checkbox]:checked,.private input[type=radio]:checked{background-color:#273644}.private .date,.private .name,.private em{color:#5c5d78}.private abbr,.private rt,.private strong,.private sub,.private sup{background-color:#5c5d78;color:#26274b}.HATER,.HATER textarea,.LONEWOLF,.LONEWOLF textarea{color:#0b4343;background-color:#7ac5c5;border-color:#4abbb5}.HATER.baloon,.LONEWOLF.baloon{border-color:#7ac5c5}.HATER .fa-check,.LONEWOLF .fa-check{color:#238821}.HATER .fa-warning,.LONEWOLF .fa-warning{color:#8c4f2c}.HATER .fa-ban,.LONEWOLF .fa-ban{color:#8c2c2c}.HATER [data-tooltip],.HATER [title],.LONEWOLF [data-tooltip],.LONEWOLF [title]{background-color:#85e2e2}.HATER [data-tooltip]:after,.HATER [data-tooltip]:before,.HATER [title]:after,.HATER [title]:before,.HATER b,.LONEWOLF [data-tooltip]:after,.LONEWOLF [data-tooltip]:before,.LONEWOLF [title]:after,.LONEWOLF [title]:before,.LONEWOLF b{color:#0b4343;background-color:#85e2e2}.HATER a:not([name]),.LONEWOLF a:not([name]),body a:not([name]).HATER,body a:not([name]).LONEWOLF{color:#0b4343}.HATER a:not([name]):visited,.LONEWOLF a:not([name]):visited,body a:not([name]).HATER:visited,body a:not([name]).LONEWOLF:visited{background-color:#7adbc8}.HATER a:not([name]):link,.LONEWOLF a:not([name]):link,body a:not([name]).HATER:link,body a:not([name]).LONEWOLF:link{background-color:#86d5e5}.HATER .active,.LONEWOLF .active{background-color:#227f7f}.HATER a:not([name]),.HATER button,.HATER input,.LONEWOLF a:not([name]),.LONEWOLF button,.LONEWOLF input,body a:not([name]).HATER,body a:not([name]).LONEWOLF{background-color:#85e2e2}.HATER a:not([name]):focus,.HATER a:not([name]):hover,.HATER button:focus,.HATER button:hover,.HATER input:focus,.HATER input:hover,.LONEWOLF a:not([name]):focus,.LONEWOLF a:not([name]):hover,.LONEWOLF button:focus,.LONEWOLF button:hover,.LONEWOLF input:focus,.LONEWOLF input:hover,body a:not([name]).HATER:focus,body a:not([name]).HATER:hover,body a:not([name]).LONEWOLF:focus,body a:not([name]).LONEWOLF:hover{background-color:#229292}.HATER a:not([name]).active,.HATER a:not([name]) .active,.HATER a:not([name]):active,.HATER button.active,.HATER button .active,.HATER button:active,.HATER input.active,.HATER input .active,.HATER input:active,.LONEWOLF a:not([name]).active,.LONEWOLF a:not([name]) .active,.LONEWOLF a:not([name]):active,.LONEWOLF button.active,.LONEWOLF button .active,.LONEWOLF button:active,.LONEWOLF input.active,.LONEWOLF input .active,.LONEWOLF input:active,body a:not([name]).HATER.active,body a:not([name]).HATER .active,body a:not([name]).HATER:active,body a:not([name]).LONEWOLF.active,body a:not([name]).LONEWOLF .active,body a:not([name]).LONEWOLF:active{background-color:#227f7f}.HATER input[type=checkbox],.HATER input[type=radio],.LONEWOLF input[type=checkbox],.LONEWOLF input[type=radio]{background-color:#86d5e5}.HATER input[type=checkbox]:checked,.HATER input[type=radio]:checked,.LONEWOLF input[type=checkbox]:checked,.LONEWOLF input[type=radio]:checked{background-color:#7adbc8}.HATER .date,.HATER .name,.HATER em,.LONEWOLF .date,.LONEWOLF .name,.LONEWOLF em{color:#0b4343}.HATER abbr,.HATER rt,.HATER strong,.HATER sub,.HATER sup,.LONEWOLF abbr,.LONEWOLF rt,.LONEWOLF strong,.LONEWOLF sub,.LONEWOLF sup{background-color:#4abbb5;color:#85e2e2}.GURU,.GURU textarea,.PIXI,.PIXI textarea{color:#053819;background-color:#73b68d;border-color:#3fa462}.GURU.baloon,.PIXI.baloon{border-color:#73b68d}.GURU .fa-check,.PIXI .fa-check{color:#218413}.GURU .fa-warning,.PIXI .fa-warning{color:#8a4b1f}.GURU .fa-ban,.PIXI .fa-ban{color:#8a291f}.GURU [data-tooltip],.GURU [title],.PIXI [data-tooltip],.PIXI [title]{background-color:#7cd09d}.GURU [data-tooltip]:after,.GURU [data-tooltip]:before,.GURU [title]:after,.GURU [title]:before,.GURU b,.PIXI [data-tooltip]:after,.PIXI [data-tooltip]:before,.PIXI [title]:after,.PIXI [title]:before,.PIXI b{color:#053819;background-color:#7cd09d}.GURU a:not([name]),.PIXI a:not([name]),body a:not([name]).GURU,body a:not([name]).PIXI{color:#053819}.GURU a:not([name]):visited,.PIXI a:not([name]):visited,body a:not([name]).GURU:visited,body a:not([name]).PIXI:visited{background-color:#72cb8c}.GURU a:not([name]):link,.PIXI a:not([name]):link,body a:not([name]).GURU:link,body a:not([name]).PIXI:link{background-color:#7ec5a8}.GURU .active,.PIXI .active{background-color:#186c3a}.GURU a:not([name]),.GURU button,.GURU input,.PIXI a:not([name]),.PIXI button,.PIXI input,body a:not([name]).GURU,body a:not([name]).PIXI{background-color:#7cd09d}.GURU a:not([name]):focus,.GURU a:not([name]):hover,.GURU button:focus,.GURU button:hover,.GURU input:focus,.GURU input:hover,.PIXI a:not([name]):focus,.PIXI a:not([name]):hover,.PIXI button:focus,.PIXI button:hover,.PIXI input:focus,.PIXI input:hover,body a:not([name]).GURU:focus,body a:not([name]).GURU:hover,body a:not([name]).PIXI:focus,body a:not([name]).PIXI:hover{background-color:#167b3f}.GURU a:not([name]).active,.GURU a:not([name]) .active,.GURU a:not([name]):active,.GURU button.active,.GURU button .active,.GURU button:active,.GURU input.active,.GURU input .active,.GURU input:active,.PIXI a:not([name]).active,.PIXI a:not([name]) .active,.PIXI a:not([name]):active,.PIXI button.active,.PIXI button .active,.PIXI button:active,.PIXI input.active,.PIXI input .active,.PIXI input:active,body a:not([name]).GURU.active,body a:not([name]).GURU .active,body a:not([name]).GURU:active,body a:not([name]).PIXI.active,body a:not([name]).PIXI .active,body a:not([name]).PIXI:active{background-color:#186c3a}.GURU input[type=checkbox],.GURU input[type=radio],.PIXI input[type=checkbox],.PIXI input[type=radio]{background-color:#7ec5a8}.GURU input[type=checkbox]:checked,.GURU input[type=radio]:checked,.PIXI input[type=checkbox]:checked,.PIXI input[type=radio]:checked{background-color:#72cb8c}.GURU .date,.GURU .name,.GURU em,.PIXI .date,.PIXI .name,.PIXI em{color:#053819}.GURU abbr,.GURU rt,.GURU strong,.GURU sub,.GURU sup,.PIXI abbr,.PIXI rt,.PIXI strong,.PIXI sub,.PIXI sup{background-color:#3fa462;color:#7cd09d}.EVIL,.EVIL textarea{color:#0f3805;background-color:#80b673;border-color:#53a43a}.EVIL.baloon{border-color:#80b673}.EVIL .fa-check{color:#25840d}.EVIL .fa-warning{color:#8d4b18}.EVIL .fa-ban{color:#8d2918}.EVIL [data-tooltip],.EVIL [title]{background-color:#8dd07c}.EVIL [data-tooltip]:after,.EVIL [data-tooltip]:before,.EVIL [title]:after,.EVIL [title]:before,.EVIL b{color:#0f3805;background-color:#8dd07c}.EVIL a:not([name]),body a:not([name]).EVIL{color:#0f3805}.EVIL a:not([name]):visited,body a:not([name]).EVIL:visited{background-color:#81cb6f}.EVIL a:not([name]):link,body a:not([name]).EVIL:link{background-color:#8dc58b}.EVIL .active{background-color:#296c18}.EVIL a:not([name]),.EVIL button,.EVIL input,body a:not([name]).EVIL{background-color:#8dd07c}.EVIL a:not([name]):focus,.EVIL a:not([name]):hover,.EVIL button:focus,.EVIL button:hover,.EVIL input:focus,.EVIL input:hover,body a:not([name]).EVIL:focus,body a:not([name]).EVIL:hover{background-color:#2b7b16}.EVIL a:not([name]).active,.EVIL a:not([name]) .active,.EVIL a:not([name]):active,.EVIL button.active,.EVIL button .active,.EVIL button:active,.EVIL input.active,.EVIL input .active,.EVIL input:active,body a:not([name]).EVIL.active,body a:not([name]).EVIL .active,body a:not([name]).EVIL:active{background-color:#296c18}.EVIL input[type=checkbox],.EVIL input[type=radio]{background-color:#8dc58b}.EVIL input[type=checkbox]:checked,.EVIL input[type=radio]:checked{background-color:#81cb6f}.EVIL .date,.EVIL .name,.EVIL em{color:#0f3805}.EVIL abbr,.EVIL rt,.EVIL strong,.EVIL sub,.EVIL sup{background-color:#53a43a;color:#8dd07c}.DISH,.DISH textarea,.HUMAN,.HUMAN textarea,.juror,.juror textarea,.live,.live textarea{color:#43360b;background-color:#c5b37a;border-color:#baa045}.DISH.baloon,.HUMAN.baloon,.juror.baloon,.live.baloon{border-color:#c5b37a}.DISH .fa-check,.HUMAN .fa-check,.juror .fa-check,.live .fa-check{color:#36830f}.DISH .fa-warning,.HUMAN .fa-warning,.juror .fa-warning,.live .fa-warning{color:#9e4a1a}.DISH .fa-ban,.HUMAN .fa-ban,.juror .fa-ban,.live .fa-ban{color:#9e281a}.DISH [data-tooltip],.DISH [title],.HUMAN [data-tooltip],.HUMAN [title],.juror [data-tooltip],.juror [title],.live [data-tooltip],.live [title]{background-color:#e2cc85}.DISH [data-tooltip]:after,.DISH [data-tooltip]:before,.DISH [title]:after,.DISH [title]:before,.DISH b,.HUMAN [data-tooltip]:after,.HUMAN [data-tooltip]:before,.HUMAN [title]:after,.HUMAN [title]:before,.HUMAN b,.juror [data-tooltip]:after,.juror [data-tooltip]:before,.juror [title]:after,.juror [title]:before,.juror b,.live [data-tooltip]:after,.live [data-tooltip]:before,.live [title]:after,.live [title]:before,.live b{color:#43360b;background-color:#e2cc85}.DISH a:not([name]),.HUMAN a:not([name]),.juror a:not([name]),.live a:not([name]),body a:not([name]).DISH,body a:not([name]).HUMAN,body a:not([name]).juror,body a:not([name]).live{color:#43360b}.DISH a:not([name]):visited,.HUMAN a:not([name]):visited,.juror a:not([name]):visited,.live a:not([name]):visited,body a:not([name]).DISH:visited,body a:not([name]).HUMAN:visited,body a:not([name]).juror:visited,body a:not([name]).live:visited{background-color:#ccc777}.DISH a:not([name]):link,.HUMAN a:not([name]):link,.juror a:not([name]):link,.live a:not([name]):link,body a:not([name]).DISH:link,body a:not([name]).HUMAN:link,body a:not([name]).juror:link,body a:not([name]).live:link{background-color:#d8c193}.DISH .active,.HUMAN .active,.juror .active,.live .active{background-color:#7f6922}.DISH a:not([name]),.DISH button,.DISH input,.HUMAN a:not([name]),.HUMAN button,.HUMAN input,.juror a:not([name]),.juror button,.juror input,.live a:not([name]),.live button,.live input,body a:not([name]).DISH,body a:not([name]).HUMAN,body a:not([name]).juror,body a:not([name]).live{background-color:#e2cc85}.DISH a:not([name]):focus,.DISH a:not([name]):hover,.DISH button:focus,.DISH button:hover,.DISH input:focus,.DISH input:hover,.HUMAN a:not([name]):focus,.HUMAN a:not([name]):hover,.HUMAN button:focus,.HUMAN button:hover,.HUMAN input:focus,.HUMAN input:hover,.juror a:not([name]):focus,.juror a:not([name]):hover,.juror button:focus,.juror button:hover,.juror input:focus,.juror input:hover,.live a:not([name]):focus,.live a:not([name]):hover,.live button:focus,.live button:hover,.live input:focus,.live input:hover,body a:not([name]).DISH:focus,body a:not([name]).DISH:hover,body a:not([name]).HUMAN:focus,body a:not([name]).HUMAN:hover,body a:not([name]).juror:focus,body a:not([name]).juror:hover,body a:not([name]).live:focus,body a:not([name]).live:hover{background-color:#927722}.DISH a:not([name]).active,.DISH a:not([name]) .active,.DISH a:not([name]):active,.DISH button.active,.DISH button .active,.DISH button:active,.DISH input.active,.DISH input .active,.DISH input:active,.HUMAN a:not([name]).active,.HUMAN a:not([name]) .active,.HUMAN a:not([name]):active,.HUMAN button.active,.HUMAN button .active,.HUMAN button:active,.HUMAN input.active,.HUMAN input .active,.HUMAN input:active,.juror a:not([name]).active,.juror a:not([name]) .active,.juror a:not([name]):active,.juror button.active,.juror button .active,.juror button:active,.juror input.active,.juror input .active,.juror input:active,.live a:not([name]).active,.live a:not([name]) .active,.live a:not([name]):active,.live button.active,.live button .active,.live button:active,.live input.active,.live input .active,.live input:active,body a:not([name]).DISH.active,body a:not([name]).DISH .active,body a:not([name]).DISH:active,body a:not([name]).HUMAN.active,body a:not([name]).HUMAN .active,body a:not([name]).HUMAN:active,body a:not([name]).juror.active,body a:not([name]).juror .active,body a:not([name]).juror:active,body a:not([name]).live.active,body a:not([name]).live .active,body a:not([name]).live:active{background-color:#7f6922}.DISH input[type=checkbox],.DISH input[type=radio],.HUMAN input[type=checkbox],.HUMAN input[type=radio],.juror input[type=checkbox],.juror input[type=radio],.live input[type=checkbox],.live input[type=radio]{background-color:#d8c193}.DISH input[type=checkbox]:checked,.DISH input[type=radio]:checked,.HUMAN input[type=checkbox]:checked,.HUMAN input[type=radio]:checked,.juror input[type=checkbox]:checked,.juror input[type=radio]:checked,.live input[type=checkbox]:checked,.live input[type=radio]:checked{background-color:#ccc777}.DISH .date,.DISH .name,.DISH em,.HUMAN .date,.HUMAN .name,.HUMAN em,.juror .date,.juror .name,.juror em,.live .date,.live .name,.live em{color:#43360b}.DISH abbr,.DISH rt,.DISH strong,.DISH sub,.DISH sup,.HUMAN abbr,.HUMAN rt,.HUMAN strong,.HUMAN sub,.HUMAN sup,.juror abbr,.juror rt,.juror strong,.juror sub,.juror sup,.live abbr,.live rt,.live strong,.live sub,.live sup{background-color:#baa045;color:#e2cc85}.cursed,.cursed textarea,.droop,.droop textarea,.feared,.feared textarea,.suicide,.suicide textarea,.victim,.victim textarea,.WOLF,.WOLF textarea{color:#430b0b;background-color:#c57a7a;border-color:#ba4a45}.cursed.baloon,.droop.baloon,.feared.baloon,.suicide.baloon,.victim.baloon,.WOLF.baloon{border-color:#c57a7a}.cursed .fa-check,.droop .fa-check,.feared .fa-check,.suicide .fa-check,.victim .fa-check,.WOLF .fa-check{color:#36750f}.cursed .fa-warning,.droop .fa-warning,.feared .fa-warning,.suicide .fa-warning,.victim .fa-warning,.WOLF .fa-warning{color:#9e3c1a}.cursed .fa-ban,.droop .fa-ban,.feared .fa-ban,.suicide .fa-ban,.victim .fa-ban,.WOLF .fa-ban{color:#9e1a1a}.cursed [data-tooltip],.cursed [title],.droop [data-tooltip],.droop [title],.feared [data-tooltip],.feared [title],.suicide [data-tooltip],.suicide [title],.victim [data-tooltip],.victim [title],.WOLF [data-tooltip],.WOLF [title]{background-color:#e28585}.cursed [data-tooltip]:after,.cursed [data-tooltip]:before,.cursed [title]:after,.cursed [title]:before,.cursed b,.droop [data-tooltip]:after,.droop [data-tooltip]:before,.droop [title]:after,.droop [title]:before,.droop b,.feared [data-tooltip]:after,.feared [data-tooltip]:before,.feared [title]:after,.feared [title]:before,.feared b,.suicide [data-tooltip]:after,.suicide [data-tooltip]:before,.suicide [title]:after,.suicide [title]:before,.suicide b,.victim [data-tooltip]:after,.victim [data-tooltip]:before,.victim [title]:after,.victim [title]:before,.victim b,.WOLF [data-tooltip]:after,.WOLF [data-tooltip]:before,.WOLF [title]:after,.WOLF [title]:before,.WOLF b{color:#430b0b;background-color:#e28585}.cursed a:not([name]),.droop a:not([name]),.feared a:not([name]),.suicide a:not([name]),.victim a:not([name]),.WOLF a:not([name]),body a:not([name]).cursed,body a:not([name]).droop,body a:not([name]).feared,body a:not([name]).suicide,body a:not([name]).victim,body a:not([name]).WOLF{color:#430b0b}.cursed a:not([name]):visited,.droop a:not([name]):visited,.feared a:not([name]):visited,.suicide a:not([name]):visited,.victim a:not([name]):visited,.WOLF a:not([name]):visited,body a:not([name]).cursed:visited,body a:not([name]).droop:visited,body a:not([name]).feared:visited,body a:not([name]).suicide:visited,body a:not([name]).victim:visited,body a:not([name]).WOLF:visited{background-color:#cc8977}.cursed a:not([name]):link,.droop a:not([name]):link,.feared a:not([name]):link,.suicide a:not([name]):link,.victim a:not([name]):link,.WOLF a:not([name]):link,body a:not([name]).cursed:link,body a:not([name]).droop:link,body a:not([name]).feared:link,body a:not([name]).suicide:link,body a:not([name]).victim:link,body a:not([name]).WOLF:link{background-color:#d88393}.cursed .active,.droop .active,.feared .active,.suicide .active,.victim .active,.WOLF .active{background-color:#7f2222}.cursed a:not([name]),.cursed button,.cursed input,.droop a:not([name]),.droop button,.droop input,.feared a:not([name]),.feared button,.feared input,.suicide a:not([name]),.suicide button,.suicide input,.victim a:not([name]),.victim button,.victim input,.WOLF a:not([name]),.WOLF button,.WOLF input,body a:not([name]).cursed,body a:not([name]).droop,body a:not([name]).feared,body a:not([name]).suicide,body a:not([name]).victim,body a:not([name]).WOLF{background-color:#e28585}.cursed a:not([name]):focus,.cursed a:not([name]):hover,.cursed button:focus,.cursed button:hover,.cursed input:focus,.cursed input:hover,.droop a:not([name]):focus,.droop a:not([name]):hover,.droop button:focus,.droop button:hover,.droop input:focus,.droop input:hover,.feared a:not([name]):focus,.feared a:not([name]):hover,.feared button:focus,.feared button:hover,.feared input:focus,.feared input:hover,.suicide a:not([name]):focus,.suicide a:not([name]):hover,.suicide button:focus,.suicide button:hover,.suicide input:focus,.suicide input:hover,.victim a:not([name]):focus,.victim a:not([name]):hover,.victim button:focus,.victim button:hover,.victim input:focus,.victim input:hover,.WOLF a:not([name]):focus,.WOLF a:not([name]):hover,.WOLF button:focus,.WOLF button:hover,.WOLF input:focus,.WOLF input:hover,body a:not([name]).cursed:focus,body a:not([name]).cursed:hover,body a:not([name]).droop:focus,body a:not([name]).droop:hover,body a:not([name]).feared:focus,body a:not([name]).feared:hover,body a:not([name]).suicide:focus,body a:not([name]).suicide:hover,body a:not([name]).victim:focus,body a:not([name]).victim:hover,body a:not([name]).WOLF:focus,body a:not([name]).WOLF:hover{background-color:#922222}.cursed a:not([name]).active,.cursed a:not([name]) .active,.cursed a:not([name]):active,.cursed button.active,.cursed button .active,.cursed button:active,.cursed input.active,.cursed input .active,.cursed input:active,.droop a:not([name]).active,.droop a:not([name]) .active,.droop a:not([name]):active,.droop button.active,.droop button .active,.droop button:active,.droop input.active,.droop input .active,.droop input:active,.feared a:not([name]).active,.feared a:not([name]) .active,.feared a:not([name]):active,.feared button.active,.feared button .active,.feared button:active,.feared input.active,.feared input .active,.feared input:active,.suicide a:not([name]).active,.suicide a:not([name]) .active,.suicide a:not([name]):active,.suicide button.active,.suicide button .active,.suicide button:active,.suicide input.active,.suicide input .active,.suicide input:active,.victim a:not([name]).active,.victim a:not([name]) .active,.victim a:not([name]):active,.victim button.active,.victim button .active,.victim button:active,.victim input.active,.victim input .active,.victim input:active,.WOLF a:not([name]).active,.WOLF a:not([name]) .active,.WOLF a:not([name]):active,.WOLF button.active,.WOLF button .active,.WOLF button:active,.WOLF input.active,.WOLF input .active,.WOLF input:active,body a:not([name]).cursed.active,body a:not([name]).cursed .active,body a:not([name]).cursed:active,body a:not([name]).droop.active,body a:not([name]).droop .active,body a:not([name]).droop:active,body a:not([name]).feared.active,body a:not([name]).feared .active,body a:not([name]).feared:active,body a:not([name]).suicide.active,body a:not([name]).suicide .active,body a:not([name]).suicide:active,body a:not([name]).victim.active,body a:not([name]).victim .active,body a:not([name]).victim:active,body a:not([name]).WOLF.active,body a:not([name]).WOLF .active,body a:not([name]).WOLF:active{background-color:#7f2222}.cursed input[type=checkbox],.cursed input[type=radio],.droop input[type=checkbox],.droop input[type=radio],.feared input[type=checkbox],.feared input[type=radio],.suicide input[type=checkbox],.suicide input[type=radio],.victim input[type=checkbox],.victim input[type=radio],.WOLF input[type=checkbox],.WOLF input[type=radio]{background-color:#d88393}.cursed input[type=checkbox]:checked,.cursed input[type=radio]:checked,.droop input[type=checkbox]:checked,.droop input[type=radio]:checked,.feared input[type=checkbox]:checked,.feared input[type=radio]:checked,.suicide input[type=checkbox]:checked,.suicide input[type=radio]:checked,.victim input[type=checkbox]:checked,.victim input[type=radio]:checked,.WOLF input[type=checkbox]:checked,.WOLF input[type=radio]:checked{background-color:#cc8977}.cursed .date,.cursed .name,.cursed em,.droop .date,.droop .name,.droop em,.feared .date,.feared .name,.feared em,.suicide .date,.suicide .name,.suicide em,.victim .date,.victim .name,.victim em,.WOLF .date,.WOLF .name,.WOLF em{color:#430b0b}.cursed abbr,.cursed rt,.cursed strong,.cursed sub,.cursed sup,.droop abbr,.droop rt,.droop strong,.droop sub,.droop sup,.feared abbr,.feared rt,.feared strong,.feared sub,.feared sup,.suicide abbr,.suicide rt,.suicide strong,.suicide sub,.suicide sup,.victim abbr,.victim rt,.victim strong,.victim sub,.victim sup,.WOLF abbr,.WOLF rt,.WOLF strong,.WOLF sub,.WOLF sup{background-color:#ba4a45;color:#e28585}.LOVER,.LOVER textarea{color:#441c4e;background-color:#c690d4;border-color:#bc6ccc}.LOVER.baloon{border-color:#c690d4}.LOVER .fa-check{color:#367b25}.LOVER .fa-warning{color:#9f4230}.LOVER .fa-ban{color:#9f2030}.LOVER [data-tooltip],.LOVER [title]{background-color:#e4a1f5}.LOVER [data-tooltip]:after,.LOVER [data-tooltip]:before,.LOVER [title]:after,.LOVER [title]:before,.LOVER b{color:#441c4e;background-color:#e4a1f5}.LOVER a:not([name]),body a:not([name]).LOVER{color:#441c4e}.LOVER a:not([name]):visited,body a:not([name]).LOVER:visited{background-color:#cea2d9}.LOVER a:not([name]):link,body a:not([name]).LOVER:link{background-color:#da9bf6}.LOVER .active{background-color:#813e92}.LOVER a:not([name]),.LOVER button,.LOVER input,body a:not([name]).LOVER{background-color:#e4a1f5}.LOVER a:not([name]):focus,.LOVER a:not([name]):hover,.LOVER button:focus,.LOVER button:hover,.LOVER input:focus,.LOVER input:hover,body a:not([name]).LOVER:focus,body a:not([name]).LOVER:hover{background-color:#9443a8}.LOVER a:not([name]).active,.LOVER a:not([name]) .active,.LOVER a:not([name]):active,.LOVER button.active,.LOVER button .active,.LOVER button:active,.LOVER input.active,.LOVER input .active,.LOVER input:active,body a:not([name]).LOVER.active,body a:not([name]).LOVER .active,body a:not([name]).LOVER:active{background-color:#813e92}.LOVER input[type=checkbox],.LOVER input[type=radio]{background-color:#da9bf6}.LOVER input[type=checkbox]:checked,.LOVER input[type=radio]:checked{background-color:#cea2d9}.LOVER .date,.LOVER .name,.LOVER em{color:#441c4e}.LOVER abbr,.LOVER rt,.LOVER strong,.LOVER sub,.LOVER sup{background-color:#bc6ccc;color:#e4a1f5}.alive,.alive textarea,.grave,.grave textarea,.mob,.MOB,.MOB textarea,.mob textarea,.NONE,.NONE textarea,.visiter,.visiter textarea{color:#432c0b;background-color:#c5a77a;border-color:#ba8e45}.alive.baloon,.grave.baloon,.MOB.baloon,.mob.baloon,.NONE.baloon,.visiter.baloon{border-color:#c5a77a}.alive .fa-check,.grave .fa-check,.MOB .fa-check,.mob .fa-check,.NONE .fa-check,.visiter .fa-check{color:#36800f}.alive .fa-warning,.grave .fa-warning,.MOB .fa-warning,.mob .fa-warning,.NONE .fa-warning,.visiter .fa-warning{color:#9e471a}.alive .fa-ban,.grave .fa-ban,.MOB .fa-ban,.mob .fa-ban,.NONE .fa-ban,.visiter .fa-ban{color:#9e251a}.alive [data-tooltip],.alive [title],.grave [data-tooltip],.grave [title],.MOB [data-tooltip],.mob [data-tooltip],.mob [title],.MOB [title],.NONE [data-tooltip],.NONE [title],.visiter [data-tooltip],.visiter [title]{background-color:#e2bd85}.alive [data-tooltip]:after,.alive [data-tooltip]:before,.alive [title]:after,.alive [title]:before,.alive b,.grave [data-tooltip]:after,.grave [data-tooltip]:before,.grave [title]:after,.grave [title]:before,.grave b,.MOB [data-tooltip]:after,.mob [data-tooltip]:after,.MOB [data-tooltip]:before,.mob [data-tooltip]:before,.MOB [title]:after,.mob [title]:after,.mob [title]:before,.MOB [title]:before,.mob b,.MOB b,.NONE [data-tooltip]:after,.NONE [data-tooltip]:before,.NONE [title]:after,.NONE [title]:before,.NONE b,.visiter [data-tooltip]:after,.visiter [data-tooltip]:before,.visiter [title]:after,.visiter [title]:before,.visiter b{color:#432c0b;background-color:#e2bd85}.alive a:not([name]),.grave a:not([name]),.mob a:not([name]),.MOB a:not([name]),.NONE a:not([name]),.visiter a:not([name]),body a:not([name]).alive,body a:not([name]).grave,body a:not([name]).MOB,body a:not([name]).mob,body a:not([name]).NONE,body a:not([name]).visiter{color:#432c0b}.alive a:not([name]):visited,.grave a:not([name]):visited,.mob a:not([name]):visited,.MOB a:not([name]):visited,.NONE a:not([name]):visited,.visiter a:not([name]):visited,body a:not([name]).alive:visited,body a:not([name]).grave:visited,body a:not([name]).MOB:visited,body a:not([name]).mob:visited,body a:not([name]).NONE:visited,body a:not([name]).visiter:visited{background-color:#ccba77}.alive a:not([name]):link,.grave a:not([name]):link,.mob a:not([name]):link,.MOB a:not([name]):link,.NONE a:not([name]):link,.visiter a:not([name]):link,body a:not([name]).alive:link,body a:not([name]).grave:link,body a:not([name]).MOB:link,body a:not([name]).mob:link,body a:not([name]).NONE:link,body a:not([name]).visiter:link{background-color:#d8b493}.alive .active,.grave .active,.MOB .active,.mob .active,.NONE .active,.visiter .active{background-color:#7f5a22}.alive a:not([name]),.alive button,.alive input,.grave a:not([name]),.grave button,.grave input,.MOB a:not([name]),.mob a:not([name]),.MOB button,.mob button,.mob input,.MOB input,.NONE a:not([name]),.NONE button,.NONE input,.visiter a:not([name]),.visiter button,.visiter input,body a:not([name]).alive,body a:not([name]).grave,body a:not([name]).mob,body a:not([name]).MOB,body a:not([name]).NONE,body a:not([name]).visiter{background-color:#e2bd85}.alive a:not([name]):focus,.alive a:not([name]):hover,.alive button:focus,.alive button:hover,.alive input:focus,.alive input:hover,.grave a:not([name]):focus,.grave a:not([name]):hover,.grave button:focus,.grave button:hover,.grave input:focus,.grave input:hover,.mob a:not([name]):focus,.MOB a:not([name]):focus,.mob a:not([name]):hover,.MOB a:not([name]):hover,.mob button:focus,.MOB button:focus,.mob button:hover,.MOB button:hover,.MOB input:focus,.mob input:focus,.mob input:hover,.MOB input:hover,.NONE a:not([name]):focus,.NONE a:not([name]):hover,.NONE button:focus,.NONE button:hover,.NONE input:focus,.NONE input:hover,.visiter a:not([name]):focus,.visiter a:not([name]):hover,.visiter button:focus,.visiter button:hover,.visiter input:focus,.visiter input:hover,body a:not([name]).alive:focus,body a:not([name]).alive:hover,body a:not([name]).grave:focus,body a:not([name]).grave:hover,body a:not([name]).mob:focus,body a:not([name]).MOB:focus,body a:not([name]).MOB:hover,body a:not([name]).mob:hover,body a:not([name]).NONE:focus,body a:not([name]).NONE:hover,body a:not([name]).visiter:focus,body a:not([name]).visiter:hover{background-color:#926522}.alive a:not([name]).active,.alive a:not([name]) .active,.alive a:not([name]):active,.alive button.active,.alive button .active,.alive button:active,.alive input.active,.alive input .active,.alive input:active,.grave a:not([name]).active,.grave a:not([name]) .active,.grave a:not([name]):active,.grave button.active,.grave button .active,.grave button:active,.grave input.active,.grave input .active,.grave input:active,.MOB a:not([name]).active,.mob a:not([name]).active,.MOB a:not([name]) .active,.mob a:not([name]) .active,.mob a:not([name]):active,.MOB a:not([name]):active,.mob button.active,.MOB button.active,.mob button .active,.MOB button .active,.MOB button:active,.mob button:active,.mob input.active,.MOB input.active,.mob input .active,.MOB input .active,.mob input:active,.MOB input:active,.NONE a:not([name]).active,.NONE a:not([name]) .active,.NONE a:not([name]):active,.NONE button.active,.NONE button .active,.NONE button:active,.NONE input.active,.NONE input .active,.NONE input:active,.visiter a:not([name]).active,.visiter a:not([name]) .active,.visiter a:not([name]):active,.visiter button.active,.visiter button .active,.visiter button:active,.visiter input.active,.visiter input .active,.visiter input:active,body a:not([name]).alive.active,body a:not([name]).alive .active,body a:not([name]).alive:active,body a:not([name]).grave.active,body a:not([name]).grave .active,body a:not([name]).grave:active,body a:not([name]).MOB.active,body a:not([name]).mob.active,body a:not([name]).mob .active,body a:not([name]).MOB .active,body a:not([name]).MOB:active,body a:not([name]).mob:active,body a:not([name]).NONE.active,body a:not([name]).NONE .active,body a:not([name]).NONE:active,body a:not([name]).visiter.active,body a:not([name]).visiter .active,body a:not([name]).visiter:active{background-color:#7f5a22}.alive input[type=checkbox],.alive input[type=radio],.grave input[type=checkbox],.grave input[type=radio],.mob input[type=checkbox],.MOB input[type=checkbox],.MOB input[type=radio],.mob input[type=radio],.NONE input[type=checkbox],.NONE input[type=radio],.visiter input[type=checkbox],.visiter input[type=radio]{background-color:#d8b493}.alive input[type=checkbox]:checked,.alive input[type=radio]:checked,.grave input[type=checkbox]:checked,.grave input[type=radio]:checked,.mob input[type=checkbox]:checked,.MOB input[type=checkbox]:checked,.MOB input[type=radio]:checked,.mob input[type=radio]:checked,.NONE input[type=checkbox]:checked,.NONE input[type=radio]:checked,.visiter input[type=checkbox]:checked,.visiter input[type=radio]:checked{background-color:#ccba77}.alive .date,.alive .name,.alive em,.grave .date,.grave .name,.grave em,.mob .date,.MOB .date,.MOB .name,.mob .name,.MOB em,.mob em,.NONE .date,.NONE .name,.NONE em,.visiter .date,.visiter .name,.visiter em{color:#432c0b}.alive abbr,.alive rt,.alive strong,.alive sub,.alive sup,.grave abbr,.grave rt,.grave strong,.grave sub,.grave sup,.MOB abbr,.mob abbr,.MOB rt,.mob rt,.MOB strong,.mob strong,.mob sub,.MOB sub,.MOB sup,.mob sup,.NONE abbr,.NONE rt,.NONE strong,.NONE sub,.NONE sup,.visiter abbr,.visiter rt,.visiter strong,.visiter sub,.visiter sup{background-color:#ba8e45;color:#e2bd85}.executed,.executed textarea{color:#1c304e;background-color:#90abd4;border-color:#6c94cc}.executed.baloon{border-color:#90abd4}.executed .fa-check{color:#298125}.executed .fa-warning{color:#914830}.executed .fa-ban{color:#912630}.executed [data-tooltip],.executed [title]{background-color:#a1c3f5}.executed [data-tooltip]:after,.executed [data-tooltip]:before,.executed [title]:after,.executed [title]:before,.executed b{color:#1c304e;background-color:#a1c3f5}.executed a:not([name]),body a:not([name]).executed{color:#1c304e}.executed a:not([name]):visited,body a:not([name]).executed:visited{background-color:#93c0d9}.executed a:not([name]):link,body a:not([name]).executed:link{background-color:#9fb9f6}.executed .active{background-color:#3e5f92}.executed a:not([name]),.executed button,.executed input,body a:not([name]).executed{background-color:#a1c3f5}.executed a:not([name]):focus,.executed a:not([name]):hover,.executed button:focus,.executed button:hover,.executed input:focus,.executed input:hover,body a:not([name]).executed:focus,body a:not([name]).executed:hover{background-color:#436ba8}.executed a:not([name]).active,.executed a:not([name]) .active,.executed a:not([name]):active,.executed button.active,.executed button .active,.executed button:active,.executed input.active,.executed input .active,.executed input:active,body a:not([name]).executed.active,body a:not([name]).executed .active,body a:not([name]).executed:active{background-color:#3e5f92}.executed input[type=checkbox],.executed input[type=radio]{background-color:#9fb9f6}.executed input[type=checkbox]:checked,.executed input[type=radio]:checked{background-color:#93c0d9}.executed .date,.executed .name,.executed em{color:#1c304e}.executed abbr,.executed rt,.executed strong,.executed sub,.executed sup{background-color:#6c94cc;color:#a1c3f5}.hide,.hide textarea{color:#38321c;background-color:#b6ae90;border-color:#a49967}.hide.baloon{border-color:#b6ae90}.hide .fa-check{color:#328214}.hide .fa-warning{color:#9b4920}.hide .fa-ban{color:#9b2720}.hide [data-tooltip],.hide [title]{background-color:#d0c6a1}.hide [data-tooltip]:after,.hide [data-tooltip]:before,.hide [title]:after,.hide [title]:before,.hide b{color:#38321c;background-color:#d0c6a1}.hide a:not([name]),body a:not([name]).hide{color:#38321c}.hide a:not([name]):visited,body a:not([name]).hide:visited{background-color:#bcc28f}.hide a:not([name]):link,body a:not([name]).hide:link{background-color:#c8bcac}.hide .active{background-color:#6c633e}.hide a:not([name]),.hide button,.hide input,body a:not([name]).hide{background-color:#d0c6a1}.hide a:not([name]):focus,.hide a:not([name]):hover,.hide button:focus,.hide button:hover,.hide input:focus,.hide input:hover,body a:not([name]).hide:focus,body a:not([name]).hide:hover{background-color:#7b7043}.hide a:not([name]).active,.hide a:not([name]) .active,.hide a:not([name]):active,.hide button.active,.hide button .active,.hide button:active,.hide input.active,.hide input .active,.hide input:active,body a:not([name]).hide.active,body a:not([name]).hide .active,body a:not([name]).hide:active{background-color:#6c633e}.hide input[type=checkbox],.hide input[type=radio]{background-color:#c8bcac}.hide input[type=checkbox]:checked,.hide input[type=radio]:checked{background-color:#bcc28f}.hide .date,.hide .name,.hide em{color:#38321c}.hide abbr,.hide rt,.hide strong,.hide sub,.hide sup{background-color:#a49967;color:#d0c6a1}.leave,.leave textarea,.suddendead,.suddendead textarea{color:#32322d;background-color:#aeafa8;border-color:#999a8b}.leave.baloon,.suddendead.baloon{border-color:#aeafa8}.leave .fa-check,.suddendead .fa-check{color:#30821a}.leave .fa-warning,.suddendead .fa-warning{color:#994925}.leave .fa-ban,.suddendead .fa-ban{color:#992725}.leave [data-tooltip],.leave [title],.suddendead [data-tooltip],.suddendead [title]{background-color:#c6c7bf}.leave [data-tooltip]:after,.leave [data-tooltip]:before,.leave [title]:after,.leave [title]:before,.leave b,.suddendead [data-tooltip]:after,.suddendead [data-tooltip]:before,.suddendead [title]:after,.suddendead [title]:before,.suddendead b{color:#32322d;background-color:#c6c7bf}.leave a:not([name]),.suddendead a:not([name]),body a:not([name]).leave,body a:not([name]).suddendead{color:#32322d}.leave a:not([name]):visited,.suddendead a:not([name]):visited,body a:not([name]).leave:visited,body a:not([name]).suddendead:visited{background-color:#b4c3aa}.leave a:not([name]):link,.suddendead a:not([name]):link,body a:not([name]).leave:link,body a:not([name]).suddendead:link{background-color:#bfbdc6}.leave .active,.suddendead .active{background-color:#63645b}.leave a:not([name]),.leave button,.leave input,.suddendead a:not([name]),.suddendead button,.suddendead input,body a:not([name]).leave,body a:not([name]).suddendead{background-color:#c6c7bf}.leave a:not([name]):focus,.leave a:not([name]):hover,.leave button:focus,.leave button:hover,.leave input:focus,.leave input:hover,.suddendead a:not([name]):focus,.suddendead a:not([name]):hover,.suddendead button:focus,.suddendead button:hover,.suddendead input:focus,.suddendead input:hover,body a:not([name]).leave:focus,body a:not([name]).leave:hover,body a:not([name]).suddendead:focus,body a:not([name]).suddendead:hover{background-color:#707167}.leave a:not([name]).active,.leave a:not([name]) .active,.leave a:not([name]):active,.leave button.active,.leave button .active,.leave button:active,.leave input.active,.leave input .active,.leave input:active,.suddendead a:not([name]).active,.suddendead a:not([name]) .active,.suddendead a:not([name]):active,.suddendead button.active,.suddendead button .active,.suddendead button:active,.suddendead input.active,.suddendead input .active,.suddendead input:active,body a:not([name]).leave.active,body a:not([name]).leave .active,body a:not([name]).leave:active,body a:not([name]).suddendead.active,body a:not([name]).suddendead .active,body a:not([name]).suddendead:active{background-color:#63645b}.leave input[type=checkbox],.leave input[type=radio],.suddendead input[type=checkbox],.suddendead input[type=radio]{background-color:#bfbdc6}.leave input[type=checkbox]:checked,.leave input[type=radio]:checked,.suddendead input[type=checkbox]:checked,.suddendead input[type=radio]:checked{background-color:#b4c3aa}.leave .date,.leave .name,.leave em,.suddendead .date,.suddendead .name,.suddendead em{color:#32322d}.leave abbr,.leave rt,.leave strong,.leave sub,.leave sup,.suddendead abbr,.suddendead rt,.suddendead strong,.suddendead sub,.suddendead sup{background-color:#999a8b;color:#c6c7bf}.SPORT,.SPORT textarea{color:#85e2e2;background-color:#160303;border-color:#168686}.SPORT.baloon{border-color:#168686}.SPORT .fa-check{color:#4cbc55}.SPORT .fa-warning{color:#b48361}.SPORT .fa-ban{color:#b46161}.SPORT [data-tooltip],.SPORT [title]{background-color:#430b0b}.SPORT [data-tooltip]:after,.SPORT [data-tooltip]:before,.SPORT [title]:after,.SPORT [title]:before,.SPORT b{color:#85e2e2;background-color:#430b0b}.SPORT a:not([name]),body a:not([name]).SPORT{color:#85e2e2}.SPORT a:not([name]):visited,body a:not([name]).SPORT:visited{background-color:#401e0b}.SPORT a:not([name]):link,body a:not([name]).SPORT:link{background-color:#4c1728}.SPORT .active{background-color:#1db3b3}.SPORT a:not([name]),.SPORT button,.SPORT input,body a:not([name]).SPORT{background-color:#430b0b}.SPORT a:not([name]):focus,.SPORT a:not([name]):hover,.SPORT button:focus,.SPORT button:hover,.SPORT input:focus,.SPORT input:hover,body a:not([name]).SPORT:focus,body a:not([name]).SPORT:hover{background-color:#1a9d9d}.SPORT a:not([name]).active,.SPORT a:not([name]) .active,.SPORT a:not([name]):active,.SPORT button.active,.SPORT button .active,.SPORT button:active,.SPORT input.active,.SPORT input .active,.SPORT input:active,body a:not([name]).SPORT.active,body a:not([name]).SPORT .active,body a:not([name]).SPORT:active{background-color:#1db3b3}.SPORT input[type=checkbox],.SPORT input[type=radio]{background-color:#4c1728}.SPORT input[type=checkbox]:checked,.SPORT input[type=radio]:checked{background-color:#401e0b}.SPORT .date,.SPORT .name,.SPORT em{color:#127070}.SPORT abbr,.SPORT rt,.SPORT strong,.SPORT sub,.SPORT sup{background-color:#168686;color:#430b0b}.P09,.P09 textarea{color:#85e2c6;background-color:#160309}.P09,.P09 textarea,.P09.baloon{border-color:#168664}.P09 .fa-check{color:#4cbc4c}.P09 .fa-warning{color:#b48358}.P09 .fa-ban{color:#b46158}.P09 [data-tooltip],.P09 [title]{background-color:#430b1c}.P09 [data-tooltip]:after,.P09 [data-tooltip]:before,.P09 [title]:after,.P09 [title]:before,.P09 b{color:#85e2c6;background-color:#430b1c}.P09 a:not([name]),body a:not([name]).P09{color:#85e2c6}.P09 a:not([name]):visited,body a:not([name]).P09:visited{background-color:#401e1a}.P09 a:not([name]):link,body a:not([name]).P09:link{background-color:#4c1737}.P09 .active{background-color:#1db386}.P09 a:not([name]),.P09 button,.P09 input,body a:not([name]).P09{background-color:#430b1c}.P09 a:not([name]):focus,.P09 a:not([name]):hover,.P09 button:focus,.P09 button:hover,.P09 input:focus,.P09 input:hover,body a:not([name]).P09:focus,body a:not([name]).P09:hover{background-color:#1a9d75}.P09 a:not([name]).active,.P09 a:not([name]) .active,.P09 a:not([name]):active,.P09 button.active,.P09 button .active,.P09 button:active,.P09 input.active,.P09 input .active,.P09 input:active,body a:not([name]).P09 .active,body a:not([name]).P09.active,body a:not([name]).P09:active{background-color:#1db386}.P09 input[type=checkbox],.P09 input[type=radio]{background-color:#4c1737}.P09 input[type=checkbox]:checked,.P09 input[type=radio]:checked{background-color:#401e1a}.P09 .date,.P09 .name,.P09 em{color:#127054}.P09 abbr,.P09 rt,.P09 strong,.P09 sub,.P09 sup{background-color:#168664;color:#430b1c}.ELSE,.ELSE textarea{color:#7cd09d;background-color:#12010b;border-color:#0b7033}.ELSE.baloon{border-color:#0b7033}.ELSE .fa-check{color:#49b63f}.ELSE .fa-warning{color:#b17d4a}.ELSE .fa-ban{color:#b15b4a}.ELSE [data-tooltip],.ELSE [title]{background-color:#380523}.ELSE [data-tooltip]:after,.ELSE [data-tooltip]:before,.ELSE [title]:after,.ELSE [title]:before,.ELSE b{color:#7cd09d;background-color:#380523}.ELSE a:not([name]),body a:not([name]).ELSE{color:#7cd09d}.ELSE a:not([name]):visited,body a:not([name]).ELSE:visited{background-color:#371820}.ELSE a:not([name]):link,body a:not([name]).ELSE:link{background-color:#42123d}.ELSE .active{background-color:#0e9544}.ELSE a:not([name]),.ELSE button,.ELSE input,body a:not([name]).ELSE{background-color:#380523}.ELSE a:not([name]):focus,.ELSE a:not([name]):hover,.ELSE button:focus,.ELSE button:hover,.ELSE input:focus,.ELSE input:hover,body a:not([name]).ELSE:focus,body a:not([name]).ELSE:hover{background-color:#0d823c}.ELSE a:not([name]).active,.ELSE a:not([name]) .active,.ELSE a:not([name]):active,.ELSE button.active,.ELSE button .active,.ELSE button:active,.ELSE input.active,.ELSE input .active,.ELSE input:active,body a:not([name]).ELSE.active,body a:not([name]).ELSE .active,body a:not([name]).ELSE:active{background-color:#0e9544}.ELSE input[type=checkbox],.ELSE input[type=radio]{background-color:#42123d}.ELSE input[type=checkbox]:checked,.ELSE input[type=radio]:checked{background-color:#371820}.ELSE .date,.ELSE .name,.ELSE em{color:#095d2a}.ELSE abbr,.ELSE rt,.ELSE strong,.ELSE sub,.ELSE sup{background-color:#0b7033;color:#380523}.P07,.P07 textarea{color:#7cd084;background-color:#120111}.P07,.P07 textarea,.P07.baloon{border-color:#0b7015}.P07 .fa-check{color:#49b636}.P07 .fa-warning{color:#b17d42}.P07 .fa-ban{color:#b15b42}.P07 [data-tooltip],.P07 [title]{background-color:#380533}.P07 [data-tooltip]:after,.P07 [data-tooltip]:before,.P07 [title]:after,.P07 [title]:before,.P07 b{color:#7cd084;background-color:#380533}.P07 a:not([name]),body a:not([name]).P07{color:#7cd084}.P07 a:not([name]):visited,body a:not([name]).P07:visited{background-color:#37182e}.P07 a:not([name]):link,body a:not([name]).P07:link{background-color:#42124b}.P07 .active{background-color:#0e951c}.P07 a:not([name]),.P07 button,.P07 input,body a:not([name]).P07{background-color:#380533}.P07 a:not([name]):focus,.P07 a:not([name]):hover,.P07 button:focus,.P07 button:hover,.P07 input:focus,.P07 input:hover,body a:not([name]).P07:focus,body a:not([name]).P07:hover{background-color:#0d8218}.P07 a:not([name]).active,.P07 a:not([name]) .active,.P07 a:not([name]):active,.P07 button.active,.P07 button .active,.P07 button:active,.P07 input.active,.P07 input .active,.P07 input:active,body a:not([name]).P07 .active,body a:not([name]).P07.active,body a:not([name]).P07:active{background-color:#0e951c}.P07 input[type=checkbox],.P07 input[type=radio]{background-color:#42124b}.P07 input[type=checkbox]:checked,.P07 input[type=radio]:checked{background-color:#37182e}.P07 .date,.P07 .name,.P07 em{color:#095d11}.P07 abbr,.P07 rt,.P07 strong,.P07 sub,.P07 sup{background-color:#0b7015;color:#380533}.BSAY,.BSAY textarea,.XSAY,.XSAY textarea{color:#8dd07c;background-color:#0f0112;border-color:#1f700b}.BSAY.baloon,.XSAY.baloon{border-color:#1f700b}.BSAY .fa-check,.XSAY .fa-check{color:#4eb634}.BSAY .fa-warning,.XSAY .fa-warning{color:#b77d3f}.BSAY .fa-ban,.XSAY .fa-ban{color:#b75b3f}.BSAY [data-tooltip],.BSAY [title],.XSAY [data-tooltip],.XSAY [title]{background-color:#2d0538}.BSAY [data-tooltip]:after,.BSAY [data-tooltip]:before,.BSAY [title]:after,.BSAY [title]:before,.BSAY b,.XSAY [data-tooltip]:after,.XSAY [data-tooltip]:before,.XSAY [title]:after,.XSAY [title]:before,.XSAY b{color:#8dd07c;background-color:#2d0538}.BSAY a:not([name]),.XSAY a:not([name]),body a:not([name]).BSAY,body a:not([name]).XSAY{color:#8dd07c}.BSAY a:not([name]):visited,.XSAY a:not([name]):visited,body a:not([name]).BSAY:visited,body a:not([name]).XSAY:visited{background-color:#2d1833}.BSAY a:not([name]):link,.XSAY a:not([name]):link,body a:not([name]).BSAY:link,body a:not([name]).XSAY:link{background-color:#39124f}.BSAY .active,.XSAY .active{background-color:#2a950e}.BSAY a:not([name]),.BSAY button,.BSAY input,.XSAY a:not([name]),.XSAY button,.XSAY input,body a:not([name]).BSAY,body a:not([name]).XSAY{background-color:#2d0538}.BSAY a:not([name]):focus,.BSAY a:not([name]):hover,.BSAY button:focus,.BSAY button:hover,.BSAY input:focus,.BSAY input:hover,.XSAY a:not([name]):focus,.XSAY a:not([name]):hover,.XSAY button:focus,.XSAY button:hover,.XSAY input:focus,.XSAY input:hover,body a:not([name]).BSAY:focus,body a:not([name]).BSAY:hover,body a:not([name]).XSAY:focus,body a:not([name]).XSAY:hover{background-color:#24820d}.BSAY a:not([name]).active,.BSAY a:not([name]) .active,.BSAY a:not([name]):active,.BSAY button.active,.BSAY button .active,.BSAY button:active,.BSAY input.active,.BSAY input .active,.BSAY input:active,.XSAY a:not([name]).active,.XSAY a:not([name]) .active,.XSAY a:not([name]):active,.XSAY button.active,.XSAY button .active,.XSAY button:active,.XSAY input.active,.XSAY input .active,.XSAY input:active,body a:not([name]).BSAY.active,body a:not([name]).BSAY .active,body a:not([name]).BSAY:active,body a:not([name]).XSAY.active,body a:not([name]).XSAY .active,body a:not([name]).XSAY:active{background-color:#2a950e}.BSAY input[type=checkbox],.BSAY input[type=radio],.XSAY input[type=checkbox],.XSAY input[type=radio]{background-color:#39124f}.BSAY input[type=checkbox]:checked,.BSAY input[type=radio]:checked,.XSAY input[type=checkbox]:checked,.XSAY input[type=radio]:checked{background-color:#2d1833}.BSAY .date,.BSAY .name,.BSAY em,.XSAY .date,.XSAY .name,.XSAY em{color:#1a5d09}.BSAY abbr,.BSAY rt,.BSAY strong,.BSAY sub,.BSAY sup,.XSAY abbr,.XSAY rt,.XSAY strong,.XSAY sub,.XSAY sup{background-color:#1f700b;color:#2d0538}.P05,.P05 textarea{color:#b4e285;background-color:#0d0316}.P05,.P05 textarea,.P05.baloon{border-color:#4e8616}.P05 .fa-check{color:#5bbc37}.P05 .fa-warning{color:#c48342}.P05 .fa-ban{color:#c46142}.P05 [data-tooltip],.P05 [title]{background-color:#270b43}.P05 [data-tooltip]:after,.P05 [data-tooltip]:before,.P05 [title]:after,.P05 [title]:before,.P05 b{color:#b4e285;background-color:#270b43}.P05 a:not([name]),body a:not([name]).P05{color:#b4e285}.P05 a:not([name]):visited,body a:not([name]).P05:visited{background-color:#281e3d}.P05 a:not([name]):link,body a:not([name]).P05:link{background-color:#331759}.P05 .active{background-color:#68b31d}.P05 a:not([name]),.P05 button,.P05 input,body a:not([name]).P05{background-color:#270b43}.P05 a:not([name]):focus,.P05 a:not([name]):hover,.P05 button:focus,.P05 button:hover,.P05 input:focus,.P05 input:hover,body a:not([name]).P05:focus,body a:not([name]).P05:hover{background-color:#5b9d1a}.P05 a:not([name]).active,.P05 a:not([name]) .active,.P05 a:not([name]):active,.P05 button.active,.P05 button .active,.P05 button:active,.P05 input.active,.P05 input .active,.P05 input:active,body a:not([name]).P05 .active,body a:not([name]).P05.active,body a:not([name]).P05:active{background-color:#68b31d}.P05 input[type=checkbox],.P05 input[type=radio]{background-color:#331759}.P05 input[type=checkbox]:checked,.P05 input[type=radio]:checked{background-color:#281e3d}.P05 .date,.P05 .name,.P05 em{color:#417012}.P05 abbr,.P05 rt,.P05 strong,.P05 sub,.P05 sup{background-color:#4e8616;color:#270b43}.P04,.P04 textarea{color:#d0e285;background-color:#070316}.P04,.P04 textarea,.P04.baloon{border-color:#708616}.P04 .fa-check{color:#64bc37}.P04 .fa-warning{color:#cd8342}.P04 .fa-ban{color:#cd6142}.P04 [data-tooltip],.P04 [title]{background-color:#160b43}.P04 [data-tooltip]:after,.P04 [data-tooltip]:before,.P04 [title]:after,.P04 [title]:before,.P04 b{color:#d0e285;background-color:#160b43}.P04 a:not([name]),body a:not([name]).P04{color:#d0e285}.P04 a:not([name]):visited,body a:not([name]).P04:visited{background-color:#191e3d}.P04 a:not([name]):link,body a:not([name]).P04:link{background-color:#241759}.P04 .active{background-color:#95b31d}.P04 a:not([name]),.P04 button,.P04 input,body a:not([name]).P04{background-color:#160b43}.P04 a:not([name]):focus,.P04 a:not([name]):hover,.P04 button:focus,.P04 button:hover,.P04 input:focus,.P04 input:hover,body a:not([name]).P04:focus,body a:not([name]).P04:hover{background-color:#829d1a}.P04 a:not([name]).active,.P04 a:not([name]) .active,.P04 a:not([name]):active,.P04 button.active,.P04 button .active,.P04 button:active,.P04 input.active,.P04 input .active,.P04 input:active,body a:not([name]).P04 .active,body a:not([name]).P04.active,body a:not([name]).P04:active{background-color:#95b31d}.P04 input[type=checkbox],.P04 input[type=radio]{background-color:#241759}.P04 input[type=checkbox]:checked,.P04 input[type=radio]:checked{background-color:#191e3d}.P04 .date,.P04 .name,.P04 em{color:#5d7012}.P04 abbr,.P04 rt,.P04 strong,.P04 sub,.P04 sup{background-color:#708616;color:#160b43}.MSAY,.MSAY textarea,.SSAY,.SSAY textarea{color:#e2cc85;background-color:#030816;border-color:#866c16}.MSAY.baloon,.SSAY.baloon{border-color:#866c16}.MSAY .fa-check,.SSAY .fa-check{color:#6ab537}.MSAY .fa-warning,.SSAY .fa-warning{color:#d37c42}.MSAY .fa-ban,.SSAY .fa-ban{color:#d35a42}.MSAY [data-tooltip],.MSAY [title],.SSAY [data-tooltip],.SSAY [title]{background-color:#0b1843}.MSAY [data-tooltip]:after,.MSAY [data-tooltip]:before,.MSAY [title]:after,.MSAY [title]:before,.MSAY b,.SSAY [data-tooltip]:after,.SSAY [data-tooltip]:before,.SSAY [title]:after,.SSAY [title]:before,.SSAY b{color:#e2cc85;background-color:#0b1843}.MSAY a:not([name]),.SSAY a:not([name]),body a:not([name]).MSAY,body a:not([name]).SSAY{color:#e2cc85}.MSAY a:not([name]):visited,.SSAY a:not([name]):visited,body a:not([name]).MSAY:visited,body a:not([name]).SSAY:visited{background-color:#0f293d}.MSAY a:not([name]):link,.SSAY a:not([name]):link,body a:not([name]).MSAY:link,body a:not([name]).SSAY:link{background-color:#1b2359}.MSAY .active,.SSAY .active{background-color:#b3901d}.MSAY a:not([name]),.MSAY button,.MSAY input,.SSAY a:not([name]),.SSAY button,.SSAY input,body a:not([name]).MSAY,body a:not([name]).SSAY{background-color:#0b1843}.MSAY a:not([name]):focus,.MSAY a:not([name]):hover,.MSAY button:focus,.MSAY button:hover,.MSAY input:focus,.MSAY input:hover,.SSAY a:not([name]):focus,.SSAY a:not([name]):hover,.SSAY button:focus,.SSAY button:hover,.SSAY input:focus,.SSAY input:hover,body a:not([name]).MSAY:focus,body a:not([name]).MSAY:hover,body a:not([name]).SSAY:focus,body a:not([name]).SSAY:hover{background-color:#9d7e1a}.MSAY a:not([name]).active,.MSAY a:not([name]) .active,.MSAY a:not([name]):active,.MSAY button.active,.MSAY button .active,.MSAY button:active,.MSAY input.active,.MSAY input .active,.MSAY input:active,.SSAY a:not([name]).active,.SSAY a:not([name]) .active,.SSAY a:not([name]):active,.SSAY button.active,.SSAY button .active,.SSAY button:active,.SSAY input.active,.SSAY input .active,.SSAY input:active,body a:not([name]).MSAY.active,body a:not([name]).MSAY .active,body a:not([name]).MSAY:active,body a:not([name]).SSAY.active,body a:not([name]).SSAY .active,body a:not([name]).SSAY:active{background-color:#b3901d}.MSAY input[type=checkbox],.MSAY input[type=radio],.SSAY input[type=checkbox],.SSAY input[type=radio]{background-color:#1b2359}.MSAY input[type=checkbox]:checked,.MSAY input[type=radio]:checked,.SSAY input[type=checkbox]:checked,.SSAY input[type=radio]:checked{background-color:#0f293d}.MSAY .date,.MSAY .name,.MSAY em,.SSAY .date,.SSAY .name,.SSAY em{color:#705a12}.MSAY abbr,.MSAY rt,.MSAY strong,.MSAY sub,.MSAY sup,.SSAY abbr,.SSAY rt,.SSAY strong,.SSAY sub,.SSAY sup{background-color:#866c16;color:#0b1843}.VSAY,.VSAY textarea,.VSSAY,.VSSAY textarea{color:#e2bd85;background-color:#030b16;border-color:#865916}.VSAY.baloon,.VSSAY.baloon{border-color:#865916}.VSAY .fa-check,.VSSAY .fa-check{color:#6ab037}.VSAY .fa-warning,.VSSAY .fa-warning{color:#d37742}.VSAY .fa-ban,.VSSAY .fa-ban{color:#d35542}.VSAY [data-tooltip],.VSAY [title],.VSSAY [data-tooltip],.VSSAY [title]{background-color:#0b2143}.VSAY [data-tooltip]:after,.VSAY [data-tooltip]:before,.VSAY [title]:after,.VSAY [title]:before,.VSAY b,.VSSAY [data-tooltip]:after,.VSSAY [data-tooltip]:before,.VSSAY [title]:after,.VSSAY [title]:before,.VSSAY b{color:#e2bd85;background-color:#0b2143}.VSAY a:not([name]),.VSSAY a:not([name]),body a:not([name]).VSAY,body a:not([name]).VSSAY{color:#e2bd85}.VSAY a:not([name]):visited,.VSSAY a:not([name]):visited,body a:not([name]).VSAY:visited,body a:not([name]).VSSAY:visited{background-color:#0f313d}.VSAY a:not([name]):link,.VSSAY a:not([name]):link,body a:not([name]).VSAY:link,body a:not([name]).VSSAY:link{background-color:#1b2b59}.VSAY .active,.VSSAY .active{background-color:#b3771d}.VSAY a:not([name]),.VSAY button,.VSAY input,.VSSAY a:not([name]),.VSSAY button,.VSSAY input,body a:not([name]).VSAY,body a:not([name]).VSSAY{background-color:#0b2143}.VSAY a:not([name]):focus,.VSAY a:not([name]):hover,.VSAY button:focus,.VSAY button:hover,.VSAY input:focus,.VSAY input:hover,.VSSAY a:not([name]):focus,.VSSAY a:not([name]):hover,.VSSAY button:focus,.VSSAY button:hover,.VSSAY input:focus,.VSSAY input:hover,body a:not([name]).VSAY:focus,body a:not([name]).VSAY:hover,body a:not([name]).VSSAY:focus,body a:not([name]).VSSAY:hover{background-color:#9d681a}.VSAY a:not([name]).active,.VSAY a:not([name]) .active,.VSAY a:not([name]):active,.VSAY button.active,.VSAY button .active,.VSAY button:active,.VSAY input.active,.VSAY input .active,.VSAY input:active,.VSSAY a:not([name]).active,.VSSAY a:not([name]) .active,.VSSAY a:not([name]):active,.VSSAY button.active,.VSSAY button .active,.VSSAY button:active,.VSSAY input.active,.VSSAY input .active,.VSSAY input:active,body a:not([name]).VSAY.active,body a:not([name]).VSAY .active,body a:not([name]).VSAY:active,body a:not([name]).VSSAY.active,body a:not([name]).VSSAY .active,body a:not([name]).VSSAY:active{background-color:#b3771d}.VSAY input[type=checkbox],.VSAY input[type=radio],.VSSAY input[type=checkbox],.VSSAY input[type=radio]{background-color:#1b2b59}.VSAY input[type=checkbox]:checked,.VSAY input[type=radio]:checked,.VSSAY input[type=checkbox]:checked,.VSSAY input[type=radio]:checked{background-color:#0f313d}.VSAY .date,.VSAY .name,.VSAY em,.VSSAY .date,.VSSAY .name,.VSSAY em{color:#704a12}.VSAY abbr,.VSAY rt,.VSAY strong,.VSAY sub,.VSAY sup,.VSSAY abbr,.VSSAY rt,.VSSAY strong,.VSSAY sub,.VSSAY sup{background-color:#865916;color:#0b2143}.P01,.P01 textarea{color:#e2a185;background-color:#031016}.P01,.P01 textarea,.P01.baloon{border-color:#863816}.P01 .fa-check{color:#6aa737}.P01 .fa-warning{color:#d36e42}.P01 .fa-ban{color:#d34b42}.P01 [data-tooltip],.P01 [title]{background-color:#0b3243}.P01 [data-tooltip]:after,.P01 [data-tooltip]:before,.P01 [title]:after,.P01 [title]:before,.P01 b{color:#e2a185;background-color:#0b3243}.P01 a:not([name]),body a:not([name]).P01{color:#e2a185}.P01 a:not([name]):visited,body a:not([name]).P01:visited{background-color:#0f403d}.P01 a:not([name]):link,body a:not([name]).P01:link{background-color:#1b3a59}.P01 .active{background-color:#b34a1d}.P01 a:not([name]),.P01 button,.P01 input,body a:not([name]).P01{background-color:#0b3243}.P01 a:not([name]):focus,.P01 a:not([name]):hover,.P01 button:focus,.P01 button:hover,.P01 input:focus,.P01 input:hover,body a:not([name]).P01:focus,body a:not([name]).P01:hover{background-color:#9d411a}.P01 a:not([name]).active,.P01 a:not([name]) .active,.P01 a:not([name]):active,.P01 button.active,.P01 button .active,.P01 button:active,.P01 input.active,.P01 input .active,.P01 input:active,body a:not([name]).P01 .active,body a:not([name]).P01.active,body a:not([name]).P01:active{background-color:#b34a1d}.P01 input[type=checkbox],.P01 input[type=radio]{background-color:#1b3a59}.P01 input[type=checkbox]:checked,.P01 input[type=radio]:checked{background-color:#0f403d}.P01 .date,.P01 .name,.P01 em{color:#702e12}.P01 abbr,.P01 rt,.P01 strong,.P01 sub,.P01 sup{background-color:#863816;color:#0b3243}.WSAY,.WSAY textarea{color:#e28585;background-color:#031616;border-color:#861616}.WSAY.baloon{border-color:#861616}.WSAY .fa-check{color:#6a9d37}.WSAY .fa-warning{color:#d36442}.WSAY .fa-ban{color:#d34242}.WSAY [data-tooltip],.WSAY [title]{background-color:#0b4343}.WSAY [data-tooltip]:after,.WSAY [data-tooltip]:before,.WSAY [title]:after,.WSAY [title]:before,.WSAY b{color:#e28585;background-color:#0b4343}.WSAY a:not([name]),body a:not([name]).WSAY{color:#e28585}.WSAY a:not([name]):visited,body a:not([name]).WSAY:visited{background-color:#0f4f3d}.WSAY a:not([name]):link,body a:not([name]).WSAY:link{background-color:#1b4959}.WSAY .active{background-color:#b31d1d}.WSAY a:not([name]),.WSAY button,.WSAY input,body a:not([name]).WSAY{background-color:#0b4343}.WSAY a:not([name]):focus,.WSAY a:not([name]):hover,.WSAY button:focus,.WSAY button:hover,.WSAY input:focus,.WSAY input:hover,body a:not([name]).WSAY:focus,body a:not([name]).WSAY:hover{background-color:#9d1a1a}.WSAY a:not([name]).active,.WSAY a:not([name]) .active,.WSAY a:not([name]):active,.WSAY button.active,.WSAY button .active,.WSAY button:active,.WSAY input.active,.WSAY input .active,.WSAY input:active,body a:not([name]).WSAY.active,body a:not([name]).WSAY .active,body a:not([name]).WSAY:active{background-color:#b31d1d}.WSAY input[type=checkbox],.WSAY input[type=radio]{background-color:#1b4959}.WSAY input[type=checkbox]:checked,.WSAY input[type=radio]:checked{background-color:#0f4f3d}.WSAY .date,.WSAY .name,.WSAY em{color:#701212}.WSAY abbr,.WSAY rt,.WSAY strong,.WSAY sub,.WSAY sup{background-color:#861616;color:#0b4343}.N01,.N01 textarea{color:#e285a1;background-color:#031610}.N01,.N01 textarea,.N01.baloon{border-color:#861638}.N01 .fa-check{color:#6a9d40}.N01 .fa-warning{color:#d3644b}.N01 .fa-ban{color:#d3424b}.N01 [data-tooltip],.N01 [title]{background-color:#0b4332}.N01 [data-tooltip]:after,.N01 [data-tooltip]:before,.N01 [title]:after,.N01 [title]:before,.N01 b{color:#e285a1;background-color:#0b4332}.N01 a:not([name]),body a:not([name]).N01{color:#e285a1}.N01 a:not([name]):visited,body a:not([name]).N01:visited{background-color:#0f4f2e}.N01 a:not([name]):link,body a:not([name]).N01:link{background-color:#1b494a}.N01 .active{background-color:#b31d4a}.N01 a:not([name]),.N01 button,.N01 input,body a:not([name]).N01{background-color:#0b4332}.N01 a:not([name]):focus,.N01 a:not([name]):hover,.N01 button:focus,.N01 button:hover,.N01 input:focus,.N01 input:hover,body a:not([name]).N01:focus,body a:not([name]).N01:hover{background-color:#9d1a41}.N01 a:not([name]).active,.N01 a:not([name]) .active,.N01 a:not([name]):active,.N01 button.active,.N01 button .active,.N01 button:active,.N01 input.active,.N01 input .active,.N01 input:active,body a:not([name]).N01 .active,body a:not([name]).N01.active,body a:not([name]).N01:active{background-color:#b31d4a}.N01 input[type=checkbox],.N01 input[type=radio]{background-color:#1b494a}.N01 input[type=checkbox]:checked,.N01 input[type=radio]:checked{background-color:#0f4f2e}.N01 .date,.N01 .name,.N01 em{color:#70122e}.N01 abbr,.N01 rt,.N01 strong,.N01 sub,.N01 sup{background-color:#861638;color:#0b4332}.N02,.N02 textarea{color:#e285b5;background-color:#03160c}.N02,.N02 textarea,.N02.baloon{border-color:#861650}.N02 .fa-check{color:#6a9d47}.N02 .fa-warning{color:#d36452}.N02 .fa-ban{color:#d34252}.N02 [data-tooltip],.N02 [title]{background-color:#0b4326}.N02 [data-tooltip]:after,.N02 [data-tooltip]:before,.N02 [title]:after,.N02 [title]:before,.N02 b{color:#e285b5;background-color:#0b4326}.N02 a:not([name]),body a:not([name]).N02{color:#e285b5}.N02 a:not([name]):visited,body a:not([name]).N02:visited{background-color:#0f4f23}.N02 a:not([name]):link,body a:not([name]).N02:link{background-color:#1b4940}.N02 .active{background-color:#b31d6b}.N02 a:not([name]),.N02 button,.N02 input,body a:not([name]).N02{background-color:#0b4326}.N02 a:not([name]):focus,.N02 a:not([name]):hover,.N02 button:focus,.N02 button:hover,.N02 input:focus,.N02 input:hover,body a:not([name]).N02:focus,body a:not([name]).N02:hover{background-color:#9d1a5d}.N02 a:not([name]).active,.N02 a:not([name]) .active,.N02 a:not([name]):active,.N02 button.active,.N02 button .active,.N02 button:active,.N02 input.active,.N02 input .active,.N02 input:active,body a:not([name]).N02 .active,body a:not([name]).N02.active,body a:not([name]).N02:active{background-color:#b31d6b}.N02 input[type=checkbox],.N02 input[type=radio]{background-color:#1b4940}.N02 input[type=checkbox]:checked,.N02 input[type=radio]:checked{background-color:#0f4f23}.N02 .date,.N02 .name,.N02 em{color:#701243}.N02 abbr,.N02 rt,.N02 strong,.N02 sub,.N02 sup{background-color:#861650;color:#0b4326}.AIM,.AIM textarea{color:#e285d9;background-color:#031605}.AIM,.AIM.baloon,.AIM textarea{border-color:#86167b}.AIM .fa-check{color:#6a9d53}.AIM .fa-warning{color:#d3645e}.AIM .fa-ban{color:#d3425e}.AIM [data-tooltip],.AIM [title]{background-color:#0b4310}.AIM [data-tooltip]:after,.AIM [data-tooltip]:before,.AIM [title]:after,.AIM [title]:before,.AIM b{color:#e285d9;background-color:#0b4310}.AIM a:not([name]),body a:not([name]).AIM{color:#e285d9}.AIM a:not([name]):visited,body a:not([name]).AIM:visited{background-color:#0f4f10}.AIM a:not([name]):link,body a:not([name]).AIM:link{background-color:#1b492c}.AIM .active{background-color:#b31da4}.AIM a:not([name]),.AIM button,.AIM input,body a:not([name]).AIM{background-color:#0b4310}.AIM a:not([name]):focus,.AIM a:not([name]):hover,.AIM button:focus,.AIM button:hover,.AIM input:focus,.AIM input:hover,body a:not([name]).AIM:focus,body a:not([name]).AIM:hover{background-color:#9d1a8f}.AIM a:not([name]).active,.AIM a:not([name]) .active,.AIM a:not([name]):active,.AIM button.active,.AIM button .active,.AIM button:active,.AIM input.active,.AIM input .active,.AIM input:active,body a:not([name]).AIM.active,body a:not([name]).AIM .active,body a:not([name]).AIM:active{background-color:#b31da4}.AIM input[type=checkbox],.AIM input[type=radio]{background-color:#1b492c}.AIM input[type=checkbox]:checked,.AIM input[type=radio]:checked{background-color:#0f4f10}.AIM .date,.AIM .name,.AIM em{color:#701266}.AIM abbr,.AIM rt,.AIM strong,.AIM sub,.AIM sup{background-color:#86167b;color:#0b4310}.PSAY,.PSAY textarea,.SPSAY,.SPSAY textarea{color:#e4a1f5;background-color:#0c1a09;border-color:#88389d}.PSAY.baloon,.SPSAY.baloon{border-color:#88389d}.PSAY .fa-check,.SPSAY .fa-check{color:#6ba75c}.PSAY .fa-warning,.SPSAY .fa-warning{color:#d36e67}.PSAY .fa-ban,.SPSAY .fa-ban{color:#d34b67}.PSAY [data-tooltip],.PSAY [title],.SPSAY [data-tooltip],.SPSAY [title]{background-color:#264e1c}.PSAY [data-tooltip]:after,.PSAY [data-tooltip]:before,.PSAY [title]:after,.PSAY [title]:before,.PSAY b,.SPSAY [data-tooltip]:after,.SPSAY [data-tooltip]:before,.SPSAY [title]:after,.SPSAY [title]:before,.SPSAY b{color:#e4a1f5;background-color:#264e1c}.PSAY a:not([name]),.SPSAY a:not([name]),body a:not([name]).PSAY,body a:not([name]).SPSAY{color:#e4a1f5}.PSAY a:not([name]):visited,.SPSAY a:not([name]):visited,body a:not([name]).PSAY:visited,body a:not([name]).SPSAY:visited{background-color:#27591a}.PSAY a:not([name]):link,.SPSAY a:not([name]):link,body a:not([name]).PSAY:link,body a:not([name]).SPSAY:link{background-color:#325237}.PSAY .active,.SPSAY .active{background-color:#b64ad1}.PSAY a:not([name]),.PSAY button,.PSAY input,.SPSAY a:not([name]),.SPSAY button,.SPSAY input,body a:not([name]).PSAY,body a:not([name]).SPSAY{background-color:#264e1c}.PSAY a:not([name]):focus,.PSAY a:not([name]):hover,.PSAY button:focus,.PSAY button:hover,.PSAY input:focus,.PSAY input:hover,.SPSAY a:not([name]):focus,.SPSAY a:not([name]):hover,.SPSAY button:focus,.SPSAY button:hover,.SPSAY input:focus,.SPSAY input:hover,body a:not([name]).PSAY:focus,body a:not([name]).PSAY:hover,body a:not([name]).SPSAY:focus,body a:not([name]).SPSAY:hover{background-color:#9f41b7}.PSAY a:not([name]).active,.PSAY a:not([name]) .active,.PSAY a:not([name]):active,.PSAY button.active,.PSAY button .active,.PSAY button:active,.PSAY input.active,.PSAY input .active,.PSAY input:active,.SPSAY a:not([name]).active,.SPSAY a:not([name]) .active,.SPSAY a:not([name]):active,.SPSAY button.active,.SPSAY button .active,.SPSAY button:active,.SPSAY input.active,.SPSAY input .active,.SPSAY input:active,body a:not([name]).PSAY.active,body a:not([name]).PSAY .active,body a:not([name]).PSAY:active,body a:not([name]).SPSAY.active,body a:not([name]).SPSAY .active,body a:not([name]).SPSAY:active{background-color:#b64ad1}.PSAY input[type=checkbox],.PSAY input[type=radio],.SPSAY input[type=checkbox],.SPSAY input[type=radio]{background-color:#325237}.PSAY input[type=checkbox]:checked,.PSAY input[type=radio]:checked,.SPSAY input[type=checkbox]:checked,.SPSAY input[type=radio]:checked{background-color:#27591a}.PSAY .date,.PSAY .name,.PSAY em,.SPSAY .date,.SPSAY .name,.SPSAY em{color:#712e82}.PSAY abbr,.PSAY rt,.PSAY strong,.PSAY sub,.PSAY sup,.SPSAY abbr,.SPSAY rt,.SPSAY strong,.SPSAY sub,.SPSAY sup{background-color:#88389d;color:#264e1c}.N05,.N05 textarea{color:#d9b4ff;background-color:#141c0d}.N05,.N05 textarea,.N05.baloon{border-color:#7b4ea8}.N05 .fa-check{color:#67ad5f}.N05 .fa-warning{color:#d0746a}.N05 .fa-ban{color:#d0526a}.N05 [data-tooltip],.N05 [title]{background-color:#3d5427}.N05 [data-tooltip]:after,.N05 [data-tooltip]:before,.N05 [title]:after,.N05 [title]:before,.N05 b{color:#d9b4ff;background-color:#3d5427}.N05 a:not([name]),body a:not([name]).N05{color:#d9b4ff}.N05 a:not([name]):visited,body a:not([name]).N05:visited{background-color:#3b5e24}.N05 a:not([name]):link,body a:not([name]).N05:link{background-color:#475840}.N05 .active{background-color:#a468e0}.N05 a:not([name]),.N05 button,.N05 input,body a:not([name]).N05{background-color:#3d5427}.N05 a:not([name]):focus,.N05 a:not([name]):hover,.N05 button:focus,.N05 button:hover,.N05 input:focus,.N05 input:hover,body a:not([name]).N05:focus,body a:not([name]).N05:hover{background-color:#8f5bc4}.N05 a:not([name]).active,.N05 a:not([name]) .active,.N05 a:not([name]):active,.N05 button.active,.N05 button .active,.N05 button:active,.N05 input.active,.N05 input .active,.N05 input:active,body a:not([name]).N05 .active,body a:not([name]).N05.active,body a:not([name]).N05:active{background-color:#a468e0}.N05 input[type=checkbox],.N05 input[type=radio]{background-color:#475840}.N05 input[type=checkbox]:checked,.N05 input[type=radio]:checked{background-color:#3b5e24}.N05 .date,.N05 .name,.N05 em{color:#66418c}.N05 abbr,.N05 rt,.N05 strong,.N05 sub,.N05 sup{background-color:#7b4ea8;color:#3d5427}.N06,.N06 textarea{color:#c3b4ff;background-color:#191c0d}.N06,.N06 textarea,.N06.baloon{border-color:#604ea8}.N06 .fa-check{color:#60ad5f}.N06 .fa-warning{color:#c9746a}.N06 .fa-ban{color:#c9526a}.N06 [data-tooltip],.N06 [title]{background-color:#4b5427}.N06 [data-tooltip]:after,.N06 [data-tooltip]:before,.N06 [title]:after,.N06 [title]:before,.N06 b{color:#c3b4ff;background-color:#4b5427}.N06 a:not([name]),body a:not([name]).N06{color:#c3b4ff}.N06 a:not([name]):visited,body a:not([name]).N06:visited{background-color:#475e24}.N06 a:not([name]):link,body a:not([name]).N06:link{background-color:#535840}.N06 .active{background-color:#8068e0}.N06 a:not([name]),.N06 button,.N06 input,body a:not([name]).N06{background-color:#4b5427}.N06 a:not([name]):focus,.N06 a:not([name]):hover,.N06 button:focus,.N06 button:hover,.N06 input:focus,.N06 input:hover,body a:not([name]).N06:focus,body a:not([name]).N06:hover{background-color:#705bc4}.N06 a:not([name]).active,.N06 a:not([name]) .active,.N06 a:not([name]):active,.N06 button.active,.N06 button .active,.N06 button:active,.N06 input.active,.N06 input .active,.N06 input:active,body a:not([name]).N06 .active,body a:not([name]).N06.active,body a:not([name]).N06:active{background-color:#8068e0}.N06 input[type=checkbox],.N06 input[type=radio]{background-color:#535840}.N06 input[type=checkbox]:checked,.N06 input[type=radio]:checked{background-color:#475e24}.N06 .date,.N06 .name,.N06 em{color:#50418c}.N06 abbr,.N06 rt,.N06 strong,.N06 sub,.N06 sup{background-color:#604ea8;color:#4b5427}.VGSAY,.VGSAY textarea{color:#b4bbff;background-color:#1c1a0d;border-color:#4e57a8}.VGSAY.baloon{border-color:#4e57a8}.VGSAY .fa-check{color:#5baf5f}.VGSAY .fa-warning{color:#c4766a}.VGSAY .fa-ban{color:#c4546a}.VGSAY [data-tooltip],.VGSAY [title]{background-color:#544f27}.VGSAY [data-tooltip]:after,.VGSAY [data-tooltip]:before,.VGSAY [title]:after,.VGSAY [title]:before,.VGSAY b{color:#b4bbff;background-color:#544f27}.VGSAY a:not([name]),body a:not([name]).VGSAY{color:#b4bbff}.VGSAY a:not([name]):visited,body a:not([name]).VGSAY:visited{background-color:#4f5924}.VGSAY a:not([name]):link,body a:not([name]).VGSAY:link{background-color:#5b5340}.VGSAY .active{background-color:#6875e0}.VGSAY a:not([name]),.VGSAY button,.VGSAY input,body a:not([name]).VGSAY{background-color:#544f27}.VGSAY a:not([name]):focus,.VGSAY a:not([name]):hover,.VGSAY button:focus,.VGSAY button:hover,.VGSAY input:focus,.VGSAY input:hover,body a:not([name]).VGSAY:focus,body a:not([name]).VGSAY:hover{background-color:#5b66c4}.VGSAY a:not([name]).active,.VGSAY a:not([name]) .active,.VGSAY a:not([name]):active,.VGSAY button.active,.VGSAY button .active,.VGSAY button:active,.VGSAY input.active,.VGSAY input .active,.VGSAY input:active,body a:not([name]).VGSAY.active,body a:not([name]).VGSAY .active,body a:not([name]).VGSAY:active{background-color:#6875e0}.VGSAY input[type=checkbox],.VGSAY input[type=radio]{background-color:#5b5340}.VGSAY input[type=checkbox]:checked,.VGSAY input[type=radio]:checked{background-color:#4f5924}.VGSAY .date,.VGSAY .name,.VGSAY em{color:#41498c}.VGSAY abbr,.VGSAY rt,.VGSAY strong,.VGSAY sub,.VGSAY sup{background-color:#4e57a8;color:#544f27}.GSAY,.GSAY textarea{color:#a1c3f5;background-color:#1a1309;border-color:#38609d}.GSAY.baloon{border-color:#38609d}.GSAY .fa-check{color:#55b25c}.GSAY .fa-warning{color:#bd7967}.GSAY .fa-ban{color:#bd5767}.GSAY [data-tooltip],.GSAY [title]{background-color:#4e3a1c}.GSAY [data-tooltip]:after,.GSAY [data-tooltip]:before,.GSAY [title]:after,.GSAY [title]:before,.GSAY b{color:#a1c3f5;background-color:#4e3a1c}.GSAY a:not([name]),body a:not([name]).GSAY{color:#a1c3f5}.GSAY a:not([name]):visited,body a:not([name]).GSAY:visited{background-color:#4a471a}.GSAY a:not([name]):link,body a:not([name]).GSAY:link{background-color:#564137}.GSAY .active{background-color:#4a80d1}.GSAY a:not([name]),.GSAY button,.GSAY input,body a:not([name]).GSAY{background-color:#4e3a1c}.GSAY a:not([name]):focus,.GSAY a:not([name]):hover,.GSAY button:focus,.GSAY button:hover,.GSAY input:focus,.GSAY input:hover,body a:not([name]).GSAY:focus,body a:not([name]).GSAY:hover{background-color:#4170b7}.GSAY a:not([name]).active,.GSAY a:not([name]) .active,.GSAY a:not([name]):active,.GSAY button.active,.GSAY button .active,.GSAY button:active,.GSAY input.active,.GSAY input .active,.GSAY input:active,body a:not([name]).GSAY.active,body a:not([name]).GSAY .active,body a:not([name]).GSAY:active{background-color:#4a80d1}.GSAY input[type=checkbox],.GSAY input[type=radio]{background-color:#564137}.GSAY input[type=checkbox]:checked,.GSAY input[type=radio]:checked{background-color:#4a471a}.GSAY .date,.GSAY .name,.GSAY em{color:#2e5082}.GSAY abbr,.GSAY rt,.GSAY strong,.GSAY sub,.GSAY sup{background-color:#38609d;color:#4e3a1c}.N09,.N09 textarea{color:#a1dcf5;background-color:#1a0e09}.N09,.N09 textarea,.N09.baloon{border-color:#387e9d}.N09 .fa-check{color:#55ba5c}.N09 .fa-warning{color:#bd8167}.N09 .fa-ban{color:#bd5f67}.N09 [data-tooltip],.N09 [title]{background-color:#4e2b1c}.N09 [data-tooltip]:after,.N09 [data-tooltip]:before,.N09 [title]:after,.N09 [title]:before,.N09 b{color:#a1dcf5;background-color:#4e2b1c}.N09 a:not([name]),body a:not([name]).N09{color:#a1dcf5}.N09 a:not([name]):visited,body a:not([name]).N09:visited{background-color:#4a3a1a}.N09 a:not([name]):link,body a:not([name]).N09:link{background-color:#563437}.N09 .active{background-color:#4aa8d1}.N09 a:not([name]),.N09 button,.N09 input,body a:not([name]).N09{background-color:#4e2b1c}.N09 a:not([name]):focus,.N09 a:not([name]):hover,.N09 button:focus,.N09 button:hover,.N09 input:focus,.N09 input:hover,body a:not([name]).N09:focus,body a:not([name]).N09:hover{background-color:#4193b7}.N09 a:not([name]).active,.N09 a:not([name]) .active,.N09 a:not([name]):active,.N09 button.active,.N09 button .active,.N09 button:active,.N09 input.active,.N09 input .active,.N09 input:active,body a:not([name]).N09 .active,body a:not([name]).N09.active,body a:not([name]).N09:active{background-color:#4aa8d1}.N09 input[type=checkbox],.N09 input[type=radio]{background-color:#563437}.N09 input[type=checkbox]:checked,.N09 input[type=radio]:checked{background-color:#4a3a1a}.N09 .date,.N09 .name,.N09 em{color:#2e6982}.N09 abbr,.N09 rt,.N09 strong,.N09 sub,.N09 sup{background-color:#387e9d;color:#4e2b1c}.TSAY,.TSAY textarea{color:#d0c6a1;background-color:#090b12;border-color:#706438}.TSAY.baloon{border-color:#706438}.TSAY .fa-check{color:#64b340}.TSAY .fa-warning{color:#cd7a4b}.TSAY .fa-ban{color:#cd584b}.TSAY [data-tooltip],.TSAY [title]{background-color:#1c2138}.TSAY [data-tooltip]:after,.TSAY [data-tooltip]:before,.TSAY [title]:after,.TSAY [title]:before,.TSAY b{color:#d0c6a1;background-color:#1c2138}.TSAY a:not([name]),body a:not([name]).TSAY{color:#d0c6a1}.TSAY a:not([name]):visited,body a:not([name]).TSAY:visited{background-color:#1e3133}.TSAY a:not([name]):link,body a:not([name]).TSAY:link{background-color:#2a2b4f}.TSAY .active{background-color:#95864a}.TSAY a:not([name]),.TSAY button,.TSAY input,body a:not([name]).TSAY{background-color:#1c2138}.TSAY a:not([name]):focus,.TSAY a:not([name]):hover,.TSAY button:focus,.TSAY button:hover,.TSAY input:focus,.TSAY input:hover,body a:not([name]).TSAY:focus,body a:not([name]).TSAY:hover{background-color:#827541}.TSAY a:not([name]).active,.TSAY a:not([name]) .active,.TSAY a:not([name]):active,.TSAY button.active,.TSAY button .active,.TSAY button:active,.TSAY input.active,.TSAY input .active,.TSAY input:active,body a:not([name]).TSAY.active,body a:not([name]).TSAY .active,body a:not([name]).TSAY:active{background-color:#95864a}.TSAY input[type=checkbox],.TSAY input[type=radio]{background-color:#2a2b4f}.TSAY input[type=checkbox]:checked,.TSAY input[type=radio]:checked{background-color:#1e3133}.TSAY .date,.TSAY .name,.TSAY em{color:#5d542e}.TSAY abbr,.TSAY rt,.TSAY strong,.TSAY sub,.TSAY sup{background-color:#706438;color:#1c2138}.chat .name{border-bottom:1px dashed}.talk .chat{border-width:0 0 1px 3px;margin:0 7px 0 -3px}.post,.talk .chat{border-style:none none solid solid}.post{border-width:0 0 1px 18px}.contentframe{background-color:#301}.contentframe .talk .baloon{left:-9px;border-right-width:1px}body{background-position-x:right;background-position-y:top;background-attachment:fixed;background-repeat:no-repeat;background-image:url(\"http://s3-ap-northeast-1.amazonaws.com/giji-assets/images/bg/moon-red.png\");background-color:#220005}.filmend{background-image:url(\"http://s3-ap-northeast-1.amazonaws.com/giji-assets/images/bg/film-end.png\")}", ""]);

// exports


/***/ }),
/* 231 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(2)(undefined);
// imports


// module
exports.push([module.i, ".contentframe .inframe{background-repeat:repeat-y;background-position:0;background-attachment:local;background-image:url(\"http://s3-ap-northeast-1.amazonaws.com/giji-assets/images/bg/film-L.png\")}.filmline{background-image:url(\"http://s3-ap-northeast-1.amazonaws.com/giji-assets/images/bg/film-border.png\")}.MAKER,.MAKER textarea{color:#dcdcdc;background-color:#151515;border-color:#7e7e7e}.MAKER.baloon{border-color:#7e7e7e}.MAKER .fa-check{color:#68ba53}.MAKER .fa-warning{color:#d1815f}.MAKER .fa-ban{color:#d15f5f}.MAKER [data-tooltip],.MAKER [title]{background-color:#3f3f3f}.MAKER [data-tooltip]:after,.MAKER [data-tooltip]:before,.MAKER [title]:after,.MAKER [title]:before,.MAKER b{color:#dcdcdc;background-color:#3f3f3f}.MAKER a:not([name]),body a:not([name]).MAKER{color:#dcdcdc}.MAKER a:not([name]):visited,body a:not([name]).MAKER:visited{background-color:#3d4b39}.MAKER a:not([name]):link,body a:not([name]).MAKER:link{background-color:#484556}.MAKER .active{background-color:#a8a8a8}.MAKER a:not([name]),.MAKER button,.MAKER input,body a:not([name]).MAKER{background-color:#3f3f3f}.MAKER a:not([name]):focus,.MAKER a:not([name]):hover,.MAKER button:focus,.MAKER button:hover,.MAKER input:focus,.MAKER input:hover,body a:not([name]).MAKER:focus,body a:not([name]).MAKER:hover{background-color:#939393}.MAKER a:not([name]).active,.MAKER a:not([name]) .active,.MAKER a:not([name]):active,.MAKER button.active,.MAKER button .active,.MAKER button:active,.MAKER input.active,.MAKER input .active,.MAKER input:active,body a:not([name]).MAKER.active,body a:not([name]).MAKER .active,body a:not([name]).MAKER:active{background-color:#a8a8a8}.MAKER input[type=checkbox],.MAKER input[type=radio]{background-color:#484556}.MAKER input[type=checkbox]:checked,.MAKER input[type=radio]:checked{background-color:#3d4b39}.MAKER .date,.MAKER .name,.MAKER em{color:#696969}.MAKER abbr,.MAKER rt,.MAKER strong,.MAKER sub,.MAKER sup{background-color:#7e7e7e;color:#3f3f3f}.ADMIN,.ADMIN textarea{color:#ffe972;background-color:#00041c;border-color:#a88d00}.ADMIN.baloon{border-color:#a88d00}.ADMIN .fa-check{color:#74be31}.ADMIN .fa-warning{color:#dc853c}.ADMIN .fa-ban{color:#dc633c}.ADMIN [data-tooltip],.ADMIN [title]{background-color:#000d54}.ADMIN [data-tooltip]:after,.ADMIN [data-tooltip]:before,.ADMIN [title]:after,.ADMIN [title]:before,.ADMIN b{color:#ffe972;background-color:#000d54}.ADMIN a:not([name]),body a:not([name]).ADMIN{color:#ffe972}.ADMIN a:not([name]):visited,body a:not([name]).ADMIN:visited{background-color:#051f4b}.ADMIN a:not([name]):link,body a:not([name]).ADMIN:link{background-color:#111968}.ADMIN .active{background-color:#e0bd00}.ADMIN a:not([name]),.ADMIN button,.ADMIN input,body a:not([name]).ADMIN{background-color:#000d54}.ADMIN a:not([name]):focus,.ADMIN a:not([name]):hover,.ADMIN button:focus,.ADMIN button:hover,.ADMIN input:focus,.ADMIN input:hover,body a:not([name]).ADMIN:focus,body a:not([name]).ADMIN:hover{background-color:#c4a500}.ADMIN a:not([name]).active,.ADMIN a:not([name]) .active,.ADMIN a:not([name]):active,.ADMIN button.active,.ADMIN button .active,.ADMIN button:active,.ADMIN input.active,.ADMIN input .active,.ADMIN input:active,body a:not([name]).ADMIN.active,body a:not([name]).ADMIN .active,body a:not([name]).ADMIN:active{background-color:#e0bd00}.ADMIN input[type=checkbox],.ADMIN input[type=radio]{background-color:#111968}.ADMIN input[type=checkbox]:checked,.ADMIN input[type=radio]:checked{background-color:#051f4b}.ADMIN .date,.ADMIN .name,.ADMIN em{color:#8c7600}.ADMIN abbr,.ADMIN rt,.ADMIN strong,.ADMIN sub,.ADMIN sup{background-color:#a88d00;color:#000d54}.dark,.dark textarea,.links,.links textarea,.TITLE,.TITLE textarea{color:silver;background-color:#000;border-color:#565656}.dark.baloon,.links.baloon,.TITLE.baloon{border-color:#000}.dark .fa-check,.links .fa-check,.TITLE .fa-check{color:#5fb14a}.dark .fa-warning,.links .fa-warning,.TITLE .fa-warning{color:#c87856}.dark .fa-ban,.links .fa-ban,.TITLE .fa-ban{color:#c85656}.dark [data-tooltip],.dark [title],.links [data-tooltip],.links [title],.TITLE [data-tooltip],.TITLE [title]{background-color:#1e1e1e}.dark [data-tooltip]:after,.dark [data-tooltip]:before,.dark [title]:after,.dark [title]:before,.dark b,.links [data-tooltip]:after,.links [data-tooltip]:before,.links [title]:after,.links [title]:before,.links b,.TITLE [data-tooltip]:after,.TITLE [data-tooltip]:before,.TITLE [title]:after,.TITLE [title]:before,.TITLE b{color:silver;background-color:#1e1e1e}.dark a:not([name]),.links a:not([name]),.TITLE a:not([name]),body a:not([name]).dark,body a:not([name]).links,body a:not([name]).TITLE{color:silver}.dark a:not([name]):visited,.links a:not([name]):visited,.TITLE a:not([name]):visited,body a:not([name]).dark:visited,body a:not([name]).links:visited,body a:not([name]).TITLE:visited{background-color:#202e1c}.dark a:not([name]):link,.links a:not([name]):link,.TITLE a:not([name]):link,body a:not([name]).dark:link,body a:not([name]).links:link,body a:not([name]).TITLE:link{background-color:#2b2839}.dark .active,.links .active,.TITLE .active{background-color:#565656}.dark a:not([name]),.dark button,.dark input,.links a:not([name]),.links button,.links input,.TITLE a:not([name]),.TITLE button,.TITLE input,body a:not([name]).dark,body a:not([name]).links,body a:not([name]).TITLE{background-color:#1e1e1e}.dark a:not([name]):focus,.dark a:not([name]):hover,.dark button:focus,.dark button:hover,.dark input:focus,.dark input:hover,.links a:not([name]):focus,.links a:not([name]):hover,.links button:focus,.links button:hover,.links input:focus,.links input:hover,.TITLE a:not([name]):focus,.TITLE a:not([name]):hover,.TITLE button:focus,.TITLE button:hover,.TITLE input:focus,.TITLE input:hover,body a:not([name]).dark:focus,body a:not([name]).dark:hover,body a:not([name]).links:focus,body a:not([name]).links:hover,body a:not([name]).TITLE:focus,body a:not([name]).TITLE:hover{background-color:#414141}.dark a:not([name]).active,.dark a:not([name]) .active,.dark a:not([name]):active,.dark button.active,.dark button .active,.dark button:active,.dark input.active,.dark input .active,.dark input:active,.links a:not([name]).active,.links a:not([name]) .active,.links a:not([name]):active,.links button.active,.links button .active,.links button:active,.links input.active,.links input .active,.links input:active,.TITLE a:not([name]).active,.TITLE a:not([name]) .active,.TITLE a:not([name]):active,.TITLE button.active,.TITLE button .active,.TITLE button:active,.TITLE input.active,.TITLE input .active,.TITLE input:active,body a:not([name]).dark.active,body a:not([name]).dark .active,body a:not([name]).dark:active,body a:not([name]).links.active,body a:not([name]).links .active,body a:not([name]).links:active,body a:not([name]).TITLE.active,body a:not([name]).TITLE .active,body a:not([name]).TITLE:active{background-color:#565656}.dark input[type=checkbox],.dark input[type=radio],.links input[type=checkbox],.links input[type=radio],.TITLE input[type=checkbox],.TITLE input[type=radio]{background-color:#2b2839}.dark input[type=checkbox]:checked,.dark input[type=radio]:checked,.links input[type=checkbox]:checked,.links input[type=radio]:checked,.TITLE input[type=checkbox]:checked,.TITLE input[type=radio]:checked{background-color:#202e1c}.dark .date,.dark .name,.dark em,.links .date,.links .name,.links em,.TITLE .date,.TITLE .name,.TITLE em{color:#565656}.dark abbr,.dark rt,.dark strong,.dark sub,.dark sup,.links abbr,.links rt,.links strong,.links sub,.links sup,.TITLE abbr,.TITLE rt,.TITLE strong,.TITLE sub,.TITLE sup{background-color:#565656;color:#1e1e1e}.btns,.btns textarea,.chrblank,.chrblank textarea,.footer,.footer textarea,.header,.header textarea{color:silver;background-color:#4d4e46;border-color:#898a84}.btns.baloon,.chrblank.baloon,.footer.baloon,.header.baloon{border-color:#4d4e46}.btns .fa-check,.chrblank .fa-check,.footer .fa-check,.header .fa-check{color:#5fb14a}.btns .fa-warning,.chrblank .fa-warning,.footer .fa-warning,.header .fa-warning{color:#c87856}.btns .fa-ban,.chrblank .fa-ban,.footer .fa-ban,.header .fa-ban{color:#c85656}.btns [data-tooltip],.btns [title],.chrblank [data-tooltip],.chrblank [title],.footer [data-tooltip],.footer [title],.header [data-tooltip],.header [title]{background-color:#62635c}.btns [data-tooltip]:after,.btns [data-tooltip]:before,.btns [title]:after,.btns [title]:before,.btns b,.chrblank [data-tooltip]:after,.chrblank [data-tooltip]:before,.chrblank [title]:after,.chrblank [title]:before,.chrblank b,.footer [data-tooltip]:after,.footer [data-tooltip]:before,.footer [title]:after,.footer [title]:before,.footer b,.header [data-tooltip]:after,.header [data-tooltip]:before,.header [title]:after,.header [title]:before,.header b{color:silver;background-color:#62635c}.btns a:not([name]),.chrblank a:not([name]),.footer a:not([name]),.header a:not([name]),body a:not([name]).btns,body a:not([name]).chrblank,body a:not([name]).footer,body a:not([name]).header{color:silver}.btns a:not([name]):visited,.chrblank a:not([name]):visited,.footer a:not([name]):visited,.header a:not([name]):visited,body a:not([name]).btns:visited,body a:not([name]).chrblank:visited,body a:not([name]).footer:visited,body a:not([name]).header:visited{background-color:#5c6b53}.btns a:not([name]):link,.chrblank a:not([name]):link,.footer a:not([name]):link,.header a:not([name]):link,body a:not([name]).btns:link,body a:not([name]).chrblank:link,body a:not([name]).footer:link,body a:not([name]).header:link{background-color:#67656f}.btns .active,.chrblank .active,.footer .active,.header .active{background-color:#80817c}.btns a:not([name]),.btns button,.btns input,.chrblank a:not([name]),.chrblank button,.chrblank input,.footer a:not([name]),.footer button,.footer input,.header a:not([name]),.header button,.header input,body a:not([name]).btns,body a:not([name]).chrblank,body a:not([name]).footer,body a:not([name]).header{background-color:#62635c}.btns a:not([name]):focus,.btns a:not([name]):hover,.btns button:focus,.btns button:hover,.btns input:focus,.btns input:hover,.chrblank a:not([name]):focus,.chrblank a:not([name]):hover,.chrblank button:focus,.chrblank button:hover,.chrblank input:focus,.chrblank input:hover,.footer a:not([name]):focus,.footer a:not([name]):hover,.footer button:focus,.footer button:hover,.footer input:focus,.footer input:hover,.header a:not([name]):focus,.header a:not([name]):hover,.header button:focus,.header button:hover,.header input:focus,.header input:hover,body a:not([name]).btns:focus,body a:not([name]).btns:hover,body a:not([name]).chrblank:focus,body a:not([name]).chrblank:hover,body a:not([name]).footer:focus,body a:not([name]).footer:hover,body a:not([name]).header:focus,body a:not([name]).header:hover{background-color:#74746f}.btns a:not([name]).active,.btns a:not([name]) .active,.btns a:not([name]):active,.btns button.active,.btns button .active,.btns button:active,.btns input.active,.btns input .active,.btns input:active,.chrblank a:not([name]).active,.chrblank a:not([name]) .active,.chrblank a:not([name]):active,.chrblank button.active,.chrblank button .active,.chrblank button:active,.chrblank input.active,.chrblank input .active,.chrblank input:active,.footer a:not([name]).active,.footer a:not([name]) .active,.footer a:not([name]):active,.footer button.active,.footer button .active,.footer button:active,.footer input.active,.footer input .active,.footer input:active,.header a:not([name]).active,.header a:not([name]) .active,.header a:not([name]):active,.header button.active,.header button .active,.header button:active,.header input.active,.header input .active,.header input:active,body a:not([name]).btns.active,body a:not([name]).btns .active,body a:not([name]).btns:active,body a:not([name]).chrblank.active,body a:not([name]).chrblank .active,body a:not([name]).chrblank:active,body a:not([name]).footer.active,body a:not([name]).footer .active,body a:not([name]).footer:active,body a:not([name]).header.active,body a:not([name]).header .active,body a:not([name]).header:active{background-color:#80817c}.btns input[type=checkbox],.btns input[type=radio],.chrblank input[type=checkbox],.chrblank input[type=radio],.footer input[type=checkbox],.footer input[type=radio],.header input[type=checkbox],.header input[type=radio]{background-color:#67656f}.btns input[type=checkbox]:checked,.btns input[type=radio]:checked,.chrblank input[type=checkbox]:checked,.chrblank input[type=radio]:checked,.footer input[type=checkbox]:checked,.footer input[type=radio]:checked,.header input[type=checkbox]:checked,.header input[type=radio]:checked{background-color:#5c6b53}.btns .date,.btns .name,.btns em,.chrblank .date,.chrblank .name,.chrblank em,.footer .date,.footer .name,.footer em,.header .date,.header .name,.header em{color:#898a84}.btns abbr,.btns rt,.btns strong,.btns sub,.btns sup,.chrblank abbr,.chrblank rt,.chrblank strong,.chrblank sub,.chrblank sup,.footer abbr,.footer rt,.footer strong,.footer sub,.footer sup,.header abbr,.header rt,.header strong,.header sub,.header sup{background-color:#898a84;color:#62635c}.public,.public textarea{color:silver;background-color:#332509;border-color:#786f5c}.public.baloon{border-color:#332509}.public .fa-check{color:#5fb14a}.public .fa-warning{color:#c87856}.public .fa-ban{color:#c85656}.public [data-tooltip],.public [title]{background-color:#4b3f26}.public [data-tooltip]:after,.public [data-tooltip]:before,.public [title]:after,.public [title]:before,.public b{color:silver;background-color:#4b3f26}.public a:not([name]),body a:not([name]).public{color:silver}.public a:not([name]):visited,body a:not([name]).public:visited{background-color:#474b23}.public a:not([name]):link,body a:not([name]).public:link{background-color:#534540}.public .active{background-color:#726a5b}.public a:not([name]),.public button,.public input,body a:not([name]).public{background-color:#4b3f26}.public a:not([name]):focus,.public a:not([name]):hover,.public button:focus,.public button:hover,.public input:focus,.public input:hover,body a:not([name]).public:focus,body a:not([name]).public:hover{background-color:#625947}.public a:not([name]).active,.public a:not([name]) .active,.public a:not([name]):active,.public button.active,.public button .active,.public button:active,.public input.active,.public input .active,.public input:active,body a:not([name]).public.active,body a:not([name]).public .active,body a:not([name]).public:active{background-color:#726a5b}.public input[type=checkbox],.public input[type=radio]{background-color:#534540}.public input[type=checkbox]:checked,.public input[type=radio]:checked{background-color:#474b23}.public .date,.public .name,.public em{color:#786f5c}.public abbr,.public rt,.public strong,.public sub,.public sup{background-color:#786f5c;color:#4b3f26}.private,.private textarea{color:silver;background-color:#090a33;border-color:#5c5d78}.private.baloon{border-color:#090a33}.private .fa-check{color:#5fb14a}.private .fa-warning{color:#c87856}.private .fa-ban{color:#c85656}.private [data-tooltip],.private [title]{background-color:#26274b}.private [data-tooltip]:after,.private [data-tooltip]:before,.private [title]:after,.private [title]:before,.private b{color:silver;background-color:#26274b}.private a:not([name]),body a:not([name]).private{color:silver}.private a:not([name]):visited,body a:not([name]).private:visited{background-color:#273644}.private a:not([name]):link,body a:not([name]).private:link{background-color:#323060}.private .active{background-color:#5b5b72}.private a:not([name]),.private button,.private input,body a:not([name]).private{background-color:#26274b}.private a:not([name]):focus,.private a:not([name]):hover,.private button:focus,.private button:hover,.private input:focus,.private input:hover,body a:not([name]).private:focus,body a:not([name]).private:hover{background-color:#474762}.private a:not([name]).active,.private a:not([name]) .active,.private a:not([name]):active,.private button.active,.private button .active,.private button:active,.private input.active,.private input .active,.private input:active,body a:not([name]).private.active,body a:not([name]).private .active,body a:not([name]).private:active{background-color:#5b5b72}.private input[type=checkbox],.private input[type=radio]{background-color:#323060}.private input[type=checkbox]:checked,.private input[type=radio]:checked{background-color:#273644}.private .date,.private .name,.private em{color:#5c5d78}.private abbr,.private rt,.private strong,.private sub,.private sup{background-color:#5c5d78;color:#26274b}.HATER,.HATER textarea,.LONEWOLF,.LONEWOLF textarea{color:#0b4343;background-color:#7ac5c5;border-color:#4abbb5}.HATER.baloon,.LONEWOLF.baloon{border-color:#7ac5c5}.HATER .fa-check,.LONEWOLF .fa-check{color:#238821}.HATER .fa-warning,.LONEWOLF .fa-warning{color:#8c4f2c}.HATER .fa-ban,.LONEWOLF .fa-ban{color:#8c2c2c}.HATER [data-tooltip],.HATER [title],.LONEWOLF [data-tooltip],.LONEWOLF [title]{background-color:#85e2e2}.HATER [data-tooltip]:after,.HATER [data-tooltip]:before,.HATER [title]:after,.HATER [title]:before,.HATER b,.LONEWOLF [data-tooltip]:after,.LONEWOLF [data-tooltip]:before,.LONEWOLF [title]:after,.LONEWOLF [title]:before,.LONEWOLF b{color:#0b4343;background-color:#85e2e2}.HATER a:not([name]),.LONEWOLF a:not([name]),body a:not([name]).HATER,body a:not([name]).LONEWOLF{color:#0b4343}.HATER a:not([name]):visited,.LONEWOLF a:not([name]):visited,body a:not([name]).HATER:visited,body a:not([name]).LONEWOLF:visited{background-color:#7adbc8}.HATER a:not([name]):link,.LONEWOLF a:not([name]):link,body a:not([name]).HATER:link,body a:not([name]).LONEWOLF:link{background-color:#86d5e5}.HATER .active,.LONEWOLF .active{background-color:#227f7f}.HATER a:not([name]),.HATER button,.HATER input,.LONEWOLF a:not([name]),.LONEWOLF button,.LONEWOLF input,body a:not([name]).HATER,body a:not([name]).LONEWOLF{background-color:#85e2e2}.HATER a:not([name]):focus,.HATER a:not([name]):hover,.HATER button:focus,.HATER button:hover,.HATER input:focus,.HATER input:hover,.LONEWOLF a:not([name]):focus,.LONEWOLF a:not([name]):hover,.LONEWOLF button:focus,.LONEWOLF button:hover,.LONEWOLF input:focus,.LONEWOLF input:hover,body a:not([name]).HATER:focus,body a:not([name]).HATER:hover,body a:not([name]).LONEWOLF:focus,body a:not([name]).LONEWOLF:hover{background-color:#229292}.HATER a:not([name]).active,.HATER a:not([name]) .active,.HATER a:not([name]):active,.HATER button.active,.HATER button .active,.HATER button:active,.HATER input.active,.HATER input .active,.HATER input:active,.LONEWOLF a:not([name]).active,.LONEWOLF a:not([name]) .active,.LONEWOLF a:not([name]):active,.LONEWOLF button.active,.LONEWOLF button .active,.LONEWOLF button:active,.LONEWOLF input.active,.LONEWOLF input .active,.LONEWOLF input:active,body a:not([name]).HATER.active,body a:not([name]).HATER .active,body a:not([name]).HATER:active,body a:not([name]).LONEWOLF.active,body a:not([name]).LONEWOLF .active,body a:not([name]).LONEWOLF:active{background-color:#227f7f}.HATER input[type=checkbox],.HATER input[type=radio],.LONEWOLF input[type=checkbox],.LONEWOLF input[type=radio]{background-color:#86d5e5}.HATER input[type=checkbox]:checked,.HATER input[type=radio]:checked,.LONEWOLF input[type=checkbox]:checked,.LONEWOLF input[type=radio]:checked{background-color:#7adbc8}.HATER .date,.HATER .name,.HATER em,.LONEWOLF .date,.LONEWOLF .name,.LONEWOLF em{color:#0b4343}.HATER abbr,.HATER rt,.HATER strong,.HATER sub,.HATER sup,.LONEWOLF abbr,.LONEWOLF rt,.LONEWOLF strong,.LONEWOLF sub,.LONEWOLF sup{background-color:#4abbb5;color:#85e2e2}.GURU,.GURU textarea,.PIXI,.PIXI textarea{color:#053819;background-color:#73b68d;border-color:#3fa462}.GURU.baloon,.PIXI.baloon{border-color:#73b68d}.GURU .fa-check,.PIXI .fa-check{color:#218413}.GURU .fa-warning,.PIXI .fa-warning{color:#8a4b1f}.GURU .fa-ban,.PIXI .fa-ban{color:#8a291f}.GURU [data-tooltip],.GURU [title],.PIXI [data-tooltip],.PIXI [title]{background-color:#7cd09d}.GURU [data-tooltip]:after,.GURU [data-tooltip]:before,.GURU [title]:after,.GURU [title]:before,.GURU b,.PIXI [data-tooltip]:after,.PIXI [data-tooltip]:before,.PIXI [title]:after,.PIXI [title]:before,.PIXI b{color:#053819;background-color:#7cd09d}.GURU a:not([name]),.PIXI a:not([name]),body a:not([name]).GURU,body a:not([name]).PIXI{color:#053819}.GURU a:not([name]):visited,.PIXI a:not([name]):visited,body a:not([name]).GURU:visited,body a:not([name]).PIXI:visited{background-color:#72cb8c}.GURU a:not([name]):link,.PIXI a:not([name]):link,body a:not([name]).GURU:link,body a:not([name]).PIXI:link{background-color:#7ec5a8}.GURU .active,.PIXI .active{background-color:#186c3a}.GURU a:not([name]),.GURU button,.GURU input,.PIXI a:not([name]),.PIXI button,.PIXI input,body a:not([name]).GURU,body a:not([name]).PIXI{background-color:#7cd09d}.GURU a:not([name]):focus,.GURU a:not([name]):hover,.GURU button:focus,.GURU button:hover,.GURU input:focus,.GURU input:hover,.PIXI a:not([name]):focus,.PIXI a:not([name]):hover,.PIXI button:focus,.PIXI button:hover,.PIXI input:focus,.PIXI input:hover,body a:not([name]).GURU:focus,body a:not([name]).GURU:hover,body a:not([name]).PIXI:focus,body a:not([name]).PIXI:hover{background-color:#167b3f}.GURU a:not([name]).active,.GURU a:not([name]) .active,.GURU a:not([name]):active,.GURU button.active,.GURU button .active,.GURU button:active,.GURU input.active,.GURU input .active,.GURU input:active,.PIXI a:not([name]).active,.PIXI a:not([name]) .active,.PIXI a:not([name]):active,.PIXI button.active,.PIXI button .active,.PIXI button:active,.PIXI input.active,.PIXI input .active,.PIXI input:active,body a:not([name]).GURU.active,body a:not([name]).GURU .active,body a:not([name]).GURU:active,body a:not([name]).PIXI.active,body a:not([name]).PIXI .active,body a:not([name]).PIXI:active{background-color:#186c3a}.GURU input[type=checkbox],.GURU input[type=radio],.PIXI input[type=checkbox],.PIXI input[type=radio]{background-color:#7ec5a8}.GURU input[type=checkbox]:checked,.GURU input[type=radio]:checked,.PIXI input[type=checkbox]:checked,.PIXI input[type=radio]:checked{background-color:#72cb8c}.GURU .date,.GURU .name,.GURU em,.PIXI .date,.PIXI .name,.PIXI em{color:#053819}.GURU abbr,.GURU rt,.GURU strong,.GURU sub,.GURU sup,.PIXI abbr,.PIXI rt,.PIXI strong,.PIXI sub,.PIXI sup{background-color:#3fa462;color:#7cd09d}.EVIL,.EVIL textarea{color:#0f3805;background-color:#80b673;border-color:#53a43a}.EVIL.baloon{border-color:#80b673}.EVIL .fa-check{color:#25840d}.EVIL .fa-warning{color:#8d4b18}.EVIL .fa-ban{color:#8d2918}.EVIL [data-tooltip],.EVIL [title]{background-color:#8dd07c}.EVIL [data-tooltip]:after,.EVIL [data-tooltip]:before,.EVIL [title]:after,.EVIL [title]:before,.EVIL b{color:#0f3805;background-color:#8dd07c}.EVIL a:not([name]),body a:not([name]).EVIL{color:#0f3805}.EVIL a:not([name]):visited,body a:not([name]).EVIL:visited{background-color:#81cb6f}.EVIL a:not([name]):link,body a:not([name]).EVIL:link{background-color:#8dc58b}.EVIL .active{background-color:#296c18}.EVIL a:not([name]),.EVIL button,.EVIL input,body a:not([name]).EVIL{background-color:#8dd07c}.EVIL a:not([name]):focus,.EVIL a:not([name]):hover,.EVIL button:focus,.EVIL button:hover,.EVIL input:focus,.EVIL input:hover,body a:not([name]).EVIL:focus,body a:not([name]).EVIL:hover{background-color:#2b7b16}.EVIL a:not([name]).active,.EVIL a:not([name]) .active,.EVIL a:not([name]):active,.EVIL button.active,.EVIL button .active,.EVIL button:active,.EVIL input.active,.EVIL input .active,.EVIL input:active,body a:not([name]).EVIL.active,body a:not([name]).EVIL .active,body a:not([name]).EVIL:active{background-color:#296c18}.EVIL input[type=checkbox],.EVIL input[type=radio]{background-color:#8dc58b}.EVIL input[type=checkbox]:checked,.EVIL input[type=radio]:checked{background-color:#81cb6f}.EVIL .date,.EVIL .name,.EVIL em{color:#0f3805}.EVIL abbr,.EVIL rt,.EVIL strong,.EVIL sub,.EVIL sup{background-color:#53a43a;color:#8dd07c}.DISH,.DISH textarea,.HUMAN,.HUMAN textarea,.juror,.juror textarea,.live,.live textarea{color:#43360b;background-color:#c5b37a;border-color:#baa045}.DISH.baloon,.HUMAN.baloon,.juror.baloon,.live.baloon{border-color:#c5b37a}.DISH .fa-check,.HUMAN .fa-check,.juror .fa-check,.live .fa-check{color:#36830f}.DISH .fa-warning,.HUMAN .fa-warning,.juror .fa-warning,.live .fa-warning{color:#9e4a1a}.DISH .fa-ban,.HUMAN .fa-ban,.juror .fa-ban,.live .fa-ban{color:#9e281a}.DISH [data-tooltip],.DISH [title],.HUMAN [data-tooltip],.HUMAN [title],.juror [data-tooltip],.juror [title],.live [data-tooltip],.live [title]{background-color:#e2cc85}.DISH [data-tooltip]:after,.DISH [data-tooltip]:before,.DISH [title]:after,.DISH [title]:before,.DISH b,.HUMAN [data-tooltip]:after,.HUMAN [data-tooltip]:before,.HUMAN [title]:after,.HUMAN [title]:before,.HUMAN b,.juror [data-tooltip]:after,.juror [data-tooltip]:before,.juror [title]:after,.juror [title]:before,.juror b,.live [data-tooltip]:after,.live [data-tooltip]:before,.live [title]:after,.live [title]:before,.live b{color:#43360b;background-color:#e2cc85}.DISH a:not([name]),.HUMAN a:not([name]),.juror a:not([name]),.live a:not([name]),body a:not([name]).DISH,body a:not([name]).HUMAN,body a:not([name]).juror,body a:not([name]).live{color:#43360b}.DISH a:not([name]):visited,.HUMAN a:not([name]):visited,.juror a:not([name]):visited,.live a:not([name]):visited,body a:not([name]).DISH:visited,body a:not([name]).HUMAN:visited,body a:not([name]).juror:visited,body a:not([name]).live:visited{background-color:#ccc777}.DISH a:not([name]):link,.HUMAN a:not([name]):link,.juror a:not([name]):link,.live a:not([name]):link,body a:not([name]).DISH:link,body a:not([name]).HUMAN:link,body a:not([name]).juror:link,body a:not([name]).live:link{background-color:#d8c193}.DISH .active,.HUMAN .active,.juror .active,.live .active{background-color:#7f6922}.DISH a:not([name]),.DISH button,.DISH input,.HUMAN a:not([name]),.HUMAN button,.HUMAN input,.juror a:not([name]),.juror button,.juror input,.live a:not([name]),.live button,.live input,body a:not([name]).DISH,body a:not([name]).HUMAN,body a:not([name]).juror,body a:not([name]).live{background-color:#e2cc85}.DISH a:not([name]):focus,.DISH a:not([name]):hover,.DISH button:focus,.DISH button:hover,.DISH input:focus,.DISH input:hover,.HUMAN a:not([name]):focus,.HUMAN a:not([name]):hover,.HUMAN button:focus,.HUMAN button:hover,.HUMAN input:focus,.HUMAN input:hover,.juror a:not([name]):focus,.juror a:not([name]):hover,.juror button:focus,.juror button:hover,.juror input:focus,.juror input:hover,.live a:not([name]):focus,.live a:not([name]):hover,.live button:focus,.live button:hover,.live input:focus,.live input:hover,body a:not([name]).DISH:focus,body a:not([name]).DISH:hover,body a:not([name]).HUMAN:focus,body a:not([name]).HUMAN:hover,body a:not([name]).juror:focus,body a:not([name]).juror:hover,body a:not([name]).live:focus,body a:not([name]).live:hover{background-color:#927722}.DISH a:not([name]).active,.DISH a:not([name]) .active,.DISH a:not([name]):active,.DISH button.active,.DISH button .active,.DISH button:active,.DISH input.active,.DISH input .active,.DISH input:active,.HUMAN a:not([name]).active,.HUMAN a:not([name]) .active,.HUMAN a:not([name]):active,.HUMAN button.active,.HUMAN button .active,.HUMAN button:active,.HUMAN input.active,.HUMAN input .active,.HUMAN input:active,.juror a:not([name]).active,.juror a:not([name]) .active,.juror a:not([name]):active,.juror button.active,.juror button .active,.juror button:active,.juror input.active,.juror input .active,.juror input:active,.live a:not([name]).active,.live a:not([name]) .active,.live a:not([name]):active,.live button.active,.live button .active,.live button:active,.live input.active,.live input .active,.live input:active,body a:not([name]).DISH.active,body a:not([name]).DISH .active,body a:not([name]).DISH:active,body a:not([name]).HUMAN.active,body a:not([name]).HUMAN .active,body a:not([name]).HUMAN:active,body a:not([name]).juror.active,body a:not([name]).juror .active,body a:not([name]).juror:active,body a:not([name]).live.active,body a:not([name]).live .active,body a:not([name]).live:active{background-color:#7f6922}.DISH input[type=checkbox],.DISH input[type=radio],.HUMAN input[type=checkbox],.HUMAN input[type=radio],.juror input[type=checkbox],.juror input[type=radio],.live input[type=checkbox],.live input[type=radio]{background-color:#d8c193}.DISH input[type=checkbox]:checked,.DISH input[type=radio]:checked,.HUMAN input[type=checkbox]:checked,.HUMAN input[type=radio]:checked,.juror input[type=checkbox]:checked,.juror input[type=radio]:checked,.live input[type=checkbox]:checked,.live input[type=radio]:checked{background-color:#ccc777}.DISH .date,.DISH .name,.DISH em,.HUMAN .date,.HUMAN .name,.HUMAN em,.juror .date,.juror .name,.juror em,.live .date,.live .name,.live em{color:#43360b}.DISH abbr,.DISH rt,.DISH strong,.DISH sub,.DISH sup,.HUMAN abbr,.HUMAN rt,.HUMAN strong,.HUMAN sub,.HUMAN sup,.juror abbr,.juror rt,.juror strong,.juror sub,.juror sup,.live abbr,.live rt,.live strong,.live sub,.live sup{background-color:#baa045;color:#e2cc85}.cursed,.cursed textarea,.droop,.droop textarea,.feared,.feared textarea,.suicide,.suicide textarea,.victim,.victim textarea,.WOLF,.WOLF textarea{color:#430b0b;background-color:#c57a7a;border-color:#ba4a45}.cursed.baloon,.droop.baloon,.feared.baloon,.suicide.baloon,.victim.baloon,.WOLF.baloon{border-color:#c57a7a}.cursed .fa-check,.droop .fa-check,.feared .fa-check,.suicide .fa-check,.victim .fa-check,.WOLF .fa-check{color:#36750f}.cursed .fa-warning,.droop .fa-warning,.feared .fa-warning,.suicide .fa-warning,.victim .fa-warning,.WOLF .fa-warning{color:#9e3c1a}.cursed .fa-ban,.droop .fa-ban,.feared .fa-ban,.suicide .fa-ban,.victim .fa-ban,.WOLF .fa-ban{color:#9e1a1a}.cursed [data-tooltip],.cursed [title],.droop [data-tooltip],.droop [title],.feared [data-tooltip],.feared [title],.suicide [data-tooltip],.suicide [title],.victim [data-tooltip],.victim [title],.WOLF [data-tooltip],.WOLF [title]{background-color:#e28585}.cursed [data-tooltip]:after,.cursed [data-tooltip]:before,.cursed [title]:after,.cursed [title]:before,.cursed b,.droop [data-tooltip]:after,.droop [data-tooltip]:before,.droop [title]:after,.droop [title]:before,.droop b,.feared [data-tooltip]:after,.feared [data-tooltip]:before,.feared [title]:after,.feared [title]:before,.feared b,.suicide [data-tooltip]:after,.suicide [data-tooltip]:before,.suicide [title]:after,.suicide [title]:before,.suicide b,.victim [data-tooltip]:after,.victim [data-tooltip]:before,.victim [title]:after,.victim [title]:before,.victim b,.WOLF [data-tooltip]:after,.WOLF [data-tooltip]:before,.WOLF [title]:after,.WOLF [title]:before,.WOLF b{color:#430b0b;background-color:#e28585}.cursed a:not([name]),.droop a:not([name]),.feared a:not([name]),.suicide a:not([name]),.victim a:not([name]),.WOLF a:not([name]),body a:not([name]).cursed,body a:not([name]).droop,body a:not([name]).feared,body a:not([name]).suicide,body a:not([name]).victim,body a:not([name]).WOLF{color:#430b0b}.cursed a:not([name]):visited,.droop a:not([name]):visited,.feared a:not([name]):visited,.suicide a:not([name]):visited,.victim a:not([name]):visited,.WOLF a:not([name]):visited,body a:not([name]).cursed:visited,body a:not([name]).droop:visited,body a:not([name]).feared:visited,body a:not([name]).suicide:visited,body a:not([name]).victim:visited,body a:not([name]).WOLF:visited{background-color:#cc8977}.cursed a:not([name]):link,.droop a:not([name]):link,.feared a:not([name]):link,.suicide a:not([name]):link,.victim a:not([name]):link,.WOLF a:not([name]):link,body a:not([name]).cursed:link,body a:not([name]).droop:link,body a:not([name]).feared:link,body a:not([name]).suicide:link,body a:not([name]).victim:link,body a:not([name]).WOLF:link{background-color:#d88393}.cursed .active,.droop .active,.feared .active,.suicide .active,.victim .active,.WOLF .active{background-color:#7f2222}.cursed a:not([name]),.cursed button,.cursed input,.droop a:not([name]),.droop button,.droop input,.feared a:not([name]),.feared button,.feared input,.suicide a:not([name]),.suicide button,.suicide input,.victim a:not([name]),.victim button,.victim input,.WOLF a:not([name]),.WOLF button,.WOLF input,body a:not([name]).cursed,body a:not([name]).droop,body a:not([name]).feared,body a:not([name]).suicide,body a:not([name]).victim,body a:not([name]).WOLF{background-color:#e28585}.cursed a:not([name]):focus,.cursed a:not([name]):hover,.cursed button:focus,.cursed button:hover,.cursed input:focus,.cursed input:hover,.droop a:not([name]):focus,.droop a:not([name]):hover,.droop button:focus,.droop button:hover,.droop input:focus,.droop input:hover,.feared a:not([name]):focus,.feared a:not([name]):hover,.feared button:focus,.feared button:hover,.feared input:focus,.feared input:hover,.suicide a:not([name]):focus,.suicide a:not([name]):hover,.suicide button:focus,.suicide button:hover,.suicide input:focus,.suicide input:hover,.victim a:not([name]):focus,.victim a:not([name]):hover,.victim button:focus,.victim button:hover,.victim input:focus,.victim input:hover,.WOLF a:not([name]):focus,.WOLF a:not([name]):hover,.WOLF button:focus,.WOLF button:hover,.WOLF input:focus,.WOLF input:hover,body a:not([name]).cursed:focus,body a:not([name]).cursed:hover,body a:not([name]).droop:focus,body a:not([name]).droop:hover,body a:not([name]).feared:focus,body a:not([name]).feared:hover,body a:not([name]).suicide:focus,body a:not([name]).suicide:hover,body a:not([name]).victim:focus,body a:not([name]).victim:hover,body a:not([name]).WOLF:focus,body a:not([name]).WOLF:hover{background-color:#922222}.cursed a:not([name]).active,.cursed a:not([name]) .active,.cursed a:not([name]):active,.cursed button.active,.cursed button .active,.cursed button:active,.cursed input.active,.cursed input .active,.cursed input:active,.droop a:not([name]).active,.droop a:not([name]) .active,.droop a:not([name]):active,.droop button.active,.droop button .active,.droop button:active,.droop input.active,.droop input .active,.droop input:active,.feared a:not([name]).active,.feared a:not([name]) .active,.feared a:not([name]):active,.feared button.active,.feared button .active,.feared button:active,.feared input.active,.feared input .active,.feared input:active,.suicide a:not([name]).active,.suicide a:not([name]) .active,.suicide a:not([name]):active,.suicide button.active,.suicide button .active,.suicide button:active,.suicide input.active,.suicide input .active,.suicide input:active,.victim a:not([name]).active,.victim a:not([name]) .active,.victim a:not([name]):active,.victim button.active,.victim button .active,.victim button:active,.victim input.active,.victim input .active,.victim input:active,.WOLF a:not([name]).active,.WOLF a:not([name]) .active,.WOLF a:not([name]):active,.WOLF button.active,.WOLF button .active,.WOLF button:active,.WOLF input.active,.WOLF input .active,.WOLF input:active,body a:not([name]).cursed.active,body a:not([name]).cursed .active,body a:not([name]).cursed:active,body a:not([name]).droop.active,body a:not([name]).droop .active,body a:not([name]).droop:active,body a:not([name]).feared.active,body a:not([name]).feared .active,body a:not([name]).feared:active,body a:not([name]).suicide.active,body a:not([name]).suicide .active,body a:not([name]).suicide:active,body a:not([name]).victim.active,body a:not([name]).victim .active,body a:not([name]).victim:active,body a:not([name]).WOLF.active,body a:not([name]).WOLF .active,body a:not([name]).WOLF:active{background-color:#7f2222}.cursed input[type=checkbox],.cursed input[type=radio],.droop input[type=checkbox],.droop input[type=radio],.feared input[type=checkbox],.feared input[type=radio],.suicide input[type=checkbox],.suicide input[type=radio],.victim input[type=checkbox],.victim input[type=radio],.WOLF input[type=checkbox],.WOLF input[type=radio]{background-color:#d88393}.cursed input[type=checkbox]:checked,.cursed input[type=radio]:checked,.droop input[type=checkbox]:checked,.droop input[type=radio]:checked,.feared input[type=checkbox]:checked,.feared input[type=radio]:checked,.suicide input[type=checkbox]:checked,.suicide input[type=radio]:checked,.victim input[type=checkbox]:checked,.victim input[type=radio]:checked,.WOLF input[type=checkbox]:checked,.WOLF input[type=radio]:checked{background-color:#cc8977}.cursed .date,.cursed .name,.cursed em,.droop .date,.droop .name,.droop em,.feared .date,.feared .name,.feared em,.suicide .date,.suicide .name,.suicide em,.victim .date,.victim .name,.victim em,.WOLF .date,.WOLF .name,.WOLF em{color:#430b0b}.cursed abbr,.cursed rt,.cursed strong,.cursed sub,.cursed sup,.droop abbr,.droop rt,.droop strong,.droop sub,.droop sup,.feared abbr,.feared rt,.feared strong,.feared sub,.feared sup,.suicide abbr,.suicide rt,.suicide strong,.suicide sub,.suicide sup,.victim abbr,.victim rt,.victim strong,.victim sub,.victim sup,.WOLF abbr,.WOLF rt,.WOLF strong,.WOLF sub,.WOLF sup{background-color:#ba4a45;color:#e28585}.LOVER,.LOVER textarea{color:#441c4e;background-color:#c690d4;border-color:#bc6ccc}.LOVER.baloon{border-color:#c690d4}.LOVER .fa-check{color:#367b25}.LOVER .fa-warning{color:#9f4230}.LOVER .fa-ban{color:#9f2030}.LOVER [data-tooltip],.LOVER [title]{background-color:#e4a1f5}.LOVER [data-tooltip]:after,.LOVER [data-tooltip]:before,.LOVER [title]:after,.LOVER [title]:before,.LOVER b{color:#441c4e;background-color:#e4a1f5}.LOVER a:not([name]),body a:not([name]).LOVER{color:#441c4e}.LOVER a:not([name]):visited,body a:not([name]).LOVER:visited{background-color:#cea2d9}.LOVER a:not([name]):link,body a:not([name]).LOVER:link{background-color:#da9bf6}.LOVER .active{background-color:#813e92}.LOVER a:not([name]),.LOVER button,.LOVER input,body a:not([name]).LOVER{background-color:#e4a1f5}.LOVER a:not([name]):focus,.LOVER a:not([name]):hover,.LOVER button:focus,.LOVER button:hover,.LOVER input:focus,.LOVER input:hover,body a:not([name]).LOVER:focus,body a:not([name]).LOVER:hover{background-color:#9443a8}.LOVER a:not([name]).active,.LOVER a:not([name]) .active,.LOVER a:not([name]):active,.LOVER button.active,.LOVER button .active,.LOVER button:active,.LOVER input.active,.LOVER input .active,.LOVER input:active,body a:not([name]).LOVER.active,body a:not([name]).LOVER .active,body a:not([name]).LOVER:active{background-color:#813e92}.LOVER input[type=checkbox],.LOVER input[type=radio]{background-color:#da9bf6}.LOVER input[type=checkbox]:checked,.LOVER input[type=radio]:checked{background-color:#cea2d9}.LOVER .date,.LOVER .name,.LOVER em{color:#441c4e}.LOVER abbr,.LOVER rt,.LOVER strong,.LOVER sub,.LOVER sup{background-color:#bc6ccc;color:#e4a1f5}.alive,.alive textarea,.grave,.grave textarea,.mob,.MOB,.MOB textarea,.mob textarea,.NONE,.NONE textarea,.visiter,.visiter textarea{color:#432c0b;background-color:#c5a77a;border-color:#ba8e45}.alive.baloon,.grave.baloon,.MOB.baloon,.mob.baloon,.NONE.baloon,.visiter.baloon{border-color:#c5a77a}.alive .fa-check,.grave .fa-check,.MOB .fa-check,.mob .fa-check,.NONE .fa-check,.visiter .fa-check{color:#36800f}.alive .fa-warning,.grave .fa-warning,.MOB .fa-warning,.mob .fa-warning,.NONE .fa-warning,.visiter .fa-warning{color:#9e471a}.alive .fa-ban,.grave .fa-ban,.MOB .fa-ban,.mob .fa-ban,.NONE .fa-ban,.visiter .fa-ban{color:#9e251a}.alive [data-tooltip],.alive [title],.grave [data-tooltip],.grave [title],.MOB [data-tooltip],.mob [data-tooltip],.mob [title],.MOB [title],.NONE [data-tooltip],.NONE [title],.visiter [data-tooltip],.visiter [title]{background-color:#e2bd85}.alive [data-tooltip]:after,.alive [data-tooltip]:before,.alive [title]:after,.alive [title]:before,.alive b,.grave [data-tooltip]:after,.grave [data-tooltip]:before,.grave [title]:after,.grave [title]:before,.grave b,.MOB [data-tooltip]:after,.mob [data-tooltip]:after,.MOB [data-tooltip]:before,.mob [data-tooltip]:before,.MOB [title]:after,.mob [title]:after,.mob [title]:before,.MOB [title]:before,.mob b,.MOB b,.NONE [data-tooltip]:after,.NONE [data-tooltip]:before,.NONE [title]:after,.NONE [title]:before,.NONE b,.visiter [data-tooltip]:after,.visiter [data-tooltip]:before,.visiter [title]:after,.visiter [title]:before,.visiter b{color:#432c0b;background-color:#e2bd85}.alive a:not([name]),.grave a:not([name]),.mob a:not([name]),.MOB a:not([name]),.NONE a:not([name]),.visiter a:not([name]),body a:not([name]).alive,body a:not([name]).grave,body a:not([name]).MOB,body a:not([name]).mob,body a:not([name]).NONE,body a:not([name]).visiter{color:#432c0b}.alive a:not([name]):visited,.grave a:not([name]):visited,.mob a:not([name]):visited,.MOB a:not([name]):visited,.NONE a:not([name]):visited,.visiter a:not([name]):visited,body a:not([name]).alive:visited,body a:not([name]).grave:visited,body a:not([name]).MOB:visited,body a:not([name]).mob:visited,body a:not([name]).NONE:visited,body a:not([name]).visiter:visited{background-color:#ccba77}.alive a:not([name]):link,.grave a:not([name]):link,.mob a:not([name]):link,.MOB a:not([name]):link,.NONE a:not([name]):link,.visiter a:not([name]):link,body a:not([name]).alive:link,body a:not([name]).grave:link,body a:not([name]).MOB:link,body a:not([name]).mob:link,body a:not([name]).NONE:link,body a:not([name]).visiter:link{background-color:#d8b493}.alive .active,.grave .active,.MOB .active,.mob .active,.NONE .active,.visiter .active{background-color:#7f5a22}.alive a:not([name]),.alive button,.alive input,.grave a:not([name]),.grave button,.grave input,.MOB a:not([name]),.mob a:not([name]),.MOB button,.mob button,.mob input,.MOB input,.NONE a:not([name]),.NONE button,.NONE input,.visiter a:not([name]),.visiter button,.visiter input,body a:not([name]).alive,body a:not([name]).grave,body a:not([name]).mob,body a:not([name]).MOB,body a:not([name]).NONE,body a:not([name]).visiter{background-color:#e2bd85}.alive a:not([name]):focus,.alive a:not([name]):hover,.alive button:focus,.alive button:hover,.alive input:focus,.alive input:hover,.grave a:not([name]):focus,.grave a:not([name]):hover,.grave button:focus,.grave button:hover,.grave input:focus,.grave input:hover,.mob a:not([name]):focus,.MOB a:not([name]):focus,.mob a:not([name]):hover,.MOB a:not([name]):hover,.mob button:focus,.MOB button:focus,.mob button:hover,.MOB button:hover,.MOB input:focus,.mob input:focus,.mob input:hover,.MOB input:hover,.NONE a:not([name]):focus,.NONE a:not([name]):hover,.NONE button:focus,.NONE button:hover,.NONE input:focus,.NONE input:hover,.visiter a:not([name]):focus,.visiter a:not([name]):hover,.visiter button:focus,.visiter button:hover,.visiter input:focus,.visiter input:hover,body a:not([name]).alive:focus,body a:not([name]).alive:hover,body a:not([name]).grave:focus,body a:not([name]).grave:hover,body a:not([name]).mob:focus,body a:not([name]).MOB:focus,body a:not([name]).MOB:hover,body a:not([name]).mob:hover,body a:not([name]).NONE:focus,body a:not([name]).NONE:hover,body a:not([name]).visiter:focus,body a:not([name]).visiter:hover{background-color:#926522}.alive a:not([name]).active,.alive a:not([name]) .active,.alive a:not([name]):active,.alive button.active,.alive button .active,.alive button:active,.alive input.active,.alive input .active,.alive input:active,.grave a:not([name]).active,.grave a:not([name]) .active,.grave a:not([name]):active,.grave button.active,.grave button .active,.grave button:active,.grave input.active,.grave input .active,.grave input:active,.MOB a:not([name]).active,.mob a:not([name]).active,.MOB a:not([name]) .active,.mob a:not([name]) .active,.mob a:not([name]):active,.MOB a:not([name]):active,.mob button.active,.MOB button.active,.mob button .active,.MOB button .active,.MOB button:active,.mob button:active,.mob input.active,.MOB input.active,.mob input .active,.MOB input .active,.mob input:active,.MOB input:active,.NONE a:not([name]).active,.NONE a:not([name]) .active,.NONE a:not([name]):active,.NONE button.active,.NONE button .active,.NONE button:active,.NONE input.active,.NONE input .active,.NONE input:active,.visiter a:not([name]).active,.visiter a:not([name]) .active,.visiter a:not([name]):active,.visiter button.active,.visiter button .active,.visiter button:active,.visiter input.active,.visiter input .active,.visiter input:active,body a:not([name]).alive.active,body a:not([name]).alive .active,body a:not([name]).alive:active,body a:not([name]).grave.active,body a:not([name]).grave .active,body a:not([name]).grave:active,body a:not([name]).MOB.active,body a:not([name]).mob.active,body a:not([name]).mob .active,body a:not([name]).MOB .active,body a:not([name]).MOB:active,body a:not([name]).mob:active,body a:not([name]).NONE.active,body a:not([name]).NONE .active,body a:not([name]).NONE:active,body a:not([name]).visiter.active,body a:not([name]).visiter .active,body a:not([name]).visiter:active{background-color:#7f5a22}.alive input[type=checkbox],.alive input[type=radio],.grave input[type=checkbox],.grave input[type=radio],.mob input[type=checkbox],.MOB input[type=checkbox],.MOB input[type=radio],.mob input[type=radio],.NONE input[type=checkbox],.NONE input[type=radio],.visiter input[type=checkbox],.visiter input[type=radio]{background-color:#d8b493}.alive input[type=checkbox]:checked,.alive input[type=radio]:checked,.grave input[type=checkbox]:checked,.grave input[type=radio]:checked,.mob input[type=checkbox]:checked,.MOB input[type=checkbox]:checked,.MOB input[type=radio]:checked,.mob input[type=radio]:checked,.NONE input[type=checkbox]:checked,.NONE input[type=radio]:checked,.visiter input[type=checkbox]:checked,.visiter input[type=radio]:checked{background-color:#ccba77}.alive .date,.alive .name,.alive em,.grave .date,.grave .name,.grave em,.mob .date,.MOB .date,.MOB .name,.mob .name,.MOB em,.mob em,.NONE .date,.NONE .name,.NONE em,.visiter .date,.visiter .name,.visiter em{color:#432c0b}.alive abbr,.alive rt,.alive strong,.alive sub,.alive sup,.grave abbr,.grave rt,.grave strong,.grave sub,.grave sup,.MOB abbr,.mob abbr,.MOB rt,.mob rt,.MOB strong,.mob strong,.mob sub,.MOB sub,.MOB sup,.mob sup,.NONE abbr,.NONE rt,.NONE strong,.NONE sub,.NONE sup,.visiter abbr,.visiter rt,.visiter strong,.visiter sub,.visiter sup{background-color:#ba8e45;color:#e2bd85}.executed,.executed textarea{color:#1c304e;background-color:#90abd4;border-color:#6c94cc}.executed.baloon{border-color:#90abd4}.executed .fa-check{color:#298125}.executed .fa-warning{color:#914830}.executed .fa-ban{color:#912630}.executed [data-tooltip],.executed [title]{background-color:#a1c3f5}.executed [data-tooltip]:after,.executed [data-tooltip]:before,.executed [title]:after,.executed [title]:before,.executed b{color:#1c304e;background-color:#a1c3f5}.executed a:not([name]),body a:not([name]).executed{color:#1c304e}.executed a:not([name]):visited,body a:not([name]).executed:visited{background-color:#93c0d9}.executed a:not([name]):link,body a:not([name]).executed:link{background-color:#9fb9f6}.executed .active{background-color:#3e5f92}.executed a:not([name]),.executed button,.executed input,body a:not([name]).executed{background-color:#a1c3f5}.executed a:not([name]):focus,.executed a:not([name]):hover,.executed button:focus,.executed button:hover,.executed input:focus,.executed input:hover,body a:not([name]).executed:focus,body a:not([name]).executed:hover{background-color:#436ba8}.executed a:not([name]).active,.executed a:not([name]) .active,.executed a:not([name]):active,.executed button.active,.executed button .active,.executed button:active,.executed input.active,.executed input .active,.executed input:active,body a:not([name]).executed.active,body a:not([name]).executed .active,body a:not([name]).executed:active{background-color:#3e5f92}.executed input[type=checkbox],.executed input[type=radio]{background-color:#9fb9f6}.executed input[type=checkbox]:checked,.executed input[type=radio]:checked{background-color:#93c0d9}.executed .date,.executed .name,.executed em{color:#1c304e}.executed abbr,.executed rt,.executed strong,.executed sub,.executed sup{background-color:#6c94cc;color:#a1c3f5}.hide,.hide textarea{color:#38321c;background-color:#b6ae90;border-color:#a49967}.hide.baloon{border-color:#b6ae90}.hide .fa-check{color:#328214}.hide .fa-warning{color:#9b4920}.hide .fa-ban{color:#9b2720}.hide [data-tooltip],.hide [title]{background-color:#d0c6a1}.hide [data-tooltip]:after,.hide [data-tooltip]:before,.hide [title]:after,.hide [title]:before,.hide b{color:#38321c;background-color:#d0c6a1}.hide a:not([name]),body a:not([name]).hide{color:#38321c}.hide a:not([name]):visited,body a:not([name]).hide:visited{background-color:#bcc28f}.hide a:not([name]):link,body a:not([name]).hide:link{background-color:#c8bcac}.hide .active{background-color:#6c633e}.hide a:not([name]),.hide button,.hide input,body a:not([name]).hide{background-color:#d0c6a1}.hide a:not([name]):focus,.hide a:not([name]):hover,.hide button:focus,.hide button:hover,.hide input:focus,.hide input:hover,body a:not([name]).hide:focus,body a:not([name]).hide:hover{background-color:#7b7043}.hide a:not([name]).active,.hide a:not([name]) .active,.hide a:not([name]):active,.hide button.active,.hide button .active,.hide button:active,.hide input.active,.hide input .active,.hide input:active,body a:not([name]).hide.active,body a:not([name]).hide .active,body a:not([name]).hide:active{background-color:#6c633e}.hide input[type=checkbox],.hide input[type=radio]{background-color:#c8bcac}.hide input[type=checkbox]:checked,.hide input[type=radio]:checked{background-color:#bcc28f}.hide .date,.hide .name,.hide em{color:#38321c}.hide abbr,.hide rt,.hide strong,.hide sub,.hide sup{background-color:#a49967;color:#d0c6a1}.leave,.leave textarea,.suddendead,.suddendead textarea{color:#32322d;background-color:#aeafa8;border-color:#999a8b}.leave.baloon,.suddendead.baloon{border-color:#aeafa8}.leave .fa-check,.suddendead .fa-check{color:#30821a}.leave .fa-warning,.suddendead .fa-warning{color:#994925}.leave .fa-ban,.suddendead .fa-ban{color:#992725}.leave [data-tooltip],.leave [title],.suddendead [data-tooltip],.suddendead [title]{background-color:#c6c7bf}.leave [data-tooltip]:after,.leave [data-tooltip]:before,.leave [title]:after,.leave [title]:before,.leave b,.suddendead [data-tooltip]:after,.suddendead [data-tooltip]:before,.suddendead [title]:after,.suddendead [title]:before,.suddendead b{color:#32322d;background-color:#c6c7bf}.leave a:not([name]),.suddendead a:not([name]),body a:not([name]).leave,body a:not([name]).suddendead{color:#32322d}.leave a:not([name]):visited,.suddendead a:not([name]):visited,body a:not([name]).leave:visited,body a:not([name]).suddendead:visited{background-color:#b4c3aa}.leave a:not([name]):link,.suddendead a:not([name]):link,body a:not([name]).leave:link,body a:not([name]).suddendead:link{background-color:#bfbdc6}.leave .active,.suddendead .active{background-color:#63645b}.leave a:not([name]),.leave button,.leave input,.suddendead a:not([name]),.suddendead button,.suddendead input,body a:not([name]).leave,body a:not([name]).suddendead{background-color:#c6c7bf}.leave a:not([name]):focus,.leave a:not([name]):hover,.leave button:focus,.leave button:hover,.leave input:focus,.leave input:hover,.suddendead a:not([name]):focus,.suddendead a:not([name]):hover,.suddendead button:focus,.suddendead button:hover,.suddendead input:focus,.suddendead input:hover,body a:not([name]).leave:focus,body a:not([name]).leave:hover,body a:not([name]).suddendead:focus,body a:not([name]).suddendead:hover{background-color:#707167}.leave a:not([name]).active,.leave a:not([name]) .active,.leave a:not([name]):active,.leave button.active,.leave button .active,.leave button:active,.leave input.active,.leave input .active,.leave input:active,.suddendead a:not([name]).active,.suddendead a:not([name]) .active,.suddendead a:not([name]):active,.suddendead button.active,.suddendead button .active,.suddendead button:active,.suddendead input.active,.suddendead input .active,.suddendead input:active,body a:not([name]).leave.active,body a:not([name]).leave .active,body a:not([name]).leave:active,body a:not([name]).suddendead.active,body a:not([name]).suddendead .active,body a:not([name]).suddendead:active{background-color:#63645b}.leave input[type=checkbox],.leave input[type=radio],.suddendead input[type=checkbox],.suddendead input[type=radio]{background-color:#bfbdc6}.leave input[type=checkbox]:checked,.leave input[type=radio]:checked,.suddendead input[type=checkbox]:checked,.suddendead input[type=radio]:checked{background-color:#b4c3aa}.leave .date,.leave .name,.leave em,.suddendead .date,.suddendead .name,.suddendead em{color:#32322d}.leave abbr,.leave rt,.leave strong,.leave sub,.leave sup,.suddendead abbr,.suddendead rt,.suddendead strong,.suddendead sub,.suddendead sup{background-color:#999a8b;color:#c6c7bf}.SPORT,.SPORT textarea{color:#85e2e2;background-color:#160303;border-color:#168686}.SPORT.baloon{border-color:#168686}.SPORT .fa-check{color:#4cbc55}.SPORT .fa-warning{color:#b48361}.SPORT .fa-ban{color:#b46161}.SPORT [data-tooltip],.SPORT [title]{background-color:#430b0b}.SPORT [data-tooltip]:after,.SPORT [data-tooltip]:before,.SPORT [title]:after,.SPORT [title]:before,.SPORT b{color:#85e2e2;background-color:#430b0b}.SPORT a:not([name]),body a:not([name]).SPORT{color:#85e2e2}.SPORT a:not([name]):visited,body a:not([name]).SPORT:visited{background-color:#401e0b}.SPORT a:not([name]):link,body a:not([name]).SPORT:link{background-color:#4c1728}.SPORT .active{background-color:#1db3b3}.SPORT a:not([name]),.SPORT button,.SPORT input,body a:not([name]).SPORT{background-color:#430b0b}.SPORT a:not([name]):focus,.SPORT a:not([name]):hover,.SPORT button:focus,.SPORT button:hover,.SPORT input:focus,.SPORT input:hover,body a:not([name]).SPORT:focus,body a:not([name]).SPORT:hover{background-color:#1a9d9d}.SPORT a:not([name]).active,.SPORT a:not([name]) .active,.SPORT a:not([name]):active,.SPORT button.active,.SPORT button .active,.SPORT button:active,.SPORT input.active,.SPORT input .active,.SPORT input:active,body a:not([name]).SPORT.active,body a:not([name]).SPORT .active,body a:not([name]).SPORT:active{background-color:#1db3b3}.SPORT input[type=checkbox],.SPORT input[type=radio]{background-color:#4c1728}.SPORT input[type=checkbox]:checked,.SPORT input[type=radio]:checked{background-color:#401e0b}.SPORT .date,.SPORT .name,.SPORT em{color:#127070}.SPORT abbr,.SPORT rt,.SPORT strong,.SPORT sub,.SPORT sup{background-color:#168686;color:#430b0b}.P09,.P09 textarea{color:#85e2c6;background-color:#160309}.P09,.P09 textarea,.P09.baloon{border-color:#168664}.P09 .fa-check{color:#4cbc4c}.P09 .fa-warning{color:#b48358}.P09 .fa-ban{color:#b46158}.P09 [data-tooltip],.P09 [title]{background-color:#430b1c}.P09 [data-tooltip]:after,.P09 [data-tooltip]:before,.P09 [title]:after,.P09 [title]:before,.P09 b{color:#85e2c6;background-color:#430b1c}.P09 a:not([name]),body a:not([name]).P09{color:#85e2c6}.P09 a:not([name]):visited,body a:not([name]).P09:visited{background-color:#401e1a}.P09 a:not([name]):link,body a:not([name]).P09:link{background-color:#4c1737}.P09 .active{background-color:#1db386}.P09 a:not([name]),.P09 button,.P09 input,body a:not([name]).P09{background-color:#430b1c}.P09 a:not([name]):focus,.P09 a:not([name]):hover,.P09 button:focus,.P09 button:hover,.P09 input:focus,.P09 input:hover,body a:not([name]).P09:focus,body a:not([name]).P09:hover{background-color:#1a9d75}.P09 a:not([name]).active,.P09 a:not([name]) .active,.P09 a:not([name]):active,.P09 button.active,.P09 button .active,.P09 button:active,.P09 input.active,.P09 input .active,.P09 input:active,body a:not([name]).P09 .active,body a:not([name]).P09.active,body a:not([name]).P09:active{background-color:#1db386}.P09 input[type=checkbox],.P09 input[type=radio]{background-color:#4c1737}.P09 input[type=checkbox]:checked,.P09 input[type=radio]:checked{background-color:#401e1a}.P09 .date,.P09 .name,.P09 em{color:#127054}.P09 abbr,.P09 rt,.P09 strong,.P09 sub,.P09 sup{background-color:#168664;color:#430b1c}.ELSE,.ELSE textarea{color:#7cd09d;background-color:#12010b;border-color:#0b7033}.ELSE.baloon{border-color:#0b7033}.ELSE .fa-check{color:#49b63f}.ELSE .fa-warning{color:#b17d4a}.ELSE .fa-ban{color:#b15b4a}.ELSE [data-tooltip],.ELSE [title]{background-color:#380523}.ELSE [data-tooltip]:after,.ELSE [data-tooltip]:before,.ELSE [title]:after,.ELSE [title]:before,.ELSE b{color:#7cd09d;background-color:#380523}.ELSE a:not([name]),body a:not([name]).ELSE{color:#7cd09d}.ELSE a:not([name]):visited,body a:not([name]).ELSE:visited{background-color:#371820}.ELSE a:not([name]):link,body a:not([name]).ELSE:link{background-color:#42123d}.ELSE .active{background-color:#0e9544}.ELSE a:not([name]),.ELSE button,.ELSE input,body a:not([name]).ELSE{background-color:#380523}.ELSE a:not([name]):focus,.ELSE a:not([name]):hover,.ELSE button:focus,.ELSE button:hover,.ELSE input:focus,.ELSE input:hover,body a:not([name]).ELSE:focus,body a:not([name]).ELSE:hover{background-color:#0d823c}.ELSE a:not([name]).active,.ELSE a:not([name]) .active,.ELSE a:not([name]):active,.ELSE button.active,.ELSE button .active,.ELSE button:active,.ELSE input.active,.ELSE input .active,.ELSE input:active,body a:not([name]).ELSE.active,body a:not([name]).ELSE .active,body a:not([name]).ELSE:active{background-color:#0e9544}.ELSE input[type=checkbox],.ELSE input[type=radio]{background-color:#42123d}.ELSE input[type=checkbox]:checked,.ELSE input[type=radio]:checked{background-color:#371820}.ELSE .date,.ELSE .name,.ELSE em{color:#095d2a}.ELSE abbr,.ELSE rt,.ELSE strong,.ELSE sub,.ELSE sup{background-color:#0b7033;color:#380523}.P07,.P07 textarea{color:#7cd084;background-color:#120111}.P07,.P07 textarea,.P07.baloon{border-color:#0b7015}.P07 .fa-check{color:#49b636}.P07 .fa-warning{color:#b17d42}.P07 .fa-ban{color:#b15b42}.P07 [data-tooltip],.P07 [title]{background-color:#380533}.P07 [data-tooltip]:after,.P07 [data-tooltip]:before,.P07 [title]:after,.P07 [title]:before,.P07 b{color:#7cd084;background-color:#380533}.P07 a:not([name]),body a:not([name]).P07{color:#7cd084}.P07 a:not([name]):visited,body a:not([name]).P07:visited{background-color:#37182e}.P07 a:not([name]):link,body a:not([name]).P07:link{background-color:#42124b}.P07 .active{background-color:#0e951c}.P07 a:not([name]),.P07 button,.P07 input,body a:not([name]).P07{background-color:#380533}.P07 a:not([name]):focus,.P07 a:not([name]):hover,.P07 button:focus,.P07 button:hover,.P07 input:focus,.P07 input:hover,body a:not([name]).P07:focus,body a:not([name]).P07:hover{background-color:#0d8218}.P07 a:not([name]).active,.P07 a:not([name]) .active,.P07 a:not([name]):active,.P07 button.active,.P07 button .active,.P07 button:active,.P07 input.active,.P07 input .active,.P07 input:active,body a:not([name]).P07 .active,body a:not([name]).P07.active,body a:not([name]).P07:active{background-color:#0e951c}.P07 input[type=checkbox],.P07 input[type=radio]{background-color:#42124b}.P07 input[type=checkbox]:checked,.P07 input[type=radio]:checked{background-color:#37182e}.P07 .date,.P07 .name,.P07 em{color:#095d11}.P07 abbr,.P07 rt,.P07 strong,.P07 sub,.P07 sup{background-color:#0b7015;color:#380533}.BSAY,.BSAY textarea,.XSAY,.XSAY textarea{color:#8dd07c;background-color:#0f0112;border-color:#1f700b}.BSAY.baloon,.XSAY.baloon{border-color:#1f700b}.BSAY .fa-check,.XSAY .fa-check{color:#4eb634}.BSAY .fa-warning,.XSAY .fa-warning{color:#b77d3f}.BSAY .fa-ban,.XSAY .fa-ban{color:#b75b3f}.BSAY [data-tooltip],.BSAY [title],.XSAY [data-tooltip],.XSAY [title]{background-color:#2d0538}.BSAY [data-tooltip]:after,.BSAY [data-tooltip]:before,.BSAY [title]:after,.BSAY [title]:before,.BSAY b,.XSAY [data-tooltip]:after,.XSAY [data-tooltip]:before,.XSAY [title]:after,.XSAY [title]:before,.XSAY b{color:#8dd07c;background-color:#2d0538}.BSAY a:not([name]),.XSAY a:not([name]),body a:not([name]).BSAY,body a:not([name]).XSAY{color:#8dd07c}.BSAY a:not([name]):visited,.XSAY a:not([name]):visited,body a:not([name]).BSAY:visited,body a:not([name]).XSAY:visited{background-color:#2d1833}.BSAY a:not([name]):link,.XSAY a:not([name]):link,body a:not([name]).BSAY:link,body a:not([name]).XSAY:link{background-color:#39124f}.BSAY .active,.XSAY .active{background-color:#2a950e}.BSAY a:not([name]),.BSAY button,.BSAY input,.XSAY a:not([name]),.XSAY button,.XSAY input,body a:not([name]).BSAY,body a:not([name]).XSAY{background-color:#2d0538}.BSAY a:not([name]):focus,.BSAY a:not([name]):hover,.BSAY button:focus,.BSAY button:hover,.BSAY input:focus,.BSAY input:hover,.XSAY a:not([name]):focus,.XSAY a:not([name]):hover,.XSAY button:focus,.XSAY button:hover,.XSAY input:focus,.XSAY input:hover,body a:not([name]).BSAY:focus,body a:not([name]).BSAY:hover,body a:not([name]).XSAY:focus,body a:not([name]).XSAY:hover{background-color:#24820d}.BSAY a:not([name]).active,.BSAY a:not([name]) .active,.BSAY a:not([name]):active,.BSAY button.active,.BSAY button .active,.BSAY button:active,.BSAY input.active,.BSAY input .active,.BSAY input:active,.XSAY a:not([name]).active,.XSAY a:not([name]) .active,.XSAY a:not([name]):active,.XSAY button.active,.XSAY button .active,.XSAY button:active,.XSAY input.active,.XSAY input .active,.XSAY input:active,body a:not([name]).BSAY.active,body a:not([name]).BSAY .active,body a:not([name]).BSAY:active,body a:not([name]).XSAY.active,body a:not([name]).XSAY .active,body a:not([name]).XSAY:active{background-color:#2a950e}.BSAY input[type=checkbox],.BSAY input[type=radio],.XSAY input[type=checkbox],.XSAY input[type=radio]{background-color:#39124f}.BSAY input[type=checkbox]:checked,.BSAY input[type=radio]:checked,.XSAY input[type=checkbox]:checked,.XSAY input[type=radio]:checked{background-color:#2d1833}.BSAY .date,.BSAY .name,.BSAY em,.XSAY .date,.XSAY .name,.XSAY em{color:#1a5d09}.BSAY abbr,.BSAY rt,.BSAY strong,.BSAY sub,.BSAY sup,.XSAY abbr,.XSAY rt,.XSAY strong,.XSAY sub,.XSAY sup{background-color:#1f700b;color:#2d0538}.P05,.P05 textarea{color:#b4e285;background-color:#0d0316}.P05,.P05 textarea,.P05.baloon{border-color:#4e8616}.P05 .fa-check{color:#5bbc37}.P05 .fa-warning{color:#c48342}.P05 .fa-ban{color:#c46142}.P05 [data-tooltip],.P05 [title]{background-color:#270b43}.P05 [data-tooltip]:after,.P05 [data-tooltip]:before,.P05 [title]:after,.P05 [title]:before,.P05 b{color:#b4e285;background-color:#270b43}.P05 a:not([name]),body a:not([name]).P05{color:#b4e285}.P05 a:not([name]):visited,body a:not([name]).P05:visited{background-color:#281e3d}.P05 a:not([name]):link,body a:not([name]).P05:link{background-color:#331759}.P05 .active{background-color:#68b31d}.P05 a:not([name]),.P05 button,.P05 input,body a:not([name]).P05{background-color:#270b43}.P05 a:not([name]):focus,.P05 a:not([name]):hover,.P05 button:focus,.P05 button:hover,.P05 input:focus,.P05 input:hover,body a:not([name]).P05:focus,body a:not([name]).P05:hover{background-color:#5b9d1a}.P05 a:not([name]).active,.P05 a:not([name]) .active,.P05 a:not([name]):active,.P05 button.active,.P05 button .active,.P05 button:active,.P05 input.active,.P05 input .active,.P05 input:active,body a:not([name]).P05 .active,body a:not([name]).P05.active,body a:not([name]).P05:active{background-color:#68b31d}.P05 input[type=checkbox],.P05 input[type=radio]{background-color:#331759}.P05 input[type=checkbox]:checked,.P05 input[type=radio]:checked{background-color:#281e3d}.P05 .date,.P05 .name,.P05 em{color:#417012}.P05 abbr,.P05 rt,.P05 strong,.P05 sub,.P05 sup{background-color:#4e8616;color:#270b43}.P04,.P04 textarea{color:#d0e285;background-color:#070316}.P04,.P04 textarea,.P04.baloon{border-color:#708616}.P04 .fa-check{color:#64bc37}.P04 .fa-warning{color:#cd8342}.P04 .fa-ban{color:#cd6142}.P04 [data-tooltip],.P04 [title]{background-color:#160b43}.P04 [data-tooltip]:after,.P04 [data-tooltip]:before,.P04 [title]:after,.P04 [title]:before,.P04 b{color:#d0e285;background-color:#160b43}.P04 a:not([name]),body a:not([name]).P04{color:#d0e285}.P04 a:not([name]):visited,body a:not([name]).P04:visited{background-color:#191e3d}.P04 a:not([name]):link,body a:not([name]).P04:link{background-color:#241759}.P04 .active{background-color:#95b31d}.P04 a:not([name]),.P04 button,.P04 input,body a:not([name]).P04{background-color:#160b43}.P04 a:not([name]):focus,.P04 a:not([name]):hover,.P04 button:focus,.P04 button:hover,.P04 input:focus,.P04 input:hover,body a:not([name]).P04:focus,body a:not([name]).P04:hover{background-color:#829d1a}.P04 a:not([name]).active,.P04 a:not([name]) .active,.P04 a:not([name]):active,.P04 button.active,.P04 button .active,.P04 button:active,.P04 input.active,.P04 input .active,.P04 input:active,body a:not([name]).P04 .active,body a:not([name]).P04.active,body a:not([name]).P04:active{background-color:#95b31d}.P04 input[type=checkbox],.P04 input[type=radio]{background-color:#241759}.P04 input[type=checkbox]:checked,.P04 input[type=radio]:checked{background-color:#191e3d}.P04 .date,.P04 .name,.P04 em{color:#5d7012}.P04 abbr,.P04 rt,.P04 strong,.P04 sub,.P04 sup{background-color:#708616;color:#160b43}.MSAY,.MSAY textarea,.SSAY,.SSAY textarea{color:#e2cc85;background-color:#030816;border-color:#866c16}.MSAY.baloon,.SSAY.baloon{border-color:#866c16}.MSAY .fa-check,.SSAY .fa-check{color:#6ab537}.MSAY .fa-warning,.SSAY .fa-warning{color:#d37c42}.MSAY .fa-ban,.SSAY .fa-ban{color:#d35a42}.MSAY [data-tooltip],.MSAY [title],.SSAY [data-tooltip],.SSAY [title]{background-color:#0b1843}.MSAY [data-tooltip]:after,.MSAY [data-tooltip]:before,.MSAY [title]:after,.MSAY [title]:before,.MSAY b,.SSAY [data-tooltip]:after,.SSAY [data-tooltip]:before,.SSAY [title]:after,.SSAY [title]:before,.SSAY b{color:#e2cc85;background-color:#0b1843}.MSAY a:not([name]),.SSAY a:not([name]),body a:not([name]).MSAY,body a:not([name]).SSAY{color:#e2cc85}.MSAY a:not([name]):visited,.SSAY a:not([name]):visited,body a:not([name]).MSAY:visited,body a:not([name]).SSAY:visited{background-color:#0f293d}.MSAY a:not([name]):link,.SSAY a:not([name]):link,body a:not([name]).MSAY:link,body a:not([name]).SSAY:link{background-color:#1b2359}.MSAY .active,.SSAY .active{background-color:#b3901d}.MSAY a:not([name]),.MSAY button,.MSAY input,.SSAY a:not([name]),.SSAY button,.SSAY input,body a:not([name]).MSAY,body a:not([name]).SSAY{background-color:#0b1843}.MSAY a:not([name]):focus,.MSAY a:not([name]):hover,.MSAY button:focus,.MSAY button:hover,.MSAY input:focus,.MSAY input:hover,.SSAY a:not([name]):focus,.SSAY a:not([name]):hover,.SSAY button:focus,.SSAY button:hover,.SSAY input:focus,.SSAY input:hover,body a:not([name]).MSAY:focus,body a:not([name]).MSAY:hover,body a:not([name]).SSAY:focus,body a:not([name]).SSAY:hover{background-color:#9d7e1a}.MSAY a:not([name]).active,.MSAY a:not([name]) .active,.MSAY a:not([name]):active,.MSAY button.active,.MSAY button .active,.MSAY button:active,.MSAY input.active,.MSAY input .active,.MSAY input:active,.SSAY a:not([name]).active,.SSAY a:not([name]) .active,.SSAY a:not([name]):active,.SSAY button.active,.SSAY button .active,.SSAY button:active,.SSAY input.active,.SSAY input .active,.SSAY input:active,body a:not([name]).MSAY.active,body a:not([name]).MSAY .active,body a:not([name]).MSAY:active,body a:not([name]).SSAY.active,body a:not([name]).SSAY .active,body a:not([name]).SSAY:active{background-color:#b3901d}.MSAY input[type=checkbox],.MSAY input[type=radio],.SSAY input[type=checkbox],.SSAY input[type=radio]{background-color:#1b2359}.MSAY input[type=checkbox]:checked,.MSAY input[type=radio]:checked,.SSAY input[type=checkbox]:checked,.SSAY input[type=radio]:checked{background-color:#0f293d}.MSAY .date,.MSAY .name,.MSAY em,.SSAY .date,.SSAY .name,.SSAY em{color:#705a12}.MSAY abbr,.MSAY rt,.MSAY strong,.MSAY sub,.MSAY sup,.SSAY abbr,.SSAY rt,.SSAY strong,.SSAY sub,.SSAY sup{background-color:#866c16;color:#0b1843}.VSAY,.VSAY textarea,.VSSAY,.VSSAY textarea{color:#e2bd85;background-color:#030b16;border-color:#865916}.VSAY.baloon,.VSSAY.baloon{border-color:#865916}.VSAY .fa-check,.VSSAY .fa-check{color:#6ab037}.VSAY .fa-warning,.VSSAY .fa-warning{color:#d37742}.VSAY .fa-ban,.VSSAY .fa-ban{color:#d35542}.VSAY [data-tooltip],.VSAY [title],.VSSAY [data-tooltip],.VSSAY [title]{background-color:#0b2143}.VSAY [data-tooltip]:after,.VSAY [data-tooltip]:before,.VSAY [title]:after,.VSAY [title]:before,.VSAY b,.VSSAY [data-tooltip]:after,.VSSAY [data-tooltip]:before,.VSSAY [title]:after,.VSSAY [title]:before,.VSSAY b{color:#e2bd85;background-color:#0b2143}.VSAY a:not([name]),.VSSAY a:not([name]),body a:not([name]).VSAY,body a:not([name]).VSSAY{color:#e2bd85}.VSAY a:not([name]):visited,.VSSAY a:not([name]):visited,body a:not([name]).VSAY:visited,body a:not([name]).VSSAY:visited{background-color:#0f313d}.VSAY a:not([name]):link,.VSSAY a:not([name]):link,body a:not([name]).VSAY:link,body a:not([name]).VSSAY:link{background-color:#1b2b59}.VSAY .active,.VSSAY .active{background-color:#b3771d}.VSAY a:not([name]),.VSAY button,.VSAY input,.VSSAY a:not([name]),.VSSAY button,.VSSAY input,body a:not([name]).VSAY,body a:not([name]).VSSAY{background-color:#0b2143}.VSAY a:not([name]):focus,.VSAY a:not([name]):hover,.VSAY button:focus,.VSAY button:hover,.VSAY input:focus,.VSAY input:hover,.VSSAY a:not([name]):focus,.VSSAY a:not([name]):hover,.VSSAY button:focus,.VSSAY button:hover,.VSSAY input:focus,.VSSAY input:hover,body a:not([name]).VSAY:focus,body a:not([name]).VSAY:hover,body a:not([name]).VSSAY:focus,body a:not([name]).VSSAY:hover{background-color:#9d681a}.VSAY a:not([name]).active,.VSAY a:not([name]) .active,.VSAY a:not([name]):active,.VSAY button.active,.VSAY button .active,.VSAY button:active,.VSAY input.active,.VSAY input .active,.VSAY input:active,.VSSAY a:not([name]).active,.VSSAY a:not([name]) .active,.VSSAY a:not([name]):active,.VSSAY button.active,.VSSAY button .active,.VSSAY button:active,.VSSAY input.active,.VSSAY input .active,.VSSAY input:active,body a:not([name]).VSAY.active,body a:not([name]).VSAY .active,body a:not([name]).VSAY:active,body a:not([name]).VSSAY.active,body a:not([name]).VSSAY .active,body a:not([name]).VSSAY:active{background-color:#b3771d}.VSAY input[type=checkbox],.VSAY input[type=radio],.VSSAY input[type=checkbox],.VSSAY input[type=radio]{background-color:#1b2b59}.VSAY input[type=checkbox]:checked,.VSAY input[type=radio]:checked,.VSSAY input[type=checkbox]:checked,.VSSAY input[type=radio]:checked{background-color:#0f313d}.VSAY .date,.VSAY .name,.VSAY em,.VSSAY .date,.VSSAY .name,.VSSAY em{color:#704a12}.VSAY abbr,.VSAY rt,.VSAY strong,.VSAY sub,.VSAY sup,.VSSAY abbr,.VSSAY rt,.VSSAY strong,.VSSAY sub,.VSSAY sup{background-color:#865916;color:#0b2143}.P01,.P01 textarea{color:#e2a185;background-color:#031016}.P01,.P01 textarea,.P01.baloon{border-color:#863816}.P01 .fa-check{color:#6aa737}.P01 .fa-warning{color:#d36e42}.P01 .fa-ban{color:#d34b42}.P01 [data-tooltip],.P01 [title]{background-color:#0b3243}.P01 [data-tooltip]:after,.P01 [data-tooltip]:before,.P01 [title]:after,.P01 [title]:before,.P01 b{color:#e2a185;background-color:#0b3243}.P01 a:not([name]),body a:not([name]).P01{color:#e2a185}.P01 a:not([name]):visited,body a:not([name]).P01:visited{background-color:#0f403d}.P01 a:not([name]):link,body a:not([name]).P01:link{background-color:#1b3a59}.P01 .active{background-color:#b34a1d}.P01 a:not([name]),.P01 button,.P01 input,body a:not([name]).P01{background-color:#0b3243}.P01 a:not([name]):focus,.P01 a:not([name]):hover,.P01 button:focus,.P01 button:hover,.P01 input:focus,.P01 input:hover,body a:not([name]).P01:focus,body a:not([name]).P01:hover{background-color:#9d411a}.P01 a:not([name]).active,.P01 a:not([name]) .active,.P01 a:not([name]):active,.P01 button.active,.P01 button .active,.P01 button:active,.P01 input.active,.P01 input .active,.P01 input:active,body a:not([name]).P01 .active,body a:not([name]).P01.active,body a:not([name]).P01:active{background-color:#b34a1d}.P01 input[type=checkbox],.P01 input[type=radio]{background-color:#1b3a59}.P01 input[type=checkbox]:checked,.P01 input[type=radio]:checked{background-color:#0f403d}.P01 .date,.P01 .name,.P01 em{color:#702e12}.P01 abbr,.P01 rt,.P01 strong,.P01 sub,.P01 sup{background-color:#863816;color:#0b3243}.WSAY,.WSAY textarea{color:#e28585;background-color:#031616;border-color:#861616}.WSAY.baloon{border-color:#861616}.WSAY .fa-check{color:#6a9d37}.WSAY .fa-warning{color:#d36442}.WSAY .fa-ban{color:#d34242}.WSAY [data-tooltip],.WSAY [title]{background-color:#0b4343}.WSAY [data-tooltip]:after,.WSAY [data-tooltip]:before,.WSAY [title]:after,.WSAY [title]:before,.WSAY b{color:#e28585;background-color:#0b4343}.WSAY a:not([name]),body a:not([name]).WSAY{color:#e28585}.WSAY a:not([name]):visited,body a:not([name]).WSAY:visited{background-color:#0f4f3d}.WSAY a:not([name]):link,body a:not([name]).WSAY:link{background-color:#1b4959}.WSAY .active{background-color:#b31d1d}.WSAY a:not([name]),.WSAY button,.WSAY input,body a:not([name]).WSAY{background-color:#0b4343}.WSAY a:not([name]):focus,.WSAY a:not([name]):hover,.WSAY button:focus,.WSAY button:hover,.WSAY input:focus,.WSAY input:hover,body a:not([name]).WSAY:focus,body a:not([name]).WSAY:hover{background-color:#9d1a1a}.WSAY a:not([name]).active,.WSAY a:not([name]) .active,.WSAY a:not([name]):active,.WSAY button.active,.WSAY button .active,.WSAY button:active,.WSAY input.active,.WSAY input .active,.WSAY input:active,body a:not([name]).WSAY.active,body a:not([name]).WSAY .active,body a:not([name]).WSAY:active{background-color:#b31d1d}.WSAY input[type=checkbox],.WSAY input[type=radio]{background-color:#1b4959}.WSAY input[type=checkbox]:checked,.WSAY input[type=radio]:checked{background-color:#0f4f3d}.WSAY .date,.WSAY .name,.WSAY em{color:#701212}.WSAY abbr,.WSAY rt,.WSAY strong,.WSAY sub,.WSAY sup{background-color:#861616;color:#0b4343}.N01,.N01 textarea{color:#e285a1;background-color:#031610}.N01,.N01 textarea,.N01.baloon{border-color:#861638}.N01 .fa-check{color:#6a9d40}.N01 .fa-warning{color:#d3644b}.N01 .fa-ban{color:#d3424b}.N01 [data-tooltip],.N01 [title]{background-color:#0b4332}.N01 [data-tooltip]:after,.N01 [data-tooltip]:before,.N01 [title]:after,.N01 [title]:before,.N01 b{color:#e285a1;background-color:#0b4332}.N01 a:not([name]),body a:not([name]).N01{color:#e285a1}.N01 a:not([name]):visited,body a:not([name]).N01:visited{background-color:#0f4f2e}.N01 a:not([name]):link,body a:not([name]).N01:link{background-color:#1b494a}.N01 .active{background-color:#b31d4a}.N01 a:not([name]),.N01 button,.N01 input,body a:not([name]).N01{background-color:#0b4332}.N01 a:not([name]):focus,.N01 a:not([name]):hover,.N01 button:focus,.N01 button:hover,.N01 input:focus,.N01 input:hover,body a:not([name]).N01:focus,body a:not([name]).N01:hover{background-color:#9d1a41}.N01 a:not([name]).active,.N01 a:not([name]) .active,.N01 a:not([name]):active,.N01 button.active,.N01 button .active,.N01 button:active,.N01 input.active,.N01 input .active,.N01 input:active,body a:not([name]).N01 .active,body a:not([name]).N01.active,body a:not([name]).N01:active{background-color:#b31d4a}.N01 input[type=checkbox],.N01 input[type=radio]{background-color:#1b494a}.N01 input[type=checkbox]:checked,.N01 input[type=radio]:checked{background-color:#0f4f2e}.N01 .date,.N01 .name,.N01 em{color:#70122e}.N01 abbr,.N01 rt,.N01 strong,.N01 sub,.N01 sup{background-color:#861638;color:#0b4332}.N02,.N02 textarea{color:#e285b5;background-color:#03160c}.N02,.N02 textarea,.N02.baloon{border-color:#861650}.N02 .fa-check{color:#6a9d47}.N02 .fa-warning{color:#d36452}.N02 .fa-ban{color:#d34252}.N02 [data-tooltip],.N02 [title]{background-color:#0b4326}.N02 [data-tooltip]:after,.N02 [data-tooltip]:before,.N02 [title]:after,.N02 [title]:before,.N02 b{color:#e285b5;background-color:#0b4326}.N02 a:not([name]),body a:not([name]).N02{color:#e285b5}.N02 a:not([name]):visited,body a:not([name]).N02:visited{background-color:#0f4f23}.N02 a:not([name]):link,body a:not([name]).N02:link{background-color:#1b4940}.N02 .active{background-color:#b31d6b}.N02 a:not([name]),.N02 button,.N02 input,body a:not([name]).N02{background-color:#0b4326}.N02 a:not([name]):focus,.N02 a:not([name]):hover,.N02 button:focus,.N02 button:hover,.N02 input:focus,.N02 input:hover,body a:not([name]).N02:focus,body a:not([name]).N02:hover{background-color:#9d1a5d}.N02 a:not([name]).active,.N02 a:not([name]) .active,.N02 a:not([name]):active,.N02 button.active,.N02 button .active,.N02 button:active,.N02 input.active,.N02 input .active,.N02 input:active,body a:not([name]).N02 .active,body a:not([name]).N02.active,body a:not([name]).N02:active{background-color:#b31d6b}.N02 input[type=checkbox],.N02 input[type=radio]{background-color:#1b4940}.N02 input[type=checkbox]:checked,.N02 input[type=radio]:checked{background-color:#0f4f23}.N02 .date,.N02 .name,.N02 em{color:#701243}.N02 abbr,.N02 rt,.N02 strong,.N02 sub,.N02 sup{background-color:#861650;color:#0b4326}.AIM,.AIM textarea{color:#e285d9;background-color:#031605}.AIM,.AIM.baloon,.AIM textarea{border-color:#86167b}.AIM .fa-check{color:#6a9d53}.AIM .fa-warning{color:#d3645e}.AIM .fa-ban{color:#d3425e}.AIM [data-tooltip],.AIM [title]{background-color:#0b4310}.AIM [data-tooltip]:after,.AIM [data-tooltip]:before,.AIM [title]:after,.AIM [title]:before,.AIM b{color:#e285d9;background-color:#0b4310}.AIM a:not([name]),body a:not([name]).AIM{color:#e285d9}.AIM a:not([name]):visited,body a:not([name]).AIM:visited{background-color:#0f4f10}.AIM a:not([name]):link,body a:not([name]).AIM:link{background-color:#1b492c}.AIM .active{background-color:#b31da4}.AIM a:not([name]),.AIM button,.AIM input,body a:not([name]).AIM{background-color:#0b4310}.AIM a:not([name]):focus,.AIM a:not([name]):hover,.AIM button:focus,.AIM button:hover,.AIM input:focus,.AIM input:hover,body a:not([name]).AIM:focus,body a:not([name]).AIM:hover{background-color:#9d1a8f}.AIM a:not([name]).active,.AIM a:not([name]) .active,.AIM a:not([name]):active,.AIM button.active,.AIM button .active,.AIM button:active,.AIM input.active,.AIM input .active,.AIM input:active,body a:not([name]).AIM.active,body a:not([name]).AIM .active,body a:not([name]).AIM:active{background-color:#b31da4}.AIM input[type=checkbox],.AIM input[type=radio]{background-color:#1b492c}.AIM input[type=checkbox]:checked,.AIM input[type=radio]:checked{background-color:#0f4f10}.AIM .date,.AIM .name,.AIM em{color:#701266}.AIM abbr,.AIM rt,.AIM strong,.AIM sub,.AIM sup{background-color:#86167b;color:#0b4310}.PSAY,.PSAY textarea,.SPSAY,.SPSAY textarea{color:#e4a1f5;background-color:#0c1a09;border-color:#88389d}.PSAY.baloon,.SPSAY.baloon{border-color:#88389d}.PSAY .fa-check,.SPSAY .fa-check{color:#6ba75c}.PSAY .fa-warning,.SPSAY .fa-warning{color:#d36e67}.PSAY .fa-ban,.SPSAY .fa-ban{color:#d34b67}.PSAY [data-tooltip],.PSAY [title],.SPSAY [data-tooltip],.SPSAY [title]{background-color:#264e1c}.PSAY [data-tooltip]:after,.PSAY [data-tooltip]:before,.PSAY [title]:after,.PSAY [title]:before,.PSAY b,.SPSAY [data-tooltip]:after,.SPSAY [data-tooltip]:before,.SPSAY [title]:after,.SPSAY [title]:before,.SPSAY b{color:#e4a1f5;background-color:#264e1c}.PSAY a:not([name]),.SPSAY a:not([name]),body a:not([name]).PSAY,body a:not([name]).SPSAY{color:#e4a1f5}.PSAY a:not([name]):visited,.SPSAY a:not([name]):visited,body a:not([name]).PSAY:visited,body a:not([name]).SPSAY:visited{background-color:#27591a}.PSAY a:not([name]):link,.SPSAY a:not([name]):link,body a:not([name]).PSAY:link,body a:not([name]).SPSAY:link{background-color:#325237}.PSAY .active,.SPSAY .active{background-color:#b64ad1}.PSAY a:not([name]),.PSAY button,.PSAY input,.SPSAY a:not([name]),.SPSAY button,.SPSAY input,body a:not([name]).PSAY,body a:not([name]).SPSAY{background-color:#264e1c}.PSAY a:not([name]):focus,.PSAY a:not([name]):hover,.PSAY button:focus,.PSAY button:hover,.PSAY input:focus,.PSAY input:hover,.SPSAY a:not([name]):focus,.SPSAY a:not([name]):hover,.SPSAY button:focus,.SPSAY button:hover,.SPSAY input:focus,.SPSAY input:hover,body a:not([name]).PSAY:focus,body a:not([name]).PSAY:hover,body a:not([name]).SPSAY:focus,body a:not([name]).SPSAY:hover{background-color:#9f41b7}.PSAY a:not([name]).active,.PSAY a:not([name]) .active,.PSAY a:not([name]):active,.PSAY button.active,.PSAY button .active,.PSAY button:active,.PSAY input.active,.PSAY input .active,.PSAY input:active,.SPSAY a:not([name]).active,.SPSAY a:not([name]) .active,.SPSAY a:not([name]):active,.SPSAY button.active,.SPSAY button .active,.SPSAY button:active,.SPSAY input.active,.SPSAY input .active,.SPSAY input:active,body a:not([name]).PSAY.active,body a:not([name]).PSAY .active,body a:not([name]).PSAY:active,body a:not([name]).SPSAY.active,body a:not([name]).SPSAY .active,body a:not([name]).SPSAY:active{background-color:#b64ad1}.PSAY input[type=checkbox],.PSAY input[type=radio],.SPSAY input[type=checkbox],.SPSAY input[type=radio]{background-color:#325237}.PSAY input[type=checkbox]:checked,.PSAY input[type=radio]:checked,.SPSAY input[type=checkbox]:checked,.SPSAY input[type=radio]:checked{background-color:#27591a}.PSAY .date,.PSAY .name,.PSAY em,.SPSAY .date,.SPSAY .name,.SPSAY em{color:#712e82}.PSAY abbr,.PSAY rt,.PSAY strong,.PSAY sub,.PSAY sup,.SPSAY abbr,.SPSAY rt,.SPSAY strong,.SPSAY sub,.SPSAY sup{background-color:#88389d;color:#264e1c}.N05,.N05 textarea{color:#d9b4ff;background-color:#141c0d}.N05,.N05 textarea,.N05.baloon{border-color:#7b4ea8}.N05 .fa-check{color:#67ad5f}.N05 .fa-warning{color:#d0746a}.N05 .fa-ban{color:#d0526a}.N05 [data-tooltip],.N05 [title]{background-color:#3d5427}.N05 [data-tooltip]:after,.N05 [data-tooltip]:before,.N05 [title]:after,.N05 [title]:before,.N05 b{color:#d9b4ff;background-color:#3d5427}.N05 a:not([name]),body a:not([name]).N05{color:#d9b4ff}.N05 a:not([name]):visited,body a:not([name]).N05:visited{background-color:#3b5e24}.N05 a:not([name]):link,body a:not([name]).N05:link{background-color:#475840}.N05 .active{background-color:#a468e0}.N05 a:not([name]),.N05 button,.N05 input,body a:not([name]).N05{background-color:#3d5427}.N05 a:not([name]):focus,.N05 a:not([name]):hover,.N05 button:focus,.N05 button:hover,.N05 input:focus,.N05 input:hover,body a:not([name]).N05:focus,body a:not([name]).N05:hover{background-color:#8f5bc4}.N05 a:not([name]).active,.N05 a:not([name]) .active,.N05 a:not([name]):active,.N05 button.active,.N05 button .active,.N05 button:active,.N05 input.active,.N05 input .active,.N05 input:active,body a:not([name]).N05 .active,body a:not([name]).N05.active,body a:not([name]).N05:active{background-color:#a468e0}.N05 input[type=checkbox],.N05 input[type=radio]{background-color:#475840}.N05 input[type=checkbox]:checked,.N05 input[type=radio]:checked{background-color:#3b5e24}.N05 .date,.N05 .name,.N05 em{color:#66418c}.N05 abbr,.N05 rt,.N05 strong,.N05 sub,.N05 sup{background-color:#7b4ea8;color:#3d5427}.N06,.N06 textarea{color:#c3b4ff;background-color:#191c0d}.N06,.N06 textarea,.N06.baloon{border-color:#604ea8}.N06 .fa-check{color:#60ad5f}.N06 .fa-warning{color:#c9746a}.N06 .fa-ban{color:#c9526a}.N06 [data-tooltip],.N06 [title]{background-color:#4b5427}.N06 [data-tooltip]:after,.N06 [data-tooltip]:before,.N06 [title]:after,.N06 [title]:before,.N06 b{color:#c3b4ff;background-color:#4b5427}.N06 a:not([name]),body a:not([name]).N06{color:#c3b4ff}.N06 a:not([name]):visited,body a:not([name]).N06:visited{background-color:#475e24}.N06 a:not([name]):link,body a:not([name]).N06:link{background-color:#535840}.N06 .active{background-color:#8068e0}.N06 a:not([name]),.N06 button,.N06 input,body a:not([name]).N06{background-color:#4b5427}.N06 a:not([name]):focus,.N06 a:not([name]):hover,.N06 button:focus,.N06 button:hover,.N06 input:focus,.N06 input:hover,body a:not([name]).N06:focus,body a:not([name]).N06:hover{background-color:#705bc4}.N06 a:not([name]).active,.N06 a:not([name]) .active,.N06 a:not([name]):active,.N06 button.active,.N06 button .active,.N06 button:active,.N06 input.active,.N06 input .active,.N06 input:active,body a:not([name]).N06 .active,body a:not([name]).N06.active,body a:not([name]).N06:active{background-color:#8068e0}.N06 input[type=checkbox],.N06 input[type=radio]{background-color:#535840}.N06 input[type=checkbox]:checked,.N06 input[type=radio]:checked{background-color:#475e24}.N06 .date,.N06 .name,.N06 em{color:#50418c}.N06 abbr,.N06 rt,.N06 strong,.N06 sub,.N06 sup{background-color:#604ea8;color:#4b5427}.VGSAY,.VGSAY textarea{color:#b4bbff;background-color:#1c1a0d;border-color:#4e57a8}.VGSAY.baloon{border-color:#4e57a8}.VGSAY .fa-check{color:#5baf5f}.VGSAY .fa-warning{color:#c4766a}.VGSAY .fa-ban{color:#c4546a}.VGSAY [data-tooltip],.VGSAY [title]{background-color:#544f27}.VGSAY [data-tooltip]:after,.VGSAY [data-tooltip]:before,.VGSAY [title]:after,.VGSAY [title]:before,.VGSAY b{color:#b4bbff;background-color:#544f27}.VGSAY a:not([name]),body a:not([name]).VGSAY{color:#b4bbff}.VGSAY a:not([name]):visited,body a:not([name]).VGSAY:visited{background-color:#4f5924}.VGSAY a:not([name]):link,body a:not([name]).VGSAY:link{background-color:#5b5340}.VGSAY .active{background-color:#6875e0}.VGSAY a:not([name]),.VGSAY button,.VGSAY input,body a:not([name]).VGSAY{background-color:#544f27}.VGSAY a:not([name]):focus,.VGSAY a:not([name]):hover,.VGSAY button:focus,.VGSAY button:hover,.VGSAY input:focus,.VGSAY input:hover,body a:not([name]).VGSAY:focus,body a:not([name]).VGSAY:hover{background-color:#5b66c4}.VGSAY a:not([name]).active,.VGSAY a:not([name]) .active,.VGSAY a:not([name]):active,.VGSAY button.active,.VGSAY button .active,.VGSAY button:active,.VGSAY input.active,.VGSAY input .active,.VGSAY input:active,body a:not([name]).VGSAY.active,body a:not([name]).VGSAY .active,body a:not([name]).VGSAY:active{background-color:#6875e0}.VGSAY input[type=checkbox],.VGSAY input[type=radio]{background-color:#5b5340}.VGSAY input[type=checkbox]:checked,.VGSAY input[type=radio]:checked{background-color:#4f5924}.VGSAY .date,.VGSAY .name,.VGSAY em{color:#41498c}.VGSAY abbr,.VGSAY rt,.VGSAY strong,.VGSAY sub,.VGSAY sup{background-color:#4e57a8;color:#544f27}.GSAY,.GSAY textarea{color:#a1c3f5;background-color:#1a1309;border-color:#38609d}.GSAY.baloon{border-color:#38609d}.GSAY .fa-check{color:#55b25c}.GSAY .fa-warning{color:#bd7967}.GSAY .fa-ban{color:#bd5767}.GSAY [data-tooltip],.GSAY [title]{background-color:#4e3a1c}.GSAY [data-tooltip]:after,.GSAY [data-tooltip]:before,.GSAY [title]:after,.GSAY [title]:before,.GSAY b{color:#a1c3f5;background-color:#4e3a1c}.GSAY a:not([name]),body a:not([name]).GSAY{color:#a1c3f5}.GSAY a:not([name]):visited,body a:not([name]).GSAY:visited{background-color:#4a471a}.GSAY a:not([name]):link,body a:not([name]).GSAY:link{background-color:#564137}.GSAY .active{background-color:#4a80d1}.GSAY a:not([name]),.GSAY button,.GSAY input,body a:not([name]).GSAY{background-color:#4e3a1c}.GSAY a:not([name]):focus,.GSAY a:not([name]):hover,.GSAY button:focus,.GSAY button:hover,.GSAY input:focus,.GSAY input:hover,body a:not([name]).GSAY:focus,body a:not([name]).GSAY:hover{background-color:#4170b7}.GSAY a:not([name]).active,.GSAY a:not([name]) .active,.GSAY a:not([name]):active,.GSAY button.active,.GSAY button .active,.GSAY button:active,.GSAY input.active,.GSAY input .active,.GSAY input:active,body a:not([name]).GSAY.active,body a:not([name]).GSAY .active,body a:not([name]).GSAY:active{background-color:#4a80d1}.GSAY input[type=checkbox],.GSAY input[type=radio]{background-color:#564137}.GSAY input[type=checkbox]:checked,.GSAY input[type=radio]:checked{background-color:#4a471a}.GSAY .date,.GSAY .name,.GSAY em{color:#2e5082}.GSAY abbr,.GSAY rt,.GSAY strong,.GSAY sub,.GSAY sup{background-color:#38609d;color:#4e3a1c}.N09,.N09 textarea{color:#a1dcf5;background-color:#1a0e09}.N09,.N09 textarea,.N09.baloon{border-color:#387e9d}.N09 .fa-check{color:#55ba5c}.N09 .fa-warning{color:#bd8167}.N09 .fa-ban{color:#bd5f67}.N09 [data-tooltip],.N09 [title]{background-color:#4e2b1c}.N09 [data-tooltip]:after,.N09 [data-tooltip]:before,.N09 [title]:after,.N09 [title]:before,.N09 b{color:#a1dcf5;background-color:#4e2b1c}.N09 a:not([name]),body a:not([name]).N09{color:#a1dcf5}.N09 a:not([name]):visited,body a:not([name]).N09:visited{background-color:#4a3a1a}.N09 a:not([name]):link,body a:not([name]).N09:link{background-color:#563437}.N09 .active{background-color:#4aa8d1}.N09 a:not([name]),.N09 button,.N09 input,body a:not([name]).N09{background-color:#4e2b1c}.N09 a:not([name]):focus,.N09 a:not([name]):hover,.N09 button:focus,.N09 button:hover,.N09 input:focus,.N09 input:hover,body a:not([name]).N09:focus,body a:not([name]).N09:hover{background-color:#4193b7}.N09 a:not([name]).active,.N09 a:not([name]) .active,.N09 a:not([name]):active,.N09 button.active,.N09 button .active,.N09 button:active,.N09 input.active,.N09 input .active,.N09 input:active,body a:not([name]).N09 .active,body a:not([name]).N09.active,body a:not([name]).N09:active{background-color:#4aa8d1}.N09 input[type=checkbox],.N09 input[type=radio]{background-color:#563437}.N09 input[type=checkbox]:checked,.N09 input[type=radio]:checked{background-color:#4a3a1a}.N09 .date,.N09 .name,.N09 em{color:#2e6982}.N09 abbr,.N09 rt,.N09 strong,.N09 sub,.N09 sup{background-color:#387e9d;color:#4e2b1c}.TSAY,.TSAY textarea{color:#d0c6a1;background-color:#090b12;border-color:#706438}.TSAY.baloon{border-color:#706438}.TSAY .fa-check{color:#64b340}.TSAY .fa-warning{color:#cd7a4b}.TSAY .fa-ban{color:#cd584b}.TSAY [data-tooltip],.TSAY [title]{background-color:#1c2138}.TSAY [data-tooltip]:after,.TSAY [data-tooltip]:before,.TSAY [title]:after,.TSAY [title]:before,.TSAY b{color:#d0c6a1;background-color:#1c2138}.TSAY a:not([name]),body a:not([name]).TSAY{color:#d0c6a1}.TSAY a:not([name]):visited,body a:not([name]).TSAY:visited{background-color:#1e3133}.TSAY a:not([name]):link,body a:not([name]).TSAY:link{background-color:#2a2b4f}.TSAY .active{background-color:#95864a}.TSAY a:not([name]),.TSAY button,.TSAY input,body a:not([name]).TSAY{background-color:#1c2138}.TSAY a:not([name]):focus,.TSAY a:not([name]):hover,.TSAY button:focus,.TSAY button:hover,.TSAY input:focus,.TSAY input:hover,body a:not([name]).TSAY:focus,body a:not([name]).TSAY:hover{background-color:#827541}.TSAY a:not([name]).active,.TSAY a:not([name]) .active,.TSAY a:not([name]):active,.TSAY button.active,.TSAY button .active,.TSAY button:active,.TSAY input.active,.TSAY input .active,.TSAY input:active,body a:not([name]).TSAY.active,body a:not([name]).TSAY .active,body a:not([name]).TSAY:active{background-color:#95864a}.TSAY input[type=checkbox],.TSAY input[type=radio]{background-color:#2a2b4f}.TSAY input[type=checkbox]:checked,.TSAY input[type=radio]:checked{background-color:#1e3133}.TSAY .date,.TSAY .name,.TSAY em{color:#5d542e}.TSAY abbr,.TSAY rt,.TSAY strong,.TSAY sub,.TSAY sup{background-color:#706438;color:#1c2138}.chat .name{border-bottom:1px dashed}.talk .chat{border-width:0 0 1px 3px;margin:0 7px 0 -3px}.post,.talk .chat{border-style:none none solid solid}.post{border-width:0 0 1px 18px}.contentframe{background-color:#459}.contentframe .talk .baloon{left:-9px;border-right-width:1px}body{background-position-x:right;background-position-y:top;background-attachment:fixed;background-repeat:no-repeat;background-image:url(\"http://s3-ap-northeast-1.amazonaws.com/giji-assets/images/bg/jupiter.png\");background-color:#1a1a60}.filmend{background-image:url(\"http://s3-ap-northeast-1.amazonaws.com/giji-assets/images/bg/film-end.png\")}", ""]);

// exports


/***/ }),
/* 232 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(2)(undefined);
// imports


// module
exports.push([module.i, ".chrs,.contentframe .talk th .portrate{border-top:2px solid rgba(112,32,0,.5);border-bottom:3px solid rgba(112,32,0,.5)}.contentframe .inframe{background-repeat:repeat-y;background-position:0;background-attachment:local;background-image:url(\"http://s3-ap-northeast-1.amazonaws.com/giji-assets/images/bg/film-wa-L.png\")}.filmline{background-image:url(\"http://s3-ap-northeast-1.amazonaws.com/giji-assets/images/bg/film-wa-border.png\")}body{background:url(\"http://s3-ap-northeast-1.amazonaws.com/giji-assets/images/bg/nagatanienn.png\")}*{border-color:#333}.MAKER,.MAKER textarea{color:silver;background-color:#151515;border-color:#7e7e7e}.MAKER.baloon{border-color:#151515}.MAKER .fa-check{color:#5fb14a}.MAKER .fa-warning{color:#c87856}.MAKER .fa-ban{color:#c85656}.MAKER [data-tooltip],.MAKER [title]{background-color:#3f3f3f}.MAKER [data-tooltip]:after,.MAKER [data-tooltip]:before,.MAKER [title]:after,.MAKER [title]:before,.MAKER b{color:silver;background-color:#3f3f3f}.MAKER a:not([name]),body a:not([name]).MAKER{color:silver}.MAKER a:not([name]):visited,body a:not([name]).MAKER:visited{background-color:#3d4b39}.MAKER a:not([name]):link,body a:not([name]).MAKER:link{background-color:#484556}.MAKER .active{background-color:#a8a8a8}.MAKER a:not([name]),.MAKER button,.MAKER input,body a:not([name]).MAKER{background-color:#3f3f3f}.MAKER a:not([name]):focus,.MAKER a:not([name]):hover,.MAKER button:focus,.MAKER button:hover,.MAKER input:focus,.MAKER input:hover,body a:not([name]).MAKER:focus,body a:not([name]).MAKER:hover{background-color:#939393}.MAKER a:not([name]).active,.MAKER a:not([name]) .active,.MAKER a:not([name]):active,.MAKER button.active,.MAKER button .active,.MAKER button:active,.MAKER input.active,.MAKER input .active,.MAKER input:active,body a:not([name]).MAKER.active,body a:not([name]).MAKER .active,body a:not([name]).MAKER:active{background-color:#a8a8a8}.MAKER input[type=checkbox],.MAKER input[type=radio]{background-color:#484556}.MAKER input[type=checkbox]:checked,.MAKER input[type=radio]:checked{background-color:#3d4b39}.MAKER .date,.MAKER .name,.MAKER em{color:#696969}.MAKER abbr,.MAKER rt,.MAKER strong,.MAKER sub,.MAKER sup{background-color:#7e7e7e;color:#3f3f3f}.ADMIN,.ADMIN textarea{color:#e2cc56;background-color:#00041c;border-color:#a88d00}.ADMIN.baloon{border-color:#00041c}.ADMIN .fa-check{color:#6ab527}.ADMIN .fa-warning{color:#d37c33}.ADMIN .fa-ban{color:#d35a33}.ADMIN [data-tooltip],.ADMIN [title]{background-color:#000d54}.ADMIN [data-tooltip]:after,.ADMIN [data-tooltip]:before,.ADMIN [title]:after,.ADMIN [title]:before,.ADMIN b{color:#e2cc56;background-color:#000d54}.ADMIN a:not([name]),body a:not([name]).ADMIN{color:#e2cc56}.ADMIN a:not([name]):visited,body a:not([name]).ADMIN:visited{background-color:#051f4b}.ADMIN a:not([name]):link,body a:not([name]).ADMIN:link{background-color:#111968}.ADMIN .active{background-color:#e0bd00}.ADMIN a:not([name]),.ADMIN button,.ADMIN input,body a:not([name]).ADMIN{background-color:#000d54}.ADMIN a:not([name]):focus,.ADMIN a:not([name]):hover,.ADMIN button:focus,.ADMIN button:hover,.ADMIN input:focus,.ADMIN input:hover,body a:not([name]).ADMIN:focus,body a:not([name]).ADMIN:hover{background-color:#c4a500}.ADMIN a:not([name]).active,.ADMIN a:not([name]) .active,.ADMIN a:not([name]):active,.ADMIN button.active,.ADMIN button .active,.ADMIN button:active,.ADMIN input.active,.ADMIN input .active,.ADMIN input:active,body a:not([name]).ADMIN.active,body a:not([name]).ADMIN .active,body a:not([name]).ADMIN:active{background-color:#e0bd00}.ADMIN input[type=checkbox],.ADMIN input[type=radio]{background-color:#111968}.ADMIN input[type=checkbox]:checked,.ADMIN input[type=radio]:checked{background-color:#051f4b}.ADMIN .date,.ADMIN .name,.ADMIN em{color:#8c7600}.ADMIN abbr,.ADMIN rt,.ADMIN strong,.ADMIN sub,.ADMIN sup{background-color:#a88d00;color:#000d54}.dark,.dark textarea,.links,.links textarea,.TITLE,.TITLE textarea{color:gold;background-color:#000;border-color:#565656}.dark.baloon,.links.baloon,.TITLE.baloon{border-color:#000}.dark .fa-check,.links .fa-check,.TITLE .fa-check{color:#74b80b}.dark .fa-warning,.links .fa-warning,.TITLE .fa-warning{color:#dc7f16}.dark .fa-ban,.links .fa-ban,.TITLE .fa-ban{color:#dc5d16}.dark [data-tooltip],.dark [title],.links [data-tooltip],.links [title],.TITLE [data-tooltip],.TITLE [title]{background-color:#1e1e1e}.dark [data-tooltip]:after,.dark [data-tooltip]:before,.dark [title]:after,.dark [title]:before,.dark b,.links [data-tooltip]:after,.links [data-tooltip]:before,.links [title]:after,.links [title]:before,.links b,.TITLE [data-tooltip]:after,.TITLE [data-tooltip]:before,.TITLE [title]:after,.TITLE [title]:before,.TITLE b{color:gold;background-color:#1e1e1e}.dark a:not([name]),.links a:not([name]),.TITLE a:not([name]),body a:not([name]).dark,body a:not([name]).links,body a:not([name]).TITLE{color:gold}.dark a:not([name]):visited,.links a:not([name]):visited,.TITLE a:not([name]):visited,body a:not([name]).dark:visited,body a:not([name]).links:visited,body a:not([name]).TITLE:visited{background-color:#202e1c}.dark a:not([name]):link,.links a:not([name]):link,.TITLE a:not([name]):link,body a:not([name]).dark:link,body a:not([name]).links:link,body a:not([name]).TITLE:link{background-color:#2b2839}.dark .active,.links .active,.TITLE .active{background-color:#565656}.dark a:not([name]),.dark button,.dark input,.links a:not([name]),.links button,.links input,.TITLE a:not([name]),.TITLE button,.TITLE input,body a:not([name]).dark,body a:not([name]).links,body a:not([name]).TITLE{background-color:#1e1e1e}.dark a:not([name]):focus,.dark a:not([name]):hover,.dark button:focus,.dark button:hover,.dark input:focus,.dark input:hover,.links a:not([name]):focus,.links a:not([name]):hover,.links button:focus,.links button:hover,.links input:focus,.links input:hover,.TITLE a:not([name]):focus,.TITLE a:not([name]):hover,.TITLE button:focus,.TITLE button:hover,.TITLE input:focus,.TITLE input:hover,body a:not([name]).dark:focus,body a:not([name]).dark:hover,body a:not([name]).links:focus,body a:not([name]).links:hover,body a:not([name]).TITLE:focus,body a:not([name]).TITLE:hover{background-color:#414141}.dark a:not([name]).active,.dark a:not([name]) .active,.dark a:not([name]):active,.dark button.active,.dark button .active,.dark button:active,.dark input.active,.dark input .active,.dark input:active,.links a:not([name]).active,.links a:not([name]) .active,.links a:not([name]):active,.links button.active,.links button .active,.links button:active,.links input.active,.links input .active,.links input:active,.TITLE a:not([name]).active,.TITLE a:not([name]) .active,.TITLE a:not([name]):active,.TITLE button.active,.TITLE button .active,.TITLE button:active,.TITLE input.active,.TITLE input .active,.TITLE input:active,body a:not([name]).dark.active,body a:not([name]).dark .active,body a:not([name]).dark:active,body a:not([name]).links.active,body a:not([name]).links .active,body a:not([name]).links:active,body a:not([name]).TITLE.active,body a:not([name]).TITLE .active,body a:not([name]).TITLE:active{background-color:#565656}.dark input[type=checkbox],.dark input[type=radio],.links input[type=checkbox],.links input[type=radio],.TITLE input[type=checkbox],.TITLE input[type=radio]{background-color:#2b2839}.dark input[type=checkbox]:checked,.dark input[type=radio]:checked,.links input[type=checkbox]:checked,.links input[type=radio]:checked,.TITLE input[type=checkbox]:checked,.TITLE input[type=radio]:checked{background-color:#202e1c}.dark .date,.dark .name,.dark em,.links .date,.links .name,.links em,.TITLE .date,.TITLE .name,.TITLE em{color:#565656}.dark abbr,.dark rt,.dark strong,.dark sub,.dark sup,.links abbr,.links rt,.links strong,.links sub,.links sup,.TITLE abbr,.TITLE rt,.TITLE strong,.TITLE sub,.TITLE sup{background-color:#565656;color:#1e1e1e}.btns,.btns textarea,.chrblank,.chrblank textarea,.footer,.footer textarea,.header,.header textarea{color:gold;background-color:#4d4e46;border-color:#898a84}.btns.baloon,.chrblank.baloon,.footer.baloon,.header.baloon{border-color:#4d4e46}.btns .fa-check,.chrblank .fa-check,.footer .fa-check,.header .fa-check{color:#74b80b}.btns .fa-warning,.chrblank .fa-warning,.footer .fa-warning,.header .fa-warning{color:#dc7f16}.btns .fa-ban,.chrblank .fa-ban,.footer .fa-ban,.header .fa-ban{color:#dc5d16}.btns [data-tooltip],.btns [title],.chrblank [data-tooltip],.chrblank [title],.footer [data-tooltip],.footer [title],.header [data-tooltip],.header [title]{background-color:#62635c}.btns [data-tooltip]:after,.btns [data-tooltip]:before,.btns [title]:after,.btns [title]:before,.btns b,.chrblank [data-tooltip]:after,.chrblank [data-tooltip]:before,.chrblank [title]:after,.chrblank [title]:before,.chrblank b,.footer [data-tooltip]:after,.footer [data-tooltip]:before,.footer [title]:after,.footer [title]:before,.footer b,.header [data-tooltip]:after,.header [data-tooltip]:before,.header [title]:after,.header [title]:before,.header b{color:gold;background-color:#62635c}.btns a:not([name]),.chrblank a:not([name]),.footer a:not([name]),.header a:not([name]),body a:not([name]).btns,body a:not([name]).chrblank,body a:not([name]).footer,body a:not([name]).header{color:gold}.btns a:not([name]):visited,.chrblank a:not([name]):visited,.footer a:not([name]):visited,.header a:not([name]):visited,body a:not([name]).btns:visited,body a:not([name]).chrblank:visited,body a:not([name]).footer:visited,body a:not([name]).header:visited{background-color:#5c6b53}.btns a:not([name]):link,.chrblank a:not([name]):link,.footer a:not([name]):link,.header a:not([name]):link,body a:not([name]).btns:link,body a:not([name]).chrblank:link,body a:not([name]).footer:link,body a:not([name]).header:link{background-color:#67656f}.btns .active,.chrblank .active,.footer .active,.header .active{background-color:#80817c}.btns a:not([name]),.btns button,.btns input,.chrblank a:not([name]),.chrblank button,.chrblank input,.footer a:not([name]),.footer button,.footer input,.header a:not([name]),.header button,.header input,body a:not([name]).btns,body a:not([name]).chrblank,body a:not([name]).footer,body a:not([name]).header{background-color:#62635c}.btns a:not([name]):focus,.btns a:not([name]):hover,.btns button:focus,.btns button:hover,.btns input:focus,.btns input:hover,.chrblank a:not([name]):focus,.chrblank a:not([name]):hover,.chrblank button:focus,.chrblank button:hover,.chrblank input:focus,.chrblank input:hover,.footer a:not([name]):focus,.footer a:not([name]):hover,.footer button:focus,.footer button:hover,.footer input:focus,.footer input:hover,.header a:not([name]):focus,.header a:not([name]):hover,.header button:focus,.header button:hover,.header input:focus,.header input:hover,body a:not([name]).btns:focus,body a:not([name]).btns:hover,body a:not([name]).chrblank:focus,body a:not([name]).chrblank:hover,body a:not([name]).footer:focus,body a:not([name]).footer:hover,body a:not([name]).header:focus,body a:not([name]).header:hover{background-color:#74746f}.btns a:not([name]).active,.btns a:not([name]) .active,.btns a:not([name]):active,.btns button.active,.btns button .active,.btns button:active,.btns input.active,.btns input .active,.btns input:active,.chrblank a:not([name]).active,.chrblank a:not([name]) .active,.chrblank a:not([name]):active,.chrblank button.active,.chrblank button .active,.chrblank button:active,.chrblank input.active,.chrblank input .active,.chrblank input:active,.footer a:not([name]).active,.footer a:not([name]) .active,.footer a:not([name]):active,.footer button.active,.footer button .active,.footer button:active,.footer input.active,.footer input .active,.footer input:active,.header a:not([name]).active,.header a:not([name]) .active,.header a:not([name]):active,.header button.active,.header button .active,.header button:active,.header input.active,.header input .active,.header input:active,body a:not([name]).btns.active,body a:not([name]).btns .active,body a:not([name]).btns:active,body a:not([name]).chrblank.active,body a:not([name]).chrblank .active,body a:not([name]).chrblank:active,body a:not([name]).footer.active,body a:not([name]).footer .active,body a:not([name]).footer:active,body a:not([name]).header.active,body a:not([name]).header .active,body a:not([name]).header:active{background-color:#80817c}.btns input[type=checkbox],.btns input[type=radio],.chrblank input[type=checkbox],.chrblank input[type=radio],.footer input[type=checkbox],.footer input[type=radio],.header input[type=checkbox],.header input[type=radio]{background-color:#67656f}.btns input[type=checkbox]:checked,.btns input[type=radio]:checked,.chrblank input[type=checkbox]:checked,.chrblank input[type=radio]:checked,.footer input[type=checkbox]:checked,.footer input[type=radio]:checked,.header input[type=checkbox]:checked,.header input[type=radio]:checked{background-color:#5c6b53}.btns .date,.btns .name,.btns em,.chrblank .date,.chrblank .name,.chrblank em,.footer .date,.footer .name,.footer em,.header .date,.header .name,.header em{color:#898a84}.btns abbr,.btns rt,.btns strong,.btns sub,.btns sup,.chrblank abbr,.chrblank rt,.chrblank strong,.chrblank sub,.chrblank sup,.footer abbr,.footer rt,.footer strong,.footer sub,.footer sup,.header abbr,.header rt,.header strong,.header sub,.header sup{background-color:#898a84;color:#62635c}.public,.public textarea{color:gold;background-color:#332509;border-color:#786f5c}.public.baloon{border-color:#332509}.public .fa-check{color:#74b80b}.public .fa-warning{color:#dc7f16}.public .fa-ban{color:#dc5d16}.public [data-tooltip],.public [title]{background-color:#4b3f26}.public [data-tooltip]:after,.public [data-tooltip]:before,.public [title]:after,.public [title]:before,.public b{color:gold;background-color:#4b3f26}.public a:not([name]),body a:not([name]).public{color:gold}.public a:not([name]):visited,body a:not([name]).public:visited{background-color:#474b23}.public a:not([name]):link,body a:not([name]).public:link{background-color:#534540}.public .active{background-color:#726a5b}.public a:not([name]),.public button,.public input,body a:not([name]).public{background-color:#4b3f26}.public a:not([name]):focus,.public a:not([name]):hover,.public button:focus,.public button:hover,.public input:focus,.public input:hover,body a:not([name]).public:focus,body a:not([name]).public:hover{background-color:#625947}.public a:not([name]).active,.public a:not([name]) .active,.public a:not([name]):active,.public button.active,.public button .active,.public button:active,.public input.active,.public input .active,.public input:active,body a:not([name]).public.active,body a:not([name]).public .active,body a:not([name]).public:active{background-color:#726a5b}.public input[type=checkbox],.public input[type=radio]{background-color:#534540}.public input[type=checkbox]:checked,.public input[type=radio]:checked{background-color:#474b23}.public .date,.public .name,.public em{color:#786f5c}.public abbr,.public rt,.public strong,.public sub,.public sup{background-color:#786f5c;color:#4b3f26}.private,.private textarea{color:gold;background-color:#090a33;border-color:#5c5d78}.private.baloon{border-color:#090a33}.private .fa-check{color:#74b80b}.private .fa-warning{color:#dc7f16}.private .fa-ban{color:#dc5d16}.private [data-tooltip],.private [title]{background-color:#26274b}.private [data-tooltip]:after,.private [data-tooltip]:before,.private [title]:after,.private [title]:before,.private b{color:gold;background-color:#26274b}.private a:not([name]),body a:not([name]).private{color:gold}.private a:not([name]):visited,body a:not([name]).private:visited{background-color:#273644}.private a:not([name]):link,body a:not([name]).private:link{background-color:#323060}.private .active{background-color:#5b5b72}.private a:not([name]),.private button,.private input,body a:not([name]).private{background-color:#26274b}.private a:not([name]):focus,.private a:not([name]):hover,.private button:focus,.private button:hover,.private input:focus,.private input:hover,body a:not([name]).private:focus,body a:not([name]).private:hover{background-color:#474762}.private a:not([name]).active,.private a:not([name]) .active,.private a:not([name]):active,.private button.active,.private button .active,.private button:active,.private input.active,.private input .active,.private input:active,body a:not([name]).private.active,body a:not([name]).private .active,body a:not([name]).private:active{background-color:#5b5b72}.private input[type=checkbox],.private input[type=radio]{background-color:#323060}.private input[type=checkbox]:checked,.private input[type=radio]:checked{background-color:#273644}.private .date,.private .name,.private em{color:#5c5d78}.private abbr,.private rt,.private strong,.private sub,.private sup{background-color:#5c5d78;color:#26274b}.HATER,.HATER textarea,.LONEWOLF,.LONEWOLF textarea{color:#0b4343;background-color:#7ac5c5;border-color:#4abbb5}.HATER.baloon,.LONEWOLF.baloon{border-color:#7ac5c5}.HATER .fa-check,.LONEWOLF .fa-check{color:#238821}.HATER .fa-warning,.LONEWOLF .fa-warning{color:#8c4f2c}.HATER .fa-ban,.LONEWOLF .fa-ban{color:#8c2c2c}.HATER [data-tooltip],.HATER [title],.LONEWOLF [data-tooltip],.LONEWOLF [title]{background-color:#85e2e2}.HATER [data-tooltip]:after,.HATER [data-tooltip]:before,.HATER [title]:after,.HATER [title]:before,.HATER b,.LONEWOLF [data-tooltip]:after,.LONEWOLF [data-tooltip]:before,.LONEWOLF [title]:after,.LONEWOLF [title]:before,.LONEWOLF b{color:#0b4343;background-color:#85e2e2}.HATER a:not([name]),.LONEWOLF a:not([name]),body a:not([name]).HATER,body a:not([name]).LONEWOLF{color:#0b4343}.HATER a:not([name]):visited,.LONEWOLF a:not([name]):visited,body a:not([name]).HATER:visited,body a:not([name]).LONEWOLF:visited{background-color:#7adbc8}.HATER a:not([name]):link,.LONEWOLF a:not([name]):link,body a:not([name]).HATER:link,body a:not([name]).LONEWOLF:link{background-color:#86d5e5}.HATER .active,.LONEWOLF .active{background-color:#227f7f}.HATER a:not([name]),.HATER button,.HATER input,.LONEWOLF a:not([name]),.LONEWOLF button,.LONEWOLF input,body a:not([name]).HATER,body a:not([name]).LONEWOLF{background-color:#85e2e2}.HATER a:not([name]):focus,.HATER a:not([name]):hover,.HATER button:focus,.HATER button:hover,.HATER input:focus,.HATER input:hover,.LONEWOLF a:not([name]):focus,.LONEWOLF a:not([name]):hover,.LONEWOLF button:focus,.LONEWOLF button:hover,.LONEWOLF input:focus,.LONEWOLF input:hover,body a:not([name]).HATER:focus,body a:not([name]).HATER:hover,body a:not([name]).LONEWOLF:focus,body a:not([name]).LONEWOLF:hover{background-color:#229292}.HATER a:not([name]).active,.HATER a:not([name]) .active,.HATER a:not([name]):active,.HATER button.active,.HATER button .active,.HATER button:active,.HATER input.active,.HATER input .active,.HATER input:active,.LONEWOLF a:not([name]).active,.LONEWOLF a:not([name]) .active,.LONEWOLF a:not([name]):active,.LONEWOLF button.active,.LONEWOLF button .active,.LONEWOLF button:active,.LONEWOLF input.active,.LONEWOLF input .active,.LONEWOLF input:active,body a:not([name]).HATER.active,body a:not([name]).HATER .active,body a:not([name]).HATER:active,body a:not([name]).LONEWOLF.active,body a:not([name]).LONEWOLF .active,body a:not([name]).LONEWOLF:active{background-color:#227f7f}.HATER input[type=checkbox],.HATER input[type=radio],.LONEWOLF input[type=checkbox],.LONEWOLF input[type=radio]{background-color:#86d5e5}.HATER input[type=checkbox]:checked,.HATER input[type=radio]:checked,.LONEWOLF input[type=checkbox]:checked,.LONEWOLF input[type=radio]:checked{background-color:#7adbc8}.HATER .date,.HATER .name,.HATER em,.LONEWOLF .date,.LONEWOLF .name,.LONEWOLF em{color:#0b4343}.HATER abbr,.HATER rt,.HATER strong,.HATER sub,.HATER sup,.LONEWOLF abbr,.LONEWOLF rt,.LONEWOLF strong,.LONEWOLF sub,.LONEWOLF sup{background-color:#4abbb5;color:#85e2e2}.GURU,.GURU textarea,.PIXI,.PIXI textarea{color:#053819;background-color:#73b68d;border-color:#3fa462}.GURU.baloon,.PIXI.baloon{border-color:#73b68d}.GURU .fa-check,.PIXI .fa-check{color:#218413}.GURU .fa-warning,.PIXI .fa-warning{color:#8a4b1f}.GURU .fa-ban,.PIXI .fa-ban{color:#8a291f}.GURU [data-tooltip],.GURU [title],.PIXI [data-tooltip],.PIXI [title]{background-color:#7cd09d}.GURU [data-tooltip]:after,.GURU [data-tooltip]:before,.GURU [title]:after,.GURU [title]:before,.GURU b,.PIXI [data-tooltip]:after,.PIXI [data-tooltip]:before,.PIXI [title]:after,.PIXI [title]:before,.PIXI b{color:#053819;background-color:#7cd09d}.GURU a:not([name]),.PIXI a:not([name]),body a:not([name]).GURU,body a:not([name]).PIXI{color:#053819}.GURU a:not([name]):visited,.PIXI a:not([name]):visited,body a:not([name]).GURU:visited,body a:not([name]).PIXI:visited{background-color:#72cb8c}.GURU a:not([name]):link,.PIXI a:not([name]):link,body a:not([name]).GURU:link,body a:not([name]).PIXI:link{background-color:#7ec5a8}.GURU .active,.PIXI .active{background-color:#186c3a}.GURU a:not([name]),.GURU button,.GURU input,.PIXI a:not([name]),.PIXI button,.PIXI input,body a:not([name]).GURU,body a:not([name]).PIXI{background-color:#7cd09d}.GURU a:not([name]):focus,.GURU a:not([name]):hover,.GURU button:focus,.GURU button:hover,.GURU input:focus,.GURU input:hover,.PIXI a:not([name]):focus,.PIXI a:not([name]):hover,.PIXI button:focus,.PIXI button:hover,.PIXI input:focus,.PIXI input:hover,body a:not([name]).GURU:focus,body a:not([name]).GURU:hover,body a:not([name]).PIXI:focus,body a:not([name]).PIXI:hover{background-color:#167b3f}.GURU a:not([name]).active,.GURU a:not([name]) .active,.GURU a:not([name]):active,.GURU button.active,.GURU button .active,.GURU button:active,.GURU input.active,.GURU input .active,.GURU input:active,.PIXI a:not([name]).active,.PIXI a:not([name]) .active,.PIXI a:not([name]):active,.PIXI button.active,.PIXI button .active,.PIXI button:active,.PIXI input.active,.PIXI input .active,.PIXI input:active,body a:not([name]).GURU.active,body a:not([name]).GURU .active,body a:not([name]).GURU:active,body a:not([name]).PIXI.active,body a:not([name]).PIXI .active,body a:not([name]).PIXI:active{background-color:#186c3a}.GURU input[type=checkbox],.GURU input[type=radio],.PIXI input[type=checkbox],.PIXI input[type=radio]{background-color:#7ec5a8}.GURU input[type=checkbox]:checked,.GURU input[type=radio]:checked,.PIXI input[type=checkbox]:checked,.PIXI input[type=radio]:checked{background-color:#72cb8c}.GURU .date,.GURU .name,.GURU em,.PIXI .date,.PIXI .name,.PIXI em{color:#053819}.GURU abbr,.GURU rt,.GURU strong,.GURU sub,.GURU sup,.PIXI abbr,.PIXI rt,.PIXI strong,.PIXI sub,.PIXI sup{background-color:#3fa462;color:#7cd09d}.EVIL,.EVIL textarea{color:#0f3805;background-color:#80b673;border-color:#53a43a}.EVIL.baloon{border-color:#80b673}.EVIL .fa-check{color:#25840d}.EVIL .fa-warning{color:#8d4b18}.EVIL .fa-ban{color:#8d2918}.EVIL [data-tooltip],.EVIL [title]{background-color:#8dd07c}.EVIL [data-tooltip]:after,.EVIL [data-tooltip]:before,.EVIL [title]:after,.EVIL [title]:before,.EVIL b{color:#0f3805;background-color:#8dd07c}.EVIL a:not([name]),body a:not([name]).EVIL{color:#0f3805}.EVIL a:not([name]):visited,body a:not([name]).EVIL:visited{background-color:#81cb6f}.EVIL a:not([name]):link,body a:not([name]).EVIL:link{background-color:#8dc58b}.EVIL .active{background-color:#296c18}.EVIL a:not([name]),.EVIL button,.EVIL input,body a:not([name]).EVIL{background-color:#8dd07c}.EVIL a:not([name]):focus,.EVIL a:not([name]):hover,.EVIL button:focus,.EVIL button:hover,.EVIL input:focus,.EVIL input:hover,body a:not([name]).EVIL:focus,body a:not([name]).EVIL:hover{background-color:#2b7b16}.EVIL a:not([name]).active,.EVIL a:not([name]) .active,.EVIL a:not([name]):active,.EVIL button.active,.EVIL button .active,.EVIL button:active,.EVIL input.active,.EVIL input .active,.EVIL input:active,body a:not([name]).EVIL.active,body a:not([name]).EVIL .active,body a:not([name]).EVIL:active{background-color:#296c18}.EVIL input[type=checkbox],.EVIL input[type=radio]{background-color:#8dc58b}.EVIL input[type=checkbox]:checked,.EVIL input[type=radio]:checked{background-color:#81cb6f}.EVIL .date,.EVIL .name,.EVIL em{color:#0f3805}.EVIL abbr,.EVIL rt,.EVIL strong,.EVIL sub,.EVIL sup{background-color:#53a43a;color:#8dd07c}.DISH,.DISH textarea,.HUMAN,.HUMAN textarea,.juror,.juror textarea,.live,.live textarea{color:#43360b;background-color:#c5b37a;border-color:#baa045}.DISH.baloon,.HUMAN.baloon,.juror.baloon,.live.baloon{border-color:#c5b37a}.DISH .fa-check,.HUMAN .fa-check,.juror .fa-check,.live .fa-check{color:#36830f}.DISH .fa-warning,.HUMAN .fa-warning,.juror .fa-warning,.live .fa-warning{color:#9e4a1a}.DISH .fa-ban,.HUMAN .fa-ban,.juror .fa-ban,.live .fa-ban{color:#9e281a}.DISH [data-tooltip],.DISH [title],.HUMAN [data-tooltip],.HUMAN [title],.juror [data-tooltip],.juror [title],.live [data-tooltip],.live [title]{background-color:#e2cc85}.DISH [data-tooltip]:after,.DISH [data-tooltip]:before,.DISH [title]:after,.DISH [title]:before,.DISH b,.HUMAN [data-tooltip]:after,.HUMAN [data-tooltip]:before,.HUMAN [title]:after,.HUMAN [title]:before,.HUMAN b,.juror [data-tooltip]:after,.juror [data-tooltip]:before,.juror [title]:after,.juror [title]:before,.juror b,.live [data-tooltip]:after,.live [data-tooltip]:before,.live [title]:after,.live [title]:before,.live b{color:#43360b;background-color:#e2cc85}.DISH a:not([name]),.HUMAN a:not([name]),.juror a:not([name]),.live a:not([name]),body a:not([name]).DISH,body a:not([name]).HUMAN,body a:not([name]).juror,body a:not([name]).live{color:#43360b}.DISH a:not([name]):visited,.HUMAN a:not([name]):visited,.juror a:not([name]):visited,.live a:not([name]):visited,body a:not([name]).DISH:visited,body a:not([name]).HUMAN:visited,body a:not([name]).juror:visited,body a:not([name]).live:visited{background-color:#ccc777}.DISH a:not([name]):link,.HUMAN a:not([name]):link,.juror a:not([name]):link,.live a:not([name]):link,body a:not([name]).DISH:link,body a:not([name]).HUMAN:link,body a:not([name]).juror:link,body a:not([name]).live:link{background-color:#d8c193}.DISH .active,.HUMAN .active,.juror .active,.live .active{background-color:#7f6922}.DISH a:not([name]),.DISH button,.DISH input,.HUMAN a:not([name]),.HUMAN button,.HUMAN input,.juror a:not([name]),.juror button,.juror input,.live a:not([name]),.live button,.live input,body a:not([name]).DISH,body a:not([name]).HUMAN,body a:not([name]).juror,body a:not([name]).live{background-color:#e2cc85}.DISH a:not([name]):focus,.DISH a:not([name]):hover,.DISH button:focus,.DISH button:hover,.DISH input:focus,.DISH input:hover,.HUMAN a:not([name]):focus,.HUMAN a:not([name]):hover,.HUMAN button:focus,.HUMAN button:hover,.HUMAN input:focus,.HUMAN input:hover,.juror a:not([name]):focus,.juror a:not([name]):hover,.juror button:focus,.juror button:hover,.juror input:focus,.juror input:hover,.live a:not([name]):focus,.live a:not([name]):hover,.live button:focus,.live button:hover,.live input:focus,.live input:hover,body a:not([name]).DISH:focus,body a:not([name]).DISH:hover,body a:not([name]).HUMAN:focus,body a:not([name]).HUMAN:hover,body a:not([name]).juror:focus,body a:not([name]).juror:hover,body a:not([name]).live:focus,body a:not([name]).live:hover{background-color:#927722}.DISH a:not([name]).active,.DISH a:not([name]) .active,.DISH a:not([name]):active,.DISH button.active,.DISH button .active,.DISH button:active,.DISH input.active,.DISH input .active,.DISH input:active,.HUMAN a:not([name]).active,.HUMAN a:not([name]) .active,.HUMAN a:not([name]):active,.HUMAN button.active,.HUMAN button .active,.HUMAN button:active,.HUMAN input.active,.HUMAN input .active,.HUMAN input:active,.juror a:not([name]).active,.juror a:not([name]) .active,.juror a:not([name]):active,.juror button.active,.juror button .active,.juror button:active,.juror input.active,.juror input .active,.juror input:active,.live a:not([name]).active,.live a:not([name]) .active,.live a:not([name]):active,.live button.active,.live button .active,.live button:active,.live input.active,.live input .active,.live input:active,body a:not([name]).DISH.active,body a:not([name]).DISH .active,body a:not([name]).DISH:active,body a:not([name]).HUMAN.active,body a:not([name]).HUMAN .active,body a:not([name]).HUMAN:active,body a:not([name]).juror.active,body a:not([name]).juror .active,body a:not([name]).juror:active,body a:not([name]).live.active,body a:not([name]).live .active,body a:not([name]).live:active{background-color:#7f6922}.DISH input[type=checkbox],.DISH input[type=radio],.HUMAN input[type=checkbox],.HUMAN input[type=radio],.juror input[type=checkbox],.juror input[type=radio],.live input[type=checkbox],.live input[type=radio]{background-color:#d8c193}.DISH input[type=checkbox]:checked,.DISH input[type=radio]:checked,.HUMAN input[type=checkbox]:checked,.HUMAN input[type=radio]:checked,.juror input[type=checkbox]:checked,.juror input[type=radio]:checked,.live input[type=checkbox]:checked,.live input[type=radio]:checked{background-color:#ccc777}.DISH .date,.DISH .name,.DISH em,.HUMAN .date,.HUMAN .name,.HUMAN em,.juror .date,.juror .name,.juror em,.live .date,.live .name,.live em{color:#43360b}.DISH abbr,.DISH rt,.DISH strong,.DISH sub,.DISH sup,.HUMAN abbr,.HUMAN rt,.HUMAN strong,.HUMAN sub,.HUMAN sup,.juror abbr,.juror rt,.juror strong,.juror sub,.juror sup,.live abbr,.live rt,.live strong,.live sub,.live sup{background-color:#baa045;color:#e2cc85}.cursed,.cursed textarea,.droop,.droop textarea,.feared,.feared textarea,.suicide,.suicide textarea,.victim,.victim textarea,.WOLF,.WOLF textarea{color:#430b0b;background-color:#c57a7a;border-color:#ba4a45}.cursed.baloon,.droop.baloon,.feared.baloon,.suicide.baloon,.victim.baloon,.WOLF.baloon{border-color:#c57a7a}.cursed .fa-check,.droop .fa-check,.feared .fa-check,.suicide .fa-check,.victim .fa-check,.WOLF .fa-check{color:#36750f}.cursed .fa-warning,.droop .fa-warning,.feared .fa-warning,.suicide .fa-warning,.victim .fa-warning,.WOLF .fa-warning{color:#9e3c1a}.cursed .fa-ban,.droop .fa-ban,.feared .fa-ban,.suicide .fa-ban,.victim .fa-ban,.WOLF .fa-ban{color:#9e1a1a}.cursed [data-tooltip],.cursed [title],.droop [data-tooltip],.droop [title],.feared [data-tooltip],.feared [title],.suicide [data-tooltip],.suicide [title],.victim [data-tooltip],.victim [title],.WOLF [data-tooltip],.WOLF [title]{background-color:#e28585}.cursed [data-tooltip]:after,.cursed [data-tooltip]:before,.cursed [title]:after,.cursed [title]:before,.cursed b,.droop [data-tooltip]:after,.droop [data-tooltip]:before,.droop [title]:after,.droop [title]:before,.droop b,.feared [data-tooltip]:after,.feared [data-tooltip]:before,.feared [title]:after,.feared [title]:before,.feared b,.suicide [data-tooltip]:after,.suicide [data-tooltip]:before,.suicide [title]:after,.suicide [title]:before,.suicide b,.victim [data-tooltip]:after,.victim [data-tooltip]:before,.victim [title]:after,.victim [title]:before,.victim b,.WOLF [data-tooltip]:after,.WOLF [data-tooltip]:before,.WOLF [title]:after,.WOLF [title]:before,.WOLF b{color:#430b0b;background-color:#e28585}.cursed a:not([name]),.droop a:not([name]),.feared a:not([name]),.suicide a:not([name]),.victim a:not([name]),.WOLF a:not([name]),body a:not([name]).cursed,body a:not([name]).droop,body a:not([name]).feared,body a:not([name]).suicide,body a:not([name]).victim,body a:not([name]).WOLF{color:#430b0b}.cursed a:not([name]):visited,.droop a:not([name]):visited,.feared a:not([name]):visited,.suicide a:not([name]):visited,.victim a:not([name]):visited,.WOLF a:not([name]):visited,body a:not([name]).cursed:visited,body a:not([name]).droop:visited,body a:not([name]).feared:visited,body a:not([name]).suicide:visited,body a:not([name]).victim:visited,body a:not([name]).WOLF:visited{background-color:#cc8977}.cursed a:not([name]):link,.droop a:not([name]):link,.feared a:not([name]):link,.suicide a:not([name]):link,.victim a:not([name]):link,.WOLF a:not([name]):link,body a:not([name]).cursed:link,body a:not([name]).droop:link,body a:not([name]).feared:link,body a:not([name]).suicide:link,body a:not([name]).victim:link,body a:not([name]).WOLF:link{background-color:#d88393}.cursed .active,.droop .active,.feared .active,.suicide .active,.victim .active,.WOLF .active{background-color:#7f2222}.cursed a:not([name]),.cursed button,.cursed input,.droop a:not([name]),.droop button,.droop input,.feared a:not([name]),.feared button,.feared input,.suicide a:not([name]),.suicide button,.suicide input,.victim a:not([name]),.victim button,.victim input,.WOLF a:not([name]),.WOLF button,.WOLF input,body a:not([name]).cursed,body a:not([name]).droop,body a:not([name]).feared,body a:not([name]).suicide,body a:not([name]).victim,body a:not([name]).WOLF{background-color:#e28585}.cursed a:not([name]):focus,.cursed a:not([name]):hover,.cursed button:focus,.cursed button:hover,.cursed input:focus,.cursed input:hover,.droop a:not([name]):focus,.droop a:not([name]):hover,.droop button:focus,.droop button:hover,.droop input:focus,.droop input:hover,.feared a:not([name]):focus,.feared a:not([name]):hover,.feared button:focus,.feared button:hover,.feared input:focus,.feared input:hover,.suicide a:not([name]):focus,.suicide a:not([name]):hover,.suicide button:focus,.suicide button:hover,.suicide input:focus,.suicide input:hover,.victim a:not([name]):focus,.victim a:not([name]):hover,.victim button:focus,.victim button:hover,.victim input:focus,.victim input:hover,.WOLF a:not([name]):focus,.WOLF a:not([name]):hover,.WOLF button:focus,.WOLF button:hover,.WOLF input:focus,.WOLF input:hover,body a:not([name]).cursed:focus,body a:not([name]).cursed:hover,body a:not([name]).droop:focus,body a:not([name]).droop:hover,body a:not([name]).feared:focus,body a:not([name]).feared:hover,body a:not([name]).suicide:focus,body a:not([name]).suicide:hover,body a:not([name]).victim:focus,body a:not([name]).victim:hover,body a:not([name]).WOLF:focus,body a:not([name]).WOLF:hover{background-color:#922222}.cursed a:not([name]).active,.cursed a:not([name]) .active,.cursed a:not([name]):active,.cursed button.active,.cursed button .active,.cursed button:active,.cursed input.active,.cursed input .active,.cursed input:active,.droop a:not([name]).active,.droop a:not([name]) .active,.droop a:not([name]):active,.droop button.active,.droop button .active,.droop button:active,.droop input.active,.droop input .active,.droop input:active,.feared a:not([name]).active,.feared a:not([name]) .active,.feared a:not([name]):active,.feared button.active,.feared button .active,.feared button:active,.feared input.active,.feared input .active,.feared input:active,.suicide a:not([name]).active,.suicide a:not([name]) .active,.suicide a:not([name]):active,.suicide button.active,.suicide button .active,.suicide button:active,.suicide input.active,.suicide input .active,.suicide input:active,.victim a:not([name]).active,.victim a:not([name]) .active,.victim a:not([name]):active,.victim button.active,.victim button .active,.victim button:active,.victim input.active,.victim input .active,.victim input:active,.WOLF a:not([name]).active,.WOLF a:not([name]) .active,.WOLF a:not([name]):active,.WOLF button.active,.WOLF button .active,.WOLF button:active,.WOLF input.active,.WOLF input .active,.WOLF input:active,body a:not([name]).cursed.active,body a:not([name]).cursed .active,body a:not([name]).cursed:active,body a:not([name]).droop.active,body a:not([name]).droop .active,body a:not([name]).droop:active,body a:not([name]).feared.active,body a:not([name]).feared .active,body a:not([name]).feared:active,body a:not([name]).suicide.active,body a:not([name]).suicide .active,body a:not([name]).suicide:active,body a:not([name]).victim.active,body a:not([name]).victim .active,body a:not([name]).victim:active,body a:not([name]).WOLF.active,body a:not([name]).WOLF .active,body a:not([name]).WOLF:active{background-color:#7f2222}.cursed input[type=checkbox],.cursed input[type=radio],.droop input[type=checkbox],.droop input[type=radio],.feared input[type=checkbox],.feared input[type=radio],.suicide input[type=checkbox],.suicide input[type=radio],.victim input[type=checkbox],.victim input[type=radio],.WOLF input[type=checkbox],.WOLF input[type=radio]{background-color:#d88393}.cursed input[type=checkbox]:checked,.cursed input[type=radio]:checked,.droop input[type=checkbox]:checked,.droop input[type=radio]:checked,.feared input[type=checkbox]:checked,.feared input[type=radio]:checked,.suicide input[type=checkbox]:checked,.suicide input[type=radio]:checked,.victim input[type=checkbox]:checked,.victim input[type=radio]:checked,.WOLF input[type=checkbox]:checked,.WOLF input[type=radio]:checked{background-color:#cc8977}.cursed .date,.cursed .name,.cursed em,.droop .date,.droop .name,.droop em,.feared .date,.feared .name,.feared em,.suicide .date,.suicide .name,.suicide em,.victim .date,.victim .name,.victim em,.WOLF .date,.WOLF .name,.WOLF em{color:#430b0b}.cursed abbr,.cursed rt,.cursed strong,.cursed sub,.cursed sup,.droop abbr,.droop rt,.droop strong,.droop sub,.droop sup,.feared abbr,.feared rt,.feared strong,.feared sub,.feared sup,.suicide abbr,.suicide rt,.suicide strong,.suicide sub,.suicide sup,.victim abbr,.victim rt,.victim strong,.victim sub,.victim sup,.WOLF abbr,.WOLF rt,.WOLF strong,.WOLF sub,.WOLF sup{background-color:#ba4a45;color:#e28585}.LOVER,.LOVER textarea{color:#441c4e;background-color:#c690d4;border-color:#bc6ccc}.LOVER.baloon{border-color:#c690d4}.LOVER .fa-check{color:#367b25}.LOVER .fa-warning{color:#9f4230}.LOVER .fa-ban{color:#9f2030}.LOVER [data-tooltip],.LOVER [title]{background-color:#e4a1f5}.LOVER [data-tooltip]:after,.LOVER [data-tooltip]:before,.LOVER [title]:after,.LOVER [title]:before,.LOVER b{color:#441c4e;background-color:#e4a1f5}.LOVER a:not([name]),body a:not([name]).LOVER{color:#441c4e}.LOVER a:not([name]):visited,body a:not([name]).LOVER:visited{background-color:#cea2d9}.LOVER a:not([name]):link,body a:not([name]).LOVER:link{background-color:#da9bf6}.LOVER .active{background-color:#813e92}.LOVER a:not([name]),.LOVER button,.LOVER input,body a:not([name]).LOVER{background-color:#e4a1f5}.LOVER a:not([name]):focus,.LOVER a:not([name]):hover,.LOVER button:focus,.LOVER button:hover,.LOVER input:focus,.LOVER input:hover,body a:not([name]).LOVER:focus,body a:not([name]).LOVER:hover{background-color:#9443a8}.LOVER a:not([name]).active,.LOVER a:not([name]) .active,.LOVER a:not([name]):active,.LOVER button.active,.LOVER button .active,.LOVER button:active,.LOVER input.active,.LOVER input .active,.LOVER input:active,body a:not([name]).LOVER.active,body a:not([name]).LOVER .active,body a:not([name]).LOVER:active{background-color:#813e92}.LOVER input[type=checkbox],.LOVER input[type=radio]{background-color:#da9bf6}.LOVER input[type=checkbox]:checked,.LOVER input[type=radio]:checked{background-color:#cea2d9}.LOVER .date,.LOVER .name,.LOVER em{color:#441c4e}.LOVER abbr,.LOVER rt,.LOVER strong,.LOVER sub,.LOVER sup{background-color:#bc6ccc;color:#e4a1f5}.alive,.alive textarea,.grave,.grave textarea,.mob,.MOB,.MOB textarea,.mob textarea,.NONE,.NONE textarea,.visiter,.visiter textarea{color:#432c0b;background-color:#c5a77a;border-color:#ba8e45}.alive.baloon,.grave.baloon,.MOB.baloon,.mob.baloon,.NONE.baloon,.visiter.baloon{border-color:#c5a77a}.alive .fa-check,.grave .fa-check,.MOB .fa-check,.mob .fa-check,.NONE .fa-check,.visiter .fa-check{color:#36800f}.alive .fa-warning,.grave .fa-warning,.MOB .fa-warning,.mob .fa-warning,.NONE .fa-warning,.visiter .fa-warning{color:#9e471a}.alive .fa-ban,.grave .fa-ban,.MOB .fa-ban,.mob .fa-ban,.NONE .fa-ban,.visiter .fa-ban{color:#9e251a}.alive [data-tooltip],.alive [title],.grave [data-tooltip],.grave [title],.MOB [data-tooltip],.mob [data-tooltip],.mob [title],.MOB [title],.NONE [data-tooltip],.NONE [title],.visiter [data-tooltip],.visiter [title]{background-color:#e2bd85}.alive [data-tooltip]:after,.alive [data-tooltip]:before,.alive [title]:after,.alive [title]:before,.alive b,.grave [data-tooltip]:after,.grave [data-tooltip]:before,.grave [title]:after,.grave [title]:before,.grave b,.MOB [data-tooltip]:after,.mob [data-tooltip]:after,.MOB [data-tooltip]:before,.mob [data-tooltip]:before,.MOB [title]:after,.mob [title]:after,.mob [title]:before,.MOB [title]:before,.mob b,.MOB b,.NONE [data-tooltip]:after,.NONE [data-tooltip]:before,.NONE [title]:after,.NONE [title]:before,.NONE b,.visiter [data-tooltip]:after,.visiter [data-tooltip]:before,.visiter [title]:after,.visiter [title]:before,.visiter b{color:#432c0b;background-color:#e2bd85}.alive a:not([name]),.grave a:not([name]),.mob a:not([name]),.MOB a:not([name]),.NONE a:not([name]),.visiter a:not([name]),body a:not([name]).alive,body a:not([name]).grave,body a:not([name]).MOB,body a:not([name]).mob,body a:not([name]).NONE,body a:not([name]).visiter{color:#432c0b}.alive a:not([name]):visited,.grave a:not([name]):visited,.mob a:not([name]):visited,.MOB a:not([name]):visited,.NONE a:not([name]):visited,.visiter a:not([name]):visited,body a:not([name]).alive:visited,body a:not([name]).grave:visited,body a:not([name]).MOB:visited,body a:not([name]).mob:visited,body a:not([name]).NONE:visited,body a:not([name]).visiter:visited{background-color:#ccba77}.alive a:not([name]):link,.grave a:not([name]):link,.mob a:not([name]):link,.MOB a:not([name]):link,.NONE a:not([name]):link,.visiter a:not([name]):link,body a:not([name]).alive:link,body a:not([name]).grave:link,body a:not([name]).MOB:link,body a:not([name]).mob:link,body a:not([name]).NONE:link,body a:not([name]).visiter:link{background-color:#d8b493}.alive .active,.grave .active,.MOB .active,.mob .active,.NONE .active,.visiter .active{background-color:#7f5a22}.alive a:not([name]),.alive button,.alive input,.grave a:not([name]),.grave button,.grave input,.MOB a:not([name]),.mob a:not([name]),.MOB button,.mob button,.mob input,.MOB input,.NONE a:not([name]),.NONE button,.NONE input,.visiter a:not([name]),.visiter button,.visiter input,body a:not([name]).alive,body a:not([name]).grave,body a:not([name]).mob,body a:not([name]).MOB,body a:not([name]).NONE,body a:not([name]).visiter{background-color:#e2bd85}.alive a:not([name]):focus,.alive a:not([name]):hover,.alive button:focus,.alive button:hover,.alive input:focus,.alive input:hover,.grave a:not([name]):focus,.grave a:not([name]):hover,.grave button:focus,.grave button:hover,.grave input:focus,.grave input:hover,.mob a:not([name]):focus,.MOB a:not([name]):focus,.mob a:not([name]):hover,.MOB a:not([name]):hover,.mob button:focus,.MOB button:focus,.mob button:hover,.MOB button:hover,.MOB input:focus,.mob input:focus,.mob input:hover,.MOB input:hover,.NONE a:not([name]):focus,.NONE a:not([name]):hover,.NONE button:focus,.NONE button:hover,.NONE input:focus,.NONE input:hover,.visiter a:not([name]):focus,.visiter a:not([name]):hover,.visiter button:focus,.visiter button:hover,.visiter input:focus,.visiter input:hover,body a:not([name]).alive:focus,body a:not([name]).alive:hover,body a:not([name]).grave:focus,body a:not([name]).grave:hover,body a:not([name]).mob:focus,body a:not([name]).MOB:focus,body a:not([name]).MOB:hover,body a:not([name]).mob:hover,body a:not([name]).NONE:focus,body a:not([name]).NONE:hover,body a:not([name]).visiter:focus,body a:not([name]).visiter:hover{background-color:#926522}.alive a:not([name]).active,.alive a:not([name]) .active,.alive a:not([name]):active,.alive button.active,.alive button .active,.alive button:active,.alive input.active,.alive input .active,.alive input:active,.grave a:not([name]).active,.grave a:not([name]) .active,.grave a:not([name]):active,.grave button.active,.grave button .active,.grave button:active,.grave input.active,.grave input .active,.grave input:active,.MOB a:not([name]).active,.mob a:not([name]).active,.MOB a:not([name]) .active,.mob a:not([name]) .active,.mob a:not([name]):active,.MOB a:not([name]):active,.mob button.active,.MOB button.active,.mob button .active,.MOB button .active,.MOB button:active,.mob button:active,.mob input.active,.MOB input.active,.mob input .active,.MOB input .active,.mob input:active,.MOB input:active,.NONE a:not([name]).active,.NONE a:not([name]) .active,.NONE a:not([name]):active,.NONE button.active,.NONE button .active,.NONE button:active,.NONE input.active,.NONE input .active,.NONE input:active,.visiter a:not([name]).active,.visiter a:not([name]) .active,.visiter a:not([name]):active,.visiter button.active,.visiter button .active,.visiter button:active,.visiter input.active,.visiter input .active,.visiter input:active,body a:not([name]).alive.active,body a:not([name]).alive .active,body a:not([name]).alive:active,body a:not([name]).grave.active,body a:not([name]).grave .active,body a:not([name]).grave:active,body a:not([name]).MOB.active,body a:not([name]).mob.active,body a:not([name]).mob .active,body a:not([name]).MOB .active,body a:not([name]).MOB:active,body a:not([name]).mob:active,body a:not([name]).NONE.active,body a:not([name]).NONE .active,body a:not([name]).NONE:active,body a:not([name]).visiter.active,body a:not([name]).visiter .active,body a:not([name]).visiter:active{background-color:#7f5a22}.alive input[type=checkbox],.alive input[type=radio],.grave input[type=checkbox],.grave input[type=radio],.mob input[type=checkbox],.MOB input[type=checkbox],.MOB input[type=radio],.mob input[type=radio],.NONE input[type=checkbox],.NONE input[type=radio],.visiter input[type=checkbox],.visiter input[type=radio]{background-color:#d8b493}.alive input[type=checkbox]:checked,.alive input[type=radio]:checked,.grave input[type=checkbox]:checked,.grave input[type=radio]:checked,.mob input[type=checkbox]:checked,.MOB input[type=checkbox]:checked,.MOB input[type=radio]:checked,.mob input[type=radio]:checked,.NONE input[type=checkbox]:checked,.NONE input[type=radio]:checked,.visiter input[type=checkbox]:checked,.visiter input[type=radio]:checked{background-color:#ccba77}.alive .date,.alive .name,.alive em,.grave .date,.grave .name,.grave em,.mob .date,.MOB .date,.MOB .name,.mob .name,.MOB em,.mob em,.NONE .date,.NONE .name,.NONE em,.visiter .date,.visiter .name,.visiter em{color:#432c0b}.alive abbr,.alive rt,.alive strong,.alive sub,.alive sup,.grave abbr,.grave rt,.grave strong,.grave sub,.grave sup,.MOB abbr,.mob abbr,.MOB rt,.mob rt,.MOB strong,.mob strong,.mob sub,.MOB sub,.MOB sup,.mob sup,.NONE abbr,.NONE rt,.NONE strong,.NONE sub,.NONE sup,.visiter abbr,.visiter rt,.visiter strong,.visiter sub,.visiter sup{background-color:#ba8e45;color:#e2bd85}.executed,.executed textarea{color:#1c304e;background-color:#90abd4;border-color:#6c94cc}.executed.baloon{border-color:#90abd4}.executed .fa-check{color:#298125}.executed .fa-warning{color:#914830}.executed .fa-ban{color:#912630}.executed [data-tooltip],.executed [title]{background-color:#a1c3f5}.executed [data-tooltip]:after,.executed [data-tooltip]:before,.executed [title]:after,.executed [title]:before,.executed b{color:#1c304e;background-color:#a1c3f5}.executed a:not([name]),body a:not([name]).executed{color:#1c304e}.executed a:not([name]):visited,body a:not([name]).executed:visited{background-color:#93c0d9}.executed a:not([name]):link,body a:not([name]).executed:link{background-color:#9fb9f6}.executed .active{background-color:#3e5f92}.executed a:not([name]),.executed button,.executed input,body a:not([name]).executed{background-color:#a1c3f5}.executed a:not([name]):focus,.executed a:not([name]):hover,.executed button:focus,.executed button:hover,.executed input:focus,.executed input:hover,body a:not([name]).executed:focus,body a:not([name]).executed:hover{background-color:#436ba8}.executed a:not([name]).active,.executed a:not([name]) .active,.executed a:not([name]):active,.executed button.active,.executed button .active,.executed button:active,.executed input.active,.executed input .active,.executed input:active,body a:not([name]).executed.active,body a:not([name]).executed .active,body a:not([name]).executed:active{background-color:#3e5f92}.executed input[type=checkbox],.executed input[type=radio]{background-color:#9fb9f6}.executed input[type=checkbox]:checked,.executed input[type=radio]:checked{background-color:#93c0d9}.executed .date,.executed .name,.executed em{color:#1c304e}.executed abbr,.executed rt,.executed strong,.executed sub,.executed sup{background-color:#6c94cc;color:#a1c3f5}.hide,.hide textarea{color:#38321c;background-color:#b6ae90;border-color:#a49967}.hide.baloon{border-color:#b6ae90}.hide .fa-check{color:#328214}.hide .fa-warning{color:#9b4920}.hide .fa-ban{color:#9b2720}.hide [data-tooltip],.hide [title]{background-color:#d0c6a1}.hide [data-tooltip]:after,.hide [data-tooltip]:before,.hide [title]:after,.hide [title]:before,.hide b{color:#38321c;background-color:#d0c6a1}.hide a:not([name]),body a:not([name]).hide{color:#38321c}.hide a:not([name]):visited,body a:not([name]).hide:visited{background-color:#bcc28f}.hide a:not([name]):link,body a:not([name]).hide:link{background-color:#c8bcac}.hide .active{background-color:#6c633e}.hide a:not([name]),.hide button,.hide input,body a:not([name]).hide{background-color:#d0c6a1}.hide a:not([name]):focus,.hide a:not([name]):hover,.hide button:focus,.hide button:hover,.hide input:focus,.hide input:hover,body a:not([name]).hide:focus,body a:not([name]).hide:hover{background-color:#7b7043}.hide a:not([name]).active,.hide a:not([name]) .active,.hide a:not([name]):active,.hide button.active,.hide button .active,.hide button:active,.hide input.active,.hide input .active,.hide input:active,body a:not([name]).hide.active,body a:not([name]).hide .active,body a:not([name]).hide:active{background-color:#6c633e}.hide input[type=checkbox],.hide input[type=radio]{background-color:#c8bcac}.hide input[type=checkbox]:checked,.hide input[type=radio]:checked{background-color:#bcc28f}.hide .date,.hide .name,.hide em{color:#38321c}.hide abbr,.hide rt,.hide strong,.hide sub,.hide sup{background-color:#a49967;color:#d0c6a1}.leave,.leave textarea,.suddendead,.suddendead textarea{color:#32322d;background-color:#aeafa8;border-color:#999a8b}.leave.baloon,.suddendead.baloon{border-color:#aeafa8}.leave .fa-check,.suddendead .fa-check{color:#30821a}.leave .fa-warning,.suddendead .fa-warning{color:#994925}.leave .fa-ban,.suddendead .fa-ban{color:#992725}.leave [data-tooltip],.leave [title],.suddendead [data-tooltip],.suddendead [title]{background-color:#c6c7bf}.leave [data-tooltip]:after,.leave [data-tooltip]:before,.leave [title]:after,.leave [title]:before,.leave b,.suddendead [data-tooltip]:after,.suddendead [data-tooltip]:before,.suddendead [title]:after,.suddendead [title]:before,.suddendead b{color:#32322d;background-color:#c6c7bf}.leave a:not([name]),.suddendead a:not([name]),body a:not([name]).leave,body a:not([name]).suddendead{color:#32322d}.leave a:not([name]):visited,.suddendead a:not([name]):visited,body a:not([name]).leave:visited,body a:not([name]).suddendead:visited{background-color:#b4c3aa}.leave a:not([name]):link,.suddendead a:not([name]):link,body a:not([name]).leave:link,body a:not([name]).suddendead:link{background-color:#bfbdc6}.leave .active,.suddendead .active{background-color:#63645b}.leave a:not([name]),.leave button,.leave input,.suddendead a:not([name]),.suddendead button,.suddendead input,body a:not([name]).leave,body a:not([name]).suddendead{background-color:#c6c7bf}.leave a:not([name]):focus,.leave a:not([name]):hover,.leave button:focus,.leave button:hover,.leave input:focus,.leave input:hover,.suddendead a:not([name]):focus,.suddendead a:not([name]):hover,.suddendead button:focus,.suddendead button:hover,.suddendead input:focus,.suddendead input:hover,body a:not([name]).leave:focus,body a:not([name]).leave:hover,body a:not([name]).suddendead:focus,body a:not([name]).suddendead:hover{background-color:#707167}.leave a:not([name]).active,.leave a:not([name]) .active,.leave a:not([name]):active,.leave button.active,.leave button .active,.leave button:active,.leave input.active,.leave input .active,.leave input:active,.suddendead a:not([name]).active,.suddendead a:not([name]) .active,.suddendead a:not([name]):active,.suddendead button.active,.suddendead button .active,.suddendead button:active,.suddendead input.active,.suddendead input .active,.suddendead input:active,body a:not([name]).leave.active,body a:not([name]).leave .active,body a:not([name]).leave:active,body a:not([name]).suddendead.active,body a:not([name]).suddendead .active,body a:not([name]).suddendead:active{background-color:#63645b}.leave input[type=checkbox],.leave input[type=radio],.suddendead input[type=checkbox],.suddendead input[type=radio]{background-color:#bfbdc6}.leave input[type=checkbox]:checked,.leave input[type=radio]:checked,.suddendead input[type=checkbox]:checked,.suddendead input[type=radio]:checked{background-color:#b4c3aa}.leave .date,.leave .name,.leave em,.suddendead .date,.suddendead .name,.suddendead em{color:#32322d}.leave abbr,.leave rt,.leave strong,.leave sub,.leave sup,.suddendead abbr,.suddendead rt,.suddendead strong,.suddendead sub,.suddendead sup{background-color:#999a8b;color:#c6c7bf}.SPORT,.SPORT textarea{color:#000;background-color:#7ac5c5;border-color:#4abbb5}.SPORT.baloon{border-color:#7ac5c5}.SPORT .fa-check{color:#20710b}.SPORT .fa-warning{color:#883816}.SPORT .fa-ban{color:#881616}.SPORT [data-tooltip],.SPORT [title]{background-color:#85e2e2}.SPORT [data-tooltip]:after,.SPORT [data-tooltip]:before,.SPORT [title]:after,.SPORT [title]:before,.SPORT b{color:#000;background-color:#85e2e2}.SPORT a:not([name]),body a:not([name]).SPORT{color:#000}.SPORT a:not([name]):visited,body a:not([name]).SPORT:visited{background-color:#7adbc8}.SPORT a:not([name]):link,body a:not([name]).SPORT:link{background-color:#86d5e5}.SPORT .active{background-color:#227f7f}.SPORT a:not([name]),.SPORT button,.SPORT input,body a:not([name]).SPORT{background-color:#85e2e2}.SPORT a:not([name]):focus,.SPORT a:not([name]):hover,.SPORT button:focus,.SPORT button:hover,.SPORT input:focus,.SPORT input:hover,body a:not([name]).SPORT:focus,body a:not([name]).SPORT:hover{background-color:#229292}.SPORT a:not([name]).active,.SPORT a:not([name]) .active,.SPORT a:not([name]):active,.SPORT button.active,.SPORT button .active,.SPORT button:active,.SPORT input.active,.SPORT input .active,.SPORT input:active,body a:not([name]).SPORT.active,body a:not([name]).SPORT .active,body a:not([name]).SPORT:active{background-color:#227f7f}.SPORT input[type=checkbox],.SPORT input[type=radio]{background-color:#86d5e5}.SPORT input[type=checkbox]:checked,.SPORT input[type=radio]:checked{background-color:#7adbc8}.SPORT .date,.SPORT .name,.SPORT em{color:#0b4343}.SPORT abbr,.SPORT rt,.SPORT strong,.SPORT sub,.SPORT sup{background-color:#4abbb5;color:#85e2e2}.P09,.P09 textarea{color:#000;background-color:#7ac5ae;border-color:#4abb94}.P09.baloon{border-color:#7ac5ae}.P09 .fa-check{color:#20710b}.P09 .fa-warning{color:#883816}.P09 .fa-ban{color:#881616}.P09 [data-tooltip],.P09 [title]{background-color:#85e2c6}.P09 [data-tooltip]:after,.P09 [data-tooltip]:before,.P09 [title]:after,.P09 [title]:before,.P09 b{color:#000;background-color:#85e2c6}.P09 a:not([name]),body a:not([name]).P09{color:#000}.P09 a:not([name]):visited,body a:not([name]).P09:visited{background-color:#7adbb0}.P09 a:not([name]):link,body a:not([name]).P09:link{background-color:#86d5cc}.P09 .active{background-color:#227f63}.P09 a:not([name]),.P09 button,.P09 input,body a:not([name]).P09{background-color:#85e2c6}.P09 a:not([name]):focus,.P09 a:not([name]):hover,.P09 button:focus,.P09 button:hover,.P09 input:focus,.P09 input:hover,body a:not([name]).P09:focus,body a:not([name]).P09:hover{background-color:#229270}.P09 a:not([name]).active,.P09 a:not([name]) .active,.P09 a:not([name]):active,.P09 button.active,.P09 button .active,.P09 button:active,.P09 input.active,.P09 input .active,.P09 input:active,body a:not([name]).P09 .active,body a:not([name]).P09.active,body a:not([name]).P09:active{background-color:#227f63}.P09 input[type=checkbox],.P09 input[type=radio]{background-color:#86d5cc}.P09 input[type=checkbox]:checked,.P09 input[type=radio]:checked{background-color:#7adbb0}.P09 .date,.P09 .name,.P09 em{color:#0b4332}.P09 abbr,.P09 rt,.P09 strong,.P09 sub,.P09 sup{background-color:#4abb94;color:#85e2c6}.ELSE,.ELSE textarea{color:#000;background-color:#73b68d;border-color:#3fa462}.ELSE.baloon{border-color:#73b68d}.ELSE .fa-check{color:#20710b}.ELSE .fa-warning{color:#883816}.ELSE .fa-ban{color:#881616}.ELSE [data-tooltip],.ELSE [title]{background-color:#7cd09d}.ELSE [data-tooltip]:after,.ELSE [data-tooltip]:before,.ELSE [title]:after,.ELSE [title]:before,.ELSE b{color:#000;background-color:#7cd09d}.ELSE a:not([name]),body a:not([name]).ELSE{color:#000}.ELSE a:not([name]):visited,body a:not([name]).ELSE:visited{background-color:#72cb8c}.ELSE a:not([name]):link,body a:not([name]).ELSE:link{background-color:#7ec5a8}.ELSE .active{background-color:#186c3a}.ELSE a:not([name]),.ELSE button,.ELSE input,body a:not([name]).ELSE{background-color:#7cd09d}.ELSE a:not([name]):focus,.ELSE a:not([name]):hover,.ELSE button:focus,.ELSE button:hover,.ELSE input:focus,.ELSE input:hover,body a:not([name]).ELSE:focus,body a:not([name]).ELSE:hover{background-color:#167b3f}.ELSE a:not([name]).active,.ELSE a:not([name]) .active,.ELSE a:not([name]):active,.ELSE button.active,.ELSE button .active,.ELSE button:active,.ELSE input.active,.ELSE input .active,.ELSE input:active,body a:not([name]).ELSE.active,body a:not([name]).ELSE .active,body a:not([name]).ELSE:active{background-color:#186c3a}.ELSE input[type=checkbox],.ELSE input[type=radio]{background-color:#7ec5a8}.ELSE input[type=checkbox]:checked,.ELSE input[type=radio]:checked{background-color:#72cb8c}.ELSE .date,.ELSE .name,.ELSE em{color:#053819}.ELSE abbr,.ELSE rt,.ELSE strong,.ELSE sub,.ELSE sup{background-color:#3fa462;color:#7cd09d}.P07,.P07 textarea{color:#000;background-color:#73b679;border-color:#3fa444}.P07.baloon{border-color:#73b679}.P07 .fa-check{color:#20710b}.P07 .fa-warning{color:#883816}.P07 .fa-ban{color:#881616}.P07 [data-tooltip],.P07 [title]{background-color:#7cd084}.P07 [data-tooltip]:after,.P07 [data-tooltip]:before,.P07 [title]:after,.P07 [title]:before,.P07 b{color:#000;background-color:#7cd084}.P07 a:not([name]),body a:not([name]).P07{color:#000}.P07 a:not([name]):visited,body a:not([name]).P07:visited{background-color:#72cb76}.P07 a:not([name]):link,body a:not([name]).P07:link{background-color:#7ec592}.P07 .active{background-color:#186c20}.P07 a:not([name]),.P07 button,.P07 input,body a:not([name]).P07{background-color:#7cd084}.P07 a:not([name]):focus,.P07 a:not([name]):hover,.P07 button:focus,.P07 button:hover,.P07 input:focus,.P07 input:hover,body a:not([name]).P07:focus,body a:not([name]).P07:hover{background-color:#167b20}.P07 a:not([name]).active,.P07 a:not([name]) .active,.P07 a:not([name]):active,.P07 button.active,.P07 button .active,.P07 button:active,.P07 input.active,.P07 input .active,.P07 input:active,body a:not([name]).P07 .active,body a:not([name]).P07.active,body a:not([name]).P07:active{background-color:#186c20}.P07 input[type=checkbox],.P07 input[type=radio]{background-color:#7ec592}.P07 input[type=checkbox]:checked,.P07 input[type=radio]:checked{background-color:#72cb76}.P07 .date,.P07 .name,.P07 em{color:#05380a}.P07 abbr,.P07 rt,.P07 strong,.P07 sub,.P07 sup{background-color:#3fa444;color:#7cd084}.BSAY,.BSAY textarea,.XSAY,.XSAY textarea{color:#000;background-color:#80b673;border-color:#53a43a}.BSAY.baloon,.XSAY.baloon{border-color:#80b673}.BSAY .fa-check,.XSAY .fa-check{color:#20710b}.BSAY .fa-warning,.XSAY .fa-warning{color:#883816}.BSAY .fa-ban,.XSAY .fa-ban{color:#881616}.BSAY [data-tooltip],.BSAY [title],.XSAY [data-tooltip],.XSAY [title]{background-color:#8dd07c}.BSAY [data-tooltip]:after,.BSAY [data-tooltip]:before,.BSAY [title]:after,.BSAY [title]:before,.BSAY b,.XSAY [data-tooltip]:after,.XSAY [data-tooltip]:before,.XSAY [title]:after,.XSAY [title]:before,.XSAY b{color:#000;background-color:#8dd07c}.BSAY a:not([name]),.XSAY a:not([name]),body a:not([name]).BSAY,body a:not([name]).XSAY{color:#000}.BSAY a:not([name]):visited,.XSAY a:not([name]):visited,body a:not([name]).BSAY:visited,body a:not([name]).XSAY:visited{background-color:#81cb6f}.BSAY a:not([name]):link,.XSAY a:not([name]):link,body a:not([name]).BSAY:link,body a:not([name]).XSAY:link{background-color:#8dc58b}.BSAY .active,.XSAY .active{background-color:#296c18}.BSAY a:not([name]),.BSAY button,.BSAY input,.XSAY a:not([name]),.XSAY button,.XSAY input,body a:not([name]).BSAY,body a:not([name]).XSAY{background-color:#8dd07c}.BSAY a:not([name]):focus,.BSAY a:not([name]):hover,.BSAY button:focus,.BSAY button:hover,.BSAY input:focus,.BSAY input:hover,.XSAY a:not([name]):focus,.XSAY a:not([name]):hover,.XSAY button:focus,.XSAY button:hover,.XSAY input:focus,.XSAY input:hover,body a:not([name]).BSAY:focus,body a:not([name]).BSAY:hover,body a:not([name]).XSAY:focus,body a:not([name]).XSAY:hover{background-color:#2b7b16}.BSAY a:not([name]).active,.BSAY a:not([name]) .active,.BSAY a:not([name]):active,.BSAY button.active,.BSAY button .active,.BSAY button:active,.BSAY input.active,.BSAY input .active,.BSAY input:active,.XSAY a:not([name]).active,.XSAY a:not([name]) .active,.XSAY a:not([name]):active,.XSAY button.active,.XSAY button .active,.XSAY button:active,.XSAY input.active,.XSAY input .active,.XSAY input:active,body a:not([name]).BSAY.active,body a:not([name]).BSAY .active,body a:not([name]).BSAY:active,body a:not([name]).XSAY.active,body a:not([name]).XSAY .active,body a:not([name]).XSAY:active{background-color:#296c18}.BSAY input[type=checkbox],.BSAY input[type=radio],.XSAY input[type=checkbox],.XSAY input[type=radio]{background-color:#8dc58b}.BSAY input[type=checkbox]:checked,.BSAY input[type=radio]:checked,.XSAY input[type=checkbox]:checked,.XSAY input[type=radio]:checked{background-color:#81cb6f}.BSAY .date,.BSAY .name,.BSAY em,.XSAY .date,.XSAY .name,.XSAY em{color:#0f3805}.BSAY abbr,.BSAY rt,.BSAY strong,.BSAY sub,.BSAY sup,.XSAY abbr,.XSAY rt,.XSAY strong,.XSAY sub,.XSAY sup{background-color:#53a43a;color:#8dd07c}.P05,.P05 textarea{color:#000;background-color:#9fc57a;border-color:#82bb45}.P05.baloon{border-color:#9fc57a}.P05 .fa-check{color:#20710b}.P05 .fa-warning{color:#883816}.P05 .fa-ban{color:#881616}.P05 [data-tooltip],.P05 [title]{background-color:#b4e285}.P05 [data-tooltip]:after,.P05 [data-tooltip]:before,.P05 [title]:after,.P05 [title]:before,.P05 b{color:#000;background-color:#b4e285}.P05 a:not([name]),body a:not([name]).P05{color:#000}.P05 a:not([name]):visited,body a:not([name]).P05:visited{background-color:#a4db77}.P05 a:not([name]):link,body a:not([name]).P05:link{background-color:#afd593}.P05 .active{background-color:#507f22}.P05 a:not([name]),.P05 button,.P05 input,body a:not([name]).P05{background-color:#b4e285}.P05 a:not([name]):focus,.P05 a:not([name]):hover,.P05 button:focus,.P05 button:hover,.P05 input:focus,.P05 input:hover,body a:not([name]).P05:focus,body a:not([name]).P05:hover{background-color:#5a9222}.P05 a:not([name]).active,.P05 a:not([name]) .active,.P05 a:not([name]):active,.P05 button.active,.P05 button .active,.P05 button:active,.P05 input.active,.P05 input .active,.P05 input:active,body a:not([name]).P05 .active,body a:not([name]).P05.active,body a:not([name]).P05:active{background-color:#507f22}.P05 input[type=checkbox],.P05 input[type=radio]{background-color:#afd593}.P05 input[type=checkbox]:checked,.P05 input[type=radio]:checked{background-color:#a4db77}.P05 .date,.P05 .name,.P05 em{color:#27430b}.P05 abbr,.P05 rt,.P05 strong,.P05 sub,.P05 sup{background-color:#82bb45;color:#b4e285}.P04,.P04 textarea{color:#000;background-color:#b6c57a;border-color:#a4bb45}.P04.baloon{border-color:#b6c57a}.P04 .fa-check{color:#20710b}.P04 .fa-warning{color:#883816}.P04 .fa-ban{color:#881616}.P04 [data-tooltip],.P04 [title]{background-color:#d0e285}.P04 [data-tooltip]:after,.P04 [data-tooltip]:before,.P04 [title]:after,.P04 [title]:before,.P04 b{color:#000;background-color:#d0e285}.P04 a:not([name]),body a:not([name]).P04{color:#000}.P04 a:not([name]):visited,body a:not([name]).P04:visited{background-color:#bcdb77}.P04 a:not([name]):link,body a:not([name]).P04:link{background-color:#c8d593}.P04 .active{background-color:#6c7f22}.P04 a:not([name]),.P04 button,.P04 input,body a:not([name]).P04{background-color:#d0e285}.P04 a:not([name]):focus,.P04 a:not([name]):hover,.P04 button:focus,.P04 button:hover,.P04 input:focus,.P04 input:hover,body a:not([name]).P04:focus,body a:not([name]).P04:hover{background-color:#7b9222}.P04 a:not([name]).active,.P04 a:not([name]) .active,.P04 a:not([name]):active,.P04 button.active,.P04 button .active,.P04 button:active,.P04 input.active,.P04 input .active,.P04 input:active,body a:not([name]).P04 .active,body a:not([name]).P04.active,body a:not([name]).P04:active{background-color:#6c7f22}.P04 input[type=checkbox],.P04 input[type=radio]{background-color:#c8d593}.P04 input[type=checkbox]:checked,.P04 input[type=radio]:checked{background-color:#bcdb77}.P04 .date,.P04 .name,.P04 em{color:#38430b}.P04 abbr,.P04 rt,.P04 strong,.P04 sub,.P04 sup{background-color:#a4bb45;color:#d0e285}.MSAY,.MSAY textarea,.SSAY,.SSAY textarea{color:#000;background-color:#c5b37a;border-color:#baa045}.MSAY.baloon,.SSAY.baloon{border-color:#c5b37a}.MSAY .fa-check,.SSAY .fa-check{color:#20710b}.MSAY .fa-warning,.SSAY .fa-warning{color:#883816}.MSAY .fa-ban,.SSAY .fa-ban{color:#881616}.MSAY [data-tooltip],.MSAY [title],.SSAY [data-tooltip],.SSAY [title]{background-color:#e2cc85}.MSAY [data-tooltip]:after,.MSAY [data-tooltip]:before,.MSAY [title]:after,.MSAY [title]:before,.MSAY b,.SSAY [data-tooltip]:after,.SSAY [data-tooltip]:before,.SSAY [title]:after,.SSAY [title]:before,.SSAY b{color:#000;background-color:#e2cc85}.MSAY a:not([name]),.SSAY a:not([name]),body a:not([name]).MSAY,body a:not([name]).SSAY{color:#000}.MSAY a:not([name]):visited,.SSAY a:not([name]):visited,body a:not([name]).MSAY:visited,body a:not([name]).SSAY:visited{background-color:#ccc777}.MSAY a:not([name]):link,.SSAY a:not([name]):link,body a:not([name]).MSAY:link,body a:not([name]).SSAY:link{background-color:#d8c193}.MSAY .active,.SSAY .active{background-color:#7f6922}.MSAY a:not([name]),.MSAY button,.MSAY input,.SSAY a:not([name]),.SSAY button,.SSAY input,body a:not([name]).MSAY,body a:not([name]).SSAY{background-color:#e2cc85}.MSAY a:not([name]):focus,.MSAY a:not([name]):hover,.MSAY button:focus,.MSAY button:hover,.MSAY input:focus,.MSAY input:hover,.SSAY a:not([name]):focus,.SSAY a:not([name]):hover,.SSAY button:focus,.SSAY button:hover,.SSAY input:focus,.SSAY input:hover,body a:not([name]).MSAY:focus,body a:not([name]).MSAY:hover,body a:not([name]).SSAY:focus,body a:not([name]).SSAY:hover{background-color:#927722}.MSAY a:not([name]).active,.MSAY a:not([name]) .active,.MSAY a:not([name]):active,.MSAY button.active,.MSAY button .active,.MSAY button:active,.MSAY input.active,.MSAY input .active,.MSAY input:active,.SSAY a:not([name]).active,.SSAY a:not([name]) .active,.SSAY a:not([name]):active,.SSAY button.active,.SSAY button .active,.SSAY button:active,.SSAY input.active,.SSAY input .active,.SSAY input:active,body a:not([name]).MSAY.active,body a:not([name]).MSAY .active,body a:not([name]).MSAY:active,body a:not([name]).SSAY.active,body a:not([name]).SSAY .active,body a:not([name]).SSAY:active{background-color:#7f6922}.MSAY input[type=checkbox],.MSAY input[type=radio],.SSAY input[type=checkbox],.SSAY input[type=radio]{background-color:#d8c193}.MSAY input[type=checkbox]:checked,.MSAY input[type=radio]:checked,.SSAY input[type=checkbox]:checked,.SSAY input[type=radio]:checked{background-color:#ccc777}.MSAY .date,.MSAY .name,.MSAY em,.SSAY .date,.SSAY .name,.SSAY em{color:#43360b}.MSAY abbr,.MSAY rt,.MSAY strong,.MSAY sub,.MSAY sup,.SSAY abbr,.SSAY rt,.SSAY strong,.SSAY sub,.SSAY sup{background-color:#baa045;color:#e2cc85}.VSAY,.VSAY textarea,.VSSAY,.VSSAY textarea{color:#000;background-color:#c5a77a;border-color:#ba8e45}.VSAY.baloon,.VSSAY.baloon{border-color:#c5a77a}.VSAY .fa-check,.VSSAY .fa-check{color:#20710b}.VSAY .fa-warning,.VSSAY .fa-warning{color:#883816}.VSAY .fa-ban,.VSSAY .fa-ban{color:#881616}.VSAY [data-tooltip],.VSAY [title],.VSSAY [data-tooltip],.VSSAY [title]{background-color:#e2bd85}.VSAY [data-tooltip]:after,.VSAY [data-tooltip]:before,.VSAY [title]:after,.VSAY [title]:before,.VSAY b,.VSSAY [data-tooltip]:after,.VSSAY [data-tooltip]:before,.VSSAY [title]:after,.VSSAY [title]:before,.VSSAY b{color:#000;background-color:#e2bd85}.VSAY a:not([name]),.VSSAY a:not([name]),body a:not([name]).VSAY,body a:not([name]).VSSAY{color:#000}.VSAY a:not([name]):visited,.VSSAY a:not([name]):visited,body a:not([name]).VSAY:visited,body a:not([name]).VSSAY:visited{background-color:#ccba77}.VSAY a:not([name]):link,.VSSAY a:not([name]):link,body a:not([name]).VSAY:link,body a:not([name]).VSSAY:link{background-color:#d8b493}.VSAY .active,.VSSAY .active{background-color:#7f5a22}.VSAY a:not([name]),.VSAY button,.VSAY input,.VSSAY a:not([name]),.VSSAY button,.VSSAY input,body a:not([name]).VSAY,body a:not([name]).VSSAY{background-color:#e2bd85}.VSAY a:not([name]):focus,.VSAY a:not([name]):hover,.VSAY button:focus,.VSAY button:hover,.VSAY input:focus,.VSAY input:hover,.VSSAY a:not([name]):focus,.VSSAY a:not([name]):hover,.VSSAY button:focus,.VSSAY button:hover,.VSSAY input:focus,.VSSAY input:hover,body a:not([name]).VSAY:focus,body a:not([name]).VSAY:hover,body a:not([name]).VSSAY:focus,body a:not([name]).VSSAY:hover{background-color:#926522}.VSAY a:not([name]).active,.VSAY a:not([name]) .active,.VSAY a:not([name]):active,.VSAY button.active,.VSAY button .active,.VSAY button:active,.VSAY input.active,.VSAY input .active,.VSAY input:active,.VSSAY a:not([name]).active,.VSSAY a:not([name]) .active,.VSSAY a:not([name]):active,.VSSAY button.active,.VSSAY button .active,.VSSAY button:active,.VSSAY input.active,.VSSAY input .active,.VSSAY input:active,body a:not([name]).VSAY.active,body a:not([name]).VSAY .active,body a:not([name]).VSAY:active,body a:not([name]).VSSAY.active,body a:not([name]).VSSAY .active,body a:not([name]).VSSAY:active{background-color:#7f5a22}.VSAY input[type=checkbox],.VSAY input[type=radio],.VSSAY input[type=checkbox],.VSSAY input[type=radio]{background-color:#d8b493}.VSAY input[type=checkbox]:checked,.VSAY input[type=radio]:checked,.VSSAY input[type=checkbox]:checked,.VSSAY input[type=radio]:checked{background-color:#ccba77}.VSAY .date,.VSAY .name,.VSAY em,.VSSAY .date,.VSSAY .name,.VSSAY em{color:#432c0b}.VSAY abbr,.VSAY rt,.VSAY strong,.VSAY sub,.VSAY sup,.VSSAY abbr,.VSSAY rt,.VSSAY strong,.VSSAY sub,.VSSAY sup{background-color:#ba8e45;color:#e2bd85}.P01,.P01 textarea{color:#000;background-color:#c5907a;border-color:#ba6c45}.P01.baloon{border-color:#c5907a}.P01 .fa-check{color:#20710b}.P01 .fa-warning{color:#883816}.P01 .fa-ban{color:#881616}.P01 [data-tooltip],.P01 [title]{background-color:#e2a185}.P01 [data-tooltip]:after,.P01 [data-tooltip]:before,.P01 [title]:after,.P01 [title]:before,.P01 b{color:#000;background-color:#e2a185}.P01 a:not([name]),body a:not([name]).P01{color:#000}.P01 a:not([name]):visited,body a:not([name]).P01:visited{background-color:#cca277}.P01 a:not([name]):link,body a:not([name]).P01:link{background-color:#d89b93}.P01 .active{background-color:#7f3e22}.P01 a:not([name]),.P01 button,.P01 input,body a:not([name]).P01{background-color:#e2a185}.P01 a:not([name]):focus,.P01 a:not([name]):hover,.P01 button:focus,.P01 button:hover,.P01 input:focus,.P01 input:hover,body a:not([name]).P01:focus,body a:not([name]).P01:hover{background-color:#924322}.P01 a:not([name]).active,.P01 a:not([name]) .active,.P01 a:not([name]):active,.P01 button.active,.P01 button .active,.P01 button:active,.P01 input.active,.P01 input .active,.P01 input:active,body a:not([name]).P01 .active,body a:not([name]).P01.active,body a:not([name]).P01:active{background-color:#7f3e22}.P01 input[type=checkbox],.P01 input[type=radio]{background-color:#d89b93}.P01 input[type=checkbox]:checked,.P01 input[type=radio]:checked{background-color:#cca277}.P01 .date,.P01 .name,.P01 em{color:#431c0b}.P01 abbr,.P01 rt,.P01 strong,.P01 sub,.P01 sup{background-color:#ba6c45;color:#e2a185}.WSAY,.WSAY textarea{color:#000;background-color:#c57a7a;border-color:#ba4a45}.WSAY.baloon{border-color:#c57a7a}.WSAY .fa-check{color:#20710b}.WSAY .fa-warning{color:#883816}.WSAY .fa-ban{color:#881616}.WSAY [data-tooltip],.WSAY [title]{background-color:#e28585}.WSAY [data-tooltip]:after,.WSAY [data-tooltip]:before,.WSAY [title]:after,.WSAY [title]:before,.WSAY b{color:#000;background-color:#e28585}.WSAY a:not([name]),body a:not([name]).WSAY{color:#000}.WSAY a:not([name]):visited,body a:not([name]).WSAY:visited{background-color:#cc8977}.WSAY a:not([name]):link,body a:not([name]).WSAY:link{background-color:#d88393}.WSAY .active{background-color:#7f2222}.WSAY a:not([name]),.WSAY button,.WSAY input,body a:not([name]).WSAY{background-color:#e28585}.WSAY a:not([name]):focus,.WSAY a:not([name]):hover,.WSAY button:focus,.WSAY button:hover,.WSAY input:focus,.WSAY input:hover,body a:not([name]).WSAY:focus,body a:not([name]).WSAY:hover{background-color:#922222}.WSAY a:not([name]).active,.WSAY a:not([name]) .active,.WSAY a:not([name]):active,.WSAY button.active,.WSAY button .active,.WSAY button:active,.WSAY input.active,.WSAY input .active,.WSAY input:active,body a:not([name]).WSAY.active,body a:not([name]).WSAY .active,body a:not([name]).WSAY:active{background-color:#7f2222}.WSAY input[type=checkbox],.WSAY input[type=radio]{background-color:#d88393}.WSAY input[type=checkbox]:checked,.WSAY input[type=radio]:checked{background-color:#cc8977}.WSAY .date,.WSAY .name,.WSAY em{color:#430b0b}.WSAY abbr,.WSAY rt,.WSAY strong,.WSAY sub,.WSAY sup{background-color:#ba4a45;color:#e28585}.N01,.N01 textarea{color:#000;background-color:#c57a90;border-color:#ba4a67}.N01.baloon{border-color:#c57a90}.N01 .fa-check{color:#20710b}.N01 .fa-warning{color:#883816}.N01 .fa-ban{color:#881616}.N01 [data-tooltip],.N01 [title]{background-color:#e285a1}.N01 [data-tooltip]:after,.N01 [data-tooltip]:before,.N01 [title]:after,.N01 [title]:before,.N01 b{color:#000;background-color:#e285a1}.N01 a:not([name]),body a:not([name]).N01{color:#000}.N01 a:not([name]):visited,body a:not([name]).N01:visited{background-color:#cc898f}.N01 a:not([name]):link,body a:not([name]).N01:link{background-color:#d883ac}.N01 .active{background-color:#7f223e}.N01 a:not([name]),.N01 button,.N01 input,body a:not([name]).N01{background-color:#e285a1}.N01 a:not([name]):focus,.N01 a:not([name]):hover,.N01 button:focus,.N01 button:hover,.N01 input:focus,.N01 input:hover,body a:not([name]).N01:focus,body a:not([name]).N01:hover{background-color:#922243}.N01 a:not([name]).active,.N01 a:not([name]) .active,.N01 a:not([name]):active,.N01 button.active,.N01 button .active,.N01 button:active,.N01 input.active,.N01 input .active,.N01 input:active,body a:not([name]).N01 .active,body a:not([name]).N01.active,body a:not([name]).N01:active{background-color:#7f223e}.N01 input[type=checkbox],.N01 input[type=radio]{background-color:#d883ac}.N01 input[type=checkbox]:checked,.N01 input[type=radio]:checked{background-color:#cc898f}.N01 .date,.N01 .name,.N01 em{color:#430b1c}.N01 abbr,.N01 rt,.N01 strong,.N01 sub,.N01 sup{background-color:#ba4a67;color:#e285a1}.N02,.N02 textarea{color:#000;background-color:#c57aa1;border-color:#ba4a7f}.N02.baloon{border-color:#c57aa1}.N02 .fa-check{color:#20710b}.N02 .fa-warning{color:#883816}.N02 .fa-ban{color:#881616}.N02 [data-tooltip],.N02 [title]{background-color:#e285b5}.N02 [data-tooltip]:after,.N02 [data-tooltip]:before,.N02 [title]:after,.N02 [title]:before,.N02 b{color:#000;background-color:#e285b5}.N02 a:not([name]),body a:not([name]).N02{color:#000}.N02 a:not([name]):visited,body a:not([name]).N02:visited{background-color:#cc89a1}.N02 a:not([name]):link,body a:not([name]).N02:link{background-color:#d883bd}.N02 .active{background-color:#7f2252}.N02 a:not([name]),.N02 button,.N02 input,body a:not([name]).N02{background-color:#e285b5}.N02 a:not([name]):focus,.N02 a:not([name]):hover,.N02 button:focus,.N02 button:hover,.N02 input:focus,.N02 input:hover,body a:not([name]).N02:focus,body a:not([name]).N02:hover{background-color:#92225c}.N02 a:not([name]).active,.N02 a:not([name]) .active,.N02 a:not([name]):active,.N02 button.active,.N02 button .active,.N02 button:active,.N02 input.active,.N02 input .active,.N02 input:active,body a:not([name]).N02 .active,body a:not([name]).N02.active,body a:not([name]).N02:active{background-color:#7f2252}.N02 input[type=checkbox],.N02 input[type=radio]{background-color:#d883bd}.N02 input[type=checkbox]:checked,.N02 input[type=radio]:checked{background-color:#cc89a1}.N02 .date,.N02 .name,.N02 em{color:#430b28}.N02 abbr,.N02 rt,.N02 strong,.N02 sub,.N02 sup{background-color:#ba4a7f;color:#e285b5}.AIM,.AIM textarea{color:#000;background-color:#c57abd;border-color:#ba4aaa}.AIM.baloon{border-color:#c57abd}.AIM .fa-check{color:#20710b}.AIM .fa-warning{color:#883816}.AIM .fa-ban{color:#881616}.AIM [data-tooltip],.AIM [title]{background-color:#e285d9}.AIM [data-tooltip]:after,.AIM [data-tooltip]:before,.AIM [title]:after,.AIM [title]:before,.AIM b{color:#000;background-color:#e285d9}.AIM a:not([name]),body a:not([name]).AIM{color:#000}.AIM a:not([name]):visited,body a:not([name]).AIM:visited{background-color:#cc89c1}.AIM a:not([name]):link,body a:not([name]).AIM:link{background-color:#d883dd}.AIM .active{background-color:#7f2276}.AIM a:not([name]),.AIM button,.AIM input,body a:not([name]).AIM{background-color:#e285d9}.AIM a:not([name]):focus,.AIM a:not([name]):hover,.AIM button:focus,.AIM button:hover,.AIM input:focus,.AIM input:hover,body a:not([name]).AIM:focus,body a:not([name]).AIM:hover{background-color:#922286}.AIM a:not([name]).active,.AIM a:not([name]) .active,.AIM a:not([name]):active,.AIM button.active,.AIM button .active,.AIM button:active,.AIM input.active,.AIM input .active,.AIM input:active,body a:not([name]).AIM.active,body a:not([name]).AIM .active,body a:not([name]).AIM:active{background-color:#7f2276}.AIM input[type=checkbox],.AIM input[type=radio]{background-color:#d883dd}.AIM input[type=checkbox]:checked,.AIM input[type=radio]:checked{background-color:#cc89c1}.AIM .date,.AIM .name,.AIM em{color:#430b3d}.AIM abbr,.AIM rt,.AIM strong,.AIM sub,.AIM sup{background-color:#ba4aaa;color:#e285d9}.PSAY,.PSAY textarea,.SPSAY,.SPSAY textarea{color:#000;background-color:#c690d4;border-color:#bc6ccc}.PSAY.baloon,.SPSAY.baloon{border-color:#c690d4}.PSAY .fa-check,.SPSAY .fa-check{color:#20710b}.PSAY .fa-warning,.SPSAY .fa-warning{color:#883816}.PSAY .fa-ban,.SPSAY .fa-ban{color:#881616}.PSAY [data-tooltip],.PSAY [title],.SPSAY [data-tooltip],.SPSAY [title]{background-color:#e4a1f5}.PSAY [data-tooltip]:after,.PSAY [data-tooltip]:before,.PSAY [title]:after,.PSAY [title]:before,.PSAY b,.SPSAY [data-tooltip]:after,.SPSAY [data-tooltip]:before,.SPSAY [title]:after,.SPSAY [title]:before,.SPSAY b{color:#000;background-color:#e4a1f5}.PSAY a:not([name]),.SPSAY a:not([name]),body a:not([name]).PSAY,body a:not([name]).SPSAY{color:#000}.PSAY a:not([name]):visited,.SPSAY a:not([name]):visited,body a:not([name]).PSAY:visited,body a:not([name]).SPSAY:visited{background-color:#cea2d9}.PSAY a:not([name]):link,.SPSAY a:not([name]):link,body a:not([name]).PSAY:link,body a:not([name]).SPSAY:link{background-color:#da9bf6}.PSAY .active,.SPSAY .active{background-color:#813e92}.PSAY a:not([name]),.PSAY button,.PSAY input,.SPSAY a:not([name]),.SPSAY button,.SPSAY input,body a:not([name]).PSAY,body a:not([name]).SPSAY{background-color:#e4a1f5}.PSAY a:not([name]):focus,.PSAY a:not([name]):hover,.PSAY button:focus,.PSAY button:hover,.PSAY input:focus,.PSAY input:hover,.SPSAY a:not([name]):focus,.SPSAY a:not([name]):hover,.SPSAY button:focus,.SPSAY button:hover,.SPSAY input:focus,.SPSAY input:hover,body a:not([name]).PSAY:focus,body a:not([name]).PSAY:hover,body a:not([name]).SPSAY:focus,body a:not([name]).SPSAY:hover{background-color:#9443a8}.PSAY a:not([name]).active,.PSAY a:not([name]) .active,.PSAY a:not([name]):active,.PSAY button.active,.PSAY button .active,.PSAY button:active,.PSAY input.active,.PSAY input .active,.PSAY input:active,.SPSAY a:not([name]).active,.SPSAY a:not([name]) .active,.SPSAY a:not([name]):active,.SPSAY button.active,.SPSAY button .active,.SPSAY button:active,.SPSAY input.active,.SPSAY input .active,.SPSAY input:active,body a:not([name]).PSAY.active,body a:not([name]).PSAY .active,body a:not([name]).PSAY:active,body a:not([name]).SPSAY.active,body a:not([name]).SPSAY .active,body a:not([name]).SPSAY:active{background-color:#813e92}.PSAY input[type=checkbox],.PSAY input[type=radio],.SPSAY input[type=checkbox],.SPSAY input[type=radio]{background-color:#da9bf6}.PSAY input[type=checkbox]:checked,.PSAY input[type=radio]:checked,.SPSAY input[type=checkbox]:checked,.SPSAY input[type=radio]:checked{background-color:#cea2d9}.PSAY .date,.PSAY .name,.PSAY em,.SPSAY .date,.SPSAY .name,.SPSAY em{color:#441c4e}.PSAY abbr,.PSAY rt,.PSAY strong,.PSAY sub,.PSAY sup,.SPSAY abbr,.SPSAY rt,.SPSAY strong,.SPSAY sub,.SPSAY sup{background-color:#bc6ccc;color:#e4a1f5}.N05,.N05 textarea{color:#000;background-color:#bd9fdb;border-color:#af82d7}.N05.baloon{border-color:#bd9fdb}.N05 .fa-check{color:#20710b}.N05 .fa-warning{color:#883816}.N05 .fa-ban{color:#881616}.N05 [data-tooltip],.N05 [title]{background-color:#d9b4ff}.N05 [data-tooltip]:after,.N05 [data-tooltip]:before,.N05 [title]:after,.N05 [title]:before,.N05 b{color:#000;background-color:#d9b4ff}.N05 a:not([name]),body a:not([name]).N05{color:#000}.N05 a:not([name]):visited,body a:not([name]).N05:visited{background-color:#c4b2e2}.N05 a:not([name]):link,body a:not([name]).N05:link{background-color:#d0acff}.N05 .active{background-color:#76509b}.N05 a:not([name]),.N05 button,.N05 input,body a:not([name]).N05{background-color:#d9b4ff}.N05 a:not([name]):focus,.N05 a:not([name]):hover,.N05 button:focus,.N05 button:hover,.N05 input:focus,.N05 input:hover,body a:not([name]).N05:focus,body a:not([name]).N05:hover{background-color:#865ab3}.N05 a:not([name]).active,.N05 a:not([name]) .active,.N05 a:not([name]):active,.N05 button.active,.N05 button .active,.N05 button:active,.N05 input.active,.N05 input .active,.N05 input:active,body a:not([name]).N05 .active,body a:not([name]).N05.active,body a:not([name]).N05:active{background-color:#76509b}.N05 input[type=checkbox],.N05 input[type=radio]{background-color:#d0acff}.N05 input[type=checkbox]:checked,.N05 input[type=radio]:checked{background-color:#c4b2e2}.N05 .date,.N05 .name,.N05 em{color:#3d2754}.N05 abbr,.N05 rt,.N05 strong,.N05 sub,.N05 sup{background-color:#af82d7;color:#d9b4ff}.N06,.N06 textarea{color:#000;background-color:#ab9fdb;border-color:#9482d7}.N06.baloon{border-color:#ab9fdb}.N06 .fa-check{color:#20710b}.N06 .fa-warning{color:#883816}.N06 .fa-ban{color:#881616}.N06 [data-tooltip],.N06 [title]{background-color:#c3b4ff}.N06 [data-tooltip]:after,.N06 [data-tooltip]:before,.N06 [title]:after,.N06 [title]:before,.N06 b{color:#000;background-color:#c3b4ff}.N06 a:not([name]),body a:not([name]).N06{color:#000}.N06 a:not([name]):visited,body a:not([name]).N06:visited{background-color:#b1b2e2}.N06 a:not([name]):link,body a:not([name]).N06:link{background-color:#bdacff}.N06 .active{background-color:#5f509b}.N06 a:not([name]),.N06 button,.N06 input,body a:not([name]).N06{background-color:#c3b4ff}.N06 a:not([name]):focus,.N06 a:not([name]):hover,.N06 button:focus,.N06 button:hover,.N06 input:focus,.N06 input:hover,body a:not([name]).N06:focus,body a:not([name]).N06:hover{background-color:#6b5ab3}.N06 a:not([name]).active,.N06 a:not([name]) .active,.N06 a:not([name]):active,.N06 button.active,.N06 button .active,.N06 button:active,.N06 input.active,.N06 input .active,.N06 input:active,body a:not([name]).N06 .active,body a:not([name]).N06.active,body a:not([name]).N06:active{background-color:#5f509b}.N06 input[type=checkbox],.N06 input[type=radio]{background-color:#bdacff}.N06 input[type=checkbox]:checked,.N06 input[type=radio]:checked{background-color:#b1b2e2}.N06 .date,.N06 .name,.N06 em{color:#302754}.N06 abbr,.N06 rt,.N06 strong,.N06 sub,.N06 sup{background-color:#9482d7;color:#c3b4ff}.VGSAY,.VGSAY textarea{color:#000;background-color:#9fa6db;border-color:#828cd7}.VGSAY.baloon{border-color:#9fa6db}.VGSAY .fa-check{color:#20710b}.VGSAY .fa-warning{color:#883816}.VGSAY .fa-ban{color:#881616}.VGSAY [data-tooltip],.VGSAY [title]{background-color:#b4bbff}.VGSAY [data-tooltip]:after,.VGSAY [data-tooltip]:before,.VGSAY [title]:after,.VGSAY [title]:before,.VGSAY b{color:#000;background-color:#b4bbff}.VGSAY a:not([name]),body a:not([name]).VGSAY{color:#000}.VGSAY a:not([name]):visited,body a:not([name]).VGSAY:visited{background-color:#a4b8e2}.VGSAY a:not([name]):link,body a:not([name]).VGSAY:link{background-color:#afb2ff}.VGSAY .active{background-color:#50589b}.VGSAY a:not([name]),.VGSAY button,.VGSAY input,body a:not([name]).VGSAY{background-color:#b4bbff}.VGSAY a:not([name]):focus,.VGSAY a:not([name]):hover,.VGSAY button:focus,.VGSAY button:hover,.VGSAY input:focus,.VGSAY input:hover,body a:not([name]).VGSAY:focus,body a:not([name]).VGSAY:hover{background-color:#5a63b3}.VGSAY a:not([name]).active,.VGSAY a:not([name]) .active,.VGSAY a:not([name]):active,.VGSAY button.active,.VGSAY button .active,.VGSAY button:active,.VGSAY input.active,.VGSAY input .active,.VGSAY input:active,body a:not([name]).VGSAY.active,body a:not([name]).VGSAY .active,body a:not([name]).VGSAY:active{background-color:#50589b}.VGSAY input[type=checkbox],.VGSAY input[type=radio]{background-color:#afb2ff}.VGSAY input[type=checkbox]:checked,.VGSAY input[type=radio]:checked{background-color:#a4b8e2}.VGSAY .date,.VGSAY .name,.VGSAY em{color:#272b54}.VGSAY abbr,.VGSAY rt,.VGSAY strong,.VGSAY sub,.VGSAY sup{background-color:#828cd7;color:#b4bbff}.GSAY,.GSAY textarea{color:#000;background-color:#90abd4;border-color:#6c94cc}.GSAY.baloon{border-color:#90abd4}.GSAY .fa-check{color:#20710b}.GSAY .fa-warning{color:#883816}.GSAY .fa-ban{color:#881616}.GSAY [data-tooltip],.GSAY [title]{background-color:#a1c3f5}.GSAY [data-tooltip]:after,.GSAY [data-tooltip]:before,.GSAY [title]:after,.GSAY [title]:before,.GSAY b{color:#000;background-color:#a1c3f5}.GSAY a:not([name]),body a:not([name]).GSAY{color:#000}.GSAY a:not([name]):visited,body a:not([name]).GSAY:visited{background-color:#93c0d9}.GSAY a:not([name]):link,body a:not([name]).GSAY:link{background-color:#9fb9f6}.GSAY .active{background-color:#3e5f92}.GSAY a:not([name]),.GSAY button,.GSAY input,body a:not([name]).GSAY{background-color:#a1c3f5}.GSAY a:not([name]):focus,.GSAY a:not([name]):hover,.GSAY button:focus,.GSAY button:hover,.GSAY input:focus,.GSAY input:hover,body a:not([name]).GSAY:focus,body a:not([name]).GSAY:hover{background-color:#436ba8}.GSAY a:not([name]).active,.GSAY a:not([name]) .active,.GSAY a:not([name]):active,.GSAY button.active,.GSAY button .active,.GSAY button:active,.GSAY input.active,.GSAY input .active,.GSAY input:active,body a:not([name]).GSAY.active,body a:not([name]).GSAY .active,body a:not([name]).GSAY:active{background-color:#3e5f92}.GSAY input[type=checkbox],.GSAY input[type=radio]{background-color:#9fb9f6}.GSAY input[type=checkbox]:checked,.GSAY input[type=radio]:checked{background-color:#93c0d9}.GSAY .date,.GSAY .name,.GSAY em{color:#1c304e}.GSAY abbr,.GSAY rt,.GSAY strong,.GSAY sub,.GSAY sup{background-color:#6c94cc;color:#a1c3f5}.N09,.N09 textarea{color:#000;background-color:#90c0d4;border-color:#6cb3cc}.N09.baloon{border-color:#90c0d4}.N09 .fa-check{color:#20710b}.N09 .fa-warning{color:#883816}.N09 .fa-ban{color:#881616}.N09 [data-tooltip],.N09 [title]{background-color:#a1dcf5}.N09 [data-tooltip]:after,.N09 [data-tooltip]:before,.N09 [title]:after,.N09 [title]:before,.N09 b{color:#000;background-color:#a1dcf5}.N09 a:not([name]),body a:not([name]).N09{color:#000}.N09 a:not([name]):visited,body a:not([name]).N09:visited{background-color:#93d6d9}.N09 a:not([name]):link,body a:not([name]).N09:link{background-color:#9fcff6}.N09 .active{background-color:#3e7892}.N09 a:not([name]),.N09 button,.N09 input,body a:not([name]).N09{background-color:#a1dcf5}.N09 a:not([name]):focus,.N09 a:not([name]):hover,.N09 button:focus,.N09 button:hover,.N09 input:focus,.N09 input:hover,body a:not([name]).N09:focus,body a:not([name]).N09:hover{background-color:#438aa8}.N09 a:not([name]).active,.N09 a:not([name]) .active,.N09 a:not([name]):active,.N09 button.active,.N09 button .active,.N09 button:active,.N09 input.active,.N09 input .active,.N09 input:active,body a:not([name]).N09 .active,body a:not([name]).N09.active,body a:not([name]).N09:active{background-color:#3e7892}.N09 input[type=checkbox],.N09 input[type=radio]{background-color:#9fcff6}.N09 input[type=checkbox]:checked,.N09 input[type=radio]:checked{background-color:#93d6d9}.N09 .date,.N09 .name,.N09 em{color:#1c3f4e}.N09 abbr,.N09 rt,.N09 strong,.N09 sub,.N09 sup{background-color:#6cb3cc;color:#a1dcf5}.TSAY,.TSAY textarea{color:#000;background-color:#b6ae90;border-color:#a49967}.TSAY.baloon{border-color:#b6ae90}.TSAY .fa-check{color:#20710b}.TSAY .fa-warning{color:#883816}.TSAY .fa-ban{color:#881616}.TSAY [data-tooltip],.TSAY [title]{background-color:#d0c6a1}.TSAY [data-tooltip]:after,.TSAY [data-tooltip]:before,.TSAY [title]:after,.TSAY [title]:before,.TSAY b{color:#000;background-color:#d0c6a1}.TSAY a:not([name]),body a:not([name]).TSAY{color:#000}.TSAY a:not([name]):visited,body a:not([name]).TSAY:visited{background-color:#bcc28f}.TSAY a:not([name]):link,body a:not([name]).TSAY:link{background-color:#c8bcac}.TSAY .active{background-color:#6c633e}.TSAY a:not([name]),.TSAY button,.TSAY input,body a:not([name]).TSAY{background-color:#d0c6a1}.TSAY a:not([name]):focus,.TSAY a:not([name]):hover,.TSAY button:focus,.TSAY button:hover,.TSAY input:focus,.TSAY input:hover,body a:not([name]).TSAY:focus,body a:not([name]).TSAY:hover{background-color:#7b7043}.TSAY a:not([name]).active,.TSAY a:not([name]) .active,.TSAY a:not([name]):active,.TSAY button.active,.TSAY button .active,.TSAY button:active,.TSAY input.active,.TSAY input .active,.TSAY input:active,body a:not([name]).TSAY.active,body a:not([name]).TSAY .active,body a:not([name]).TSAY:active{background-color:#6c633e}.TSAY input[type=checkbox],.TSAY input[type=radio]{background-color:#c8bcac}.TSAY input[type=checkbox]:checked,.TSAY input[type=radio]:checked{background-color:#bcc28f}.TSAY .date,.TSAY .name,.TSAY em{color:#38321c}.TSAY abbr,.TSAY rt,.TSAY strong,.TSAY sub,.TSAY sup{background-color:#a49967;color:#d0c6a1}.talk .chat{margin:0 7px 0 0;border-style:solid;border-width:2px 0}.post{border-style:solid none solid solid;border-width:2px 0 2px 18px}.chat .name{border-bottom:1px solid rgba(0,0,0,.2);box-shadow:0 1px 0 hsla(0,0%,100%,.3)}.contentframe{background-repeat:repeat;background-position:100%;background-attachment:fixed;background-image:url(\"http://s3-ap-northeast-1.amazonaws.com/giji-assets/images/bg/karakusa.png\")}.contentframe .talk .baloon{left:-6px;border-right-width:1px}.filmend{background-image:url(\"http://s3-ap-northeast-1.amazonaws.com/giji-assets/images/bg/film-wa-end.png\")}", ""]);

// exports


/***/ }),
/* 233 */,
/* 234 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(2)(true);
// imports


// module
exports.push([module.i, ".header[data-v-0648bb3d]{padding-left:20px}.r[data-v-0648bb3d]{text-align:right}.l[data-v-0648bb3d]{text-align:left}.c[data-v-0648bb3d]{text-align:center}", "", {"version":3,"sources":["C:/Dropbox/www/giji-nuxt/components/toc.vue"],"names":[],"mappings":"AACA,yBACE,iBAAmB,CACpB,AACD,oBACE,gBAAkB,CACnB,AACD,oBACE,eAAiB,CAClB,AACD,oBACE,iBAAmB,CACpB","file":"toc.vue","sourcesContent":["\n.header[data-v-0648bb3d] {\n  padding-left: 20px;\n}\n.r[data-v-0648bb3d] {\n  text-align: right;\n}\n.l[data-v-0648bb3d] {\n  text-align: left;\n}\n.c[data-v-0648bb3d] {\n  text-align: center;\n}\n"],"sourceRoot":""}]);

// exports


/***/ }),
/* 235 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(2)(true);
// imports


// module
exports.push([module.i, ".talk[data-v-1e641cf2]{width:100%;table-layout:fixed;border-collapse:collapse;border-spacing:0;margin:0 0 6px}.talk tbody[data-v-1e641cf2],.talk td[data-v-1e641cf2],.talk tfoot[data-v-1e641cf2],.talk th[data-v-1e641cf2],.talk thead[data-v-1e641cf2]{border:0;padding:0;background:transparent}.talk td[data-v-1e641cf2]{vertical-align:middle;position:relative}.talk th[data-v-1e641cf2]{width:125px;vertical-align:top}.talk th .portrate[data-v-1e641cf2]{margin:0 19px 0 16px}.contentframe .baloon[data-v-1e641cf2]{position:absolute;content:\"\";width:0;height:0;top:60px;left:-6px;border-style:solid;border-width:6px;border-radius:6px 0 0 6px}", "", {"version":3,"sources":["C:/Dropbox/www/giji-nuxt/components/talk.vue"],"names":[],"mappings":"AACA,uBACE,WAAY,AACZ,mBAAoB,AACpB,yBAA0B,AAC1B,iBAAkB,AAClB,cAAkB,CACnB,AACD,2IAKE,SAAU,AACV,UAAW,AACX,sBAAwB,CACzB,AACD,0BACE,sBAAuB,AACvB,iBAAmB,CACpB,AACD,0BACE,YAAa,AACb,kBAAoB,CACrB,AACD,oCACE,oBAAsB,CACvB,AACD,uCACE,kBAAmB,AACnB,WAAY,AACZ,QAAS,AACT,SAAU,AACV,SAAU,AACV,UAAW,AACX,mBAAoB,AACpB,iBAAkB,AAClB,yBAA2B,CAC5B","file":"talk.vue","sourcesContent":["\n.talk[data-v-1e641cf2] {\n  width: 100%;\n  table-layout: fixed;\n  border-collapse: collapse;\n  border-spacing: 0;\n  margin: 0 0 6px 0;\n}\n.talk thead[data-v-1e641cf2],\n.talk tfoot[data-v-1e641cf2],\n.talk tbody[data-v-1e641cf2],\n.talk th[data-v-1e641cf2],\n.talk td[data-v-1e641cf2] {\n  border: 0;\n  padding: 0;\n  background: transparent;\n}\n.talk td[data-v-1e641cf2] {\n  vertical-align: middle;\n  position: relative;\n}\n.talk th[data-v-1e641cf2] {\n  width: 125px;\n  vertical-align: top;\n}\n.talk th .portrate[data-v-1e641cf2] {\n  margin: 0 19px 0 16px;\n}\n.contentframe .baloon[data-v-1e641cf2] {\n  position: absolute;\n  content: '';\n  width: 0;\n  height: 0;\n  top: 60px;\n  left: -6px;\n  border-style: solid;\n  border-width: 6px;\n  border-radius: 6px 0 0 6px;\n}\n"],"sourceRoot":""}]);

// exports


/***/ }),
/* 236 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(2)(true);
// imports


// module
exports.push([module.i, "", "", {"version":3,"sources":[],"names":[],"mappings":"","file":"myself.vue","sourceRoot":""}]);

// exports


/***/ }),
/* 237 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(2)(true);
// imports


// module
exports.push([module.i, ".post[data-v-42513b7b]{padding-right:12px;margin:0 0 6px 7px}.contentframe .post[data-v-42513b7b]{margin:0 0 6px 107px}", "", {"version":3,"sources":["C:/Dropbox/www/giji-nuxt/components/post.vue"],"names":[],"mappings":"AACA,uBACE,mBAAoB,AACpB,kBAAoB,CACrB,AACD,qCACE,oBAAsB,CACvB","file":"post.vue","sourcesContent":["\n.post[data-v-42513b7b] {\n  padding-right: 12px;\n  margin: 0 0 6px 7px;\n}\n.contentframe .post[data-v-42513b7b] {\n  margin: 0 0 6px 107px;\n}\n"],"sourceRoot":""}]);

// exports


/***/ }),
/* 238 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(2)(true);
// imports


// module
exports.push([module.i, "IMG{display:block}IMG.hide{-webkit-filter:sepia(60%) hue-rotate(180deg);filter:sepia(60%) hue-rotate(180deg)}.chrblank{background:#444844;color:#ccf;margin:0 auto}.chrblank p{text-align:center;white-space:nowrap}.swipe .portrate{max-width:45px;width:45px;background-color:#000}.swipe .portrate IMG{max-height:65px;height:65px;max-width:45px;width:45px}.swipe .portrate IMG+.chrblank{margin:.5px .5px 2px;padding:0}.swipe .portrate .chrblank{max-width:44px;width:44px;border-radius:4px}.contentframe .portrate,.fullframe .portrate{max-width:90px;width:90px;background-color:#000}.contentframe .portrate IMG,.fullframe .portrate IMG{max-height:130px;height:130px;max-width:90px;width:90px}.contentframe .portrate IMG+.chrblank,.fullframe .portrate IMG+.chrblank{margin:1px 1px 3px;padding:0}.contentframe .portrate .chrblank,.fullframe .portrate .chrblank{max-width:88px;width:88px;border-radius:9px}", "", {"version":3,"sources":["C:/Dropbox/www/giji-nuxt/components/portrate.vue"],"names":[],"mappings":"AACA,IACE,aAAe,CAChB,AACD,SACE,6CAA8C,AACtC,oCAAsC,CAC/C,AACD,UACE,mBAAoB,AACpB,WAAY,AACZ,aAAe,CAChB,AACD,YACE,kBAAmB,AACnB,kBAAoB,CACrB,AACD,iBACE,eAAgB,AAChB,WAAY,AACZ,qBAAuB,CACxB,AACD,qBACE,gBAAiB,AACjB,YAAa,AACb,eAAgB,AAChB,UAAY,CACb,AACD,+BACE,qBAA8B,AAC9B,SAAW,CACZ,AACD,2BACE,eAAgB,AAChB,WAAY,AACZ,iBAAmB,CACpB,AACD,6CAEE,eAAgB,AAChB,WAAY,AACZ,qBAAuB,CACxB,AACD,qDAEE,iBAAkB,AAClB,aAAc,AACd,eAAgB,AAChB,UAAY,CACb,AACD,yEAEE,mBAAwB,AACxB,SAAW,CACZ,AACD,iEAEE,eAAgB,AAChB,WAAY,AACZ,iBAAmB,CACpB","file":"portrate.vue","sourcesContent":["\nIMG {\n  display: block;\n}\nIMG.hide {\n  -webkit-filter: sepia(60%) hue-rotate(180deg);\n          filter: sepia(60%) hue-rotate(180deg);\n}\n.chrblank {\n  background: #444844;\n  color: #ccf;\n  margin: 0 auto;\n}\n.chrblank p {\n  text-align: center;\n  white-space: nowrap;\n}\n.swipe .portrate {\n  max-width: 45px;\n  width: 45px;\n  background-color: #000;\n}\n.swipe .portrate IMG {\n  max-height: 65px;\n  height: 65px;\n  max-width: 45px;\n  width: 45px;\n}\n.swipe .portrate IMG + .chrblank {\n  margin: 0.5px 0.5px 2px 0.5px;\n  padding: 0;\n}\n.swipe .portrate .chrblank {\n  max-width: 44px;\n  width: 44px;\n  border-radius: 4px;\n}\n.fullframe .portrate,\n.contentframe .portrate {\n  max-width: 90px;\n  width: 90px;\n  background-color: #000;\n}\n.fullframe .portrate IMG,\n.contentframe .portrate IMG {\n  max-height: 130px;\n  height: 130px;\n  max-width: 90px;\n  width: 90px;\n}\n.fullframe .portrate IMG + .chrblank,\n.contentframe .portrate IMG + .chrblank {\n  margin: 1px 1px 3px 1px;\n  padding: 0;\n}\n.fullframe .portrate .chrblank,\n.contentframe .portrate .chrblank {\n  max-width: 88px;\n  width: 88px;\n  border-radius: 9px;\n}\n"],"sourceRoot":""}]);

// exports


/***/ }),
/* 239 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(2)(true);
// imports


// module
exports.push([module.i, ".report[data-v-4481894f]{-webkit-box-shadow:0 -10px 20px -10px #000;box-shadow:0 -10px 20px -10px #000;border-style:double dotted;border-width:4px 1px;margin:0 -10px 6px;padding:1px 8px 1px 10px}.report .name[data-v-4481894f]{margin-left:127px;margin-right:13px}.report .date[data-v-4481894f]{margin-right:13px}.contentframe .report[data-v-4481894f]{position:relative}.contentframe .report[data-v-4481894f]:after,.contentframe .report[data-v-4481894f]:before{top:-8px;content:\"\";position:absolute;border-style:solid;border-width:1px;border-top-color:transparent}.contentframe .report[data-v-4481894f]:before{border-width:4px 8px 0 0;left:0}.contentframe .report[data-v-4481894f]:after{border-width:4px 0 0 8px;right:0}", "", {"version":3,"sources":["C:/Dropbox/www/giji-nuxt/components/report.vue"],"names":[],"mappings":"AACA,yBACE,2CAA8C,AACtC,mCAAsC,AAC9C,2BAA4B,AAC5B,qBAAsB,AACtB,mBAA0B,AAC1B,wBAA0B,CAC3B,AACD,+BACE,kBAAmB,AACnB,iBAAmB,CACpB,AACD,+BACE,iBAAmB,CACpB,AACD,uCACE,iBAAmB,CACpB,AACD,2FAEE,SAAU,AACV,WAAY,AACZ,kBAAmB,AACnB,mBAAoB,AACpB,iBAAkB,AAClB,4BAA8B,CAC/B,AACD,8CACE,yBAA0B,AAC1B,MAAQ,CACT,AACD,6CACE,yBAA0B,AAC1B,OAAS,CACV","file":"report.vue","sourcesContent":["\n.report[data-v-4481894f] {\n  -webkit-box-shadow: 0px -10px 20px -10px #000;\n          box-shadow: 0px -10px 20px -10px #000;\n  border-style: double dotted;\n  border-width: 4px 1px;\n  margin: 0 -10px 6px -10px;\n  padding: 1px 8px 1px 10px;\n}\n.report .name[data-v-4481894f] {\n  margin-left: 127px;\n  margin-right: 13px;\n}\n.report .date[data-v-4481894f] {\n  margin-right: 13px;\n}\n.contentframe .report[data-v-4481894f] {\n  position: relative;\n}\n.contentframe .report[data-v-4481894f]::before,\n.contentframe .report[data-v-4481894f]::after {\n  top: -8px;\n  content: \"\";\n  position: absolute;\n  border-style: solid;\n  border-width: 1px;\n  border-top-color: transparent;\n}\n.contentframe .report[data-v-4481894f]::before {\n  border-width: 4px 8px 0 0;\n  left: 0;\n}\n.contentframe .report[data-v-4481894f]::after {\n  border-width: 4px 0 0 8px;\n  right: 0;\n}\n"],"sourceRoot":""}]);

// exports


/***/ }),
/* 240 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(2)(true);
// imports


// module
exports.push([module.i, "#export[data-v-5cc901d7]{border-collapse:separate;border-spacing:2px;padding:30px;margin:0 auto}#export tfoot[data-v-5cc901d7],#export thead[data-v-5cc901d7]{text-align:center}#export th[data-v-5cc901d7]{background-color:#444}#export td[data-v-5cc901d7]{background-color:#000;vertical-align:top;padding:0 3px}#welcome[data-v-5cc901d7]{background-size:cover}#welcome .btns[data-v-5cc901d7]{background-color:rgba(77,78,70,.9)}.filmline[data-v-5cc901d7]{margin:0;height:11px;background-repeat:repeat-x}.filmline .contentframe[data-v-5cc901d7]{background-image:none}.links[data-v-5cc901d7]{white-space:pre}h2[data-v-5cc901d7]{height:100px;margin:0;padding:25px 0 0;white-space:pre;font-size:xx-large;text-align:center;line-height:1.1em;background-color:rgba(92,92,32,.5)}h2 sup[data-v-5cc901d7]{font-size:large}h2 a[data-v-5cc901d7]{font-size:xx-large;line-height:1.1em;color:#fff}h2 a[data-v-5cc901d7]:focus,h2 a[data-v-5cc901d7]:hover{-webkit-box-shadow:0 0 20px 3px #fff inset;box-shadow:inset 0 0 20px 3px #fff}h2 a[data-v-5cc901d7]:active{-webkit-box-shadow:0 0 20px 3px rgba(51,251,118,.5) inset;box-shadow:inset 0 0 20px 3px rgba(51,251,118,.5)}", "", {"version":3,"sources":["C:/Dropbox/www/giji-nuxt/components/welcome.vue"],"names":[],"mappings":"AACA,yBACE,yBAA0B,AAC1B,mBAAoB,AACpB,aAAc,AACd,aAAiB,CAClB,AACD,8DAEE,iBAAmB,CACpB,AACD,4BACE,qBAAuB,CACxB,AACD,4BACE,sBAAuB,AACvB,mBAAoB,AACpB,aAAe,CAChB,AACD,0BACE,qBAAuB,CACxB,AACD,gCACE,kCAAqC,CACtC,AACD,2BACE,SAAU,AACV,YAAa,AACb,0BAA4B,CAC7B,AACD,yCACE,qBAAuB,CACxB,AACD,wBACE,eAAiB,CAClB,AACD,oBACE,aAAc,AACd,SAAU,AACV,iBAAoB,AACpB,gBAAiB,AACjB,mBAAoB,AACpB,kBAAmB,AACnB,kBAAmB,AACnB,kCAAqC,CACtC,AACD,wBACE,eAAiB,CAClB,AACD,sBACE,mBAAoB,AACpB,kBAAmB,AACnB,UAAY,CACb,AACD,wDAEE,2CAA4C,AACpC,kCAAoC,CAC7C,AACD,6BACE,0DAA4D,AACpD,iDAAoD,CAC7D","file":"welcome.vue","sourcesContent":["\n#export[data-v-5cc901d7] {\n  border-collapse: separate;\n  border-spacing: 2px;\n  padding: 30px;\n  margin: 0px auto;\n}\n#export thead[data-v-5cc901d7],\n#export tfoot[data-v-5cc901d7] {\n  text-align: center;\n}\n#export th[data-v-5cc901d7] {\n  background-color: #444;\n}\n#export td[data-v-5cc901d7] {\n  background-color: #000;\n  vertical-align: top;\n  padding: 0 3px;\n}\n#welcome[data-v-5cc901d7] {\n  background-size: cover;\n}\n#welcome .btns[data-v-5cc901d7] {\n  background-color: rgba(77,78,70,0.9);\n}\n.filmline[data-v-5cc901d7] {\n  margin: 0;\n  height: 11px;\n  background-repeat: repeat-x;\n}\n.filmline .contentframe[data-v-5cc901d7] {\n  background-image: none;\n}\n.links[data-v-5cc901d7] {\n  white-space: pre;\n}\nh2[data-v-5cc901d7] {\n  height: 100px;\n  margin: 0;\n  padding: 25px 0 0 0;\n  white-space: pre;\n  font-size: xx-large;\n  text-align: center;\n  line-height: 1.1em;\n  background-color: rgba(92,92,32,0.5);\n}\nh2 sup[data-v-5cc901d7] {\n  font-size: large;\n}\nh2 a[data-v-5cc901d7] {\n  font-size: xx-large;\n  line-height: 1.1em;\n  color: #fff;\n}\nh2 a[data-v-5cc901d7]:hover,\nh2 a[data-v-5cc901d7]:focus {\n  -webkit-box-shadow: 0 0 20px 3px #fff inset;\n          box-shadow: 0 0 20px 3px #fff inset;\n}\nh2 a[data-v-5cc901d7]:active {\n  -webkit-box-shadow: 0 0 20px 3px rgba(51,251,118,0.5) inset;\n          box-shadow: 0 0 20px 3px rgba(51,251,118,0.5) inset;\n}\n"],"sourceRoot":""}]);

// exports


/***/ }),
/* 241 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(2)(true);
// imports


// module
exports.push([module.i, ".per[data-v-71b7ec82]{vertical-align:-.2em;font-size:.7em;margin:0 0 0 -.2em;padding:0;display:inline}", "", {"version":3,"sources":["C:/Dropbox/www/giji-nuxt/components/text-editor.vue"],"names":[],"mappings":"AACA,sBACE,qBAAuB,AACvB,eAAiB,AACjB,mBAAqB,AACrB,UAAW,AACX,cAAgB,CACjB","file":"text-editor.vue","sourcesContent":["\n.per[data-v-71b7ec82] {\n  vertical-align: -0.2em;\n  font-size: 0.7em;\n  margin: 0 0 0 -0.2em;\n  padding: 0;\n  display: inline;\n}\n"],"sourceRoot":""}]);

// exports


/***/ }),
/* 242 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(2)(true);
// imports


// module
exports.push([module.i, ".mention[data-v-7932de7d]{overflow:hidden;white-space:nowrap;-o-text-overflow:ellipsis;text-overflow:ellipsis}", "", {"version":3,"sources":["C:/Dropbox/www/giji-nuxt/components/tr-intro-chat.vue"],"names":[],"mappings":"AACA,0BACE,gBAAiB,AACjB,mBAAoB,AACpB,0BAA2B,AACxB,sBAAwB,CAC5B","file":"tr-intro-chat.vue","sourcesContent":["\n.mention[data-v-7932de7d] {\n  overflow: hidden;\n  white-space: nowrap;\n  -o-text-overflow: ellipsis;\n     text-overflow: ellipsis;\n}\n"],"sourceRoot":""}]);

// exports


/***/ }),
/* 243 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(2)(true);
// imports


// module
exports.push([module.i, ".filmend-frame[data-v-79cd9445]{height:0}.filmend-frame .inframe[data-v-79cd9445]{padding:0}.outframe .contentframe[data-v-79cd9445]{text-align:left}.filmend[data-v-79cd9445]{margin:-11px 0 0 -2px;height:36px;width:126px;display:inline-block}", "", {"version":3,"sources":["C:/Dropbox/www/giji-nuxt/components/layout-header.vue"],"names":[],"mappings":"AACA,gCACE,QAAU,CACX,AACD,yCACE,SAAW,CACZ,AACD,yCACE,eAAiB,CAClB,AACD,0BACE,sBAAuB,AACvB,YAAa,AACb,YAAa,AACb,oBAAsB,CACvB","file":"layout-header.vue","sourcesContent":["\n.filmend-frame[data-v-79cd9445] {\n  height: 0;\n}\n.filmend-frame .inframe[data-v-79cd9445] {\n  padding: 0;\n}\n.outframe .contentframe[data-v-79cd9445] {\n  text-align: left;\n}\n.filmend[data-v-79cd9445] {\n  margin: -11px 0 0 -2px;\n  height: 36px;\n  width: 126px;\n  display: inline-block;\n}\n"],"sourceRoot":""}]);

// exports


/***/ }),
/* 244 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(2)(true);
// imports


// module
exports.push([module.i, "table[data-v-83dca6b8]{width:100%;border-collapse:collapse}", "", {"version":3,"sources":["C:/Dropbox/www/giji-nuxt/components/mentions.vue"],"names":[],"mappings":"AACA,uBACE,WAAY,AACZ,wBAA0B,CAC3B","file":"mentions.vue","sourcesContent":["\ntable[data-v-83dca6b8] {\n  width: 100%;\n  border-collapse: collapse;\n}\n"],"sourceRoot":""}]);

// exports


/***/ }),
/* 245 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(2)(true);
// imports


// module
exports.push([module.i, ".r[data-v-9cd11cbc]{text-align:right}.l[data-v-9cd11cbc]{text-align:left}.c[data-v-9cd11cbc]{text-align:center}.last[data-v-9cd11cbc]{min-width:1000px}.portrate[data-v-9cd11cbc]{-ms-flex-preferred-size:auto;flex-basis:auto}.list[data-v-9cd11cbc]{background:#000;padding:2px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:nowrap;flex-wrap:nowrap;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-ms-flex-line-pack:distribute;align-content:space-around;-webkit-box-pack:start;-ms-flex-pack:start;justify-content:flex-start;min-width:100%}.list img[data-v-9cd11cbc]{max-height:65px;height:65px}.list .bar[data-v-9cd11cbc]{height:3px;border-radius:3px}.list .btns[data-v-9cd11cbc]{border-radius:3px;max-height:68px;height:68px}.list .btns span[data-v-9cd11cbc]{white-space:nowrap}", "", {"version":3,"sources":["C:/Dropbox/www/giji-nuxt/components/potofs.vue"],"names":[],"mappings":"AACA,oBACE,gBAAkB,CACnB,AACD,oBACE,eAAiB,CAClB,AACD,oBACE,iBAAmB,CACpB,AACD,uBACE,gBAAkB,CACnB,AACD,2BACE,6BAA8B,AAC1B,eAAiB,CACtB,AACD,uBACE,gBAAiB,AACjB,YAAa,AACb,oBAAqB,AACrB,oBAAqB,AACrB,aAAc,AACd,8BAA+B,AAC/B,6BAA8B,AAC1B,uBAAwB,AACpB,mBAAoB,AAC5B,qBAAsB,AAClB,iBAAkB,AACtB,yBAA0B,AACtB,sBAAuB,AACnB,mBAAoB,AAC5B,8BAA+B,AAC3B,2BAA4B,AAChC,uBAAwB,AACpB,oBAAqB,AACjB,2BAA4B,AACpC,cAAgB,CACjB,AACD,2BACE,gBAAiB,AACjB,WAAa,CACd,AACD,4BACE,WAAY,AACZ,iBAAmB,CACpB,AACD,6BACE,kBAAmB,AACnB,gBAAiB,AACjB,WAAa,CACd,AACD,kCACE,kBAAoB,CACrB","file":"potofs.vue","sourcesContent":["\n.r[data-v-9cd11cbc] {\n  text-align: right;\n}\n.l[data-v-9cd11cbc] {\n  text-align: left;\n}\n.c[data-v-9cd11cbc] {\n  text-align: center;\n}\n.last[data-v-9cd11cbc] {\n  min-width: 1000px;\n}\n.portrate[data-v-9cd11cbc] {\n  -ms-flex-preferred-size: auto;\n      flex-basis: auto;\n}\n.list[data-v-9cd11cbc] {\n  background: #000;\n  padding: 2px;\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-box-orient: horizontal;\n  -webkit-box-direction: normal;\n      -ms-flex-direction: row;\n          flex-direction: row;\n  -ms-flex-wrap: nowrap;\n      flex-wrap: nowrap;\n  -webkit-box-align: center;\n      -ms-flex-align: center;\n          align-items: center;\n  -ms-flex-line-pack: distribute;\n      align-content: space-around;\n  -webkit-box-pack: start;\n      -ms-flex-pack: start;\n          justify-content: flex-start;\n  min-width: 100%;\n}\n.list img[data-v-9cd11cbc] {\n  max-height: 65px;\n  height: 65px;\n}\n.list .bar[data-v-9cd11cbc] {\n  height: 3px;\n  border-radius: 3px;\n}\n.list .btns[data-v-9cd11cbc] {\n  border-radius: 3px;\n  max-height: 68px;\n  height: 68px;\n}\n.list .btns span[data-v-9cd11cbc] {\n  white-space: nowrap;\n}\n"],"sourceRoot":""}]);

// exports


/***/ }),
/* 246 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(2)(true);
// imports


// module
exports.push([module.i, ".hide[data-v-a91341c6]{height:2px;margin:-7px 8px 6px 125px}", "", {"version":3,"sources":["C:/Dropbox/www/giji-nuxt/components/hide.vue"],"names":[],"mappings":"AACA,uBACE,WAAY,AACZ,yBAA2B,CAC5B","file":"hide.vue","sourcesContent":["\n.hide[data-v-a91341c6] {\n  height: 2px;\n  margin: -7px 8px 6px 125px;\n}\n"],"sourceRoot":""}]);

// exports


/***/ }),
/* 247 */,
/* 248 */,
/* 249 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(2)(true);
// imports


// module
exports.push([module.i, ".current[data-v-fe4f7f24]{border-bottom-style:solid;border-bottom-width:1px}", "", {"version":3,"sources":["C:/Dropbox/www/giji-nuxt/components/current.vue"],"names":[],"mappings":"AACA,0BACE,0BAA2B,AAC3B,uBAAyB,CAC1B","file":"current.vue","sourcesContent":["\n.current[data-v-fe4f7f24] {\n  border-bottom-style: solid;\n  border-bottom-width: 1px;\n}\n"],"sourceRoot":""}]);

// exports


/***/ }),
/* 250 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var index$2 = function isMergeableObject(value) {
	return isNonNullObject(value) && isNotSpecial(value)
};

function isNonNullObject(value) {
	return !!value && typeof value === 'object'
}

function isNotSpecial(value) {
	var stringValue = Object.prototype.toString.call(value);

	return stringValue !== '[object RegExp]'
		&& stringValue !== '[object Date]'
}

function emptyTarget(val) {
    return Array.isArray(val) ? [] : {}
}

function cloneIfNecessary(value, optionsArgument) {
    var clone = optionsArgument && optionsArgument.clone === true;
    return (clone && index$2(value)) ? deepmerge(emptyTarget(value), value, optionsArgument) : value
}

function defaultArrayMerge(target, source, optionsArgument) {
    var destination = target.slice();
    source.forEach(function(e, i) {
        if (typeof destination[i] === 'undefined') {
            destination[i] = cloneIfNecessary(e, optionsArgument);
        } else if (index$2(e)) {
            destination[i] = deepmerge(target[i], e, optionsArgument);
        } else if (target.indexOf(e) === -1) {
            destination.push(cloneIfNecessary(e, optionsArgument));
        }
    });
    return destination
}

function mergeObject(target, source, optionsArgument) {
    var destination = {};
    if (index$2(target)) {
        Object.keys(target).forEach(function(key) {
            destination[key] = cloneIfNecessary(target[key], optionsArgument);
        });
    }
    Object.keys(source).forEach(function(key) {
        if (!index$2(source[key]) || !target[key]) {
            destination[key] = cloneIfNecessary(source[key], optionsArgument);
        } else {
            destination[key] = deepmerge(target[key], source[key], optionsArgument);
        }
    });
    return destination
}

function deepmerge(target, source, optionsArgument) {
    var sourceIsArray = Array.isArray(source);
    var targetIsArray = Array.isArray(target);
    var options = optionsArgument || { arrayMerge: defaultArrayMerge };
    var sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;

    if (!sourceAndTargetTypesMatch) {
        return cloneIfNecessary(source, optionsArgument)
    } else if (sourceIsArray) {
        var arrayMerge = options.arrayMerge || defaultArrayMerge;
        return arrayMerge(target, source, optionsArgument)
    } else {
        return mergeObject(target, source, optionsArgument)
    }
}

deepmerge.all = function deepmergeAll(array, optionsArgument) {
    if (!Array.isArray(array) || array.length < 2) {
        throw new Error('first argument should be an array with at least two elements')
    }

    // we are sure there are at least 2 values, so it is safe to have no initial value
    return array.reduce(function(prev, next) {
        return deepmerge(prev, next, optionsArgument)
    })
};

var index = deepmerge;

module.exports = index;


/***/ }),
/* 251 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

exports.default = function (Vue) {

  /**
   * template
   *
   * @param {String} string
   * @param {Array} ...args
   * @return {String}
   */

  function template(string) {
    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }

    if (args.length === 1 && _typeof(args[0]) === 'object') {
      args = args[0];
    }

    if (!args || !args.hasOwnProperty) {
      args = {};
    }

    return string.replace(RE_NARGS, function (match, prefix, i, index) {
      var result = void 0;

      if (string[index - 1] === '{' && string[index + match.length] === '}') {
        return i;
      } else {
        result = (0, _util.hasOwn)(args, i) ? args[i] : null;
        if (result === null || result === undefined) {
          return '';
        }

        return result;
      }
    });
  }

  return template;
};

var _util = __webpack_require__(257);

var RE_NARGS = /(%|)\{([0-9a-zA-Z_]+)\}/g;
/**
 *  String format template
 *  - Inspired:
 *    https://github.com/Matt-Esch/string-template/index.js
 */

/***/ }),
/* 252 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.i18n = exports.use = exports.t = undefined;

var _zhCN = __webpack_require__(254);

var _zhCN2 = _interopRequireDefault(_zhCN);

var _vue = __webpack_require__(4);

var _vue2 = _interopRequireDefault(_vue);

var _deepmerge = __webpack_require__(250);

var _deepmerge2 = _interopRequireDefault(_deepmerge);

var _format = __webpack_require__(251);

var _format2 = _interopRequireDefault(_format);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var format = (0, _format2.default)(_vue2.default);
var lang = _zhCN2.default;
var merged = false;
var i18nHandler = function i18nHandler() {
  var vuei18n = Object.getPrototypeOf(this || _vue2.default).$t;
  if (typeof vuei18n === 'function' && !!_vue2.default.locale) {
    if (!merged) {
      merged = true;
      _vue2.default.locale(_vue2.default.config.lang, (0, _deepmerge2.default)(lang, _vue2.default.locale(_vue2.default.config.lang) || {}, { clone: true }));
    }
    return vuei18n.apply(this, arguments);
  }
};

var t = exports.t = function t(path, options) {
  var value = i18nHandler.apply(this, arguments);
  if (value !== null && value !== undefined) return value;

  var array = path.split('.');
  var current = lang;

  for (var i = 0, j = array.length; i < j; i++) {
    var property = array[i];
    value = current[property];
    if (i === j - 1) return format(value, options);
    if (!value) return '';
    current = value;
  }
  return '';
};

var use = exports.use = function use(l) {
  lang = l || lang;
};

var i18n = exports.i18n = function i18n(fn) {
  i18nHandler = fn || i18nHandler;
};

exports.default = { use: use, t: t, i18n: i18n };

/***/ }),
/* 253 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = {
  el: {
    colorpicker: {
      confirm: 'OK',
      clear: 'Clear'
    },
    datepicker: {
      now: 'Now',
      today: 'Today',
      cancel: 'Cancel',
      clear: 'Clear',
      confirm: 'OK',
      selectDate: 'Select date',
      selectTime: 'Select time',
      startDate: 'Start Date',
      startTime: 'Start Time',
      endDate: 'End Date',
      endTime: 'End Time',
      year: '',
      month1: 'Jan',
      month2: 'Feb',
      month3: 'Mar',
      month4: 'Apr',
      month5: 'May',
      month6: 'Jun',
      month7: 'Jul',
      month8: 'Aug',
      month9: 'Sep',
      month10: 'Oct',
      month11: 'Nov',
      month12: 'Dec',
      // week: 'week',
      weeks: {
        sun: 'Sun',
        mon: 'Mon',
        tue: 'Tue',
        wed: 'Wed',
        thu: 'Thu',
        fri: 'Fri',
        sat: 'Sat'
      },
      months: {
        jan: 'Jan',
        feb: 'Feb',
        mar: 'Mar',
        apr: 'Apr',
        may: 'May',
        jun: 'Jun',
        jul: 'Jul',
        aug: 'Aug',
        sep: 'Sep',
        oct: 'Oct',
        nov: 'Nov',
        dec: 'Dec'
      }
    },
    select: {
      loading: 'Loading',
      noMatch: 'No matching data',
      noData: 'No data',
      placeholder: 'Select'
    },
    cascader: {
      noMatch: 'No matching data',
      loading: 'Loading',
      placeholder: 'Select'
    },
    pagination: {
      goto: 'Go to',
      pagesize: '/page',
      total: 'Total {total}',
      pageClassifier: ''
    },
    messagebox: {
      title: 'Message',
      confirm: 'OK',
      cancel: 'Cancel',
      error: 'Illegal input'
    },
    upload: {
      delete: 'Delete',
      preview: 'Preview',
      continue: 'Continue'
    },
    table: {
      emptyText: 'No Data',
      confirmFilter: 'Confirm',
      resetFilter: 'Reset',
      clearFilter: 'All',
      sumText: 'Sum'
    },
    tree: {
      emptyText: 'No Data'
    },
    transfer: {
      noMatch: 'No matching data',
      noData: 'No data',
      titles: ['List 1', 'List 2'], // to be translated
      filterPlaceholder: 'Enter keyword', // to be translated
      noCheckedFormat: '{total} items', // to be translated
      hasCheckedFormat: '{checked}/{total} checked' // to be translated
    }
  }
};

/***/ }),
/* 254 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = {
  el: {
    colorpicker: {
      confirm: '确定',
      clear: '清空'
    },
    datepicker: {
      now: '此刻',
      today: '今天',
      cancel: '取消',
      clear: '清空',
      confirm: '确定',
      selectDate: '选择日期',
      selectTime: '选择时间',
      startDate: '开始日期',
      startTime: '开始时间',
      endDate: '结束日期',
      endTime: '结束时间',
      year: '年',
      month1: '1 月',
      month2: '2 月',
      month3: '3 月',
      month4: '4 月',
      month5: '5 月',
      month6: '6 月',
      month7: '7 月',
      month8: '8 月',
      month9: '9 月',
      month10: '10 月',
      month11: '11 月',
      month12: '12 月',
      // week: '周次',
      weeks: {
        sun: '日',
        mon: '一',
        tue: '二',
        wed: '三',
        thu: '四',
        fri: '五',
        sat: '六'
      },
      months: {
        jan: '一月',
        feb: '二月',
        mar: '三月',
        apr: '四月',
        may: '五月',
        jun: '六月',
        jul: '七月',
        aug: '八月',
        sep: '九月',
        oct: '十月',
        nov: '十一月',
        dec: '十二月'
      }
    },
    select: {
      loading: '加载中',
      noMatch: '无匹配数据',
      noData: '无数据',
      placeholder: '请选择'
    },
    cascader: {
      noMatch: '无匹配数据',
      loading: '加载中',
      placeholder: '请选择'
    },
    pagination: {
      goto: '前往',
      pagesize: '条/页',
      total: '共 {total} 条',
      pageClassifier: '页'
    },
    messagebox: {
      title: '提示',
      confirm: '确定',
      cancel: '取消',
      error: '输入的数据不合法!'
    },
    upload: {
      delete: '删除',
      preview: '查看图片',
      continue: '继续上传'
    },
    table: {
      emptyText: '暂无数据',
      confirmFilter: '筛选',
      resetFilter: '重置',
      clearFilter: '全部',
      sumText: '合计'
    },
    tree: {
      emptyText: '暂无数据'
    },
    transfer: {
      noMatch: '无匹配数据',
      noData: '无数据',
      titles: ['列表 1', '列表 2'],
      filterPlaceholder: '请输入搜索内容',
      noCheckedFormat: '共 {total} 项',
      hasCheckedFormat: '已选 {checked}/{total} 项'
    }
  }
};

/***/ }),
/* 255 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _dom = __webpack_require__(256);

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Transition = function () {
  function Transition() {
    _classCallCheck(this, Transition);
  }

  Transition.prototype.beforeEnter = function beforeEnter(el) {
    (0, _dom.addClass)(el, 'collapse-transition');
    if (!el.dataset) el.dataset = {};

    el.dataset.oldPaddingTop = el.style.paddingTop;
    el.dataset.oldPaddingBottom = el.style.paddingBottom;

    el.style.height = '0';
    el.style.paddingTop = 0;
    el.style.paddingBottom = 0;
  };

  Transition.prototype.enter = function enter(el) {
    el.dataset.oldOverflow = el.style.overflow;
    if (el.scrollHeight !== 0) {
      el.style.height = el.scrollHeight + 'px';
      el.style.paddingTop = el.dataset.oldPaddingTop;
      el.style.paddingBottom = el.dataset.oldPaddingBottom;
    } else {
      el.style.height = '';
      el.style.paddingTop = el.dataset.oldPaddingTop;
      el.style.paddingBottom = el.dataset.oldPaddingBottom;
    }

    el.style.overflow = 'hidden';
  };

  Transition.prototype.afterEnter = function afterEnter(el) {
    // for safari: remove class then reset height is necessary
    (0, _dom.removeClass)(el, 'collapse-transition');
    el.style.height = '';
    el.style.overflow = el.dataset.oldOverflow;
  };

  Transition.prototype.beforeLeave = function beforeLeave(el) {
    if (!el.dataset) el.dataset = {};
    el.dataset.oldPaddingTop = el.style.paddingTop;
    el.dataset.oldPaddingBottom = el.style.paddingBottom;
    el.dataset.oldOverflow = el.style.overflow;

    el.style.height = el.scrollHeight + 'px';
    el.style.overflow = 'hidden';
  };

  Transition.prototype.leave = function leave(el) {
    if (el.scrollHeight !== 0) {
      // for safari: add class after set height, or it will jump to zero height suddenly, weired
      (0, _dom.addClass)(el, 'collapse-transition');
      el.style.height = 0;
      el.style.paddingTop = 0;
      el.style.paddingBottom = 0;
    }
  };

  Transition.prototype.afterLeave = function afterLeave(el) {
    (0, _dom.removeClass)(el, 'collapse-transition');
    el.style.height = '';
    el.style.overflow = el.dataset.oldOverflow;
    el.style.paddingTop = el.dataset.oldPaddingTop;
    el.style.paddingBottom = el.dataset.oldPaddingBottom;
  };

  return Transition;
}();

exports.default = {
  name: 'ElCollapseTransition',
  functional: true,
  render: function render(h, _ref) {
    var children = _ref.children;

    var data = {
      on: new Transition()
    };

    return h('transition', data, children);
  }
};

/***/ }),
/* 256 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.getStyle = exports.once = exports.off = exports.on = undefined;

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; /* istanbul ignore next */

exports.hasClass = hasClass;
exports.addClass = addClass;
exports.removeClass = removeClass;
exports.setStyle = setStyle;

var _vue = __webpack_require__(4);

var _vue2 = _interopRequireDefault(_vue);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var isServer = _vue2.default.prototype.$isServer;
var SPECIAL_CHARS_REGEXP = /([\:\-\_]+(.))/g;
var MOZ_HACK_REGEXP = /^moz([A-Z])/;
var ieVersion = isServer ? 0 : Number(document.documentMode);

/* istanbul ignore next */
var trim = function trim(string) {
  return (string || '').replace(/^[\s\uFEFF]+|[\s\uFEFF]+$/g, '');
};
/* istanbul ignore next */
var camelCase = function camelCase(name) {
  return name.replace(SPECIAL_CHARS_REGEXP, function (_, separator, letter, offset) {
    return offset ? letter.toUpperCase() : letter;
  }).replace(MOZ_HACK_REGEXP, 'Moz$1');
};

/* istanbul ignore next */
var on = exports.on = function () {
  if (!isServer && document.addEventListener) {
    return function (element, event, handler) {
      if (element && event && handler) {
        element.addEventListener(event, handler, false);
      }
    };
  } else {
    return function (element, event, handler) {
      if (element && event && handler) {
        element.attachEvent('on' + event, handler);
      }
    };
  }
}();

/* istanbul ignore next */
var off = exports.off = function () {
  if (!isServer && document.removeEventListener) {
    return function (element, event, handler) {
      if (element && event) {
        element.removeEventListener(event, handler, false);
      }
    };
  } else {
    return function (element, event, handler) {
      if (element && event) {
        element.detachEvent('on' + event, handler);
      }
    };
  }
}();

/* istanbul ignore next */
var once = exports.once = function once(el, event, fn) {
  var listener = function listener() {
    if (fn) {
      fn.apply(this, arguments);
    }
    off(el, event, listener);
  };
  on(el, event, listener);
};

/* istanbul ignore next */
function hasClass(el, cls) {
  if (!el || !cls) return false;
  if (cls.indexOf(' ') !== -1) throw new Error('className should not contain space.');
  if (el.classList) {
    return el.classList.contains(cls);
  } else {
    return (' ' + el.className + ' ').indexOf(' ' + cls + ' ') > -1;
  }
};

/* istanbul ignore next */
function addClass(el, cls) {
  if (!el) return;
  var curClass = el.className;
  var classes = (cls || '').split(' ');

  for (var i = 0, j = classes.length; i < j; i++) {
    var clsName = classes[i];
    if (!clsName) continue;

    if (el.classList) {
      el.classList.add(clsName);
    } else {
      if (!hasClass(el, clsName)) {
        curClass += ' ' + clsName;
      }
    }
  }
  if (!el.classList) {
    el.className = curClass;
  }
};

/* istanbul ignore next */
function removeClass(el, cls) {
  if (!el || !cls) return;
  var classes = cls.split(' ');
  var curClass = ' ' + el.className + ' ';

  for (var i = 0, j = classes.length; i < j; i++) {
    var clsName = classes[i];
    if (!clsName) continue;

    if (el.classList) {
      el.classList.remove(clsName);
    } else {
      if (hasClass(el, clsName)) {
        curClass = curClass.replace(' ' + clsName + ' ', ' ');
      }
    }
  }
  if (!el.classList) {
    el.className = trim(curClass);
  }
};

/* istanbul ignore next */
var getStyle = exports.getStyle = ieVersion < 9 ? function (element, styleName) {
  if (isServer) return;
  if (!element || !styleName) return null;
  styleName = camelCase(styleName);
  if (styleName === 'float') {
    styleName = 'styleFloat';
  }
  try {
    switch (styleName) {
      case 'opacity':
        try {
          return element.filters.item('alpha').opacity / 100;
        } catch (e) {
          return 1.0;
        }
      default:
        return element.style[styleName] || element.currentStyle ? element.currentStyle[styleName] : null;
    }
  } catch (e) {
    return element.style[styleName];
  }
} : function (element, styleName) {
  if (isServer) return;
  if (!element || !styleName) return null;
  styleName = camelCase(styleName);
  if (styleName === 'float') {
    styleName = 'cssFloat';
  }
  try {
    var computed = document.defaultView.getComputedStyle(element, '');
    return element.style[styleName] || computed ? computed[styleName] : null;
  } catch (e) {
    return element.style[styleName];
  }
};

/* istanbul ignore next */
function setStyle(element, styleName, value) {
  if (!element || !styleName) return;

  if ((typeof styleName === 'undefined' ? 'undefined' : _typeof(styleName)) === 'object') {
    for (var prop in styleName) {
      if (styleName.hasOwnProperty(prop)) {
        setStyle(element, prop, styleName[prop]);
      }
    }
  } else {
    styleName = camelCase(styleName);
    if (styleName === 'opacity' && ieVersion < 9) {
      element.style.filter = isNaN(value) ? '' : 'alpha(opacity=' + value * 100 + ')';
    } else {
      element.style[styleName] = value;
    }
  }
};

/***/ }),
/* 257 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.hasOwn = hasOwn;
exports.toObject = toObject;
var hasOwnProperty = Object.prototype.hasOwnProperty;
function hasOwn(obj, key) {
  return hasOwnProperty.call(obj, key);
};

function extend(to, _from) {
  for (var key in _from) {
    to[key] = _from[key];
  }
  return to;
};

function toObject(arr) {
  var res = {};
  for (var i = 0; i < arr.length; i++) {
    if (arr[i]) {
      extend(res, arr[i]);
    }
  }
  return res;
};

var getValueByPath = exports.getValueByPath = function getValueByPath(object, prop) {
  prop = prop || '';
  var paths = prop.split('.');
  var current = object;
  var result = null;
  for (var i = 0, j = paths.length; i < j; i++) {
    var path = paths[i];
    if (!current) break;

    if (i === j - 1) {
      result = current[path];
      break;
    }
    current = current[path];
  }
  return result;
};

/***/ }),
/* 258 */
/***/ (function(module, exports) {

/*!
 * Determine if an object is a Buffer
 *
 * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
 * @license  MIT
 */

// The _isBuffer check is for Safari 5-7 support, because it's missing
// Object.prototype.constructor. Remove this eventually
module.exports = function (obj) {
  return obj != null && (isBuffer(obj) || isSlowBuffer(obj) || !!obj._isBuffer)
}

function isBuffer (obj) {
  return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)
}

// For Node v0.10 support. Remove this eventually.
function isSlowBuffer (obj) {
  return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isBuffer(obj.slice(0, 0))
}


/***/ }),
/* 259 */,
/* 260 */,
/* 261 */,
/* 262 */,
/* 263 */,
/* 264 */,
/* 265 */,
/* 266 */,
/* 267 */,
/* 268 */,
/* 269 */,
/* 270 */,
/* 271 */,
/* 272 */,
/* 273 */,
/* 274 */,
/* 275 */,
/* 276 */,
/* 277 */,
/* 278 */,
/* 279 */,
/* 280 */
/***/ (function(module, exports) {

// shim for using process in browser
var process = module.exports = {};

// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
    throw new Error('setTimeout has not been defined');
}
function defaultClearTimeout () {
    throw new Error('clearTimeout has not been defined');
}
(function () {
    try {
        if (typeof setTimeout === 'function') {
            cachedSetTimeout = setTimeout;
        } else {
            cachedSetTimeout = defaultSetTimout;
        }
    } catch (e) {
        cachedSetTimeout = defaultSetTimout;
    }
    try {
        if (typeof clearTimeout === 'function') {
            cachedClearTimeout = clearTimeout;
        } else {
            cachedClearTimeout = defaultClearTimeout;
        }
    } catch (e) {
        cachedClearTimeout = defaultClearTimeout;
    }
} ())
function runTimeout(fun) {
    if (cachedSetTimeout === setTimeout) {
        //normal enviroments in sane situations
        return setTimeout(fun, 0);
    }
    // if setTimeout wasn't available but was latter defined
    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
        cachedSetTimeout = setTimeout;
        return setTimeout(fun, 0);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedSetTimeout(fun, 0);
    } catch(e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
            return cachedSetTimeout.call(null, fun, 0);
        } catch(e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
            return cachedSetTimeout.call(this, fun, 0);
        }
    }


}
function runClearTimeout(marker) {
    if (cachedClearTimeout === clearTimeout) {
        //normal enviroments in sane situations
        return clearTimeout(marker);
    }
    // if clearTimeout wasn't available but was latter defined
    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
        cachedClearTimeout = clearTimeout;
        return clearTimeout(marker);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedClearTimeout(marker);
    } catch (e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
            return cachedClearTimeout.call(null, marker);
        } catch (e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
            return cachedClearTimeout.call(this, marker);
        }
    }



}
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
    if (!draining || !currentQueue) {
        return;
    }
    draining = false;
    if (currentQueue.length) {
        queue = currentQueue.concat(queue);
    } else {
        queueIndex = -1;
    }
    if (queue.length) {
        drainQueue();
    }
}

function drainQueue() {
    if (draining) {
        return;
    }
    var timeout = runTimeout(cleanUpNextTick);
    draining = true;

    var len = queue.length;
    while(len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
            if (currentQueue) {
                currentQueue[queueIndex].run();
            }
        }
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    runClearTimeout(timeout);
}

process.nextTick = function (fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
        }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
        runTimeout(drainQueue);
    }
};

// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function () {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;

process.listeners = function (name) { return [] }

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function() { return 0; };


/***/ }),
/* 281 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global) {// This method of obtaining a reference to the global object needs to be
// kept identical to the way it is obtained in runtime.js
var g =
  typeof global === "object" ? global :
  typeof window === "object" ? window :
  typeof self === "object" ? self : this;

// Use `getOwnPropertyNames` because not all browsers support calling
// `hasOwnProperty` on the global `self` object in a worker. See #183.
var hadRuntime = g.regeneratorRuntime &&
  Object.getOwnPropertyNames(g).indexOf("regeneratorRuntime") >= 0;

// Save the old regeneratorRuntime in case it needs to be restored later.
var oldRuntime = hadRuntime && g.regeneratorRuntime;

// Force reevalutation of runtime.js.
g.regeneratorRuntime = undefined;

module.exports = __webpack_require__(282);

if (hadRuntime) {
  // Restore the original runtime.
  g.regeneratorRuntime = oldRuntime;
} else {
  // Remove the global property added by runtime.js.
  try {
    delete g.regeneratorRuntime;
  } catch(e) {
    g.regeneratorRuntime = undefined;
  }
}

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(27)))

/***/ }),
/* 282 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global) {/**
 * Copyright (c) 2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * https://raw.github.com/facebook/regenerator/master/LICENSE file. An
 * additional grant of patent rights can be found in the PATENTS file in
 * the same directory.
 */

!(function(global) {
  "use strict";

  var Op = Object.prototype;
  var hasOwn = Op.hasOwnProperty;
  var undefined; // More compressible than void 0.
  var $Symbol = typeof Symbol === "function" ? Symbol : {};
  var iteratorSymbol = $Symbol.iterator || "@@iterator";
  var asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator";
  var toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";

  var inModule = typeof module === "object";
  var runtime = global.regeneratorRuntime;
  if (runtime) {
    if (inModule) {
      // If regeneratorRuntime is defined globally and we're in a module,
      // make the exports object identical to regeneratorRuntime.
      module.exports = runtime;
    }
    // Don't bother evaluating the rest of this file if the runtime was
    // already defined globally.
    return;
  }

  // Define the runtime globally (as expected by generated code) as either
  // module.exports (if we're in a module) or a new, empty object.
  runtime = global.regeneratorRuntime = inModule ? module.exports : {};

  function wrap(innerFn, outerFn, self, tryLocsList) {
    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.
    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;
    var generator = Object.create(protoGenerator.prototype);
    var context = new Context(tryLocsList || []);

    // The ._invoke method unifies the implementations of the .next,
    // .throw, and .return methods.
    generator._invoke = makeInvokeMethod(innerFn, self, context);

    return generator;
  }
  runtime.wrap = wrap;

  // Try/catch helper to minimize deoptimizations. Returns a completion
  // record like context.tryEntries[i].completion. This interface could
  // have been (and was previously) designed to take a closure to be
  // invoked without arguments, but in all the cases we care about we
  // already have an existing method we want to call, so there's no need
  // to create a new function object. We can even get away with assuming
  // the method takes exactly one argument, since that happens to be true
  // in every case, so we don't have to touch the arguments object. The
  // only additional allocation required is the completion record, which
  // has a stable shape and so hopefully should be cheap to allocate.
  function tryCatch(fn, obj, arg) {
    try {
      return { type: "normal", arg: fn.call(obj, arg) };
    } catch (err) {
      return { type: "throw", arg: err };
    }
  }

  var GenStateSuspendedStart = "suspendedStart";
  var GenStateSuspendedYield = "suspendedYield";
  var GenStateExecuting = "executing";
  var GenStateCompleted = "completed";

  // Returning this object from the innerFn has the same effect as
  // breaking out of the dispatch switch statement.
  var ContinueSentinel = {};

  // Dummy constructor functions that we use as the .constructor and
  // .constructor.prototype properties for functions that return Generator
  // objects. For full spec compliance, you may wish to configure your
  // minifier not to mangle the names of these two functions.
  function Generator() {}
  function GeneratorFunction() {}
  function GeneratorFunctionPrototype() {}

  // This is a polyfill for %IteratorPrototype% for environments that
  // don't natively support it.
  var IteratorPrototype = {};
  IteratorPrototype[iteratorSymbol] = function () {
    return this;
  };

  var getProto = Object.getPrototypeOf;
  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));
  if (NativeIteratorPrototype &&
      NativeIteratorPrototype !== Op &&
      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {
    // This environment has a native %IteratorPrototype%; use it instead
    // of the polyfill.
    IteratorPrototype = NativeIteratorPrototype;
  }

  var Gp = GeneratorFunctionPrototype.prototype =
    Generator.prototype = Object.create(IteratorPrototype);
  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;
  GeneratorFunctionPrototype.constructor = GeneratorFunction;
  GeneratorFunctionPrototype[toStringTagSymbol] =
    GeneratorFunction.displayName = "GeneratorFunction";

  // Helper for defining the .next, .throw, and .return methods of the
  // Iterator interface in terms of a single ._invoke method.
  function defineIteratorMethods(prototype) {
    ["next", "throw", "return"].forEach(function(method) {
      prototype[method] = function(arg) {
        return this._invoke(method, arg);
      };
    });
  }

  runtime.isGeneratorFunction = function(genFun) {
    var ctor = typeof genFun === "function" && genFun.constructor;
    return ctor
      ? ctor === GeneratorFunction ||
        // For the native GeneratorFunction constructor, the best we can
        // do is to check its .name property.
        (ctor.displayName || ctor.name) === "GeneratorFunction"
      : false;
  };

  runtime.mark = function(genFun) {
    if (Object.setPrototypeOf) {
      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);
    } else {
      genFun.__proto__ = GeneratorFunctionPrototype;
      if (!(toStringTagSymbol in genFun)) {
        genFun[toStringTagSymbol] = "GeneratorFunction";
      }
    }
    genFun.prototype = Object.create(Gp);
    return genFun;
  };

  // Within the body of any async function, `await x` is transformed to
  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test
  // `hasOwn.call(value, "__await")` to determine if the yielded value is
  // meant to be awaited.
  runtime.awrap = function(arg) {
    return { __await: arg };
  };

  function AsyncIterator(generator) {
    function invoke(method, arg, resolve, reject) {
      var record = tryCatch(generator[method], generator, arg);
      if (record.type === "throw") {
        reject(record.arg);
      } else {
        var result = record.arg;
        var value = result.value;
        if (value &&
            typeof value === "object" &&
            hasOwn.call(value, "__await")) {
          return Promise.resolve(value.__await).then(function(value) {
            invoke("next", value, resolve, reject);
          }, function(err) {
            invoke("throw", err, resolve, reject);
          });
        }

        return Promise.resolve(value).then(function(unwrapped) {
          // When a yielded Promise is resolved, its final value becomes
          // the .value of the Promise<{value,done}> result for the
          // current iteration. If the Promise is rejected, however, the
          // result for this iteration will be rejected with the same
          // reason. Note that rejections of yielded Promises are not
          // thrown back into the generator function, as is the case
          // when an awaited Promise is rejected. This difference in
          // behavior between yield and await is important, because it
          // allows the consumer to decide what to do with the yielded
          // rejection (swallow it and continue, manually .throw it back
          // into the generator, abandon iteration, whatever). With
          // await, by contrast, there is no opportunity to examine the
          // rejection reason outside the generator function, so the
          // only option is to throw it from the await expression, and
          // let the generator function handle the exception.
          result.value = unwrapped;
          resolve(result);
        }, reject);
      }
    }

    if (typeof global.process === "object" && global.process.domain) {
      invoke = global.process.domain.bind(invoke);
    }

    var previousPromise;

    function enqueue(method, arg) {
      function callInvokeWithMethodAndArg() {
        return new Promise(function(resolve, reject) {
          invoke(method, arg, resolve, reject);
        });
      }

      return previousPromise =
        // If enqueue has been called before, then we want to wait until
        // all previous Promises have been resolved before calling invoke,
        // so that results are always delivered in the correct order. If
        // enqueue has not been called before, then it is important to
        // call invoke immediately, without waiting on a callback to fire,
        // so that the async generator function has the opportunity to do
        // any necessary setup in a predictable way. This predictability
        // is why the Promise constructor synchronously invokes its
        // executor callback, and why async functions synchronously
        // execute code before the first await. Since we implement simple
        // async functions in terms of async generators, it is especially
        // important to get this right, even though it requires care.
        previousPromise ? previousPromise.then(
          callInvokeWithMethodAndArg,
          // Avoid propagating failures to Promises returned by later
          // invocations of the iterator.
          callInvokeWithMethodAndArg
        ) : callInvokeWithMethodAndArg();
    }

    // Define the unified helper method that is used to implement .next,
    // .throw, and .return (see defineIteratorMethods).
    this._invoke = enqueue;
  }

  defineIteratorMethods(AsyncIterator.prototype);
  AsyncIterator.prototype[asyncIteratorSymbol] = function () {
    return this;
  };
  runtime.AsyncIterator = AsyncIterator;

  // Note that simple async functions are implemented on top of
  // AsyncIterator objects; they just return a Promise for the value of
  // the final result produced by the iterator.
  runtime.async = function(innerFn, outerFn, self, tryLocsList) {
    var iter = new AsyncIterator(
      wrap(innerFn, outerFn, self, tryLocsList)
    );

    return runtime.isGeneratorFunction(outerFn)
      ? iter // If outerFn is a generator, return the full iterator.
      : iter.next().then(function(result) {
          return result.done ? result.value : iter.next();
        });
  };

  function makeInvokeMethod(innerFn, self, context) {
    var state = GenStateSuspendedStart;

    return function invoke(method, arg) {
      if (state === GenStateExecuting) {
        throw new Error("Generator is already running");
      }

      if (state === GenStateCompleted) {
        if (method === "throw") {
          throw arg;
        }

        // Be forgiving, per 25.3.3.3.3 of the spec:
        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume
        return doneResult();
      }

      context.method = method;
      context.arg = arg;

      while (true) {
        var delegate = context.delegate;
        if (delegate) {
          var delegateResult = maybeInvokeDelegate(delegate, context);
          if (delegateResult) {
            if (delegateResult === ContinueSentinel) continue;
            return delegateResult;
          }
        }

        if (context.method === "next") {
          // Setting context._sent for legacy support of Babel's
          // function.sent implementation.
          context.sent = context._sent = context.arg;

        } else if (context.method === "throw") {
          if (state === GenStateSuspendedStart) {
            state = GenStateCompleted;
            throw context.arg;
          }

          context.dispatchException(context.arg);

        } else if (context.method === "return") {
          context.abrupt("return", context.arg);
        }

        state = GenStateExecuting;

        var record = tryCatch(innerFn, self, context);
        if (record.type === "normal") {
          // If an exception is thrown from innerFn, we leave state ===
          // GenStateExecuting and loop back for another invocation.
          state = context.done
            ? GenStateCompleted
            : GenStateSuspendedYield;

          if (record.arg === ContinueSentinel) {
            continue;
          }

          return {
            value: record.arg,
            done: context.done
          };

        } else if (record.type === "throw") {
          state = GenStateCompleted;
          // Dispatch the exception by looping back around to the
          // context.dispatchException(context.arg) call above.
          context.method = "throw";
          context.arg = record.arg;
        }
      }
    };
  }

  // Call delegate.iterator[context.method](context.arg) and handle the
  // result, either by returning a { value, done } result from the
  // delegate iterator, or by modifying context.method and context.arg,
  // setting context.delegate to null, and returning the ContinueSentinel.
  function maybeInvokeDelegate(delegate, context) {
    var method = delegate.iterator[context.method];
    if (method === undefined) {
      // A .throw or .return when the delegate iterator has no .throw
      // method always terminates the yield* loop.
      context.delegate = null;

      if (context.method === "throw") {
        if (delegate.iterator.return) {
          // If the delegate iterator has a return method, give it a
          // chance to clean up.
          context.method = "return";
          context.arg = undefined;
          maybeInvokeDelegate(delegate, context);

          if (context.method === "throw") {
            // If maybeInvokeDelegate(context) changed context.method from
            // "return" to "throw", let that override the TypeError below.
            return ContinueSentinel;
          }
        }

        context.method = "throw";
        context.arg = new TypeError(
          "The iterator does not provide a 'throw' method");
      }

      return ContinueSentinel;
    }

    var record = tryCatch(method, delegate.iterator, context.arg);

    if (record.type === "throw") {
      context.method = "throw";
      context.arg = record.arg;
      context.delegate = null;
      return ContinueSentinel;
    }

    var info = record.arg;

    if (! info) {
      context.method = "throw";
      context.arg = new TypeError("iterator result is not an object");
      context.delegate = null;
      return ContinueSentinel;
    }

    if (info.done) {
      // Assign the result of the finished delegate to the temporary
      // variable specified by delegate.resultName (see delegateYield).
      context[delegate.resultName] = info.value;

      // Resume execution at the desired location (see delegateYield).
      context.next = delegate.nextLoc;

      // If context.method was "throw" but the delegate handled the
      // exception, let the outer generator proceed normally. If
      // context.method was "next", forget context.arg since it has been
      // "consumed" by the delegate iterator. If context.method was
      // "return", allow the original .return call to continue in the
      // outer generator.
      if (context.method !== "return") {
        context.method = "next";
        context.arg = undefined;
      }

    } else {
      // Re-yield the result returned by the delegate method.
      return info;
    }

    // The delegate iterator is finished, so forget it and continue with
    // the outer generator.
    context.delegate = null;
    return ContinueSentinel;
  }

  // Define Generator.prototype.{next,throw,return} in terms of the
  // unified ._invoke helper method.
  defineIteratorMethods(Gp);

  Gp[toStringTagSymbol] = "Generator";

  // A Generator should always return itself as the iterator object when the
  // @@iterator function is called on it. Some browsers' implementations of the
  // iterator prototype chain incorrectly implement this, causing the Generator
  // object to not be returned from this call. This ensures that doesn't happen.
  // See https://github.com/facebook/regenerator/issues/274 for more details.
  Gp[iteratorSymbol] = function() {
    return this;
  };

  Gp.toString = function() {
    return "[object Generator]";
  };

  function pushTryEntry(locs) {
    var entry = { tryLoc: locs[0] };

    if (1 in locs) {
      entry.catchLoc = locs[1];
    }

    if (2 in locs) {
      entry.finallyLoc = locs[2];
      entry.afterLoc = locs[3];
    }

    this.tryEntries.push(entry);
  }

  function resetTryEntry(entry) {
    var record = entry.completion || {};
    record.type = "normal";
    delete record.arg;
    entry.completion = record;
  }

  function Context(tryLocsList) {
    // The root entry object (effectively a try statement without a catch
    // or a finally block) gives us a place to store values thrown from
    // locations where there is no enclosing try statement.
    this.tryEntries = [{ tryLoc: "root" }];
    tryLocsList.forEach(pushTryEntry, this);
    this.reset(true);
  }

  runtime.keys = function(object) {
    var keys = [];
    for (var key in object) {
      keys.push(key);
    }
    keys.reverse();

    // Rather than returning an object with a next method, we keep
    // things simple and return the next function itself.
    return function next() {
      while (keys.length) {
        var key = keys.pop();
        if (key in object) {
          next.value = key;
          next.done = false;
          return next;
        }
      }

      // To avoid creating an additional object, we just hang the .value
      // and .done properties off the next function object itself. This
      // also ensures that the minifier will not anonymize the function.
      next.done = true;
      return next;
    };
  };

  function values(iterable) {
    if (iterable) {
      var iteratorMethod = iterable[iteratorSymbol];
      if (iteratorMethod) {
        return iteratorMethod.call(iterable);
      }

      if (typeof iterable.next === "function") {
        return iterable;
      }

      if (!isNaN(iterable.length)) {
        var i = -1, next = function next() {
          while (++i < iterable.length) {
            if (hasOwn.call(iterable, i)) {
              next.value = iterable[i];
              next.done = false;
              return next;
            }
          }

          next.value = undefined;
          next.done = true;

          return next;
        };

        return next.next = next;
      }
    }

    // Return an iterator with no values.
    return { next: doneResult };
  }
  runtime.values = values;

  function doneResult() {
    return { value: undefined, done: true };
  }

  Context.prototype = {
    constructor: Context,

    reset: function(skipTempReset) {
      this.prev = 0;
      this.next = 0;
      // Resetting context._sent for legacy support of Babel's
      // function.sent implementation.
      this.sent = this._sent = undefined;
      this.done = false;
      this.delegate = null;

      this.method = "next";
      this.arg = undefined;

      this.tryEntries.forEach(resetTryEntry);

      if (!skipTempReset) {
        for (var name in this) {
          // Not sure about the optimal order of these conditions:
          if (name.charAt(0) === "t" &&
              hasOwn.call(this, name) &&
              !isNaN(+name.slice(1))) {
            this[name] = undefined;
          }
        }
      }
    },

    stop: function() {
      this.done = true;

      var rootEntry = this.tryEntries[0];
      var rootRecord = rootEntry.completion;
      if (rootRecord.type === "throw") {
        throw rootRecord.arg;
      }

      return this.rval;
    },

    dispatchException: function(exception) {
      if (this.done) {
        throw exception;
      }

      var context = this;
      function handle(loc, caught) {
        record.type = "throw";
        record.arg = exception;
        context.next = loc;

        if (caught) {
          // If the dispatched exception was caught by a catch block,
          // then let that catch block handle the exception normally.
          context.method = "next";
          context.arg = undefined;
        }

        return !! caught;
      }

      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        var record = entry.completion;

        if (entry.tryLoc === "root") {
          // Exception thrown outside of any try block that could handle
          // it, so set the completion value of the entire function to
          // throw the exception.
          return handle("end");
        }

        if (entry.tryLoc <= this.prev) {
          var hasCatch = hasOwn.call(entry, "catchLoc");
          var hasFinally = hasOwn.call(entry, "finallyLoc");

          if (hasCatch && hasFinally) {
            if (this.prev < entry.catchLoc) {
              return handle(entry.catchLoc, true);
            } else if (this.prev < entry.finallyLoc) {
              return handle(entry.finallyLoc);
            }

          } else if (hasCatch) {
            if (this.prev < entry.catchLoc) {
              return handle(entry.catchLoc, true);
            }

          } else if (hasFinally) {
            if (this.prev < entry.finallyLoc) {
              return handle(entry.finallyLoc);
            }

          } else {
            throw new Error("try statement without catch or finally");
          }
        }
      }
    },

    abrupt: function(type, arg) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.tryLoc <= this.prev &&
            hasOwn.call(entry, "finallyLoc") &&
            this.prev < entry.finallyLoc) {
          var finallyEntry = entry;
          break;
        }
      }

      if (finallyEntry &&
          (type === "break" ||
           type === "continue") &&
          finallyEntry.tryLoc <= arg &&
          arg <= finallyEntry.finallyLoc) {
        // Ignore the finally entry if control is not jumping to a
        // location outside the try/catch block.
        finallyEntry = null;
      }

      var record = finallyEntry ? finallyEntry.completion : {};
      record.type = type;
      record.arg = arg;

      if (finallyEntry) {
        this.method = "next";
        this.next = finallyEntry.finallyLoc;
        return ContinueSentinel;
      }

      return this.complete(record);
    },

    complete: function(record, afterLoc) {
      if (record.type === "throw") {
        throw record.arg;
      }

      if (record.type === "break" ||
          record.type === "continue") {
        this.next = record.arg;
      } else if (record.type === "return") {
        this.rval = this.arg = record.arg;
        this.method = "return";
        this.next = "end";
      } else if (record.type === "normal" && afterLoc) {
        this.next = afterLoc;
      }

      return ContinueSentinel;
    },

    finish: function(finallyLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.finallyLoc === finallyLoc) {
          this.complete(entry.completion, entry.afterLoc);
          resetTryEntry(entry);
          return ContinueSentinel;
        }
      }
    },

    "catch": function(tryLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.tryLoc === tryLoc) {
          var record = entry.completion;
          if (record.type === "throw") {
            var thrown = record.arg;
            resetTryEntry(entry);
          }
          return thrown;
        }
      }

      // The context.catch method must only be called with a location
      // argument that corresponds to a known catch block.
      throw new Error("illegal catch attempt");
    },

    delegateYield: function(iterable, resultName, nextLoc) {
      this.delegate = {
        iterator: values(iterable),
        resultName: resultName,
        nextLoc: nextLoc
      };

      if (this.method === "next") {
        // Deliberately forget the last sent value so that we don't
        // accidentally pass it on to the delegate.
        this.arg = undefined;
      }

      return ContinueSentinel;
    }
  };
})(
  // Among the various tricks for obtaining a reference to the global
  // object, this seems to be the most reliable technique that does not
  // use indirect eval (which violates Content Security Policy).
  typeof global === "object" ? global :
  typeof window === "object" ? window :
  typeof self === "object" ? self : this
);

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(27)))

/***/ }),
/* 283 */
/***/ (function(module, exports) {


/**
 * When source maps are enabled, `style-loader` uses a link element with a data-uri to
 * embed the css on the page. This breaks all relative urls because now they are relative to a
 * bundle instead of the current page.
 *
 * One solution is to only use full urls, but that may be impossible.
 *
 * Instead, this function "fixes" the relative urls to be absolute according to the current page location.
 *
 * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.
 *
 */

module.exports = function (css) {
  // get current location
  var location = typeof window !== "undefined" && window.location;

  if (!location) {
    throw new Error("fixUrls requires window.location");
  }

	// blank or null?
	if (!css || typeof css !== "string") {
	  return css;
  }

  var baseUrl = location.protocol + "//" + location.host;
  var currentDir = baseUrl + location.pathname.replace(/\/[^\/]*$/, "/");

	// convert each url(...)
	/*
	This regular expression is just a way to recursively match brackets within
	a string.

	 /url\s*\(  = Match on the word "url" with any whitespace after it and then a parens
	   (  = Start a capturing group
	     (?:  = Start a non-capturing group
	         [^)(]  = Match anything that isn't a parentheses
	         |  = OR
	         \(  = Match a start parentheses
	             (?:  = Start another non-capturing groups
	                 [^)(]+  = Match anything that isn't a parentheses
	                 |  = OR
	                 \(  = Match a start parentheses
	                     [^)(]*  = Match anything that isn't a parentheses
	                 \)  = Match a end parentheses
	             )  = End Group
              *\) = Match anything and then a close parens
          )  = Close non-capturing group
          *  = Match anything
       )  = Close capturing group
	 \)  = Match a close parens

	 /gi  = Get all matches, not the first.  Be case insensitive.
	 */
	var fixedCss = css.replace(/url\s*\(((?:[^)(]|\((?:[^)(]+|\([^)(]*\))*\))*)\)/gi, function(fullMatch, origUrl) {
		// strip quotes (if they exist)
		var unquotedOrigUrl = origUrl
			.trim()
			.replace(/^"(.*)"$/, function(o, $1){ return $1; })
			.replace(/^'(.*)'$/, function(o, $1){ return $1; });

		// already a full url? no change
		if (/^(#|data:|http:\/\/|https:\/\/|file:\/\/\/)/i.test(unquotedOrigUrl)) {
		  return fullMatch;
		}

		// convert the url to a full url
		var newUrl;

		if (unquotedOrigUrl.indexOf("//") === 0) {
		  	//TODO: should we add protocol?
			newUrl = unquotedOrigUrl;
		} else if (unquotedOrigUrl.indexOf("/") === 0) {
			// path should be relative to the base url
			newUrl = baseUrl + unquotedOrigUrl; // already starts with '/'
		} else {
			// path should be relative to current directory
			newUrl = currentDir + unquotedOrigUrl.replace(/^\.\//, ""); // Strip leading './'
		}

		// send back the fixed url(...)
		return "url(" + JSON.stringify(newUrl) + ")";
	});

	// send back the fixed css
	return fixedCss;
};


/***/ }),
/* 284 */
/***/ (function(module, exports, __webpack_require__) {

var refs = 0;
var dispose;
var content = __webpack_require__(224);
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) exports.locals = content.locals;
exports.use = exports.ref = function() {
	if(!(refs++)) {
		dispose = __webpack_require__(10)(content, {});
	}
	return exports;
};
exports.unuse = exports.unref = function() {
       if(refs > 0 && !(--refs)) {
		dispose();
		dispose = null;
	}
};
if(false) {
	var lastRefs = module.hot.data && module.hot.data.refs || 0;
	if(lastRefs) {
		exports.ref();
		if(!content.locals) {
			refs = lastRefs;
		}
	}
	if(!content.locals) {
		module.hot.accept();
	}
	module.hot.dispose(function(data) {
		data.refs = content.locals ? 0 : refs;
		if(dispose) {
			dispose();
		}
	});
}

/***/ }),
/* 285 */
/***/ (function(module, exports, __webpack_require__) {

var refs = 0;
var dispose;
var content = __webpack_require__(225);
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) exports.locals = content.locals;
exports.use = exports.ref = function() {
	if(!(refs++)) {
		dispose = __webpack_require__(10)(content, {});
	}
	return exports;
};
exports.unuse = exports.unref = function() {
       if(refs > 0 && !(--refs)) {
		dispose();
		dispose = null;
	}
};
if(false) {
	var lastRefs = module.hot.data && module.hot.data.refs || 0;
	if(lastRefs) {
		exports.ref();
		if(!content.locals) {
			refs = lastRefs;
		}
	}
	if(!content.locals) {
		module.hot.accept();
	}
	module.hot.dispose(function(data) {
		data.refs = content.locals ? 0 : refs;
		if(dispose) {
			dispose();
		}
	});
}

/***/ }),
/* 286 */
/***/ (function(module, exports, __webpack_require__) {

var refs = 0;
var dispose;
var content = __webpack_require__(226);
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) exports.locals = content.locals;
exports.use = exports.ref = function() {
	if(!(refs++)) {
		dispose = __webpack_require__(10)(content, {});
	}
	return exports;
};
exports.unuse = exports.unref = function() {
       if(refs > 0 && !(--refs)) {
		dispose();
		dispose = null;
	}
};
if(false) {
	var lastRefs = module.hot.data && module.hot.data.refs || 0;
	if(lastRefs) {
		exports.ref();
		if(!content.locals) {
			refs = lastRefs;
		}
	}
	if(!content.locals) {
		module.hot.accept();
	}
	module.hot.dispose(function(data) {
		data.refs = content.locals ? 0 : refs;
		if(dispose) {
			dispose();
		}
	});
}

/***/ }),
/* 287 */
/***/ (function(module, exports, __webpack_require__) {

var refs = 0;
var dispose;
var content = __webpack_require__(227);
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) exports.locals = content.locals;
exports.use = exports.ref = function() {
	if(!(refs++)) {
		dispose = __webpack_require__(10)(content, {});
	}
	return exports;
};
exports.unuse = exports.unref = function() {
       if(refs > 0 && !(--refs)) {
		dispose();
		dispose = null;
	}
};
if(false) {
	var lastRefs = module.hot.data && module.hot.data.refs || 0;
	if(lastRefs) {
		exports.ref();
		if(!content.locals) {
			refs = lastRefs;
		}
	}
	if(!content.locals) {
		module.hot.accept();
	}
	module.hot.dispose(function(data) {
		data.refs = content.locals ? 0 : refs;
		if(dispose) {
			dispose();
		}
	});
}

/***/ }),
/* 288 */
/***/ (function(module, exports, __webpack_require__) {

var refs = 0;
var dispose;
var content = __webpack_require__(228);
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) exports.locals = content.locals;
exports.use = exports.ref = function() {
	if(!(refs++)) {
		dispose = __webpack_require__(10)(content, {});
	}
	return exports;
};
exports.unuse = exports.unref = function() {
       if(refs > 0 && !(--refs)) {
		dispose();
		dispose = null;
	}
};
if(false) {
	var lastRefs = module.hot.data && module.hot.data.refs || 0;
	if(lastRefs) {
		exports.ref();
		if(!content.locals) {
			refs = lastRefs;
		}
	}
	if(!content.locals) {
		module.hot.accept();
	}
	module.hot.dispose(function(data) {
		data.refs = content.locals ? 0 : refs;
		if(dispose) {
			dispose();
		}
	});
}

/***/ }),
/* 289 */
/***/ (function(module, exports, __webpack_require__) {

var refs = 0;
var dispose;
var content = __webpack_require__(229);
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) exports.locals = content.locals;
exports.use = exports.ref = function() {
	if(!(refs++)) {
		dispose = __webpack_require__(10)(content, {});
	}
	return exports;
};
exports.unuse = exports.unref = function() {
       if(refs > 0 && !(--refs)) {
		dispose();
		dispose = null;
	}
};
if(false) {
	var lastRefs = module.hot.data && module.hot.data.refs || 0;
	if(lastRefs) {
		exports.ref();
		if(!content.locals) {
			refs = lastRefs;
		}
	}
	if(!content.locals) {
		module.hot.accept();
	}
	module.hot.dispose(function(data) {
		data.refs = content.locals ? 0 : refs;
		if(dispose) {
			dispose();
		}
	});
}

/***/ }),
/* 290 */
/***/ (function(module, exports, __webpack_require__) {

var refs = 0;
var dispose;
var content = __webpack_require__(230);
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) exports.locals = content.locals;
exports.use = exports.ref = function() {
	if(!(refs++)) {
		dispose = __webpack_require__(10)(content, {});
	}
	return exports;
};
exports.unuse = exports.unref = function() {
       if(refs > 0 && !(--refs)) {
		dispose();
		dispose = null;
	}
};
if(false) {
	var lastRefs = module.hot.data && module.hot.data.refs || 0;
	if(lastRefs) {
		exports.ref();
		if(!content.locals) {
			refs = lastRefs;
		}
	}
	if(!content.locals) {
		module.hot.accept();
	}
	module.hot.dispose(function(data) {
		data.refs = content.locals ? 0 : refs;
		if(dispose) {
			dispose();
		}
	});
}

/***/ }),
/* 291 */
/***/ (function(module, exports, __webpack_require__) {

var refs = 0;
var dispose;
var content = __webpack_require__(231);
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) exports.locals = content.locals;
exports.use = exports.ref = function() {
	if(!(refs++)) {
		dispose = __webpack_require__(10)(content, {});
	}
	return exports;
};
exports.unuse = exports.unref = function() {
       if(refs > 0 && !(--refs)) {
		dispose();
		dispose = null;
	}
};
if(false) {
	var lastRefs = module.hot.data && module.hot.data.refs || 0;
	if(lastRefs) {
		exports.ref();
		if(!content.locals) {
			refs = lastRefs;
		}
	}
	if(!content.locals) {
		module.hot.accept();
	}
	module.hot.dispose(function(data) {
		data.refs = content.locals ? 0 : refs;
		if(dispose) {
			dispose();
		}
	});
}

/***/ }),
/* 292 */
/***/ (function(module, exports, __webpack_require__) {

var refs = 0;
var dispose;
var content = __webpack_require__(232);
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) exports.locals = content.locals;
exports.use = exports.ref = function() {
	if(!(refs++)) {
		dispose = __webpack_require__(10)(content, {});
	}
	return exports;
};
exports.unuse = exports.unref = function() {
       if(refs > 0 && !(--refs)) {
		dispose();
		dispose = null;
	}
};
if(false) {
	var lastRefs = module.hot.data && module.hot.data.refs || 0;
	if(lastRefs) {
		exports.ref();
		if(!content.locals) {
			refs = lastRefs;
		}
	}
	if(!content.locals) {
		module.hot.accept();
	}
	module.hot.dispose(function(data) {
		data.refs = content.locals ? 0 : refs;
		if(dispose) {
			dispose();
		}
	});
}

/***/ }),
/* 293 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isEnabled", function() { return isEnabled; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "get", function() { return get; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getAll", function() { return getAll; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "set", function() { return set; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getRaw", function() { return getRaw; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setRaw", function() { return setRaw; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "remove", function() { return remove; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isCookieEnabled", function() { return isEnabled; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getCookie", function() { return get; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getAllCookies", function() { return getAll; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setCookie", function() { return set; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getRawCookie", function() { return getRaw; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setRawCookie", function() { return setRaw; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "removeCookie", function() { return remove; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util__ = __webpack_require__(294);


// Check if the browser cookie is enabled.
function isEnabled() {
  const key = '@key@';
  const value = '1';
  const re = new RegExp(`(?:^|; )${key}=${value}(?:;|$)`);

  document.cookie = `${key}=${value}`;

  const enabled = re.test(document.cookie);

  if (enabled) {
    // eslint-disable-next-line
    remove(key);
  }

  return enabled;
}

// Get the cookie value by key.
function get(key, decoder = decodeURIComponent) {
  if ((typeof key !== 'string') || !key) {
    return null;
  }

  const reKey = new RegExp(`(?:^|; )${__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["a" /* escapeRe */])(key)}(?:=([^;]*))?(?:;|$)`);
  const match = reKey.exec(document.cookie);

  if (match === null) {
    return null;
  }

  return typeof decoder === 'function' ? decoder(match[1]) : match[1];
}

// The all cookies
function getAll(decoder = decodeURIComponent) {
  const reKey = /(?:^|; )([^=]+?)(?:=([^;]*))?(?:;|$)/g;
  const cookies = {};
  let match;

  /* eslint-disable no-cond-assign */
  while ((match = reKey.exec(document.cookie))) {
    reKey.lastIndex = (match.index + match.length) - 1;
    cookies[match[1]] = typeof decoder === 'function' ? decoder(match[2]) : match[2];
  }

  return cookies;
}

// Set a cookie.
function set(key, value, encoder = encodeURIComponent, attrs) {
  if (typeof encoder === 'object' && encoder !== null) {
    /* eslint-disable no-param-reassign */
    attrs = encoder;
    encoder = null;
    /* eslint-enable no-param-reassign */
  }
  const attrsStr = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["b" /* convert */])(attrs || {});
  const valueStr = typeof encoder === 'function' ? encoder(value) : value;
  const newCookie = `${key}=${valueStr}${attrsStr}`;
  document.cookie = newCookie;
}

// Remove a cookie by the specified key.
function remove(key) {
  return set(key, 'a', { expires: -1 });
}

// Get the cookie's value without decoding.
function getRaw(key) {
  return get(key, null);
}

// Set a cookie without encoding the value.
function setRaw(key, value, opts) {
  return set(key, value, null, opts);
}




/***/ }),
/* 294 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export hasOwn */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return escapeRe; });
/* unused harmony export computeExpires */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return convert; });
function hasOwn(obj, key) {
  return Object.prototype.hasOwnProperty.call(obj, key);
}

// Escape special characters.
function escapeRe(str) {
  return str.replace(/[.*+?^$|[\](){}\\-]/g, '\\$&');
}

// Return a future date by the given string.
function computeExpires(str) {
  const lastCh = str.charAt(str.length - 1);
  const value = parseInt(str, 10);
  let expires = new Date();

  switch (lastCh) {
    case 'Y': expires.setFullYear(expires.getFullYear() + value); break;
    case 'M': expires.setMonth(expires.getMonth() + value); break;
    case 'D': expires.setDate(expires.getDate() + value); break;
    case 'h': expires.setHours(expires.getHours() + value); break;
    case 'm': expires.setMinutes(expires.getMinutes() + value); break;
    case 's': expires.setSeconds(expires.getSeconds() + value); break;
    default: expires = new Date(str);
  }

  return expires;
}

// Convert an object to a cookie option string.
function convert(opts) {
  let res = '';

  // eslint-disable-next-line
  for (const key in opts) {
    if (hasOwn(opts, key)) {
      if (/^expires$/i.test(key)) {
        let expires = opts[key];

        if (typeof expires !== 'object') {
          expires += typeof expires === 'number' ? 'D' : '';
          expires = computeExpires(expires);
        }
        res += `;${key}=${expires.toUTCString()}`;
      } else if (/^secure$/.test(key)) {
        if (opts[key]) {
          res += `;${key}`;
        }
      } else {
        res += `;${key}=${opts[key]}`;
      }
    }
  }

  if (!hasOwn(opts, 'path')) {
    res += ';path=/';
  }

  return res;
}




/***/ }),
/* 295 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "fonts/element-icons.b02bdc1.ttf";

/***/ }),
/* 296 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "fonts/element-icons.d2f69a9.woff";

/***/ }),
/* 297 */,
/* 298 */,
/* 299 */,
/* 300 */
/***/ (function(module, exports, __webpack_require__) {

var Component = __webpack_require__(0)(
  /* script */
  __webpack_require__(150),
  /* template */
  __webpack_require__(338),
  /* styles */
  null,
  /* scopeId */
  null,
  /* moduleIdentifier (server only) */
  null
)

module.exports = Component.exports


/***/ }),
/* 301 */
/***/ (function(module, exports, __webpack_require__) {

var Component = __webpack_require__(0)(
  /* script */
  __webpack_require__(151),
  /* template */
  __webpack_require__(327),
  /* styles */
  null,
  /* scopeId */
  null,
  /* moduleIdentifier (server only) */
  null
)

module.exports = Component.exports


/***/ }),
/* 302 */
/***/ (function(module, exports, __webpack_require__) {

var Component = __webpack_require__(0)(
  /* script */
  __webpack_require__(152),
  /* template */
  __webpack_require__(350),
  /* styles */
  null,
  /* scopeId */
  null,
  /* moduleIdentifier (server only) */
  null
)

module.exports = Component.exports


/***/ }),
/* 303 */
/***/ (function(module, exports, __webpack_require__) {

var Component = __webpack_require__(0)(
  /* script */
  __webpack_require__(154),
  /* template */
  __webpack_require__(351),
  /* styles */
  null,
  /* scopeId */
  null,
  /* moduleIdentifier (server only) */
  null
)

module.exports = Component.exports


/***/ }),
/* 304 */
/***/ (function(module, exports, __webpack_require__) {

function injectStyle (ssrContext) {
  __webpack_require__(372)
}
var Component = __webpack_require__(0)(
  /* script */
  __webpack_require__(155),
  /* template */
  __webpack_require__(355),
  /* styles */
  injectStyle,
  /* scopeId */
  "data-v-fe4f7f24",
  /* moduleIdentifier (server only) */
  null
)

module.exports = Component.exports


/***/ }),
/* 305 */
/***/ (function(module, exports, __webpack_require__) {

function injectStyle (ssrContext) {
  __webpack_require__(369)
}
var Component = __webpack_require__(0)(
  /* script */
  __webpack_require__(156),
  /* template */
  __webpack_require__(349),
  /* styles */
  injectStyle,
  /* scopeId */
  "data-v-a91341c6",
  /* moduleIdentifier (server only) */
  null
)

module.exports = Component.exports


/***/ }),
/* 306 */
/***/ (function(module, exports, __webpack_require__) {

var Component = __webpack_require__(0)(
  /* script */
  __webpack_require__(157),
  /* template */
  __webpack_require__(339),
  /* styles */
  null,
  /* scopeId */
  null,
  /* moduleIdentifier (server only) */
  null
)

module.exports = Component.exports


/***/ }),
/* 307 */
/***/ (function(module, exports, __webpack_require__) {

function injectStyle (ssrContext) {
  __webpack_require__(366)
}
var Component = __webpack_require__(0)(
  /* script */
  __webpack_require__(158),
  /* template */
  __webpack_require__(345),
  /* styles */
  injectStyle,
  /* scopeId */
  "data-v-79cd9445",
  /* moduleIdentifier (server only) */
  null
)

module.exports = Component.exports


/***/ }),
/* 308 */
/***/ (function(module, exports, __webpack_require__) {

function injectStyle (ssrContext) {
  __webpack_require__(367)
}
var Component = __webpack_require__(0)(
  /* script */
  __webpack_require__(159),
  /* template */
  __webpack_require__(347),
  /* styles */
  injectStyle,
  /* scopeId */
  "data-v-83dca6b8",
  /* moduleIdentifier (server only) */
  null
)

module.exports = Component.exports


/***/ }),
/* 309 */
/***/ (function(module, exports, __webpack_require__) {

var Component = __webpack_require__(0)(
  /* script */
  __webpack_require__(160),
  /* template */
  __webpack_require__(330),
  /* styles */
  null,
  /* scopeId */
  null,
  /* moduleIdentifier (server only) */
  null
)

module.exports = Component.exports


/***/ }),
/* 310 */
/***/ (function(module, exports, __webpack_require__) {

var Component = __webpack_require__(0)(
  /* script */
  __webpack_require__(161),
  /* template */
  __webpack_require__(332),
  /* styles */
  null,
  /* scopeId */
  null,
  /* moduleIdentifier (server only) */
  null
)

module.exports = Component.exports


/***/ }),
/* 311 */
/***/ (function(module, exports, __webpack_require__) {

function injectStyle (ssrContext) {
  __webpack_require__(359)
}
var Component = __webpack_require__(0)(
  /* script */
  __webpack_require__(162),
  /* template */
  __webpack_require__(334),
  /* styles */
  injectStyle,
  /* scopeId */
  "data-v-300dd913",
  /* moduleIdentifier (server only) */
  null
)

module.exports = Component.exports


/***/ }),
/* 312 */
/***/ (function(module, exports, __webpack_require__) {

var Component = __webpack_require__(0)(
  /* script */
  __webpack_require__(163),
  /* template */
  __webpack_require__(346),
  /* styles */
  null,
  /* scopeId */
  null,
  /* moduleIdentifier (server only) */
  null
)

module.exports = Component.exports


/***/ }),
/* 313 */
/***/ (function(module, exports, __webpack_require__) {

function injectStyle (ssrContext) {
  __webpack_require__(361)
}
var Component = __webpack_require__(0)(
  /* script */
  __webpack_require__(164),
  /* template */
  __webpack_require__(336),
  /* styles */
  injectStyle,
  /* scopeId */
  null,
  /* moduleIdentifier (server only) */
  null
)

module.exports = Component.exports


/***/ }),
/* 314 */
/***/ (function(module, exports, __webpack_require__) {

function injectStyle (ssrContext) {
  __webpack_require__(360)
}
var Component = __webpack_require__(0)(
  /* script */
  __webpack_require__(165),
  /* template */
  __webpack_require__(335),
  /* styles */
  injectStyle,
  /* scopeId */
  "data-v-42513b7b",
  /* moduleIdentifier (server only) */
  null
)

module.exports = Component.exports


/***/ }),
/* 315 */
/***/ (function(module, exports, __webpack_require__) {

function injectStyle (ssrContext) {
  __webpack_require__(368)
}
var Component = __webpack_require__(0)(
  /* script */
  __webpack_require__(166),
  /* template */
  __webpack_require__(348),
  /* styles */
  injectStyle,
  /* scopeId */
  "data-v-9cd11cbc",
  /* moduleIdentifier (server only) */
  null
)

module.exports = Component.exports


/***/ }),
/* 316 */
/***/ (function(module, exports, __webpack_require__) {

function injectStyle (ssrContext) {
  __webpack_require__(362)
}
var Component = __webpack_require__(0)(
  /* script */
  __webpack_require__(167),
  /* template */
  __webpack_require__(337),
  /* styles */
  injectStyle,
  /* scopeId */
  "data-v-4481894f",
  /* moduleIdentifier (server only) */
  null
)

module.exports = Component.exports


/***/ }),
/* 317 */
/***/ (function(module, exports, __webpack_require__) {

var Component = __webpack_require__(0)(
  /* script */
  __webpack_require__(168),
  /* template */
  __webpack_require__(342),
  /* styles */
  null,
  /* scopeId */
  null,
  /* moduleIdentifier (server only) */
  null
)

module.exports = Component.exports


/***/ }),
/* 318 */
/***/ (function(module, exports, __webpack_require__) {

var Component = __webpack_require__(0)(
  /* script */
  __webpack_require__(170),
  /* template */
  __webpack_require__(333),
  /* styles */
  null,
  /* scopeId */
  null,
  /* moduleIdentifier (server only) */
  null
)

module.exports = Component.exports


/***/ }),
/* 319 */
/***/ (function(module, exports, __webpack_require__) {

function injectStyle (ssrContext) {
  __webpack_require__(358)
}
var Component = __webpack_require__(0)(
  /* script */
  __webpack_require__(171),
  /* template */
  __webpack_require__(331),
  /* styles */
  injectStyle,
  /* scopeId */
  "data-v-1e641cf2",
  /* moduleIdentifier (server only) */
  null
)

module.exports = Component.exports


/***/ }),
/* 320 */
/***/ (function(module, exports, __webpack_require__) {

function injectStyle (ssrContext) {
  __webpack_require__(364)
}
var Component = __webpack_require__(0)(
  /* script */
  __webpack_require__(172),
  /* template */
  __webpack_require__(343),
  /* styles */
  injectStyle,
  /* scopeId */
  "data-v-71b7ec82",
  /* moduleIdentifier (server only) */
  null
)

module.exports = Component.exports


/***/ }),
/* 321 */
/***/ (function(module, exports, __webpack_require__) {

var Component = __webpack_require__(0)(
  /* script */
  __webpack_require__(173),
  /* template */
  null,
  /* styles */
  null,
  /* scopeId */
  null,
  /* moduleIdentifier (server only) */
  null
)

module.exports = Component.exports


/***/ }),
/* 322 */
/***/ (function(module, exports, __webpack_require__) {

var Component = __webpack_require__(0)(
  /* script */
  __webpack_require__(174),
  /* template */
  null,
  /* styles */
  null,
  /* scopeId */
  null,
  /* moduleIdentifier (server only) */
  null
)

module.exports = Component.exports


/***/ }),
/* 323 */
/***/ (function(module, exports, __webpack_require__) {

function injectStyle (ssrContext) {
  __webpack_require__(357)
}
var Component = __webpack_require__(0)(
  /* script */
  __webpack_require__(175),
  /* template */
  __webpack_require__(328),
  /* styles */
  injectStyle,
  /* scopeId */
  "data-v-0648bb3d",
  /* moduleIdentifier (server only) */
  null
)

module.exports = Component.exports


/***/ }),
/* 324 */
/***/ (function(module, exports, __webpack_require__) {

function injectStyle (ssrContext) {
  __webpack_require__(365)
}
var Component = __webpack_require__(0)(
  /* script */
  __webpack_require__(176),
  /* template */
  __webpack_require__(344),
  /* styles */
  injectStyle,
  /* scopeId */
  "data-v-7932de7d",
  /* moduleIdentifier (server only) */
  null
)

module.exports = Component.exports


/***/ }),
/* 325 */
/***/ (function(module, exports, __webpack_require__) {

function injectStyle (ssrContext) {
  __webpack_require__(363)
}
var Component = __webpack_require__(0)(
  /* script */
  __webpack_require__(177),
  /* template */
  __webpack_require__(340),
  /* styles */
  injectStyle,
  /* scopeId */
  "data-v-5cc901d7",
  /* moduleIdentifier (server only) */
  null
)

module.exports = Component.exports


/***/ }),
/* 326 */
/***/ (function(module, exports, __webpack_require__) {

var Component = __webpack_require__(0)(
  /* script */
  __webpack_require__(178),
  /* template */
  __webpack_require__(353),
  /* styles */
  null,
  /* scopeId */
  null,
  /* moduleIdentifier (server only) */
  null
)

module.exports = Component.exports


/***/ }),
/* 327 */
/***/ (function(module, exports) {

module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('div', {
    staticClass: "date"
  }, [(_vm.chat_id) ? _c('abbr', {
    attrs: {
      "chat_id": _vm.chat_id
    }
  }, [_vm._v(_vm._s(_vm.anker))]) : _vm._e(), (_vm.write_at) ? _c('timeago', {
    attrs: {
      "since": _vm.write_at
    }
  }) : _vm._e()], 1)
},staticRenderFns: []}

/***/ }),
/* 328 */
/***/ (function(module, exports) {

module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return (_vm.show) ? _c('div', {
    staticClass: "inframe"
  }, [_c('h6', [_vm._v("栞")]), _c('div', {
    staticClass: "swipe header"
  }, [_c('table', [_c('tbody', _vm._l((_vm.book.parts.list), function(o, line) {
    return _c('tr', {
      key: o.id
    }, [_c('th', {
      staticClass: "r form"
    }, [_c('btn', {
      attrs: {
        "value": _vm.part_id,
        "as": o.id
      },
      on: {
        "input": _vm.input_part
      }
    }, [_vm._v(_vm._s(o.label)), _c('sup', [_vm._v(_vm._s(_vm.chats(o.id).all))])])], 1), _c('td', {
      staticClass: "l form"
    }, _vm._l((_vm.all_page_idxs(o.id)), function(page) {
      return _c('span', {
        key: page
      }, [_c('btn', {
        class: _vm.tooltip(line),
        attrs: {
          "bool": "include",
          "data-tooltip": _vm.page_label(o.id, page),
          "value": _vm.page_ids,
          "as": [o.id + '-' + page]
        },
        on: {
          "input": function($event) {
            _vm.input_page(o.id, page)
          },
          "toggle": function($event) {
            _vm.input_page(o.id, page)
          }
        }
      }, [_vm._v(_vm._s(page + 1))])], 1)
    }))])
  }))])])]) : _vm._e()
},staticRenderFns: []}

/***/ }),
/* 329 */,
/* 330 */
/***/ (function(module, exports) {

module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('div', [_c('span', [_c('btn', {
    attrs: {
      "as": "title",
      "value": _vm.value
    },
    on: {
      "input": _vm.tap
    }
  }, [_vm._v("タイトル"), (_vm.part) ? _c('sup', [_vm._v(_vm._s(_vm.chats.title.list.all))]) : _vm._e()]), _c('btn', {
    attrs: {
      "as": "memo",
      "value": _vm.value
    },
    on: {
      "input": _vm.tap
    }
  }, [_vm._v("メモ"), (_vm.part) ? _c('sup', [_vm._v(_vm._s(_vm.chats.memo.list.all))]) : _vm._e()])], 1), _c('span', [_c('btn', {
    attrs: {
      "as": "normal",
      "value": _vm.value
    },
    on: {
      "input": _vm.tap
    }
  }, [_vm._v("通常"), (_vm.part) ? _c('sup', [_vm._v(_vm._s(_vm.chats.normal.list.all))]) : _vm._e()])], 1), _c('span', [_c('btn', {
    attrs: {
      "as": "solo",
      "value": _vm.value
    },
    on: {
      "input": _vm.tap
    }
  }, [_vm._v("独り言"), (_vm.part) ? _c('sup', [_vm._v(_vm._s(_vm.chats.solo.list.all))]) : _vm._e()]), _c('btn', {
    attrs: {
      "as": "extra",
      "value": _vm.value
    },
    on: {
      "input": _vm.tap
    }
  }, [_vm._v("非日常"), (_vm.part) ? _c('sup', [_vm._v(_vm._s(_vm.chats.extra.list.all))]) : _vm._e()]), _c('btn', {
    attrs: {
      "as": "rest",
      "value": _vm.value
    },
    on: {
      "input": _vm.tap
    }
  }, [_vm._v("墓休み"), (_vm.part) ? _c('sup', [_vm._v(_vm._s(_vm.chats.rest.list.all))]) : _vm._e()])], 1), _c('span', [_c('btn', {
    attrs: {
      "as": "full",
      "value": _vm.value
    },
    on: {
      "input": _vm.tap
    }
  }, [_vm._v("バレ"), (_vm.part) ? _c('sup', [_vm._v(_vm._s(_vm.chats.full.list.all))]) : _vm._e()])], 1)])
},staticRenderFns: []}

/***/ }),
/* 331 */
/***/ (function(module, exports) {

module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('table', {
    key: _vm.id,
    staticClass: "talk",
    attrs: {
      "id": _vm.id
    }
  }, [_c('tbody', [_c('tr', [_c('th', [_c('portrate', {
    attrs: {
      "face_id": _vm.face_id
    }
  })], 1), _c('td', [_c('div', {
    staticClass: "baloon",
    class: _vm.classname
  }), _c('div', {
    key: _vm.id,
    staticClass: "chat",
    class: _vm.classname,
    on: {
      "click": _vm.click
    }
  }, [(_vm.head) ? _c('chat-head', {
    attrs: {
      "full": _vm.full,
      "head": _vm.head,
      "to": _vm.to,
      "sign": _vm.sign
    }
  }) : _vm._e(), (_vm.$slots.default) ? _c('div', {
    staticClass: "text",
    class: _vm.deco
  }, [_vm._t("default")], 2) : _c('div', {
    staticClass: "text",
    class: _vm.deco,
    domProps: {
      "innerHTML": _vm._s(_vm.log_html)
    }
  }), (_vm.anker) ? _c('chat-foot', {
    attrs: {
      "chat_id": _vm.id,
      "anker": _vm.anker,
      "write_at": _vm.write_at
    }
  }) : _vm._e()], 1)])])])])
},staticRenderFns: []}

/***/ }),
/* 332 */
/***/ (function(module, exports) {

module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _vm._m(0)
},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('div', {
    style: (_vm.style)
  })
}]}

/***/ }),
/* 333 */
/***/ (function(module, exports) {

module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('p', {
    staticClass: "form"
  }, [_c('span', {
    staticClass: "tag"
  }, [_c('tag', {
    attrs: {
      "id": "all"
    }
  }), _c('tag', {
    attrs: {
      "id": "giji"
    }
  }), _c('tag', {
    attrs: {
      "id": "shoji"
    }
  }), _c('tag', {
    attrs: {
      "id": "travel"
    }
  }), _c('tag', {
    attrs: {
      "id": "stratos"
    }
  }), _c('tag', {
    attrs: {
      "id": "myth"
    }
  }), _c('tag', {
    attrs: {
      "id": "asia"
    }
  }), _c('tag', {
    attrs: {
      "id": "marchen"
    }
  })], 1), _c('span', {
    staticClass: "tag"
  }, [_c('tag', {
    attrs: {
      "id": "kid"
    }
  }), _c('tag', {
    attrs: {
      "id": "young"
    }
  }), _c('tag', {
    attrs: {
      "id": "middle"
    }
  }), _c('tag', {
    attrs: {
      "id": "elder"
    }
  })], 1), _c('span', {
    staticClass: "tag"
  }, [_c('tag', {
    attrs: {
      "id": "river"
    }
  }), _c('tag', {
    attrs: {
      "id": "road"
    }
  }), _c('tag', {
    attrs: {
      "id": "immoral"
    }
  })], 1), _c('span', {
    staticClass: "tag"
  }, [_c('tag', {
    attrs: {
      "id": "guild"
    }
  }), _c('tag', {
    attrs: {
      "id": "elegant"
    }
  }), _c('tag', {
    attrs: {
      "id": "ecclesia"
    }
  })], 1), _c('span', {
    staticClass: "tag"
  }, [_c('tag', {
    attrs: {
      "id": "medical"
    }
  }), _c('tag', {
    attrs: {
      "id": "market"
    }
  })], 1), _c('span', {
    staticClass: "tag"
  }, [_c('tag', {
    attrs: {
      "id": "apartment"
    }
  }), _c('tag', {
    attrs: {
      "id": "servant"
    }
  }), _c('tag', {
    attrs: {
      "id": "farm"
    }
  }), _c('tag', {
    attrs: {
      "id": "government"
    }
  })], 1), _c('span', {
    staticClass: "tag"
  }, [_c('tag', {
    attrs: {
      "id": "god"
    }
  })], 1)])
},staticRenderFns: []}

/***/ }),
/* 334 */
/***/ (function(module, exports) {

module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return (_vm.self) ? _c('div', [_c('report', {
    attrs: {
      "deco": "center",
      "handle": _vm.phase.handle
    }
  }, [_c('span', _vm._l((_vm.parts), function(o) {
    return _c('btn', {
      key: o._id,
      attrs: {
        "value": _vm.part_id,
        "as": o._id
      }
    }, [_vm._v(_vm._s(o.label))])
  })), _c('span', [_c('btn', {
    attrs: {
      "as": "TITLE"
    },
    model: {
      value: (_vm.handle),
      callback: function($$v) {
        _vm.handle = $$v
      },
      expression: "handle"
    }
  }, [_vm._v("村の情報")]), _vm._l((_vm.phases), function(o) {
    return (_vm.can_phase(o.handle)) ? _c('btn', {
      key: o.handle,
      attrs: {
        "as": o.handle
      },
      model: {
        value: (_vm.handle),
        callback: function($$v) {
          _vm.handle = $$v
        },
        expression: "handle"
      }
    }, [_vm._v(_vm._s(o.label))]) : _vm._e()
  })], 2), _c('span', _vm._l((_vm.phases), function(o) {
    return _c('btn', {
      key: o.handle,
      attrs: {
        "as": true
      },
      on: {
        "toggle": function($event) {
          _vm.show[o.handle] = !_vm.show[o.handle]
        }
      },
      model: {
        value: (_vm.show[o.handle]),
        callback: function($$v) {
          _vm.$set(_vm.show, o.handle, $$v)
        },
        expression: "show[o.handle]"
      }
    }, [_vm._v(_vm._s(o.label))])
  }))]), (_vm.sayable) ? _c('div', [_c('talk', {
    attrs: {
      "sign": _vm.self.sign,
      "face_id": _vm.self.face_id,
      "head": "monaco editor",
      "deco": _vm.deco,
      "handle": _vm.phase.handle
    }
  }, [_c('monaco-editor', {
    attrs: {
      "max-row": 10
    },
    model: {
      value: (_vm.text),
      callback: function($$v) {
        _vm.text = $$v
      },
      expression: "text"
    }
  })], 1), _c('talk', {
    attrs: {
      "sign": _vm.self.sign,
      "face_id": _vm.self.face_id,
      "head": "発言投稿",
      "deco": _vm.deco,
      "handle": _vm.phase.handle
    }
  }, [_c('text-editor', {
    attrs: {
      "max-row": 10,
      "max-size": 2000
    },
    model: {
      value: (_vm.text),
      callback: function($$v) {
        _vm.text = $$v
      },
      expression: "text"
    }
  })], 1), _c('post', {
    attrs: {
      "sign": _vm.self.sign,
      "face_id": _vm.self.face_id,
      "head": "ト書き投稿",
      "deco": _vm.deco,
      "handle": _vm.phase.handle
    }
  }, [_c('text-editor', {
    attrs: {
      "max-size": 120
    },
    model: {
      value: (_vm.text),
      callback: function($$v) {
        _vm.text = $$v
      },
      expression: "text"
    }
  })], 1), _c('report', {
    attrs: {
      "sign": _vm.self.sign,
      "face_id": _vm.self.face_id,
      "head": "レポート投稿",
      "deco": _vm.deco,
      "handle": _vm.phase.handle
    }
  }, [_c('text-editor', {
    attrs: {
      "max-row": 5,
      "max-size": 2000
    },
    model: {
      value: (_vm.text),
      callback: function($$v) {
        _vm.text = $$v
      },
      expression: "text"
    }
  })], 1)], 1) : _vm._e(), _c('report', {
    attrs: {
      "handle": _vm.self.winner_id,
      "head": _vm.self.role_labels.join('、')
    }
  }, [_vm._l((_vm.self.roles.list), function(o) {
    return (o.help) ? _c('div', [_c('p', {
      domProps: {
        "innerHTML": _vm._s(o.help)
      }
    })]) : _vm._e()
  }), _c('br'), _vm._l((_vm.self.ables.list), function(o) {
    return (o.label) ? _c('div', [_c('label', [_vm._v(_vm._s(o.label))]), (o.help) ? _c('p', {
      domProps: {
        "innerHTML": _vm._s(o.help)
      }
    }) : _vm._e()]) : _vm._e()
  }), _c('br'), _vm._l((_vm.self.ables.list), function(o) {
    return (o.target) ? _c('div', [_c('label', [_vm._v(_vm._s(o.target))]), (o.help) ? _c('p', {
      domProps: {
        "innerHTML": _vm._s(o.help)
      }
    }) : _vm._e()]) : _vm._e()
  }), _c('br'), _vm._l((_vm.self.ables.list), function(o) {
    return (o.sw) ? _c('div', [_c('label', [_vm._v(_vm._s(o.sw))]), (o.help) ? _c('p', {
      domProps: {
        "innerHTML": _vm._s(o.help)
      }
    }) : _vm._e()]) : _vm._e()
  })], 2)], 1) : _vm._e()
},staticRenderFns: []}

/***/ }),
/* 335 */
/***/ (function(module, exports) {

module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('div', {
    key: _vm.id,
    staticClass: "chat post",
    class: _vm.classname,
    attrs: {
      "id": _vm.id
    },
    on: {
      "click": _vm.click
    }
  }, [(_vm.head) ? _c('chat-head', {
    attrs: {
      "full": _vm.full,
      "head": _vm.head,
      "to": _vm.to,
      "sign": _vm.sign
    }
  }) : _vm._e(), (_vm.$slots.default) ? _c('div', {
    staticClass: "text",
    class: _vm.deco
  }, [_vm._t("default")], 2) : _c('div', {
    staticClass: "text",
    class: _vm.deco,
    domProps: {
      "innerHTML": _vm._s(_vm.log_html)
    }
  }), (_vm.anker) ? _c('chat-foot', {
    attrs: {
      "chat_id": _vm.id,
      "anker": _vm.anker,
      "write_at": _vm.write_at
    }
  }) : _vm._e()], 1)
},staticRenderFns: []}

/***/ }),
/* 336 */
/***/ (function(module, exports) {

module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('div', {
    staticClass: "portrate",
    on: {
      "click": _vm.click
    }
  }, [_c('img', {
    class: _vm.image_class,
    attrs: {
      "src": _vm.image_src
    }
  }), (_vm.has_html) ? _c('div', {
    staticClass: "chrblank"
  }, [_vm._t("default")], 2) : _vm._e()])
},staticRenderFns: []}

/***/ }),
/* 337 */
/***/ (function(module, exports) {

module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('div', {
    key: _vm.id,
    staticClass: "chat report",
    class: _vm.classname,
    attrs: {
      "id": _vm.id
    },
    on: {
      "click": _vm.click
    }
  }, [(_vm.head) ? _c('chat-head', {
    attrs: {
      "full": _vm.full,
      "head": _vm.head,
      "to": _vm.to,
      "sign": _vm.sign
    }
  }) : _vm._e(), (_vm.$slots.default) ? _c('div', {
    staticClass: "text",
    class: _vm.deco
  }, [_vm._t("default")], 2) : _c('div', {
    staticClass: "text",
    class: _vm.deco,
    domProps: {
      "innerHTML": _vm._s(_vm.log_html)
    }
  }), (_vm.anker) ? _c('chat-foot', {
    attrs: {
      "chat_id": _vm.id,
      "anker": _vm.anker,
      "write_at": _vm.write_at
    }
  }) : _vm._e()], 1)
},staticRenderFns: []}

/***/ }),
/* 338 */
/***/ (function(module, exports) {

module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('a', {
    class: _vm.btn,
    on: {
      "click": _vm.tap
    }
  }, [_vm._t("default")], 2)
},staticRenderFns: []}

/***/ }),
/* 339 */
/***/ (function(module, exports) {

module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('div', {
    staticClass: "outframe"
  }, [_c('div', {
    staticClass: "contentframe"
  }, [_c('div', {
    staticClass: "inframe"
  }, [_c('report', {
    attrs: {
      "handle": "footer",
      "deco": "right",
      "write_at": 854319600000
    }
  }, [_c('br'), _c('p', [_vm._v("人狼議事キャラセット by りりんら")]), _c('p', [_vm._v("管理"), _c('a', [_vm._v("sol・la")]), _c('a', {
    attrs: {
      "href": "mailto:7korobi@gmail.com"
    }
  }, [_vm._v("ななころび")]), _c('br')]), _c('p', [_c('code', [_vm._v("下記の場所以外では、人狼議事内キャラチップ\nの利用を許諾しておりません。ご了承ください。")])]), _c('p', [_c('code', {
    staticStyle: {
      "text-align": "left"
    }
  }, [_vm._v("議事総合トップ\n人狼議事lobby\n人狼議事morphe\n人狼議事cafe\n人狼議事perjury\n人狼議事xebec\n人狼議事crazy\n人狼議事ciel\n\nSoyBean\nSangria\n@7korobi")])])])], 1)])])
},staticRenderFns: []}

/***/ }),
/* 340 */
/***/ (function(module, exports) {

module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('div', {
    style: (_vm.welcome_style),
    attrs: {
      "id": "welcome"
    }
  }, [(_vm.show) ? _c('table', {
    attrs: {
      "id": "export"
    }
  }, [_vm._m(0), _c('tbody', [_c('tr', [_c('td', {
    staticClass: "links form"
  }, [_c('sow', {
    attrs: {
      "folder": "LOBBY"
    }
  }), _c('sow', {
    attrs: {
      "folder": "OFFPARTY"
    }
  })], 1), _c('td', {
    staticClass: "links form"
  }, [_c('sow', {
    attrs: {
      "folder": "MORPHE"
    }
  }), _c('sow', {
    attrs: {
      "folder": "CABALA"
    }
  }, [_vm._v("cafe")])], 1), _c('td', {
    staticClass: "links form"
  }, [_c('sow', {
    attrs: {
      "folder": "WOLF"
    }
  }), _c('sow', {
    attrs: {
      "folder": "ULTIMATE"
    }
  }), _c('sow', {
    attrs: {
      "folder": "ALLSTAR"
    }
  })], 1), _c('td', {
    staticClass: "links form"
  }, [_c('sow', {
    attrs: {
      "folder": "RP"
    }
  }, [_vm._v("role-play")]), _c('sow', {
    attrs: {
      "folder": "PRETENSE"
    }
  }, [_vm._v("RP-advance")]), _c('sow', {
    attrs: {
      "folder": "PERJURY"
    }
  }), _c('sow', {
    attrs: {
      "folder": "XEBEC"
    }
  }), _c('sow', {
    attrs: {
      "folder": "CRAZY"
    }
  }), _c('sow', {
    attrs: {
      "folder": "CIEL"
    }
  })], 1)])]), _c('tfoot', [_c('tr', [_c('th', {
    staticClass: "btns",
    attrs: {
      "colspan": "4"
    }
  }, [_c('btn', {
    attrs: {
      "as": "finish"
    },
    model: {
      value: (_vm.export_to),
      callback: function($$v) {
        _vm.export_to = $$v
      },
      expression: "export_to"
    }
  }, [_vm._v("  終了した村")]), _c('btn', {
    attrs: {
      "as": "progress"
    },
    model: {
      value: (_vm.export_to),
      callback: function($$v) {
        _vm.export_to = $$v
      },
      expression: "export_to"
    }
  }, [_vm._v("進行中の村")])], 1)]), _c('tr', [_c('th', {
    staticClass: "btns",
    attrs: {
      "colspan": "4"
    }
  }, [_c('a', {
    attrs: {
      "href": _vm.root_path
    }
  }, [_vm._v("総合トップ")])])])])]) : _vm._e(), _c('h2', {
    attrs: {
      "id": "title"
    }
  }, [_c('nuxt-link', {
    attrs: {
      "to": "/"
    }
  }, [_vm._v("人狼議事")])], 1), _vm._t("default"), _c('div', {
    staticClass: "filmline"
  })], 2)
},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('thead', [_c('tr', [_c('th', {
    staticClass: "btns"
  }, [_vm._v("ロビー")]), _c('th', {
    staticClass: "btns"
  }, [_vm._v("夢の形")]), _c('th', {
    staticClass: "btns"
  }, [_vm._v("陰謀")]), _c('th', {
    staticClass: "btns"
  }, [_vm._v("ＲＰ")])])])
}]}

/***/ }),
/* 341 */,
/* 342 */
/***/ (function(module, exports) {

module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('a', {
    class: _vm.btn
  }, [_vm._t("default")], 2)
},staticRenderFns: []}

/***/ }),
/* 343 */
/***/ (function(module, exports) {

module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('div', {
    staticClass: "text-editor"
  }, [_c('textarea', {
    ref: "input",
    attrs: {
      "rows": _vm.areaRow
    },
    domProps: {
      "value": _vm.value
    },
    on: {
      "input": _vm.input
    }
  }), _c('i', {
    staticClass: "fa",
    class: _vm.mark
  }, [_vm._v(_vm._s(_vm.size) + "/"), _c('span', {
    staticClass: "per"
  }, [_vm._v(_vm._s(_vm.maxSize) + "字")]), _vm._v(_vm._s(_vm.row) + "/"), _c('span', {
    staticClass: "per"
  }, [_vm._v(_vm._s(_vm.maxRow) + "行")])]), _c('span', {
    staticClass: "pull-right"
  }, [_c('a', {
    on: {
      "click": _vm.nDm
    }
  }, [_vm._v("[[]]")]), _c('a', {
    on: {
      "click": _vm.anker
    }
  }, [_vm._v(">>")]), _c('a', {
    on: {
      "click": _vm.comment
    }
  }, [_vm._v("/**/")]), _c('a', {
    on: {
      "click": _vm.submit
    }
  }, [_vm._v("投稿")])])])
},staticRenderFns: []}

/***/ }),
/* 344 */
/***/ (function(module, exports) {

module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('tr', {
    key: _vm.id,
    staticClass: "chat",
    class: _vm.classname,
    on: {
      "click": _vm.click
    }
  }, [_c('th', [(_vm.id) ? _c('abbr', {
    attrs: {
      "chat_id": _vm.id
    }
  }, [_vm._v(_vm._s(_vm.anker))]) : _vm._e()]), _c('td', {
    staticClass: "mention",
    domProps: {
      "innerHTML": _vm._s(_vm.log_mention)
    }
  })])
},staticRenderFns: []}

/***/ }),
/* 345 */
/***/ (function(module, exports) {

module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('div', {
    class: _vm.body_class
  }, [_c('welcome', {
    attrs: {
      "top": -_vm.top / 3,
      "show": _vm.welcome
    }
  }, [_c('div', {
    staticClass: "btns"
  }, [_c('span', {
    staticClass: "font"
  }, [_c('btn', {
    attrs: {
      "as": "large"
    },
    model: {
      value: (_vm.font),
      callback: function($$v) {
        _vm.font = $$v
      },
      expression: "font"
    }
  }, [_vm._v("大判")]), _c('btn', {
    attrs: {
      "as": "novel"
    },
    model: {
      value: (_vm.font),
      callback: function($$v) {
        _vm.font = $$v
      },
      expression: "font"
    }
  }, [_vm._v("明朝")]), _c('btn', {
    attrs: {
      "as": "std"
    },
    model: {
      value: (_vm.font),
      callback: function($$v) {
        _vm.font = $$v
      },
      expression: "font"
    }
  }, [_vm._v("ゴシック")]), _c('btn', {
    attrs: {
      "as": "small"
    },
    model: {
      value: (_vm.font),
      callback: function($$v) {
        _vm.font = $$v
      },
      expression: "font"
    }
  }, [_vm._v("繊細")])], 1), _c('span', {
    staticClass: "theme"
  }, [_c('btn', {
    attrs: {
      "as": "cinema"
    },
    model: {
      value: (_vm.theme),
      callback: function($$v) {
        _vm.theme = $$v
      },
      expression: "theme"
    }
  }, [_vm._v("煉瓦")]), _c('btn', {
    attrs: {
      "as": "star"
    },
    model: {
      value: (_vm.theme),
      callback: function($$v) {
        _vm.theme = $$v
      },
      expression: "theme"
    }
  }, [_vm._v("  蒼穹")]), _c('btn', {
    attrs: {
      "as": "night"
    },
    model: {
      value: (_vm.theme),
      callback: function($$v) {
        _vm.theme = $$v
      },
      expression: "theme"
    }
  }, [_vm._v(" 闇夜")]), _c('btn', {
    attrs: {
      "as": "moon"
    },
    model: {
      value: (_vm.theme),
      callback: function($$v) {
        _vm.theme = $$v
      },
      expression: "theme"
    }
  }, [_vm._v("  月夜")]), _c('btn', {
    attrs: {
      "as": "wa"
    },
    model: {
      value: (_vm.theme),
      callback: function($$v) {
        _vm.theme = $$v
      },
      expression: "theme"
    }
  }, [_vm._v("  和の国")])], 1)])]), _c('writeframe', {
    attrs: {
      "top": _vm.top
    }
  }), _vm._m(0)], 1)
},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('div', {
    staticClass: "outframe filmend-frame"
  }, [_c('div', {
    staticClass: "contentframe"
  }, [_c('div', {
    staticClass: "filmend"
  })])])
}]}

/***/ }),
/* 346 */
/***/ (function(module, exports) {

module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('div', [_c('table', [_c('thead', [_c('tr', [_c('th'), _vm._l((_vm.handle_calcs), function(xo) {
    return _c('th', [_c('btn', {
      attrs: {
        "value": _vm.value,
        "as": xo.phases.pluck('id')
      },
      on: {
        "input": _vm.tap
      }
    }, [_vm._v(_vm._s(xo.id)), _c('sup', [_vm._v(_vm._s(xo.chats.list.length))])])], 1)
  })], 2)]), _c('tbody', _vm._l((_vm.group_calcs), function(yo) {
    return _c('tr', {
      key: yo.id
    }, [_c('th', [_c('btn', {
      attrs: {
        "value": _vm.value,
        "as": yo.phases.pluck('id')
      },
      on: {
        "input": _vm.tap
      }
    }, [_vm._v(_vm._s(yo.id)), _c('sup', [_vm._v(_vm._s(yo.chats.list.length))])])], 1), _vm._l((_vm.handle_calcs), function(xo) {
      return _c('td', _vm._l((_vm.phase_at(xo.id, yo.id)), function(o) {
        return _c('check', {
          key: o.id,
          attrs: {
            "value": _vm.value,
            "as": o.id
          },
          on: {
            "input": _vm.tap
          }
        }, [_vm._v(_vm._s(o.chats.list.length))])
      }))
    })], 2)
  }))])])
},staticRenderFns: []}

/***/ }),
/* 347 */
/***/ (function(module, exports) {

module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return (_vm.show) ? _c('div', {
    staticClass: "inframe"
  }, [_c('h6', [_vm._v("参照されている")]), _c('chat', {
    attrs: {
      "show": "current",
      "id": _vm.chat.id
    }
  }), _c('table', [_c('transition-group', {
    staticClass: "tlist",
    attrs: {
      "name": "list",
      "tag": "tbody"
    }
  }, _vm._l((_vm.mentions), function(o) {
    return _c('tr-intro-chat', {
      key: o.id,
      attrs: {
        "id": o.id,
        "handle": o.phase.handle,
        "deco": o.deco,
        "log": o.log
      },
      on: {
        "anker": _vm.$listeners.anker
      }
    })
  }))], 1)], 1) : _vm._e()
},staticRenderFns: []}

/***/ }),
/* 348 */
/***/ (function(module, exports) {

module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return (_vm.show) ? _c('div', {
    staticClass: "inframe"
  }, [_c('h6', [_vm._v(_vm._s(_vm.part.label) + "の参加者")]), _c('div', {
    staticClass: "swipe potofs"
  }, [_c('table', [_c('tfoot', [_c('tr', {
    staticClass: "btns"
  }, [_vm._m(0), _c('th', [_c('btn', {
    attrs: {
      "as": "live.date"
    },
    on: {
      "toggle": _vm.reverse
    },
    model: {
      value: (_vm.sort),
      callback: function($$v) {
        _vm.sort = $$v
      },
      expression: "sort"
    }
  }, [_vm._v("日程")])], 1), _c('th', [_c('btn', {
    attrs: {
      "as": "live.role_id"
    },
    on: {
      "toggle": _vm.reverse
    },
    model: {
      value: (_vm.sort),
      callback: function($$v) {
        _vm.sort = $$v
      },
      expression: "sort"
    }
  }, [_vm._v("状態")])], 1), _c('th', [_c('btn', {
    attrs: {
      "as": "say.count"
    },
    on: {
      "toggle": _vm.reverse
    },
    model: {
      value: (_vm.sort),
      callback: function($$v) {
        _vm.sort = $$v
      },
      expression: "sort"
    }
  }, [_vm._v("発言")])], 1), _c('th', [_c('btn', {
    attrs: {
      "as": "say.all"
    },
    on: {
      "toggle": _vm.reverse
    },
    model: {
      value: (_vm.sort),
      callback: function($$v) {
        _vm.sort = $$v
      },
      expression: "sort"
    }
  }, [_vm._v("発言")])], 1), _c('th', [_c('btn', {
    attrs: {
      "as": "give.give"
    },
    on: {
      "toggle": _vm.reverse
    },
    model: {
      value: (_vm.sort),
      callback: function($$v) {
        _vm.sort = $$v
      },
      expression: "sort"
    }
  }, [_vm._v("促")])], 1), _c('th', [_c('btn', {
    attrs: {
      "as": "sign"
    },
    on: {
      "toggle": _vm.reverse
    },
    model: {
      value: (_vm.sort),
      callback: function($$v) {
        _vm.sort = $$v
      },
      expression: "sort"
    }
  }, [_c('i', {
    staticClass: "fa fa-user"
  })])], 1), _c('th', [_c('btn', {
    attrs: {
      "as": "request.role_id"
    },
    on: {
      "toggle": _vm.reverse
    },
    model: {
      value: (_vm.sort),
      callback: function($$v) {
        _vm.sort = $$v
      },
      expression: "sort"
    }
  }, [_vm._v("希望")])], 1), _c('th', [_c('btn', {
    attrs: {
      "as": "win"
    },
    on: {
      "toggle": _vm.reverse
    },
    model: {
      value: (_vm.sort),
      callback: function($$v) {
        _vm.sort = $$v
      },
      expression: "sort"
    }
  }, [_vm._v("勝敗")])], 1), _c('th', [_c('btn', {
    attrs: {
      "as": "winner_id"
    },
    on: {
      "toggle": _vm.reverse
    },
    model: {
      value: (_vm.sort),
      callback: function($$v) {
        _vm.sort = $$v
      },
      expression: "sort"
    }
  }, [_vm._v("陣営")])], 1), _c('th', [_c('btn', {
    attrs: {
      "as": "role_labels"
    },
    on: {
      "toggle": _vm.reverse
    },
    model: {
      value: (_vm.sort),
      callback: function($$v) {
        _vm.sort = $$v
      },
      expression: "sort"
    }
  }, [_vm._v("役割")])], 1), _c('th', [_c('btn', {
    attrs: {
      "as": "text"
    },
    on: {
      "toggle": _vm.reverse
    },
    model: {
      value: (_vm.sort),
      callback: function($$v) {
        _vm.sort = $$v
      },
      expression: "sort"
    }
  }, [_vm._v("補足")])], 1), _c('th')])]), _c('transition-group', {
    staticClass: "tlist",
    attrs: {
      "name": "list",
      "tag": "tbody"
    }
  }, _vm._l((_vm.potofs), function(o) {
    return (!o.hide) ? _c('tr', {
      key: o.id
    }, [_c('th', {
      staticClass: "r",
      class: o.live.role_id
    }, [_vm._v(_vm._s(o.job))]), _c('th', {
      staticClass: "l",
      class: o.live.role_id
    }, [_vm._v(_vm._s(o.face && o.face.name))]), _c('td', {
      staticClass: "r",
      class: o.live.role_id
    }, [_vm._v(_vm._s(_vm.count("日", o.live.date)))]), _c('td', {
      staticClass: "c",
      class: o.live.role_id
    }, [_vm._v(_vm._s(o.live.role.label))]), _c('td', {
      staticClass: "r",
      class: o.live.role_id
    }, [_vm._v(_vm._s(_vm.count("回", o.say(_vm.part.id).count)))]), _c('td', {
      staticClass: "r",
      class: o.live.role_id
    }, [_vm._v(_vm._s(_vm.count("字", o.say(_vm.part.id).all)))]), _c('td', {
      staticClass: "r",
      class: o.live.role_id
    }, [_vm._v(_vm._s(_vm.count("回", o.give && o.give.give)))]), _c('td', {
      staticClass: "c",
      class: o.live.role_id
    }, [_c('kbd', [_vm._v(_vm._s(o.sign))])]), _c('td', {
      staticClass: "c",
      class: o.live.role_id
    }, [(o.request) ? _c('kbd', [_vm._v(_vm._s(o.request.role.label))]) : _vm._e()]), _c('td', {
      staticClass: "c",
      class: o.winner_id
    }, [_vm._v(_vm._s(o.win))]), _c('td', {
      staticClass: "c",
      class: o.winner_id
    }, [_vm._v(_vm._s(o.winner && o.winner.label))]), _c('td', {
      staticClass: "c",
      class: o.winner_id
    }, [_vm._v(_vm._s(o.role_labels.join("、")))]), _c('td', {
      staticClass: "l",
      class: o.winner_id
    }, [_vm._v(_vm._s(o.text))]), _c('td', {
      staticClass: "last"
    })]) : _vm._e()
  }))], 1)]), (_vm.part) ? _c('transition-group', {
    staticClass: "swipe list",
    attrs: {
      "name": "list",
      "tag": "div"
    }
  }, [_c('table', {
    key: "btns",
    staticClass: "btns"
  }, [_c('tbody', [_c('tr', [_c('td', [_c('btn', {
    attrs: {
      "as": _vm.live_on
    },
    model: {
      value: (_vm.hide_potof_ids),
      callback: function($$v) {
        _vm.hide_potof_ids = $$v
      },
      expression: "hide_potof_ids"
    }
  }, [_vm._v(" 参加者")])], 1), _c('td', [_c('btn', {
    attrs: {
      "as": _vm.live_off
    },
    model: {
      value: (_vm.hide_potof_ids),
      callback: function($$v) {
        _vm.hide_potof_ids = $$v
      },
      expression: "hide_potof_ids"
    }
  }, [_vm._v("リタイア")])], 1)]), _c('tr', [_c('td', [_c('btn', {
    attrs: {
      "as": _vm.full_on
    },
    model: {
      value: (_vm.hide_potof_ids),
      callback: function($$v) {
        _vm.hide_potof_ids = $$v
      },
      expression: "hide_potof_ids"
    }
  }, [_vm._v(" 全表示")])], 1), _c('td', [_c('btn', {
    attrs: {
      "as": _vm.full_off
    },
    model: {
      value: (_vm.hide_potof_ids),
      callback: function($$v) {
        _vm.hide_potof_ids = $$v
      },
      expression: "hide_potof_ids"
    }
  }, [_vm._v("クリア")])], 1)])])]), _vm._l((_vm.potofs), function(o) {
    return _c('portrate', {
      key: o.face_id,
      attrs: {
        "face_id": o.face_id,
        "hide": o.hide
      },
      on: {
        "click": function($event) {
          _vm.toggle(o)
        }
      }
    }, [_c('div', {
      staticClass: "bar",
      class: _vm.bgc(o)
    })])
  })], 2) : _vm._e()], 1) : _vm._e()
},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('th', {
    attrs: {
      "colspan": "2"
    }
  }, [_c('sup', [_vm._v("(スクロールします)")])])
}]}

/***/ }),
/* 349 */
/***/ (function(module, exports) {

module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('div', {
    key: _vm.id,
    staticClass: "chat hide",
    class: _vm.classname
  })
},staticRenderFns: []}

/***/ }),
/* 350 */
/***/ (function(module, exports) {

module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return ((!!_vm.to)) ? _c('div', {
    staticClass: "name center"
  }, [_c('span', {
    staticClass: "pull-right"
  }, [_vm._v(_vm._s(_vm.to))]), _vm._v("▷"), _c('span', {
    staticClass: "pull-left"
  }, [_vm._v(_vm._s(_vm.head))])]) : _c('div', {
    staticClass: "name"
  }, [(_vm.full && _vm.sign) ? _c('sup', {
    staticClass: "pull-right"
  }, [_vm._v(_vm._s(_vm.sign))]) : _vm._e(), _vm._v(_vm._s(_vm.head))])
},staticRenderFns: []}

/***/ }),
/* 351 */
/***/ (function(module, exports) {

module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('a', {
    class: _vm.btn,
    on: {
      "click": _vm.tap
    }
  }, [_vm._t("default")], 2)
},staticRenderFns: []}

/***/ }),
/* 352 */,
/* 353 */
/***/ (function(module, exports) {

module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return (_vm.show) ? _c('div', {
    staticClass: "writeframe",
    style: (_vm.style)
  }, [(_vm.show_write) ? _c('div', {
    staticClass: "contentframe"
  }, [_c('div', {
    staticClass: "inframe"
  }, [_c('talk', {
    attrs: {
      "sign": "ななころび",
      "handle": "SSAY",
      "face_id": "c71"
    }
  }, [_c('text-editor', {
    model: {
      value: (_vm.text),
      callback: function($$v) {
        _vm.text = $$v
      },
      expression: "text"
    }
  })], 1), _c('br')], 1)]) : _vm._e()]) : _vm._e()
},staticRenderFns: []}

/***/ }),
/* 354 */,
/* 355 */
/***/ (function(module, exports) {

module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('div', {
    key: _vm.id,
    staticClass: "chat current",
    class: _vm.classname,
    on: {
      "click": _vm.click
    }
  }, [_c('div', {
    staticClass: "date"
  }, [(_vm.sign) ? _c('span', [_c('abbr', [_vm._v(_vm._s(_vm.sign))])]) : _vm._e(), (_vm.id) ? _c('span', [_c('abbr', [_vm._v(_vm._s(_vm.chat.part.label))]), _c('abbr', {
    attrs: {
      "chat_id": _vm.id
    }
  }, [_vm._v(_vm._s(_vm.anker))])]) : _vm._e(), (_vm.write_at) ? _c('span', [_c('timeago', {
    attrs: {
      "since": _vm.write_at
    }
  })], 1) : _vm._e()])])
},staticRenderFns: []}

/***/ }),
/* 356 */,
/* 357 */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(234);
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var update = __webpack_require__(3)("1bdd5f98", content, true);

/***/ }),
/* 358 */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(235);
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var update = __webpack_require__(3)("34ac509d", content, true);

/***/ }),
/* 359 */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(236);
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var update = __webpack_require__(3)("42a5aea9", content, true);

/***/ }),
/* 360 */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(237);
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var update = __webpack_require__(3)("9a4241a6", content, true);

/***/ }),
/* 361 */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(238);
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var update = __webpack_require__(3)("2cdea900", content, true);

/***/ }),
/* 362 */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(239);
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var update = __webpack_require__(3)("43016651", content, true);

/***/ }),
/* 363 */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(240);
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var update = __webpack_require__(3)("69194ba1", content, true);

/***/ }),
/* 364 */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(241);
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var update = __webpack_require__(3)("d2fe1172", content, true);

/***/ }),
/* 365 */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(242);
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var update = __webpack_require__(3)("670be938", content, true);

/***/ }),
/* 366 */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(243);
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var update = __webpack_require__(3)("26f8c7e8", content, true);

/***/ }),
/* 367 */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(244);
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var update = __webpack_require__(3)("a0486016", content, true);

/***/ }),
/* 368 */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(245);
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var update = __webpack_require__(3)("614fa19c", content, true);

/***/ }),
/* 369 */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(246);
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var update = __webpack_require__(3)("0fdd1561", content, true);

/***/ }),
/* 370 */,
/* 371 */,
/* 372 */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(249);
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var update = __webpack_require__(3)("9f611800", content, true);

/***/ }),
/* 373 */
/***/ (function(module, exports) {

/**
 * Translates the list format produced by css-loader into something
 * easier to manipulate.
 */
module.exports = function listToStyles (parentId, list) {
  var styles = []
  var newStyles = {}
  for (var i = 0; i < list.length; i++) {
    var item = list[i]
    var id = item[0]
    var css = item[1]
    var media = item[2]
    var sourceMap = item[3]
    var part = {
      id: parentId + ':' + i,
      css: css,
      media: media,
      sourceMap: sourceMap
    }
    if (!newStyles[id]) {
      styles.push(newStyles[id] = { id: id, parts: [part] })
    } else {
      newStyles[id].parts.push(part)
    }
  }
  return styles
}


/***/ }),
/* 374 */,
/* 375 */,
/* 376 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(4);
__webpack_require__(61);
__webpack_require__(60);
__webpack_require__(37);
__webpack_require__(20);
__webpack_require__(96);
__webpack_require__(63);
module.exports = __webpack_require__(1);


/***/ })
],[376]);
//# sourceMappingURL=vendor.bundle.ee68a669155223022b3e.js.map